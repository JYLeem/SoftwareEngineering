From: <Saved by Blink>
Snapshot-Content-Location: https://chatgpt.com/c/4f6c3c31-fe08-47ec-8def-a1197e610e3a
Subject: =?utf-8?Q?=EB=A0=88=EB=B2=A8=EC=97=90=20=EB=94=B0=EB=9D=BC=20=EC=A0=9C=ED?=
 =?utf-8?Q?=95=9C?=
Date: Tue, 28 May 2024 15:18:31 +0900
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----"


------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/html
Content-ID: <frame-964CE8AECF28F0501193FCF1F79CC3B5@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chatgpt.com/c/4f6c3c31-fe08-47ec-8def-a1197e610e3a

<!DOCTYPE html><html data-build=3D"prod-0eb06d1ca14a173bcd1bae1cf21f80dca72=
8a1a0" class=3D"ZnJ1aXRqdWljZQ light" dir=3D"ltr" style=3D"color-scheme: li=
ght;" lang=3D"ko-KR"><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-0e679274-98e8-4b9c-8a31-4ad0116352af@mhtml.blink" /><link rel=3D"s=
tylesheet" type=3D"text/css" href=3D"cid:css-1b6ec8fb-5b97-4e1d-b7d5-0a6c8f=
549173@mhtml.blink" /><link rel=3D"apple-touch-icon" sizes=3D"180x180" href=
=3D"https://cdn.oaistatic.com/_next/static/media/apple-touch-icon.82af6fe1.=
png"><link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://=
cdn.oaistatic.com/_next/static/media/favicon-32x32.630a2b99.png"><link rel=
=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://cdn.oaistatic.=
com/_next/static/media/favicon-16x16.a052137e.png"><link rel=3D"preconnect"=
 href=3D"https://cdn.oaistatic.com/"><title>=EB=A0=88=EB=B2=A8=EC=97=90 =EB=
=94=B0=EB=9D=BC =EC=A0=9C=ED=95=9C</title><meta name=3D"title" content=3D"C=
hatGPT: Get instant answers, find inspiration, learn something new"><meta n=
ame=3D"description" content=3D"ChatGPT is a free-to-use AI system. Use it f=
or engaging conversations, gain insights, automate tasks, and witness the f=
uture of AI, all in one place."><meta name=3D"keywords" content=3D"ai chat,=
ai,chap gpt,chat gbt,chat gpt 3,chat gpt login,chat gpt website,chat gpt,ch=
at gtp,chat openai,chat,chatai,chatbot gpt,chatg,chatgpt login,chatgpt,gpt =
chat,open ai,openai chat,openai chatgpt,openai"><meta property=3D"og:descri=
ption" content=3D"A conversational AI system that listens, learns, and chal=
lenges"><meta name=3D"robots" content=3D"index, follow"><meta property=3D"o=
g:title" content=3D"ChatGPT"><meta property=3D"og:image" content=3D"https:/=
/cdn.oaistatic.com/_next/static/media/chatgpt-share-og.49cbbffe.png"><meta =
property=3D"og:url" content=3D"https://chatgpt.com"><meta name=3D"apple-itu=
nes-app" content=3D"app-id=3D6448311069"><meta name=3D"viewport" content=3D=
"width=3Ddevice-width, initial-scale=3D1"><meta name=3D"next-head-count" co=
ntent=3D"17"><link data-next-font=3D"" rel=3D"preconnect" href=3D"https://c=
hatgpt.com/" crossorigin=3D"anonymous"><link rel=3D"preload" href=3D"https:=
//cdn.oaistatic.com/_next/static/css/3fa7e362c60113a3.css?dpl=3D0eb06d1ca14=
a173bcd1bae1cf21f80dca728a1a0" as=3D"style" crossorigin=3D"anonymous"><link=
 rel=3D"stylesheet" href=3D"https://cdn.oaistatic.com/_next/static/css/3fa7=
e362c60113a3.css?dpl=3D0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0" crossorigi=
n=3D"anonymous" data-n-g=3D""><link rel=3D"preload" href=3D"https://cdn.oai=
static.com/_next/static/css/8eba3749e745ba24.css?dpl=3D0eb06d1ca14a173bcd1b=
ae1cf21f80dca728a1a0" as=3D"style" crossorigin=3D"anonymous"><link rel=3D"s=
tylesheet" href=3D"https://cdn.oaistatic.com/_next/static/css/8eba3749e745b=
a24.css?dpl=3D0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0" crossorigin=3D"anon=
ymous" data-n-p=3D""><meta name=3D"react-scroll-to-bottom:version" content=
=3D"4.2.0"><link as=3D"script" rel=3D"prefetch" crossorigin=3D"anonymous" h=
ref=3D"https://cdn.oaistatic.com/_next/static/chunks/pages/g/%5BgizmoId%5D-=
315a2fe43fc74838.js?dpl=3D0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0"><link a=
s=3D"script" rel=3D"prefetch" crossorigin=3D"anonymous" href=3D"https://cdn=
.oaistatic.com/_next/static/chunks/pages/gpts-731601f51330856a.js?dpl=3D0eb=
06d1ca14a173bcd1bae1cf21f80dca728a1a0"><link rel=3D"stylesheet" type=3D"tex=
t/css" href=3D"https://cdn.oaistatic.com/_next/static/css/85ea0523a4a24fab.=
css?dpl=3D0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0" crossorigin=3D"anonymou=
s"></head><body class=3D"antialiased" style=3D""><div id=3D"__next"><div cl=
ass=3D"relative z-0 flex h-full w-full overflow-hidden"><div class=3D"flex-=
shrink-0 overflow-x-hidden bg-token-sidebar-surface-primary" style=3D"width=
: 260px;"><div class=3D"h-full w-[260px]"><div class=3D"flex h-full min-h-0=
 flex-col"><div class=3D"flex h-full min-h-0 flex-col"><div class=3D"relati=
ve h-full w-full flex-1 items-start border-white/20"><h2 style=3D"position:=
 absolute; border: 0px; width: 1px; height: 1px; padding: 0px; margin: -1px=
; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; ov=
erflow-wrap: normal;">=EC=B1=84=ED=8C=85 =EA=B8=B0=EB=A1=9D</h2><nav class=
=3D"flex h-full w-full flex-col px-3 pb-3.5 juice:pb-0" aria-label=3D"=EC=
=B1=84=ED=8C=85 =EA=B8=B0=EB=A1=9D"><div class=3D"flex justify-between flex=
 h-14 items-center"><span class=3D"" data-state=3D"closed"><button class=3D=
"h-10 rounded-lg px-2.5 text-token-text-secondary focus-visible:outline-0 h=
over:bg-token-sidebar-surface-secondary focus-visible:bg-token-sidebar-surf=
ace-secondary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-xl-heavy"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M8.857 3h6.286c1.084 0 1.9=
58 0 2.666.058.729.06 1.369.185 1.961.487a5 5 0 0 1 2.185 2.185c.302.592.42=
8 1.233.487 1.961.058.708.058 1.582.058 2.666v3.286c0 1.084 0 1.958-.058 2.=
666-.06.729-.185 1.369-.487 1.961a5 5 0 0 1-2.185 2.185c-.592.302-1.232.428=
-1.961.487C17.1 21 16.227 21 15.143 21H8.857c-1.084 0-1.958 0-2.666-.058-.7=
28-.06-1.369-.185-1.96-.487a5 5 0 0 1-2.186-2.185c-.302-.592-.428-1.232-.48=
7-1.961C1.5 15.6 1.5 14.727 1.5 13.643v-3.286c0-1.084 0-1.958.058-2.666.06-=
.728.185-1.369.487-1.96A5 5 0 0 1 4.23 3.544c.592-.302 1.233-.428 1.961-.48=
7C6.9 3 7.773 3 8.857 3M6.354 5.051c-.605.05-.953.142-1.216.276a3 3 0 0 0-1=
.311 1.311c-.134.263-.226.611-.276 1.216-.05.617-.051 1.41-.051 2.546v3.2c0=
 1.137 0 1.929.051 2.546.05.605.142.953.276 1.216a3 3 0 0 0 1.311 1.311c.26=
3.134.611.226 1.216.276.617.05 1.41.051 2.546.051h.6V5h-.6c-1.137 0-1.929 0=
-2.546.051M11.5 5v14h3.6c1.137 0 1.929 0 2.546-.051.605-.05.953-.142 1.216-=
.276a3 3 0 0 0 1.311-1.311c.134-.263.226-.611.276-1.216.05-.617.051-1.41.05=
1-2.546v-3.2c0-1.137 0-1.929-.051-2.546-.05-.605-.142-.953-.276-1.216a3 3 0=
 0 0-1.311-1.311c-.263-.134-.611-.226-1.216-.276C17.029 5.001 16.236 5 15.1=
 5zM5 8.5a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H6a1 1 0 0 1-1-1M5 12a1 1 0 0 1 1-1h=
1a1 1 0 1 1 0 2H6a1 1 0 0 1-1-1" clip-rule=3D"evenodd"></path></svg></butto=
n></span><span class=3D"" data-state=3D"closed"><button class=3D"h-10 round=
ed-lg px-2.5 text-token-text-secondary focus-visible:outline-0 hover:bg-tok=
en-sidebar-surface-secondary focus-visible:bg-token-sidebar-surface-seconda=
ry"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"currentColor" viewBox=3D"0 0 24 24" class=3D"icon-xl-heavy"><path d=
=3D"M15.673 3.913a3.121 3.121 0 1 1 4.414 4.414l-5.937 5.937a5 5 0 0 1-2.82=
8 1.415l-2.18.31a1 1 0 0 1-1.132-1.13l.311-2.18A5 5 0 0 1 9.736 9.85zm3 1.4=
14a1.12 1.12 0 0 0-1.586 0l-5.937 5.937a3 3 0 0 0-.849 1.697l-.123.86.86-.1=
22a3 3 0 0 0 1.698-.849l5.937-5.937a1.12 1.12 0 0 0 0-1.586M11 4A1 1 0 0 1 =
10 5c-.998 0-1.702.008-2.253.06-.54.052-.862.141-1.109.267a3 3 0 0 0-1.311 =
1.311c-.134.263-.226.611-.276 1.216C5.001 8.471 5 9.264 5 10.4v3.2c0 1.137 =
0 1.929.051 2.546.05.605.142.953.276 1.216a3 3 0 0 0 1.311 1.311c.263.134.6=
11.226 1.216.276.617.05 1.41.051 2.546.051h3.2c1.137 0 1.929 0 2.546-.051.6=
05-.05.953-.142 1.216-.276a3 3 0 0 0 1.311-1.311c.126-.247.215-.569.266-1.1=
08.053-.552.06-1.256.06-2.255a1 1 0 1 1 2 .002c0 .978-.006 1.78-.069 2.442-=
.064.673-.192 1.27-.475 1.827a5 5 0 0 1-2.185 2.185c-.592.302-1.232.428-1.9=
61.487C15.6 21 14.727 21 13.643 21h-3.286c-1.084 0-1.958 0-2.666-.058-.728-=
.06-1.369-.185-1.96-.487a5 5 0 0 1-2.186-2.185c-.302-.592-.428-1.233-.487-1=
.961C3 15.6 3 14.727 3 13.643v-3.286c0-1.084 0-1.958.058-2.666.06-.729.185-=
1.369.487-1.961A5 5 0 0 1 5.73 3.545c.556-.284 1.154-.411 1.827-.475C8.22 3=
.007 9.021 3 10 3A1 1 0 0 1 11 4"></path></svg></button></span></div><div c=
lass=3D"flex-col flex-1 transition-opacity duration-500 -mr-2 pr-2 overflow=
-y-auto"><div class=3D"sticky left-0 right-0 top-0 z-20 bg-token-sidebar-su=
rface-primary pt-3.5 juice:static juice:pt-0"><div class=3D"pb-0.5 last:pb-=
0" tabindex=3D"0"><a class=3D"group flex h-10 items-center gap-2 rounded-lg=
 bg-token-sidebar-surface-primary px-2 font-semibold juice:gap-2.5 juice:fo=
nt-normal hover:bg-token-sidebar-surface-secondary" href=3D"https://chatgpt=
.com/"><div class=3D"h-6 w-6 flex-shrink-0"><div class=3D"gizmo-shadow-stro=
ke relative flex h-full items-center justify-center rounded-full bg-token-m=
ain-surface-primary text-token-text-primary"><svg width=3D"41" height=3D"41=
" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"h-2/3 w-2/3" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</t=
ext><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.=
6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882=
 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8=
796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.49126=
9 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335=
 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.83=
77 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 =
0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24=
.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.407=
01 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C1=
0.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0=
587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307=
 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32=
.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874=
 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.=
5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.74=
43 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 1=
7.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.937=
8C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29=
.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707=
 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.=
3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.48=
88 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 =
26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583=
 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0=
177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829=
 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.=
02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0=
998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491=
 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.=
6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894=
 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.=
0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.304=
6C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 1=
4.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6=
729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 =
36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2=
684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415=
 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21=
.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 =
20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.=
069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C=
26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.=
0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.906=
8 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6=
.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2=
842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128=
ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 1=
9.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18=
295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275=
 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.=
0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473=
L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10=
.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.40=
18 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z"=
 fill=3D"currentColor"></path></svg></div></div><div class=3D"grow overflow=
-hidden text-ellipsis whitespace-nowrap text-sm text-token-text-primary">Ch=
atGPT</div><div class=3D"flex gap-3 juice:gap-2"><span class=3D"flex items-=
center" data-state=3D"closed"><button class=3D"invisible text-token-text-te=
rtiary hover:text-token-text-secondary group-hover:visible juice:text-token=
-text-secondary juice:hover:text-token-text-primary"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"currentColor" viewBo=
x=3D"0 0 24 24" class=3D"icon-md"><path d=3D"M15.673 3.913a3.121 3.121 0 1 =
1 4.414 4.414l-5.937 5.937a5 5 0 0 1-2.828 1.415l-2.18.31a1 1 0 0 1-1.132-1=
.13l.311-2.18A5 5 0 0 1 9.736 9.85zm3 1.414a1.12 1.12 0 0 0-1.586 0l-5.937 =
5.937a3 3 0 0 0-.849 1.697l-.123.86.86-.122a3 3 0 0 0 1.698-.849l5.937-5.93=
7a1.12 1.12 0 0 0 0-1.586M11 4A1 1 0 0 1 10 5c-.998 0-1.702.008-2.253.06-.5=
4.052-.862.141-1.109.267a3 3 0 0 0-1.311 1.311c-.134.263-.226.611-.276 1.21=
6C5.001 8.471 5 9.264 5 10.4v3.2c0 1.137 0 1.929.051 2.546.05.605.142.953.2=
76 1.216a3 3 0 0 0 1.311 1.311c.263.134.611.226 1.216.276.617.05 1.41.051 2=
.546.051h3.2c1.137 0 1.929 0 2.546-.051.605-.05.953-.142 1.216-.276a3 3 0 0=
 0 1.311-1.311c.126-.247.215-.569.266-1.108.053-.552.06-1.256.06-2.255a1 1 =
0 1 1 2 .002c0 .978-.006 1.78-.069 2.442-.064.673-.192 1.27-.475 1.827a5 5 =
0 0 1-2.185 2.185c-.592.302-1.232.428-1.961.487C15.6 21 14.727 21 13.643 21=
h-3.286c-1.084 0-1.958 0-2.666-.058-.728-.06-1.369-.185-1.96-.487a5 5 0 0 1=
-2.186-2.185c-.302-.592-.428-1.233-.487-1.961C3 15.6 3 14.727 3 13.643v-3.2=
86c0-1.084 0-1.958.058-2.666.06-.729.185-1.369.487-1.961A5 5 0 0 1 5.73 3.5=
45c.556-.284 1.154-.411 1.827-.475C8.22 3.007 9.021 3 10 3A1 1 0 0 1 11 4">=
</path></svg></button></span></div></a></div></div><div><div class=3D"pb-0.=
5 last:pb-0" tabindex=3D"0"><a class=3D"group flex h-10 items-center gap-2 =
rounded-lg bg-token-sidebar-surface-primary px-2 font-semibold juice:gap-2.=
5 juice:font-normal hover:bg-token-sidebar-surface-secondary" href=3D"https=
://chatgpt.com/g/g-GbLbctpPz-universal-primer"><div class=3D"h-6 w-6 flex-s=
hrink-0"><div class=3D"gizmo-shadow-stroke overflow-hidden rounded-full"><i=
mg src=3D"https://files.oaiusercontent.com/file-thqJUpDWcYAMxgKhiwNYZFj0?se=
=3D2123-10-17T10%3A02%3A59Z&amp;sp=3Dr&amp;sv=3D2021-08-06&amp;sr=3Db&amp;r=
scc=3Dmax-age%3D31536000%2C%20immutable&amp;rscd=3Dattachment%3B%20filename=
%3D1fb91f30-1519-4f62-81f7-e141fa19f099.png&amp;sig=3DUljckMV40AarnEvasy2Z2=
yiDGjVV1UFD/e0dtZkyETI%3D" class=3D"h-full w-full bg-token-main-surface-sec=
ondary" alt=3D"GPT" width=3D"80" height=3D"80"></div></div><div class=3D"gr=
ow overflow-hidden text-ellipsis whitespace-nowrap text-sm text-token-text-=
primary">Universal Primer</div><div class=3D"flex gap-3 juice:gap-2"><span =
class=3D"flex items-center" data-state=3D"closed"><button class=3D"invisibl=
e text-token-text-tertiary hover:text-token-text-secondary group-hover:visi=
ble juice:text-token-text-secondary juice:hover:text-token-text-primary"><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
currentColor" viewBox=3D"0 0 24 24" class=3D"icon-md"><path d=3D"M15.673 3.=
913a3.121 3.121 0 1 1 4.414 4.414l-5.937 5.937a5 5 0 0 1-2.828 1.415l-2.18.=
31a1 1 0 0 1-1.132-1.13l.311-2.18A5 5 0 0 1 9.736 9.85zm3 1.414a1.12 1.12 0=
 0 0-1.586 0l-5.937 5.937a3 3 0 0 0-.849 1.697l-.123.86.86-.122a3 3 0 0 0 1=
.698-.849l5.937-5.937a1.12 1.12 0 0 0 0-1.586M11 4A1 1 0 0 1 10 5c-.998 0-1=
.702.008-2.253.06-.54.052-.862.141-1.109.267a3 3 0 0 0-1.311 1.311c-.134.26=
3-.226.611-.276 1.216C5.001 8.471 5 9.264 5 10.4v3.2c0 1.137 0 1.929.051 2.=
546.05.605.142.953.276 1.216a3 3 0 0 0 1.311 1.311c.263.134.611.226 1.216.2=
76.617.05 1.41.051 2.546.051h3.2c1.137 0 1.929 0 2.546-.051.605-.05.953-.14=
2 1.216-.276a3 3 0 0 0 1.311-1.311c.126-.247.215-.569.266-1.108.053-.552.06=
-1.256.06-2.255a1 1 0 1 1 2 .002c0 .978-.006 1.78-.069 2.442-.064.673-.192 =
1.27-.475 1.827a5 5 0 0 1-2.185 2.185c-.592.302-1.232.428-1.961.487C15.6 21=
 14.727 21 13.643 21h-3.286c-1.084 0-1.958 0-2.666-.058-.728-.06-1.369-.185=
-1.96-.487a5 5 0 0 1-2.186-2.185c-.302-.592-.428-1.233-.487-1.961C3 15.6 3 =
14.727 3 13.643v-3.286c0-1.084 0-1.958.058-2.666.06-.729.185-1.369.487-1.96=
1A5 5 0 0 1 5.73 3.545c.556-.284 1.154-.411 1.827-.475C8.22 3.007 9.021 3 1=
0 3A1 1 0 0 1 11 4"></path></svg></button></span></div></a></div><div class=
=3D"pb-0.5 last:pb-0" tabindex=3D"0"><a class=3D"group flex h-10 items-cent=
er gap-2 rounded-lg bg-token-sidebar-surface-primary px-2 font-semibold jui=
ce:gap-2.5 juice:font-normal hover:bg-token-sidebar-surface-secondary" href=
=3D"https://chatgpt.com/g/g-ihJfmYAJn-gantt-chart-gpt"><div class=3D"h-6 w-=
6 flex-shrink-0"><div class=3D"gizmo-shadow-stroke overflow-hidden rounded-=
full"><img src=3D"https://files.oaiusercontent.com/file-jMLKJbC0GYKOo5sPxZN=
rndYe?se=3D2123-10-21T04%3A23%3A16Z&amp;sp=3Dr&amp;sv=3D2021-08-06&amp;sr=
=3Db&amp;rscc=3Dmax-age%3D31536000%2C%20immutable&amp;rscd=3Dattachment%3B%=
20filename%3Dgantt%2520chart%2520gpt.png&amp;sig=3DJnTv/jcKBIenlIjz/QMhMXq6=
bXafrMi%2BGEMslwb7lbo%3D" class=3D"h-full w-full bg-token-main-surface-seco=
ndary" alt=3D"GPT" width=3D"80" height=3D"80"></div></div><div class=3D"gro=
w overflow-hidden text-ellipsis whitespace-nowrap text-sm text-token-text-p=
rimary">Gantt Chart GPT</div><div class=3D"flex gap-3 juice:gap-2"><span cl=
ass=3D"flex items-center" data-state=3D"closed"><button class=3D"invisible =
text-token-text-tertiary hover:text-token-text-secondary group-hover:visibl=
e juice:text-token-text-secondary juice:hover:text-token-text-primary"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"cu=
rrentColor" viewBox=3D"0 0 24 24" class=3D"icon-md"><path d=3D"M15.673 3.91=
3a3.121 3.121 0 1 1 4.414 4.414l-5.937 5.937a5 5 0 0 1-2.828 1.415l-2.18.31=
a1 1 0 0 1-1.132-1.13l.311-2.18A5 5 0 0 1 9.736 9.85zm3 1.414a1.12 1.12 0 0=
 0-1.586 0l-5.937 5.937a3 3 0 0 0-.849 1.697l-.123.86.86-.122a3 3 0 0 0 1.6=
98-.849l5.937-5.937a1.12 1.12 0 0 0 0-1.586M11 4A1 1 0 0 1 10 5c-.998 0-1.7=
02.008-2.253.06-.54.052-.862.141-1.109.267a3 3 0 0 0-1.311 1.311c-.134.263-=
.226.611-.276 1.216C5.001 8.471 5 9.264 5 10.4v3.2c0 1.137 0 1.929.051 2.54=
6.05.605.142.953.276 1.216a3 3 0 0 0 1.311 1.311c.263.134.611.226 1.216.276=
.617.05 1.41.051 2.546.051h3.2c1.137 0 1.929 0 2.546-.051.605-.05.953-.142 =
1.216-.276a3 3 0 0 0 1.311-1.311c.126-.247.215-.569.266-1.108.053-.552.06-1=
.256.06-2.255a1 1 0 1 1 2 .002c0 .978-.006 1.78-.069 2.442-.064.673-.192 1.=
27-.475 1.827a5 5 0 0 1-2.185 2.185c-.592.302-1.232.428-1.961.487C15.6 21 1=
4.727 21 13.643 21h-3.286c-1.084 0-1.958 0-2.666-.058-.728-.06-1.369-.185-1=
.96-.487a5 5 0 0 1-2.186-2.185c-.302-.592-.428-1.233-.487-1.961C3 15.6 3 14=
.727 3 13.643v-3.286c0-1.084 0-1.958.058-2.666.06-.729.185-1.369.487-1.961A=
5 5 0 0 1 5.73 3.545c.556-.284 1.154-.411 1.827-.475C8.22 3.007 9.021 3 10 =
3A1 1 0 0 1 11 4"></path></svg></button></span></div></a></div><div tabinde=
x=3D"0"><a class=3D"flex h-10 w-full items-center gap-2 rounded-lg px-2 fon=
t-semibold text-token-text-primary hover:bg-token-sidebar-surface-secondary=
 juice:gap-2.5 juice:font-normal" href=3D"https://chatgpt.com/gpts"><div cl=
ass=3D"flex items-center justify-center text-token-text-secondary h-6 w-6">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M6.75 4.5a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0=
 0 0-4.5M2.5 6.75a4.25 4.25 0 1 1 8.5 0 4.25 4.25 0 0 1-8.5 0M17.25 4.5a2.2=
5 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5M13 6.75a4.25 4.25 0 1 1 8.5 0 4.25=
 4.25 0 0 1-8.5 0M6.75 15a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5M2.5 1=
7.25a4.25 4.25 0 1 1 8.5 0 4.25 4.25 0 0 1-8.5 0M17.25 15a2.25 2.25 0 1 0 0=
 4.5 2.25 2.25 0 0 0 0-4.5M13 17.25a4.25 4.25 0 1 1 8.5 0 4.25 4.25 0 0 1-8=
.5 0" clip-rule=3D"evenodd"></path></svg></div><span class=3D"text-sm">GPT =
=ED=83=90=EC=83=89</span></a></div></div><div class=3D"flex flex-col gap-2 =
pb-2 text-token-text-primary text-sm juice:mt-5"><div><div class=3D"relativ=
e mt-5 empty:mt-0 empty:hidden juice:first:mt-0 juice:last:mb-5" style=3D"h=
eight: auto; opacity: 1; transform: none; transform-origin: 50% 50% 0px;"><=
div class=3D"juice:sticky juice:top-0 juice:z-20 juice:bg-token-sidebar-sur=
face-primary" style=3D"transform: none; transform-origin: 50% 50% 0px;"><sp=
an class=3D"flex h-9 items-center"><h3 class=3D"pb-2 pt-3 px-2 text-xs font=
-semibold text-ellipsis overflow-hidden break-all text-token-text-secondary=
">=EC=98=A4=EB=8A=98</h3></span></div><ol><li class=3D"relative z-[15]" sty=
le=3D"opacity: 1; height: auto; transform: none; transform-origin: 50% 50% =
0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-to=
ken-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/1c9b2915-39=
61-4484-a701-34cf672a51ea" class=3D"flex items-center gap-2 p-2"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=9C=A0=
=EC=A0=80 =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EA=B0=92 =
=EA=B0=80=EC=A0=B8=EC=98=A4=EA=B8=B0<div class=3D"absolute bottom-0 top-0 t=
o-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-t=
o-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary g=
roup-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-=
20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=
=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-=
0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex items-center justify-center text-token-text-primary transition=
 hover:text-token-text-secondary radix-state-open:text-token-text-secondary=
 juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:ri:" aria-haspopup=3D"menu" aria-expanded=3D"false=
" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0"=
 clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li cl=
ass=3D"relative" style=3D"opacity: 1; height: auto; transform: none; transf=
orm-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:op=
acity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatg=
pt.com/c/5ca4a30e-c192-4470-b7e3-e43d2cc2318b" class=3D"flex items-center g=
ap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto">=EC=9C=84=EC=A0=AF =EB=B0=B0=EC=B9=98 =EB=B0=8F =EB=B0=B0=EA=B2=
=BD=ED=99=94=EB=A9=B4<div class=3D"absolute bottom-0 top-0 to-transparent l=
tr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-=
sidebar-surface-primary from-token-sidebar-surface-primary group-hover:from=
-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:=
from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bot=
tom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-h=
over:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex ite=
ms-center justify-center text-token-text-primary transition hover:text-toke=
n-text-secondary radix-state-open:text-token-text-secondary juice:text-toke=
n-text-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D=
"radix-:rm:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></button></span></div></div></li><li class=3D"relative" =
style=3D"opacity: 1; height: auto; transform: none; transform-origin: 50% 5=
0% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg=
-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/02d603fb=
-a858-4354-a1b8-fcbbbce40922" class=3D"flex items-center gap-2 p-2"><div cl=
ass=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EB=B8=
=8C=EB=9E=9C=EC=B9=98 =EC=BB=A4=EB=B0=8B =EB=B0=8F =ED=91=B8=EC=8B=9C<div c=
lass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-=
to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary fro=
m-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-seco=
ndary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:=
w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center ga=
p-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex items-center justify-center te=
xt-token-text-primary transition hover:text-token-text-secondary radix-stat=
e-open:text-token-text-secondary juice:text-token-text-secondary juice:hove=
r:text-token-text-primary" type=3D"button" id=3D"radix-:rq:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heigh=
t: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a href=3D"https://chatgpt.com/c/bca82c8a-84d7-435b-80ff-0033f2d1cd=
fd" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overf=
low-hidden whitespace-nowrap" dir=3D"auto">=EB=8B=A8=EC=96=B4=EC=9E=A5 =ED=
=94=84=EB=A1=9C=EA=B7=B8=EB=9E=A8 =EA=B0=9C=EB=B0=9C =EB=85=BC=EC=9D=98<div=
 class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradien=
t-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary f=
rom-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-se=
condary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hove=
r:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center =
gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex items-center justify-center =
text-token-text-primary transition hover:text-token-text-secondary radix-st=
ate-open:text-token-text-secondary juice:text-token-text-secondary juice:ho=
ver:text-token-text-primary" type=3D"button" id=3D"radix-:ru:" aria-haspopu=
p=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butt=
on></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heig=
ht: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"gr=
oup relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-se=
condary"><a href=3D"https://chatgpt.com/c/d78474fa-29d4-4310-a56a-a03aee117=
dc5" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow over=
flow-hidden whitespace-nowrap" dir=3D"auto">Exe =ED=8C=8C=EC=9D=BC =EC=83=
=9D=EC=84=B1=ED=95=98=EA=B8=B0<div class=3D"absolute bottom-0 top-0 to-tran=
sparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r fr=
om-token-sidebar-surface-primary from-token-sidebar-surface-primary group-h=
over:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gro=
up-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"abs=
olute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidde=
n group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D=
"flex items-center justify-center text-token-text-primary transition hover:=
text-token-text-secondary radix-state-open:text-token-text-secondary juice:=
text-token-text-secondary juice:hover:text-token-text-primary" type=3D"butt=
on" id=3D"radix-:r12:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-=
state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"=
relative" style=3D"opacity: 1; height: auto; transform: none; transform-ori=
gin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-9=
0 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/=
c/ab0d5ca8-c84d-46ee-b65f-6a194d0abe83" class=3D"flex items-center gap-2 p-=
2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"au=
to">Importlib=EC=9C=BC=EB=A1=9C =EB=AA=A8=EB=93=88 =EB=8F=99=EC=A0=81 =EB=
=A1=9C=EB=94=A9<div class=3D"absolute bottom-0 top-0 to-transparent ltr:rig=
ht-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideba=
r-surface-primary from-token-sidebar-surface-primary group-hover:from-token=
-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-6=
0% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:f=
lex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cen=
ter justify-center text-token-text-primary transition hover:text-token-text=
-secondary radix-state-open:text-token-text-secondary juice:text-token-text=
-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix=
-:r16:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed=
"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></li><li class=3D"relative" style=
=3D"opacity: 1; height: auto; transform: none; transform-origin: 50% 50% 0p=
x;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-toke=
n-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/f4218a00-04bb=
-45cb-9392-9f9cf8eec47e" class=3D"flex items-center gap-2 p-2"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">User Requ=
est: Summary Title<div class=3D"absolute bottom-0 top-0 to-transparent ltr:=
right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sid=
ebar-surface-primary from-token-sidebar-surface-primary group-hover:from-to=
ken-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:fro=
m-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom=
-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hove=
r:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-=
center justify-center text-token-text-primary transition hover:text-token-t=
ext-secondary radix-state-open:text-token-text-secondary juice:text-token-t=
ext-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"ra=
dix-:r1a:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"clo=
sed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 =
0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eveno=
dd"></path></svg></button></span></div></div></li><li class=3D"relative" st=
yle=3D"opacity: 1; height: auto; transform: none; transform-origin: 50% 50%=
 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-t=
oken-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/3e4ee91c-0=
bcc-4c61-bcf9-17f881a1101f" class=3D"flex items-center gap-2 p-2"><div clas=
s=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=ED=8C=
=8C=EC=9D=BC =EB=AA=85=EB=AA=85 =EB=B0=A9=EB=B2=95=EB=A1=A0 =EC=9A=94=EC=95=
=BD<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-=
gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-pr=
imary from-token-sidebar-surface-primary group-hover:from-token-sidebar-sur=
face-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:gro=
up-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-=
center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-=
center text-token-text-primary transition hover:text-token-text-secondary r=
adix-state-open:text-token-text-secondary juice:text-token-text-secondary j=
uice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r1e:" aria=
-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></button></span></div></div></li><li class=3D"relative" style=3D"opacity:=
 1; height: auto; transform: none; transform-origin: 50% 50% 0px;"><div cla=
ss=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-su=
rface-secondary"><a href=3D"https://chatgpt.com/c/bd286fd3-1835-4dfa-905e-e=
8491371dd8b" class=3D"flex items-center gap-2 p-2"><div class=3D"relative g=
row overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=98=81=EC=96=B4 =ED=
=95=99=EC=8A=B5 GUI =EA=B5=AC=ED=98=84<div class=3D"absolute bottom-0 top-0=
 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient=
-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary=
 group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:=
w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div clas=
s=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left=
-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex items-center justify-center text-token-text-primary transitio=
n hover:text-token-text-secondary radix-state-open:text-token-text-secondar=
y juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r1i:" aria-haspopup=3D"menu" aria-expanded=3D"fals=
e" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li c=
lass=3D"relative" style=3D"opacity: 1; height: auto; transform: none; trans=
form-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:o=
pacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chat=
gpt.com/c/244ac135-b605-41aa-9215-38e8e5e6add0" class=3D"flex items-center =
gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto">=EC=95=84=EC=9D=B4=EC=BD=98 =EC=84=A4=EC=A0=95 PyInstaller<div =
class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient=
-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary fr=
om-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-sec=
ondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover=
:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center g=
ap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"=
" data-state=3D"closed"><button class=3D"flex items-center justify-center t=
ext-token-text-primary transition hover:text-token-text-secondary radix-sta=
te-open:text-token-text-secondary juice:text-token-text-secondary juice:hov=
er:text-token-text-primary" type=3D"button" id=3D"radix-:r1m:" aria-haspopu=
p=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butt=
on></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heig=
ht: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"gr=
oup relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-se=
condary"><a href=3D"https://chatgpt.com/c/8d8d8695-45a4-418c-a2f6-998901ffd=
710" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow over=
flow-hidden whitespace-nowrap" dir=3D"auto">PyInstaller=EB=A1=9C exe=ED=8C=
=8C=EC=9D=BC =EC=83=9D=EC=84=B1<div class=3D"absolute bottom-0 top-0 to-tra=
nsparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r f=
rom-token-sidebar-surface-primary from-token-sidebar-surface-primary group-=
hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gr=
oup-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"ab=
solute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidd=
en group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-primary transition hov=
er:text-token-text-secondary radix-state-open:text-token-text-secondary jui=
ce:text-token-text-secondary juice:hover:text-token-text-primary" type=3D"b=
utton" id=3D"radix-:r1q:" aria-haspopup=3D"menu" aria-expanded=3D"false" da=
ta-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" =
height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cli=
p-rule=3D"evenodd"></path></svg></button></span></div></div></li></ol></div=
><div class=3D"relative mt-5 empty:mt-0 empty:hidden juice:first:mt-0 juice=
:last:mb-5" style=3D"height: auto; opacity: 1; transform: none; transform-o=
rigin: 50% 50% 0px;"><div class=3D"juice:sticky juice:top-0 juice:z-20 juic=
e:bg-token-sidebar-surface-primary" style=3D"transform: none; transform-ori=
gin: 50% 50% 0px;"><span class=3D"flex h-9 items-center"><h3 class=3D"pb-2 =
pt-3 px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all tex=
t-token-text-secondary">=EC=96=B4=EC=A0=9C</h3></span></div><ol><li class=
=3D"relative" style=3D"opacity: 1; height: auto; transform: none; transform=
-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opaci=
ty-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.=
com/c/7c0b55f7-a00a-49d4-a258-af20dcaf3b5b" class=3D"flex items-center gap-=
2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=
=3D"auto">Character Analysis in Chekhov's "The Proposal"<div class=3D"absol=
ute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left=
-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideb=
ar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 fr=
om-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div><=
/div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 lt=
r:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-primary transition hover:text-token-text-secondary radix-state-open:text=
-token-text-secondary juice:text-token-text-secondary juice:hover:text-toke=
n-text-primary" type=3D"button" id=3D"radix-:r20:" aria-haspopup=3D"menu" a=
ria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.or=
g/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" =
class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3=
 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></=
div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; tr=
ansform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative=
 rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a =
href=3D"https://chatgpt.com/c/02495891-de09-4d58-bfcd-57e0f3be8597" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EB=94=94=EC=9E=90=EC=9D=B8 =ED=8C=A8=ED=
=84=B4 =EC=A0=81=EC=9A=A9=ED=95=98=EA=B8=B0<div class=3D"absolute bottom-0 =
top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gra=
dient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-pr=
imary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-h=
over:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div=
 class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl=
:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><bu=
tton class=3D"flex items-center justify-center text-token-text-primary tran=
sition hover:text-token-text-secondary radix-state-open:text-token-text-sec=
ondary juice:text-token-text-secondary juice:hover:text-token-text-primary"=
 type=3D"button" id=3D"radix-:r24:" aria-haspopup=3D"menu" aria-expanded=3D=
"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" wid=
th=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-m=
d"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4=
 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li>=
<li class=3D"relative" style=3D"opacity: 1; height: auto; transform: none; =
transform-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg act=
ive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https:/=
/chatgpt.com/c/27d09c8f-b25b-4763-8eec-3e53f3997b87" class=3D"flex items-ce=
nter gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowr=
ap" dir=3D"auto">=ED=8C=8C=EC=9D=B4=EC=8D=AC GUI MySQL =EC=97=B0=EB=8F=99<d=
iv class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradi=
ent-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary=
 from-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-=
secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-ho=
ver:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-cente=
r gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-cent=
er text-token-text-primary transition hover:text-token-text-secondary radix=
-state-open:text-token-text-secondary juice:text-token-text-secondary juice=
:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r28:" aria-has=
popup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"=
evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></=
button></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; =
height: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=
=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surf=
ace-secondary"><a href=3D"https://chatgpt.com/c/28278baa-c01e-4e77-8183-a80=
e760cb60c" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto">=ED=81=B4=EB=9E=98=EC=8A=
=A4 =EB=8B=A4=EC=9D=B4=EC=96=B4=EA=B7=B8=EB=9E=A8 =EC=9A=94=EC=B2=AD<div cl=
ass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-t=
o-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from=
-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-secon=
dary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w=
-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap=
-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" =
data-state=3D"closed"><button class=3D"flex items-center justify-center tex=
t-token-text-primary transition hover:text-token-text-secondary radix-state=
-open:text-token-text-secondary juice:text-token-text-secondary juice:hover=
:text-token-text-primary" type=3D"button" id=3D"radix-:r2c:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heigh=
t: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a href=3D"https://chatgpt.com/c/50a72c3e-d035-4eb0-9a7f-715e63eb18=
26" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overf=
low-hidden whitespace-nowrap" dir=3D"auto">Class Diagram for Python Files<d=
iv class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradi=
ent-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary=
 from-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-=
secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-ho=
ver:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-cente=
r gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-cent=
er text-token-text-primary transition hover:text-token-text-secondary radix=
-state-open:text-token-text-secondary juice:text-token-text-secondary juice=
:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r2g:" aria-has=
popup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"=
evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></=
button></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; =
height: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=
=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surf=
ace-secondary"><a href=3D"https://chatgpt.com/c/2ff195b4-3bfc-4578-8a94-1fc=
dd599aca2" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto">Virtual Memory Pros &amp;=
 Cons<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:b=
g-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-=
primary from-token-sidebar-surface-primary group-hover:from-token-sidebar-s=
urface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:g=
roup-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 item=
s-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span=
 class=3D"" data-state=3D"closed"><button class=3D"flex items-center justif=
y-center text-token-text-primary transition hover:text-token-text-secondary=
 radix-state-open:text-token-text-secondary juice:text-token-text-secondary=
 juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r2k:" ar=
ia-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xml=
ns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" =
viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></=
svg></button></span></div></div></li><li class=3D"relative" style=3D"opacit=
y: 1; height: auto; transform: none; transform-origin: 50% 50% 0px;"><div c=
lass=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-=
surface-secondary"><a href=3D"https://chatgpt.com/c/165eb0a8-4371-4dd4-a76a=
-a9077e38c55f" class=3D"flex items-center gap-2 p-2"><div class=3D"relative=
 grow overflow-hidden whitespace-nowrap" dir=3D"auto">PAE =ED=99=95=EC=9E=
=A5=EA=B3=BC 64GB =EB=A9=94=EB=AA=A8=EB=A6=AC<div class=3D"absolute bottom-=
0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-g=
radient-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-=
primary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group=
-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><d=
iv class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 r=
tl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><=
button class=3D"flex items-center justify-center text-token-text-primary tr=
ansition hover:text-token-text-secondary radix-state-open:text-token-text-s=
econdary juice:text-token-text-secondary juice:hover:text-token-text-primar=
y" type=3D"button" id=3D"radix-:r2o:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" =
width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ico=
n-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 =
1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></=
li></ol></div><div class=3D"relative mt-5 empty:mt-0 empty:hidden juice:fir=
st:mt-0 juice:last:mb-5" style=3D"height: auto; opacity: 1; transform: none=
; transform-origin: 50% 50% 0px;"><div class=3D"juice:sticky juice:top-0 ju=
ice:z-20 juice:bg-token-sidebar-surface-primary" style=3D"transform: none; =
transform-origin: 50% 50% 0px;"><span class=3D"flex h-9 items-center"><h3 c=
lass=3D"pb-2 pt-3 px-2 text-xs font-semibold text-ellipsis overflow-hidden =
break-all text-token-text-secondary">=EC=A7=80=EB=82=9C 7=EC=9D=BC</h3></sp=
an></div><ol><li class=3D"relative" style=3D"opacity: 1; height: auto; tran=
sform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative r=
ounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a hr=
ef=3D"https://chatgpt.com/g/g-GbLbctpPz-universal-primer/c/52ac2cf3-2cb1-4c=
24-815e-100fd67817ae" class=3D"flex items-center gap-2 p-2"><div class=3D"r=
elative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=ED=99=95=EC=
=9E=A5=EB=90=9C =EB=A9=94=EB=AA=A8=EB=A6=AC =EC=A3=BC=EC=86=8C (PAE)<div cl=
ass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-t=
o-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from=
-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-secon=
dary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w=
-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap=
-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" =
data-state=3D"closed"><button class=3D"flex items-center justify-center tex=
t-token-text-primary transition hover:text-token-text-secondary radix-state=
-open:text-token-text-secondary juice:text-token-text-secondary juice:hover=
:text-token-text-primary" type=3D"button" id=3D"radix-:r2u:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heigh=
t: auto; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"gro=
up relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-sec=
ondary"><a href=3D"https://chatgpt.com/g/g-GbLbctpPz-universal-primer/c/53d=
e7913-db80-452a-92ab-8a6b7c2aa620" class=3D"flex items-center gap-2 p-2"><d=
iv class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=
=EC=83=88 =EC=B1=84=ED=8C=85<div class=3D"absolute bottom-0 top-0 to-transp=
arent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from=
-token-sidebar-surface-primary from-token-sidebar-surface-primary group-hov=
er:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group=
-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absol=
ute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden =
group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"f=
lex items-center justify-center text-token-text-primary transition hover:te=
xt-token-text-secondary radix-state-open:text-token-text-secondary juice:te=
xt-token-text-secondary juice:hover:text-token-text-primary" type=3D"button=
" id=3D"radix-:r32:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-st=
ate=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"=
relative" style=3D"opacity: 1; height: auto; transform: none; transform-ori=
gin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-9=
0 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/=
g/g-ihJfmYAJn-gantt-chart-gpt/c/dfe0bac5-9e0c-4543-993c-e51039d933a6" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">Round Robin Gantt Adjusted<div class=3D"a=
bsolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:=
left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-s=
idebar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-=
8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></d=
iv></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-=
2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"flex items-center justify-center text-token-=
text-primary transition hover:text-token-text-secondary radix-state-open:te=
xt-token-text-secondary juice:text-token-text-secondary juice:hover:text-to=
ken-text-primary" type=3D"button" id=3D"radix-:r36:" aria-haspopup=3D"menu"=
 aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"=
M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span>=
</div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; =
transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relati=
ve rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><=
a href=3D"https://chatgpt.com/g/g-ihJfmYAJn-gantt-chart-gpt/c/67c0c5a5-7dc7=
-4c74-a8a8-4b0e6b643666" class=3D"flex items-center gap-2 p-2"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">Reverse P=
4 and P1<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 lt=
r:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfa=
ce-primary from-token-sidebar-surface-primary group-hover:from-token-sideba=
r-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juic=
e:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 i=
tems-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex items-center jus=
tify-center text-token-text-primary transition hover:text-token-text-second=
ary radix-state-open:text-token-text-secondary juice:text-token-text-second=
ary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r3a:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></li><li class=3D"relative" style=3D"opa=
city: 1; height: auto; transform: none; transform-origin: 50% 50% 0px;"><di=
v class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sideb=
ar-surface-secondary"><a href=3D"https://chatgpt.com/c/f707e630-04b8-48e5-9=
96c-200c1f106bfe" class=3D"flex items-center gap-2 p-2"><div class=3D"relat=
ive grow overflow-hidden whitespace-nowrap" dir=3D"auto">Priority Schedulin=
g Basics<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 lt=
r:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfa=
ce-primary from-token-sidebar-surface-primary group-hover:from-token-sideba=
r-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juic=
e:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 i=
tems-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex items-center jus=
tify-center text-token-text-primary transition hover:text-token-text-second=
ary radix-state-open:text-token-text-secondary juice:text-token-text-second=
ary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r3e:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></li><li class=3D"relative" style=3D"opa=
city: 1; height: auto; transform: none; transform-origin: 50% 50% 0px;"><di=
v class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sideb=
ar-surface-secondary"><a href=3D"https://chatgpt.com/c/8264f59e-21f8-4fc4-9=
e6d-743bf36e4361" class=3D"flex items-center gap-2 p-2"><div class=3D"relat=
ive grow overflow-hidden whitespace-nowrap" dir=3D"auto">Segment =ED=81=AC=
=EA=B8=B0=EC=99=80 =EC=88=98<div class=3D"absolute bottom-0 top-0 to-transp=
arent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from=
-token-sidebar-surface-primary from-token-sidebar-surface-primary group-hov=
er:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group=
-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absol=
ute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden =
group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"f=
lex items-center justify-center text-token-text-primary transition hover:te=
xt-token-text-secondary radix-state-open:text-token-text-secondary juice:te=
xt-token-text-secondary juice:hover:text-token-text-primary" type=3D"button=
" id=3D"radix-:r3i:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-st=
ate=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"=
relative" style=3D"opacity: 1; height: auto; transform: none; transform-ori=
gin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-9=
0 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/=
c/100cbdc5-7efb-4e14-8757-78c2efd23d9e" class=3D"flex items-center gap-2 p-=
2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"au=
to">IA-32 =EC=84=B8=EA=B7=B8=EB=A8=BC=ED=85=8C=EC=9D=B4=EC=85=98 =EC=9A=94=
=EC=95=BD<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 l=
tr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surf=
ace-primary from-token-sidebar-surface-primary group-hover:from-token-sideb=
ar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% jui=
ce:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 =
items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex items-center ju=
stify-center text-token-text-primary transition hover:text-token-text-secon=
dary radix-state-open:text-token-text-secondary juice:text-token-text-secon=
dary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r3m:=
" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></button></span></div></div></li><li class=3D"relative" style=3D"op=
acity: 1; height: auto; transform: none; transform-origin: 50% 50% 0px;"><d=
iv class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-side=
bar-surface-secondary"><a href=3D"https://chatgpt.com/c/a242d31f-f5de-49df-=
bc97-c6818a9804d3" class=3D"flex items-center gap-2 p-2"><div class=3D"rela=
tive grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=86=8C=ED=94=
=84=ED=8A=B8=EC=9B=A8=EC=96=B4 =EA=B3=B5=ED=95=99 =EB=8A=90=EB=82=80=EC=A0=
=90 =EC=B2=B4=EA=B3=84=ED=99=94<div class=3D"absolute bottom-0 top-0 to-tra=
nsparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r f=
rom-token-sidebar-surface-primary from-token-sidebar-surface-primary group-=
hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gr=
oup-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"ab=
solute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidd=
en group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-primary transition hov=
er:text-token-text-secondary radix-state-open:text-token-text-secondary jui=
ce:text-token-text-secondary juice:hover:text-token-text-primary" type=3D"b=
utton" id=3D"radix-:r3q:" aria-haspopup=3D"menu" aria-expanded=3D"false" da=
ta-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" =
height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0=
 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cli=
p-rule=3D"evenodd"></path></svg></button></span></div></div></li><li class=
=3D"relative" style=3D"opacity: 1; height: auto; transform: none; transform=
-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opaci=
ty-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.=
com/c/92f50835-38f9-47c3-b1e0-6e0e98e86ace" class=3D"flex items-center gap-=
2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=
=3D"auto">Behavior in UCD: Key Factors<div class=3D"absolute bottom-0 top-0=
 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient=
-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary=
 group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:=
w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div clas=
s=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left=
-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex items-center justify-center text-token-text-primary transitio=
n hover:text-token-text-secondary radix-state-open:text-token-text-secondar=
y juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r3u:" aria-haspopup=3D"menu" aria-expanded=3D"fals=
e" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li c=
lass=3D"relative" style=3D"opacity: 1; height: auto; transform: none; trans=
form-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:o=
pacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chat=
gpt.com/c/5d3272ec-3405-4239-b2b8-3ef0d61833b5" class=3D"flex items-center =
gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto">=ED=88=AC=EB=AA=85 =EB=B0=B0=EA=B2=BD =EB=B2=84=ED=8A=BC<div cl=
ass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-t=
o-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from=
-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-secon=
dary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w=
-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap=
-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" =
data-state=3D"closed"><button class=3D"flex items-center justify-center tex=
t-token-text-primary transition hover:text-token-text-secondary radix-state=
-open:text-token-text-secondary juice:text-token-text-secondary juice:hover=
:text-token-text-primary" type=3D"button" id=3D"radix-:r42:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heigh=
t: auto; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"=
><div class=3D"group relative rounded-lg active:opacity-90 bg-token-sidebar=
-surface-secondary"><a href=3D"https://chatgpt.com/c/4f6c3c31-fe08-47ec-8de=
f-a1197e610e3a" class=3D"flex items-center gap-2 p-2"><div class=3D"relativ=
e grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EB=A0=88=EB=B2=A8=
=EC=97=90 =EB=94=B0=EB=9D=BC =EC=A0=9C=ED=95=9C<div class=3D"absolute botto=
m-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg=
-gradient-to-r from-token-sidebar-surface-secondary w-20 from-60% juice:w-1=
0"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1=
.5 pr-2 ltr:right-0 rtl:left-0 flex"><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center justify-center text-token-text-primary =
transition hover:text-token-text-secondary radix-state-open:text-token-text=
-secondary juice:text-token-text-secondary juice:hover:text-token-text-prim=
ary" type=3D"button" id=3D"radix-:r147:" aria-haspopup=3D"menu" aria-expand=
ed=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"i=
con-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div>=
</li><li class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hi=
dden; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group =
relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-second=
ary"><a href=3D"https://chatgpt.com/c/8f946f32-cccf-4256-94fa-b174ea9642f6"=
 class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow=
-hidden whitespace-nowrap" dir=3D"auto">User Help Request<div class=3D"abso=
lute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:lef=
t-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-side=
bar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 f=
rom-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div>=
</div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 l=
tr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-primary transition hover:text-token-text-secondary radix-state-open:text=
-token-text-secondary juice:text-token-text-secondary juice:hover:text-toke=
n-text-primary" type=3D"button" id=3D"radix-:r14b:" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span><=
/div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; o=
verflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div clas=
s=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-sur=
face-secondary"><a href=3D"https://chatgpt.com/c/2ef278de-dfc1-4e7e-9df1-ff=
f88c4ab159" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gr=
ow overflow-hidden whitespace-nowrap" dir=3D"auto">=EA=B8=B4 =EB=8B=A8=EC=
=96=B4=EC=99=80 Day =EC=A1=B0=ED=9A=8C<div class=3D"absolute bottom-0 top-0=
 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient=
-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary=
 group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:=
w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div clas=
s=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left=
-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex items-center justify-center text-token-text-primary transitio=
n hover:text-token-text-secondary radix-state-open:text-token-text-secondar=
y juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r14f:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/821649cf-24bc-4b74-9299-79f82c2fafb2" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EA=B8=B4 =EB=8B=A8=EC=96=B4 MySQL =EC=BF=
=BC=EB=A6=AC<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-=
0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-s=
urface-primary from-token-sidebar-surface-primary group-hover:from-token-si=
debar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% =
juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top=
-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-center=
 justify-center text-token-text-primary transition hover:text-token-text-se=
condary radix-state-open:text-token-text-secondary juice:text-token-text-se=
condary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r=
14j:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></li><li class=3D"relative" style=
=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform-=
origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacit=
y-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.c=
om/c/8b544bb2-4620-4422-b929-42c2ac84027a" class=3D"flex items-center gap-2=
 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D=
"auto">=EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B9=A8=EA=B0=84=EC=83=89 =EC=B2=98=EB=
=A6=AC.<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr=
:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfac=
e-primary from-token-sidebar-surface-primary group-hover:from-token-sidebar=
-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice=
:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 it=
ems-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex items-center just=
ify-center text-token-text-primary transition hover:text-token-text-seconda=
ry radix-state-open:text-token-text-secondary juice:text-token-text-seconda=
ry juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r14n:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 =
2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></li></ol></div><div class=3D"relative m=
t-5 empty:mt-0 empty:hidden juice:first:mt-0 juice:last:mb-5" style=3D"heig=
ht: auto; opacity: 1; position: relative; transform: none; transform-origin=
: 50% 50% 0px;"><div class=3D"juice:sticky juice:top-0 juice:z-20 juice:bg-=
token-sidebar-surface-primary" style=3D"transform: none; transform-origin: =
50% 50% 0px;"><span class=3D"flex h-9 items-center"><h3 class=3D"pb-2 pt-3 =
px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all text-tok=
en-text-secondary">=EC=A7=80=EB=82=9C 30=EC=9D=BC</h3></span></div><ol><li =
class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; tra=
nsform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative =
rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a h=
ref=3D"https://chatgpt.com/c/b61a3ef7-b530-49ee-9c95-402b6dd63e82" class=3D=
"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidden w=
hitespace-nowrap" dir=3D"auto">Git Fetch =ED=8A=B9=EC=A0=95 =EB=B8=8C=EB=9E=
=9C=EC=B9=98<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-=
0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-s=
urface-primary from-token-sidebar-surface-primary group-hover:from-token-si=
debar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% =
juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top=
-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-center=
 justify-center text-token-text-primary transition hover:text-token-text-se=
condary radix-state-open:text-token-text-secondary juice:text-token-text-se=
condary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r=
14t:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></li><li class=3D"relative" style=
=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform-=
origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacit=
y-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.c=
om/c/4b8cc282-6780-4fcf-9b54-6ba9f25efdc1" class=3D"flex items-center gap-2=
 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D=
"auto">BCE Solving Imbalance Issues<div class=3D"absolute bottom-0 top-0 to=
-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to=
-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary gr=
oup-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-2=
0 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=
=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-=
0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex items-center justify-center text-token-text-primary transition=
 hover:text-token-text-secondary radix-state-open:text-token-text-secondary=
 juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r151:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/29cce55a-4e87-4776-a243-966a2948e7de" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EC=8B=9C=ED=97=98 =EB=B2=84=ED=8A=BC =EC=
=88=A8=EA=B9=80<div class=3D"absolute bottom-0 top-0 to-transparent ltr:rig=
ht-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideba=
r-surface-primary from-token-sidebar-surface-primary group-hover:from-token=
-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-6=
0% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:f=
lex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cen=
ter justify-center text-token-text-primary transition hover:text-token-text=
-secondary radix-state-open:text-token-text-secondary juice:text-token-text=
-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix=
-:r155:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"close=
d"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fil=
l=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd=
"></path></svg></button></span></div></div></li><li class=3D"relative" styl=
e=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform=
-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opaci=
ty-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.=
com/c/fb4fc52f-00ab-4e41-a288-0727d79a4d7b" class=3D"flex items-center gap-=
2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=
=3D"auto">Install MySQL Connector: pip<div class=3D"absolute bottom-0 top-0=
 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient=
-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary=
 group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:=
w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div clas=
s=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left=
-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex items-center justify-center text-token-text-primary transitio=
n hover:text-token-text-secondary radix-state-open:text-token-text-secondar=
y juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r159:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/9b1c606a-179e-4bb7-9f2b-f83faa301c7e" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">Scheduling Algorithms Comparison<div clas=
s=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-=
l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-t=
oken-sidebar-surface-primary group-hover:from-token-sidebar-surface-seconda=
ry  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-1=
0"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1=
.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"flex items-center justify-center text-=
token-text-primary transition hover:text-token-text-secondary radix-state-o=
pen:text-token-text-secondary juice:text-token-text-secondary juice:hover:t=
ext-token-text-primary" type=3D"button" id=3D"radix-:r15d:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m=
7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butto=
n></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heigh=
t: auto; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"=
><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-s=
idebar-surface-secondary"><a href=3D"https://chatgpt.com/c/84a45397-78eb-41=
58-8df6-60470442298a" class=3D"flex items-center gap-2 p-2"><div class=3D"r=
elative grow overflow-hidden whitespace-nowrap" dir=3D"auto">Circular Impor=
t =EB=AC=B8=EC=A0=9C =ED=95=B4=EA=B2=B0<div class=3D"absolute bottom-0 top-=
0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradien=
t-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primar=
y group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover=
:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div cla=
ss=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:lef=
t-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button=
 class=3D"flex items-center justify-center text-token-text-primary transiti=
on hover:text-token-text-secondary radix-state-open:text-token-text-seconda=
ry juice:text-token-text-secondary juice:hover:text-token-text-primary" typ=
e=3D"button" id=3D"radix-:r15h:" aria-haspopup=3D"menu" aria-expanded=3D"fa=
lse" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/g/g-ihJfmYAJn-gantt-chart-gpt/c/8b54d90f-1d95-=
4435-bbef-c6768f5a88c4" class=3D"flex items-center gap-2 p-2"><div class=3D=
"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">Project File=
s Upload Needed<div class=3D"absolute bottom-0 top-0 to-transparent ltr:rig=
ht-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideba=
r-surface-primary from-token-sidebar-surface-primary group-hover:from-token=
-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-6=
0% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:f=
lex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cen=
ter justify-center text-token-text-primary transition hover:text-token-text=
-secondary radix-state-open:text-token-text-secondary juice:text-token-text=
-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix=
-:r15l:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"close=
d"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fil=
l=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd=
"></path></svg></button></span></div></div></li><li class=3D"relative" styl=
e=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform=
-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opaci=
ty-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.=
com/c/667824db-7cb3-43d5-8122-0f680eed8d90" class=3D"flex items-center gap-=
2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=
=3D"auto">Gantt =EC=B0=A8=ED=8A=B8 =EC=88=9C=EC=84=9C =EB=B3=80=EA=B2=BD<di=
v class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradie=
nt-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary =
from-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-s=
econdary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hov=
er:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center=
 gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-cent=
er text-token-text-primary transition hover:text-token-text-secondary radix=
-state-open:text-token-text-secondary juice:text-token-text-secondary juice=
:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r15p:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D=
"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewB=
ox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg><=
/button></span></div></div></li><li class=3D"relative" style=3D"opacity: 1;=
 height: auto; overflow: hidden; transform: none; transform-origin: 50% 50%=
 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-t=
oken-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/55899b0e-3=
b41-45fc-b58e-6f8ecc70ab0d" class=3D"flex items-center gap-2 p-2"><div clas=
s=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">Socket P=
rogram Model.<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right=
-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-=
surface-primary from-token-sidebar-surface-primary group-hover:from-token-s=
idebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60%=
 juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 to=
p-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:fle=
x"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cente=
r justify-center text-token-text-primary transition hover:text-token-text-s=
econdary radix-state-open:text-token-text-secondary juice:text-token-text-s=
econdary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:=
r15t:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"=
><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></li><li class=3D"relative" style=
=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform-=
origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacit=
y-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.c=
om/c/b178441a-9ccb-40bb-8ccf-d5408bb2a105" class=3D"flex items-center gap-2=
 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D=
"auto">=EC=BB=A8=EB=B3=BC=EB=A3=A8=EC=85=98 =ED=95=84=ED=84=B0 =EB=B6=84=EC=
=84=9D<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:=
bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface=
-primary from-token-sidebar-surface-primary group-hover:from-token-sidebar-=
surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:=
group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 ite=
ms-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"flex items-center justi=
fy-center text-token-text-primary transition hover:text-token-text-secondar=
y radix-state-open:text-token-text-secondary juice:text-token-text-secondar=
y juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r161:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-=
rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2=
 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path>=
</svg></button></span></div></div></li><li class=3D"relative" style=3D"opac=
ity: 1; height: auto; overflow: hidden; transform: none; transform-origin: =
50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hov=
er:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/fcc=
9597b-4554-4fc2-93fc-dd5865d7a327" class=3D"flex items-center gap-2 p-2"><d=
iv class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">D=
atabase Modeling: Key Constraints<div class=3D"absolute bottom-0 top-0 to-t=
ransparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r=
 from-token-sidebar-surface-primary from-token-sidebar-surface-primary grou=
p-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 =
group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"=
absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hi=
dden group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-primary transition hov=
er:text-token-text-secondary radix-state-open:text-token-text-secondary jui=
ce:text-token-text-secondary juice:hover:text-token-text-primary" type=3D"b=
utton" id=3D"radix-:r165:" aria-haspopup=3D"menu" aria-expanded=3D"false" d=
ata-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 =
0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cl=
ip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li class=
=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; transfor=
m: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative round=
ed-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=
=3D"https://chatgpt.com/c/6993ac0f-acd7-4d08-88f5-49464c53eada" class=3D"fl=
ex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidden whit=
espace-nowrap" dir=3D"auto">ERD=EB=A5=BC =EB=85=BC=EB=A6=AC=EB=AA=A8=EB=8D=
=B8=EB=A1=9C =EB=B3=80=ED=99=98<div class=3D"absolute bottom-0 top-0 to-tra=
nsparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r f=
rom-token-sidebar-surface-primary from-token-sidebar-surface-primary group-=
hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gr=
oup-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"ab=
solute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidd=
en group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-primary transition hov=
er:text-token-text-secondary radix-state-open:text-token-text-secondary jui=
ce:text-token-text-secondary juice:hover:text-token-text-primary" type=3D"b=
utton" id=3D"radix-:r169:" aria-haspopup=3D"menu" aria-expanded=3D"false" d=
ata-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 =
0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cl=
ip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li class=
=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; transfor=
m: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative round=
ed-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=
=3D"https://chatgpt.com/c/4825455c-4505-4a6e-9d18-b552e1023fa3" class=3D"fl=
ex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidden whit=
espace-nowrap" dir=3D"auto">=EB=8B=A8=EC=96=B4=EC=9E=A5 =ED=94=84=EB=A1=9C=
=EA=B7=B8=EB=9E=A8 =EB=8F=84=EC=9B=80<div class=3D"absolute bottom-0 top-0 =
to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-=
to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary =
group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w=
-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=
=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-=
0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex items-center justify-center text-token-text-primary transition=
 hover:text-token-text-secondary radix-state-open:text-token-text-secondary=
 juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r16d:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/1de8a13f-7991-462f-84e0-1fee715aaff0" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EC=A0=84=ED=99=94=EB=B2=88=ED=98=B8 =EB=
=A9=94=EC=8B=9C=EC=A7=80 =EC=9D=BC=EA=B4=84 =EC=A0=84=EC=86=A1<div class=3D=
"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rt=
l:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token=
-sidebar-surface-primary group-hover:from-token-sidebar-surface-secondary  =
w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"><=
/div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 p=
r-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex items-center justify-center text-toke=
n-text-primary transition hover:text-token-text-secondary radix-state-open:=
text-token-text-secondary juice:text-token-text-secondary juice:hover:text-=
token-text-primary" type=3D"button" id=3D"radix-:r16h:" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></s=
pan></div></div></li><li class=3D"relative" style=3D"opacity: 1; height: au=
to; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div=
 class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sideba=
r-surface-secondary"><a href=3D"https://chatgpt.com/c/68a33b3b-1c10-4fd1-8d=
7e-b6ee5a2212c1" class=3D"flex items-center gap-2 p-2"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=9D=8C=ED=96=A5 =
=EC=9D=91=EB=8B=B5 =EC=8B=9C=EB=AE=AC=EB=A0=88=EC=9D=B4=EC=85=98 =EB=B0=A9=
=EB=B2=95=EB=A1=A0<div class=3D"absolute bottom-0 top-0 to-transparent ltr:=
right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sid=
ebar-surface-primary from-token-sidebar-surface-primary group-hover:from-to=
ken-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:fro=
m-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom=
-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hove=
r:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-=
center justify-center text-token-text-primary transition hover:text-token-t=
ext-secondary radix-state-open:text-token-text-secondary juice:text-token-t=
ext-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"ra=
dix-:r16l:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"cl=
osed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" =
fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"current=
Color" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2=
 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"even=
odd"></path></svg></button></span></div></div></li><li class=3D"relative" s=
tyle=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transf=
orm-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:op=
acity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatg=
pt.com/c/5eb6acc3-5c2e-4111-b436-2bb15fb4c4af" class=3D"flex items-center g=
ap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" di=
r=3D"auto">=EB=94=94=EC=A7=80=ED=84=B8=EC=8B=A0=ED=98=B8=EC=B2=98=EB=A6=AC =
=EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=84=A4=EB=AA=85.<div class=3D"absolute botto=
m-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg=
-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surfac=
e-primary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% gro=
up-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a>=
<div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0=
 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center justify-center text-token-text-primary =
transition hover:text-token-text-secondary radix-state-open:text-token-text=
-secondary juice:text-token-text-secondary juice:hover:text-token-text-prim=
ary" type=3D"button" id=3D"radix-:r16p:" aria-haspopup=3D"menu" aria-expand=
ed=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"i=
con-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2=
 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div>=
</li><li class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hi=
dden; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group =
relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-second=
ary"><a href=3D"https://chatgpt.com/c/b09db4c3-10d6-4e9d-865e-728fe774eda5"=
 class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow=
-hidden whitespace-nowrap" dir=3D"auto">Low Pass Filter =EC=84=A4=EB=AA=85<=
div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-grad=
ient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primar=
y from-token-sidebar-surface-primary group-hover:from-token-sidebar-surface=
-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-h=
over:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-cent=
er gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-cent=
er text-token-text-primary transition hover:text-token-text-secondary radix=
-state-open:text-token-text-secondary juice:text-token-text-secondary juice=
:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r16t:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D=
"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewB=
ox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 =
1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg><=
/button></span></div></div></li><li class=3D"relative" style=3D"opacity: 1;=
 height: auto; overflow: hidden; transform: none; transform-origin: 50% 50%=
 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-t=
oken-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/6e9e72fa-5=
f69-4c4d-ab22-56525e1f1b8a" class=3D"flex items-center gap-2 p-2"><div clas=
s=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=ED=8C=
=8C=EC=9D=B4=EC=8D=AC=EA=B3=BC HTML =ED=95=A9=EC=B9=98=EA=B8=B0<div class=
=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l=
 rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-to=
ken-sidebar-surface-primary group-hover:from-token-sidebar-surface-secondar=
y  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10=
"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.=
5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"flex items-center justify-center text-t=
oken-text-primary transition hover:text-token-text-secondary radix-state-op=
en:text-token-text-secondary juice:text-token-text-secondary juice:hover:te=
xt-token-text-primary" type=3D"button" id=3D"radix-:r171:" aria-haspopup=3D=
"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0=
 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd"=
 d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0=
a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button><=
/span></div></div></li><li class=3D"relative" style=3D"opacity: 1; height: =
auto; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><d=
iv class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-side=
bar-surface-secondary"><a href=3D"https://chatgpt.com/c/89a7331e-bee1-4a68-=
b80b-4b3a5f92266b" class=3D"flex items-center gap-2 p-2"><div class=3D"rela=
tive grow overflow-hidden whitespace-nowrap" dir=3D"auto">Swap In Execution=
 Time<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:b=
g-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-=
primary from-token-sidebar-surface-primary group-hover:from-token-sidebar-s=
urface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:g=
roup-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 item=
s-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span=
 class=3D"" data-state=3D"closed"><button class=3D"flex items-center justif=
y-center text-token-text-primary transition hover:text-token-text-secondary=
 radix-state-open:text-token-text-secondary juice:text-token-text-secondary=
 juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r175:" a=
ria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xm=
lns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none"=
 viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-r=
ule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path><=
/svg></button></span></div></div></li><li class=3D"relative" style=3D"opaci=
ty: 1; height: auto; overflow: hidden; transform: none; transform-origin: 5=
0% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hove=
r:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/15d8=
943a-496b-4798-a234-b5d9caa442ce" class=3D"flex items-center gap-2 p-2"><di=
v class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=
=EC=A7=80=EA=B8=88 =EB=AC=B8=EC=A0=9C =ED=95=B4=EA=B2=B0 =EC=97=AC=EB=B6=80=
.<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gr=
adient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-prim=
ary from-token-sidebar-surface-primary group-hover:from-token-sidebar-surfa=
ce-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group=
-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-ce=
nter gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-ce=
nter text-token-text-primary transition hover:text-token-text-secondary rad=
ix-state-open:text-token-text-secondary juice:text-token-text-secondary jui=
ce:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r179:" aria-=
haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0=
 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></sv=
g></button></span></div></div></li><li class=3D"relative" style=3D"opacity:=
 1; height: auto; overflow: hidden; transform: none; transform-origin: 50% =
50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:b=
g-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/1373ad6=
8-45d7-4fc8-8575-36f6e8bac121" class=3D"flex items-center gap-2 p-2"><div c=
lass=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=
=83=88 =EC=B1=84=ED=8C=85<div class=3D"absolute bottom-0 top-0 to-transpare=
nt ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-to=
ken-sidebar-surface-primary from-token-sidebar-surface-primary group-hover:=
from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-ho=
ver:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute=
 bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden gro=
up-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 items-center justify-center text-token-text-primary transition hover:text-=
token-text-secondary radix-state-open:text-token-text-secondary juice:text-=
token-text-secondary juice:hover:text-token-text-primary" type=3D"button" i=
d=3D"radix-:r17d:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-stat=
e=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"rel=
ative" style=3D"opacity: 1; height: auto; overflow: hidden; transform: none=
; transform-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg a=
ctive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https=
://chatgpt.com/c/5e50b597-9f49-4549-a3f6-4817537ef5cb" class=3D"flex items-=
center gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-no=
wrap" dir=3D"auto">=EC=9A=B0=EC=84=A0=EC=88=9C=EC=9C=84 =EC=8A=A4=EC=BC=80=
=EC=A4=84=EB=A7=81 =EA=B0=9C=EC=9A=94<div class=3D"absolute bottom-0 top-0 =
to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-=
to-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary =
group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w=
-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=
=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-=
0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex items-center justify-center text-token-text-primary transition=
 hover:text-token-text-secondary radix-state-open:text-token-text-secondary=
 juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r17h:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/11b28f01-49ed-4963-92b2-9f6ae059811f" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">TLB EAT Analysis<div class=3D"absolute bo=
ttom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl=
:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-sur=
face-primary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% =
group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div><=
/a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:righ=
t-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex items-center justify-center text-token-text-prima=
ry transition hover:text-token-text-secondary radix-state-open:text-token-t=
ext-secondary juice:text-token-text-secondary juice:hover:text-token-text-p=
rimary" type=3D"button" id=3D"radix-:r17l:" aria-haspopup=3D"menu" aria-exp=
anded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/=
svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 =
0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div><=
/div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; overflo=
w: hidden; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"g=
roup relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-s=
econdary"><a href=3D"https://chatgpt.com/c/b42656af-e5ca-4f5a-80d7-53a4822a=
9518" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow ove=
rflow-hidden whitespace-nowrap" dir=3D"auto">=ED=81=B4=EB=9E=98=EC=8A=A4=ED=
=99=94=ED=95=9C =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=A9=94=EC=9D=B8 =ED=8E=98=EC=
=9D=B4=EC=A7=80<div class=3D"absolute bottom-0 top-0 to-transparent ltr:rig=
ht-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sideba=
r-surface-primary from-token-sidebar-surface-primary group-hover:from-token=
-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-6=
0% juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 =
top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:f=
lex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-cen=
ter justify-center text-token-text-primary transition hover:text-token-text=
-secondary radix-state-open:text-token-text-secondary juice:text-token-text=
-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix=
-:r17p:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"close=
d"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fil=
l=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd=
"></path></svg></button></span></div></div></li><li class=3D"relative" styl=
e=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform=
-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opaci=
ty-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.=
com/c/1691a114-2cc2-4190-bbea-8d79261b7bf5" class=3D"flex items-center gap-=
2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=
=3D"auto">=ED=81=B4=EB=9E=98=EC=8A=A4=ED=99=94=EB=90=9C =ED=8C=8C=EC=9D=BC =
=EB=B0=8F =EB=8D=B0=EC=9D=B4=ED=84=B0 =EC=B2=98=EB=A6=AC<div class=3D"absol=
ute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left=
-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideb=
ar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 fr=
om-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div><=
/div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 lt=
r:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-primary transition hover:text-token-text-secondary radix-state-open:text=
-token-text-secondary juice:text-token-text-secondary juice:hover:text-toke=
n-text-primary" type=3D"button" id=3D"radix-:r17t:" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span><=
/div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; o=
verflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div clas=
s=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-sur=
face-secondary"><a href=3D"https://chatgpt.com/c/82129a2d-27e3-4ac6-81a6-99=
c67e3b5efc" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gr=
ow overflow-hidden whitespace-nowrap" dir=3D"auto">LXML =EC=84=A4=EC=B9=98=
=EC=99=80 =EC=82=AC=EC=9A=A9<div class=3D"absolute bottom-0 top-0 to-transp=
arent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from=
-token-sidebar-surface-primary from-token-sidebar-surface-primary group-hov=
er:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group=
-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absol=
ute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden =
group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"f=
lex items-center justify-center text-token-text-primary transition hover:te=
xt-token-text-secondary radix-state-open:text-token-text-secondary juice:te=
xt-token-text-secondary juice:hover:text-token-text-primary" type=3D"button=
" id=3D"radix-:r181:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-s=
tate=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-r=
ule=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"=
relative" style=3D"opacity: 1; height: auto; overflow: hidden; transform: n=
one; transform-origin: 50% 50% 0px;"><div class=3D"group relative rounded-l=
g active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"ht=
tps://chatgpt.com/c/d2216b6e-11f9-48dd-aec2-361c8e38e926" class=3D"flex ite=
ms-center gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace=
-nowrap" dir=3D"auto">=EC=9B=B9=ED=81=AC=EB=A1=A4=EB=A7=81 =EB=B2=95=EC=A0=
=81 =EC=A3=BC=EC=9D=98 =EC=9A=94=EC=B2=AD<div class=3D"absolute bottom-0 to=
p-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradi=
ent-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-prim=
ary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hov=
er:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div c=
lass=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:l=
eft-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex items-center justify-center text-token-text-primary transi=
tion hover:text-token-text-secondary radix-state-open:text-token-text-secon=
dary juice:text-token-text-secondary juice:hover:text-token-text-primary" t=
ype=3D"button" id=3D"radix-:r185:" aria-haspopup=3D"menu" aria-expanded=3D"=
false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 =
0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><=
li class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; =
transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relati=
ve rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><=
a href=3D"https://chatgpt.com/c/df53a605-41c9-44bf-aebc-a158a00bfc8d" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EC=83=88 =EC=B1=84=ED=8C=85<div class=3D=
"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rt=
l:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token=
-sidebar-surface-primary group-hover:from-token-sidebar-surface-secondary  =
w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"><=
/div></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 p=
r-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex items-center justify-center text-toke=
n-text-primary transition hover:text-token-text-secondary radix-state-open:=
text-token-text-secondary juice:text-token-text-secondary juice:hover:text-=
token-text-primary" type=3D"button" id=3D"radix-:r189:" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></s=
pan></div></div></li><li class=3D"relative" style=3D"opacity: 1; height: au=
to; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div=
 class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sideba=
r-surface-secondary"><a href=3D"https://chatgpt.com/c/a9cfb424-61f5-4ca0-b7=
b0-f5c3ea9982b2" class=3D"flex items-center gap-2 p-2"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto">Memory Usage by Pag=
e Tables<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 lt=
r:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surfa=
ce-primary from-token-sidebar-surface-primary group-hover:from-token-sideba=
r-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juic=
e:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 i=
tems-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex items-center jus=
tify-center text-token-text-primary transition hover:text-token-text-second=
ary radix-state-open:text-token-text-secondary juice:text-token-text-second=
ary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r18d:=
" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></pat=
h></svg></button></span></div></div></li><li class=3D"relative" style=3D"op=
acity: 1; height: auto; overflow: hidden; transform: none; transform-origin=
: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 h=
over:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/3=
e5a6406-a7dd-4991-8b52-4a38becfcffa" class=3D"flex items-center gap-2 p-2">=
<div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto"=
>Battery Info Discrepancy<div class=3D"absolute bottom-0 top-0 to-transpare=
nt ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-to=
ken-sidebar-surface-primary from-token-sidebar-surface-primary group-hover:=
from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-ho=
ver:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute=
 bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden gro=
up-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 items-center justify-center text-token-text-primary transition hover:text-=
token-text-secondary radix-state-open:text-token-text-secondary juice:text-=
token-text-secondary juice:hover:text-token-text-primary" type=3D"button" i=
d=3D"radix-:r18h:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-stat=
e=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D"rel=
ative" style=3D"opacity: 1; height: auto; overflow: hidden; transform: none=
; transform-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg a=
ctive:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https=
://chatgpt.com/c/27696067-43d1-4737-83a4-5e32268da432" class=3D"flex items-=
center gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-no=
wrap" dir=3D"auto">Paging: Logic, Pages, Program<div class=3D"absolute bott=
om-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:b=
g-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-surfa=
ce-primary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% gr=
oup-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a=
><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-=
0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center justify-center text-token-text-primary=
 transition hover:text-token-text-secondary radix-state-open:text-token-tex=
t-secondary juice:text-token-text-secondary juice:hover:text-token-text-pri=
mary" type=3D"button" id=3D"radix-:r18l:" aria-haspopup=3D"menu" aria-expan=
ded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 =
2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div=
></li><li class=3D"relative" style=3D"opacity: 1; height: auto; overflow: h=
idden; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group=
 relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secon=
dary"><a href=3D"https://chatgpt.com/c/a0881dc1-9dae-4b73-a974-2e82fae1af29=
" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflo=
w-hidden whitespace-nowrap" dir=3D"auto">=EC=9E=84=ED=8E=84=EC=8A=A4 =EC=9D=
=91=EB=8B=B5 =EC=8B=9C=EB=AE=AC=EB=A0=88=EC=9D=B4=EC=85=98 =EB=B0=A9=EB=B2=
=95=EB=A1=A0<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-=
0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-s=
urface-primary from-token-sidebar-surface-primary group-hover:from-token-si=
debar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% =
juice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top=
-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex items-center=
 justify-center text-token-text-primary transition hover:text-token-text-se=
condary radix-state-open:text-token-text-secondary juice:text-token-text-se=
condary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r=
18p:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1=
 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></li><li class=3D"relative" style=
=3D"opacity: 1; height: auto; overflow: hidden; transform: none; transform-=
origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacit=
y-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.c=
om/c/cd99ee2d-598c-46fc-a0ba-9d0417adaae2" class=3D"flex items-center gap-2=
 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D=
"auto">Pygame =EB=8B=A8=EC=96=B4 =EB=A7=9E=EC=B6=94=EA=B8=B0 =EA=B2=8C=EC=
=9E=84<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:=
bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface=
-primary from-token-sidebar-surface-primary group-hover:from-token-sidebar-=
surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:=
group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 ite=
ms-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"flex items-center justi=
fy-center text-token-text-primary transition hover:text-token-text-secondar=
y radix-state-open:text-token-text-secondary juice:text-token-text-secondar=
y juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r18t:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-=
rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2=
 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path>=
</svg></button></span></div></div></li><li class=3D"relative" style=3D"opac=
ity: 1; height: auto; overflow: hidden; transform: none; transform-origin: =
50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hov=
er:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/f66=
7bb34-fd3f-4f84-911e-c8f23d72dfc7" class=3D"flex items-center gap-2 p-2"><d=
iv class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">B=
ind =EC=98=A4=EB=A5=98 =ED=95=B4=EA=B2=B0<div class=3D"absolute bottom-0 to=
p-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradi=
ent-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-prim=
ary group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hov=
er:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div c=
lass=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:l=
eft-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex items-center justify-center text-token-text-primary transi=
tion hover:text-token-text-secondary radix-state-open:text-token-text-secon=
dary juice:text-token-text-secondary juice:hover:text-token-text-primary" t=
ype=3D"button" id=3D"radix-:r191:" aria-haspopup=3D"menu" aria-expanded=3D"=
false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 =
0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><=
li class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; =
transform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relati=
ve rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><=
a href=3D"https://chatgpt.com/c/042b36e4-8e42-4ca6-a4a5-93ce96fe2cf7" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">DCT =EA=B8=B0=EC=A0=80 =ED=95=A8=EC=88=98=
 =EC=84=A4=EB=AA=85<div class=3D"absolute bottom-0 top-0 to-transparent ltr=
:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-si=
debar-surface-primary from-token-sidebar-surface-primary group-hover:from-t=
oken-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:fr=
om-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute botto=
m-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hov=
er:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items=
-center justify-center text-token-text-primary transition hover:text-token-=
text-secondary radix-state-open:text-token-text-secondary juice:text-token-=
text-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"r=
adix-:r195:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></button></span></div></div></li><li class=3D"relative" =
style=3D"opacity: 1; height: auto; overflow: hidden; transform: none; trans=
form-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:o=
pacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chat=
gpt.com/c/ea32446f-4e12-402f-b508-a1bf9dd3b8d3" class=3D"flex items-center =
gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto">ARM CPU =ED=99=95=EC=9D=B8 =EB=B0=A9=EB=B2=95<div class=3D"abso=
lute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:lef=
t-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-side=
bar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 f=
rom-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div>=
</div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 l=
tr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-primary transition hover:text-token-text-secondary radix-state-open:text=
-token-text-secondary juice:text-token-text-secondary juice:hover:text-toke=
n-text-primary" type=3D"button" id=3D"radix-:r199:" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span><=
/div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; o=
verflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div clas=
s=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-sur=
face-secondary"><a href=3D"https://chatgpt.com/c/e4cc5f74-ec76-42c7-bee0-66=
ed87ac55f7" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gr=
ow overflow-hidden whitespace-nowrap" dir=3D"auto">WSL 2 =EC=98=A4=EB=A5=98=
 =ED=95=B4=EA=B2=B0<div class=3D"absolute bottom-0 top-0 to-transparent ltr=
:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-si=
debar-surface-primary from-token-sidebar-surface-primary group-hover:from-t=
oken-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:fr=
om-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute botto=
m-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hov=
er:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items=
-center justify-center text-token-text-primary transition hover:text-token-=
text-secondary radix-state-open:text-token-text-secondary juice:text-token-=
text-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"r=
adix-:r19d:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></button></span></div></div></li><li class=3D"relative" =
style=3D"opacity: 1; height: auto; overflow: hidden; transform: none; trans=
form-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:o=
pacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chat=
gpt.com/c/27402902-1b5b-4ba7-9363-f829c0d42ac0" class=3D"flex items-center =
gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto">=EB=A9=94=EB=AA=A8=EB=A6=AC =EB=B3=B4=ED=98=B8=EC=99=80 =EA=B4=
=80=EB=A0=A8=EB=90=9C =EB=A0=88=EC=A7=80=EC=8A=A4=ED=84=B0<div class=3D"abs=
olute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:le=
ft-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sid=
ebar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 =
from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div=
></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 =
ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex items-center justify-center text-token-te=
xt-primary transition hover:text-token-text-secondary radix-state-open:text=
-token-text-secondary juice:text-token-text-secondary juice:hover:text-toke=
n-text-primary" type=3D"button" id=3D"radix-:r19h:" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 =
1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span><=
/div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; o=
verflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div clas=
s=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-sur=
face-secondary"><a href=3D"https://chatgpt.com/c/b157f10b-62bd-46d1-8d06-7d=
2e4fadcb5d" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gr=
ow overflow-hidden whitespace-nowrap" dir=3D"auto">=EB=84=A4=ED=8A=B8=EC=9B=
=8C=ED=81=AC =EC=97=B0=EA=B2=B0 =EC=98=B5=EC=85=98 =EC=9A=94=EC=95=BD<div c=
lass=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-=
to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary fro=
m-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-seco=
ndary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:=
w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center ga=
p-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex items-center justify-center te=
xt-token-text-primary transition hover:text-token-text-secondary radix-stat=
e-open:text-token-text-secondary juice:text-token-text-secondary juice:hove=
r:text-token-text-primary" type=3D"button" id=3D"radix-:r19l:" aria-haspopu=
p=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0=
m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></butt=
on></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; heig=
ht: auto; overflow: hidden; transform: none; transform-origin: 50% 50% 0px;=
"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-token-=
sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/83fe64e0-ab10-4=
dd5-b2a7-059de6d93746" class=3D"flex items-center gap-2 p-2"><div class=3D"=
relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EB=A6=AC=EB=
=88=85=EC=8A=A4 =EC=8A=A4=EC=BC=80=EC=A4=84=EB=A7=81 =EB=B3=80=ED=99=94<div=
 class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradien=
t-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary f=
rom-token-sidebar-surface-primary group-hover:from-token-sidebar-surface-se=
condary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:group-hove=
r:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-center =
gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex items-center justify-center =
text-token-text-primary transition hover:text-token-text-secondary radix-st=
ate-open:text-token-text-secondary juice:text-token-text-secondary juice:ho=
ver:text-token-text-primary" type=3D"button" id=3D"radix-:r19p:" aria-haspo=
pup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></b=
utton></span></div></div></li><li class=3D"relative" style=3D"opacity: 1; h=
eight: auto; overflow: hidden; transform: none; transform-origin: 50% 50% 0=
px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:bg-tok=
en-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/6936f45f-92a=
8-4043-8f8f-dcb3a133f39d" class=3D"flex items-center gap-2 p-2"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">Linux Sch=
eduling Efficiency Improvement<div class=3D"absolute bottom-0 top-0 to-tran=
sparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r fr=
om-token-sidebar-surface-primary from-token-sidebar-surface-primary group-h=
over:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gro=
up-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"abs=
olute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidde=
n group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=3D=
"flex items-center justify-center text-token-text-primary transition hover:=
text-token-text-secondary radix-state-open:text-token-text-secondary juice:=
text-token-text-secondary juice:hover:text-token-text-primary" type=3D"butt=
on" id=3D"radix-:r19t:" aria-haspopup=3D"menu" aria-expanded=3D"false" data=
-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" he=
ight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fil=
l=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1=
-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-=
rule=3D"evenodd"></path></svg></button></span></div></div></li><li class=3D=
"relative" style=3D"opacity: 1; height: auto; overflow: hidden; transform: =
none; transform-origin: 50% 50% 0px;"><div class=3D"group relative rounded-=
lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"h=
ttps://chatgpt.com/c/46286fe0-25ae-4504-99e1-c64b32944156" class=3D"flex it=
ems-center gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespac=
e-nowrap" dir=3D"auto">=EC=9C=A4=EB=A6=AC=EC=A0=81 =EC=9E=90=EC=9C=A8=EC=A3=
=BC=ED=96=89 =EC=84=A0=ED=83=9D=EC=A7=80<div class=3D"absolute bottom-0 top=
-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradie=
nt-to-r from-token-sidebar-surface-primary from-token-sidebar-surface-prima=
ry group-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hove=
r:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div cl=
ass=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:le=
ft-0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"flex items-center justify-center text-token-text-primary transit=
ion hover:text-token-text-secondary radix-state-open:text-token-text-second=
ary juice:text-token-text-secondary juice:hover:text-token-text-primary" ty=
pe=3D"button" id=3D"radix-:r1a1:" aria-haspopup=3D"menu" aria-expanded=3D"f=
alse" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li><l=
i class=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; t=
ransform: none; transform-origin: 50% 50% 0px;"><div class=3D"group relativ=
e rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a=
 href=3D"https://chatgpt.com/c/eeb48a34-4d19-4e2c-8814-43a194aaa713" class=
=3D"flex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidde=
n whitespace-nowrap" dir=3D"auto">=EC=9E=90=EC=9C=A8=EC=A3=BC=ED=96=89 =EC=
=9C=A4=EB=A6=AC=EC=A0=81 =ED=95=B4=EA=B2=B0=EC=B1=85<div class=3D"absolute =
bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 r=
tl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sidebar-s=
urface-primary group-hover:from-token-sidebar-surface-secondary  w-8 from-0=
% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></div=
></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:ri=
ght-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"flex items-center justify-center text-token-text-pri=
mary transition hover:text-token-text-secondary radix-state-open:text-token=
-text-secondary juice:text-token-text-secondary juice:hover:text-token-text=
-primary" type=3D"button" id=3D"radix-:r1a5:" aria-haspopup=3D"menu" aria-e=
xpanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/200=
0/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2=
 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 =
0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></div><=
/div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; overflo=
w: hidden; transform: none; transform-origin: 50% 50% 0px;"><div class=3D"g=
roup relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surface-s=
econdary"><a href=3D"https://chatgpt.com/c/f1544e29-43cd-4b09-a321-6c46004d=
15eb" class=3D"flex items-center gap-2 p-2"><div class=3D"relative grow ove=
rflow-hidden whitespace-nowrap" dir=3D"auto">GUI =EB=8B=A8=EC=96=B4=EC=9E=
=A5 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=9E=A8 =EB=8F=84=EC=9B=80<div class=3D"ab=
solute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:l=
eft-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-si=
debar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8=
 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></di=
v></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2=
 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"flex items-center justify-center text-token-t=
ext-primary transition hover:text-token-text-secondary radix-state-open:tex=
t-token-text-secondary juice:text-token-text-secondary juice:hover:text-tok=
en-text-primary" type=3D"button" id=3D"radix-:r1a9:" aria-haspopup=3D"menu"=
 aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"=
M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span>=
</div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; =
overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div cla=
ss=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-su=
rface-secondary"><a href=3D"https://chatgpt.com/c/a74326fd-3e10-4ce1-b7c0-f=
7f4f027b09b" class=3D"flex items-center gap-2 p-2"><div class=3D"relative g=
row overflow-hidden whitespace-nowrap" dir=3D"auto">Skill Generalization in=
 ER<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-=
gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-surface-pr=
imary from-token-sidebar-surface-primary group-hover:from-token-sidebar-sur=
face-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% juice:gro=
up-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0 items-=
center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex items-center justify-=
center text-token-text-primary transition hover:text-token-text-secondary r=
adix-state-open:text-token-text-secondary juice:text-token-text-secondary j=
uice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r1ad:" ari=
a-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" v=
iewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rul=
e=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 =
0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></s=
vg></button></span></div></div></li><li class=3D"relative" style=3D"opacity=
: 1; height: auto; overflow: hidden; transform: none; transform-origin: 50%=
 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90 hover:=
bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c/707de5=
39-a68b-4e73-8130-237a4cca08b9" class=3D"flex items-center gap-2 p-2"><div =
class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=
=9D=BC=EB=B0=98=ED=99=94=EB=90=9C =EC=8A=A4=ED=82=AC ER<div class=3D"absolu=
te bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-=
0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-sideba=
r-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8 fro=
m-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></div></=
div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr=
:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex items-center justify-center text-token-text-=
primary transition hover:text-token-text-secondary radix-state-open:text-to=
ken-text-secondary juice:text-token-text-secondary juice:hover:text-token-t=
ext-primary" type=3D"button" id=3D"radix-:r1ah:" aria-haspopup=3D"menu" ari=
a-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/=
2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cl=
ass=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 1=
2a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1=
 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; over=
flow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div class=
=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-surf=
ace-secondary"><a href=3D"https://chatgpt.com/c/a9803681-f96b-4af1-a12f-83a=
7b65215bf" class=3D"flex items-center gap-2 p-2"><div class=3D"relative gro=
w overflow-hidden whitespace-nowrap" dir=3D"auto">=EC=9B=B9=ED=81=AC=EB=A1=
=A4=EB=A7=81 =ED=8C=8C=EC=9D=B4=EC=8D=AC =EC=82=AC=EC=9A=A9<div class=3D"ab=
solute bottom-0 top-0 to-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:l=
eft-0 rtl:bg-gradient-to-r from-token-sidebar-surface-primary from-token-si=
debar-surface-primary group-hover:from-token-sidebar-surface-secondary  w-8=
 from-0% group-hover:w-20 group-hover:from-60% juice:group-hover:w-10"></di=
v></div></a><div class=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2=
 ltr:right-0 rtl:left-0 hidden group-hover:flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"flex items-center justify-center text-token-t=
ext-primary transition hover:text-token-text-secondary radix-state-open:tex=
t-token-text-secondary juice:text-token-text-secondary juice:hover:text-tok=
en-text-primary" type=3D"button" id=3D"radix-:r1al:" aria-haspopup=3D"menu"=
 aria-expanded=3D"false" data-state=3D"closed"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"=
M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0=
 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></path></svg></button></span>=
</div></div></li><li class=3D"relative" style=3D"opacity: 1; height: auto; =
overflow: hidden; transform: none; transform-origin: 50% 50% 0px;"><div cla=
ss=3D"group relative rounded-lg active:opacity-90 hover:bg-token-sidebar-su=
rface-secondary"><a href=3D"https://chatgpt.com/c/2b49758f-6e23-4b00-84c4-a=
76a8cd52df4" class=3D"flex items-center gap-2 p-2"><div class=3D"relative g=
row overflow-hidden whitespace-nowrap" dir=3D"auto">Face Blur Optimization =
Techniques<div class=3D"absolute bottom-0 top-0 to-transparent ltr:right-0 =
ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-sidebar-sur=
face-primary from-token-sidebar-surface-primary group-hover:from-token-side=
bar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:from-60% ju=
ice:group-hover:w-10"></div></div></a><div class=3D"absolute bottom-0 top-0=
 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hover:flex">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex items-center j=
ustify-center text-token-text-primary transition hover:text-token-text-seco=
ndary radix-state-open:text-token-text-secondary juice:text-token-text-seco=
ndary juice:hover:text-token-text-primary" type=3D"button" id=3D"radix-:r1a=
p:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" f=
ill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4=
 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"evenodd"></p=
ath></svg></button></span></div></div></li><li class=3D"relative" style=3D"=
opacity: 1; height: auto; overflow: hidden; transform: none; transform-orig=
in: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:opacity-90=
 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chatgpt.com/c=
/9fdbbf1e-cfc9-4b75-9bb9-918f7acf6b3c" class=3D"flex items-center gap-2 p-2=
"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"aut=
o">=EC=83=88 =EC=B1=84=ED=8C=85<div class=3D"absolute bottom-0 top-0 to-tra=
nsparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r f=
rom-token-sidebar-surface-primary from-token-sidebar-surface-primary group-=
hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 gr=
oup-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=3D"ab=
solute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidd=
en group-hover:flex"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex items-center justify-center text-token-text-primary transition hov=
er:text-token-text-secondary radix-state-open:text-token-text-secondary jui=
ce:text-token-text-secondary juice:hover:text-token-text-primary" type=3D"b=
utton" id=3D"radix-:r1at:" aria-haspopup=3D"menu" aria-expanded=3D"false" d=
ata-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 =
0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" cl=
ip-rule=3D"evenodd"></path></svg></button></span></div></div></li><li class=
=3D"relative" style=3D"opacity: 1; height: auto; overflow: hidden; transfor=
m: none; transform-origin: 50% 50% 0px;"><div class=3D"group relative round=
ed-lg active:opacity-90 hover:bg-token-sidebar-surface-secondary"><a href=
=3D"https://chatgpt.com/c/76c192f6-7a04-49ca-8041-cdb49dd91562" class=3D"fl=
ex items-center gap-2 p-2"><div class=3D"relative grow overflow-hidden whit=
espace-nowrap" dir=3D"auto">=EB=8F=84=EC=9B=80 =ED=95=84=EC=9A=94=ED=95=9C=
=EA=B0=80=EC=9A=94?<div class=3D"absolute bottom-0 top-0 to-transparent ltr=
:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-to-r from-token-si=
debar-surface-primary from-token-sidebar-surface-primary group-hover:from-t=
oken-sidebar-surface-secondary  w-8 from-0% group-hover:w-20 group-hover:fr=
om-60% juice:group-hover:w-10"></div></div></a><div class=3D"absolute botto=
m-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-0 hidden group-hov=
er:flex"><span class=3D"" data-state=3D"closed"><button class=3D"flex items=
-center justify-center text-token-text-primary transition hover:text-token-=
text-secondary radix-state-open:text-token-text-secondary juice:text-token-=
text-secondary juice:hover:text-token-text-primary" type=3D"button" id=3D"r=
adix-:r1b1:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 =
2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0" clip-rule=3D"eve=
nodd"></path></svg></button></span></div></div></li><li class=3D"relative" =
style=3D"opacity: 1; height: auto; overflow: hidden; transform: none; trans=
form-origin: 50% 50% 0px;"><div class=3D"group relative rounded-lg active:o=
pacity-90 hover:bg-token-sidebar-surface-secondary"><a href=3D"https://chat=
gpt.com/c/6469f719-3c85-4177-9ed0-7172fa9b8c5a" class=3D"flex items-center =
gap-2 p-2"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto">Deer Images for Learning<div class=3D"absolute bottom-0 top-0 t=
o-transparent ltr:right-0 ltr:bg-gradient-to-l rtl:left-0 rtl:bg-gradient-t=
o-r from-token-sidebar-surface-primary from-token-sidebar-surface-primary g=
roup-hover:from-token-sidebar-surface-secondary  w-8 from-0% group-hover:w-=
20 group-hover:from-60% juice:group-hover:w-10"></div></div></a><div class=
=3D"absolute bottom-0 top-0 items-center gap-1.5 pr-2 ltr:right-0 rtl:left-=
0 hidden group-hover:flex"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex items-center justify-center text-token-text-primary transition=
 hover:text-token-text-secondary radix-state-open:text-token-text-secondary=
 juice:text-token-text-secondary juice:hover:text-token-text-primary" type=
=3D"button" id=3D"radix-:r1b5:" aria-haspopup=3D"menu" aria-expanded=3D"fal=
se" data-state=3D"closed"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M3 12a2 2 0 1 1 4 0=
 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-4 0m7 0a2 2 0 1 1 4 0 2 2 0 0 1-=
4 0" clip-rule=3D"evenodd"></path></svg></button></span></div></div></li></=
ol></div></div></div></div><div class=3D"flex flex-col pt-2 empty:hidden ju=
ice:py-2 dark:border-white/20"><a class=3D"group flex gap-2 p-2.5 text-sm c=
ursor-pointer focus:ring-0 radix-disabled:pointer-events-none radix-disable=
d:opacity-50 group items-center hover:bg-token-sidebar-surface-secondary m-=
0 rounded-lg px-2"><span class=3D"flex w-full flex-row flex-wrap-reverse ju=
stify-between"><div class=3D"flex items-center gap-2"><span class=3D"flex h=
-7 w-7 items-center justify-center rounded-full border border-token-border-=
light"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm shrink-0"><path fill=
=3D"currentColor" d=3D"M6.394 4.444c.188-.592 1.024-.592 1.212 0C8.4 8.9 9.=
1 9.6 13.556 10.394c.592.188.592 1.024 0 1.212C9.1 12.4 8.4 13.1 7.606 17.5=
56c-.188.592-1.024.592-1.212 0C5.6 13.1 4.9 12.4.444 11.606c-.592-.188-.592=
-1.024 0-1.212C4.9 9.6 5.6 8.9 6.394 4.444m8.716 9.841a.41.41 0 0 1 .78 0c.=
51 2.865.96 3.315 3.825 3.826.38.12.38.658 0 .778-2.865.511-3.315.961-3.826=
 3.826a.408.408 0 0 1-.778 0c-.511-2.865-.961-3.315-3.826-3.826a.408.408 0 =
0 1 0-.778c2.865-.511 3.315-.961 3.826-3.826Zm2.457-12.968a.454.454 0 0 1 .=
866 0C19 4.5 19.5 5 22.683 5.567a.454.454 0 0 1 0 .866C19.5 7 19 7.5 18.433=
 10.683a.454.454 0 0 1-.866 0C17 7.5 16.5 7 13.317 6.433a.454.454 0 0 1 0-.=
866C16.5 5 17 4.5 17.567 1.317"></path></svg></span><div class=3D"flex flex=
-col"><span>Team =EC=9B=8C=ED=81=AC=EC=8A=A4=ED=8E=98=EC=9D=B4=EC=8A=A4 =EC=
=B6=94=EA=B0=80</span><span class=3D"line-clamp-1 text-xs text-token-text-t=
ertiary">Team =ED=94=8C=EB=9E=9C=EC=97=90=EC=84=9C =ED=95=A8=EA=BB=98 =EC=
=9E=91=EC=97=85=ED=95=98=EC=84=B8=EC=9A=94</span></div></div></span></a></d=
iv></nav></div></div></div></div></div><div class=3D"relative flex h-full m=
ax-w-full flex-1 flex-col overflow-hidden"><main class=3D"relative h-full w=
-full flex-1 overflow-auto transition-width"><div role=3D"presentation" tab=
index=3D"0" class=3D"flex h-full flex-col focus-visible:outline-0"><div cla=
ss=3D"flex-1 overflow-hidden"><div class=3D"react-scroll-to-bottom--css-mvq=
mu-79elbk h-full"><div class=3D"react-scroll-to-bottom--css-mvqmu-1n7m0yu">=
<div style=3D"padding: 0px;"><div class=3D"flex flex-col text-sm pb-9"><div=
 class=3D"sticky top-0 juice:p-3 mb-1.5 flex items-center justify-between z=
-10 h-14 p-2 font-semibold bg-token-main-surface-primary"><div class=3D"abs=
olute start-1/2 ltr:-translate-x-1/2 rtl:translate-x-1/2"></div><div class=
=3D"flex items-center gap-2 overflow-hidden juice:gap-0"><div type=3D"butto=
n" id=3D"radix-:r1t9:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-=
state=3D"closed" class=3D"group flex cursor-pointer items-center gap-1 roun=
ded-xl py-2 px-3 text-lg font-semibold hover:bg-token-main-surface-secondar=
y radix-state-open:bg-token-main-surface-secondary juice:text-token-text-se=
condary juice:rounded-lg juice:py-1.5 overflow-hidden whitespace-nowrap"><d=
iv class=3D"juice:text-token-text-secondary">ChatGPT <span class=3D"text-to=
ken-text-secondary">4o</span></div><svg xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"i=
con-md text-token-text-tertiary"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1=
 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"ev=
enodd"></path></svg></div></div><div class=3D"flex gap-2 pr-1"><span class=
=3D"" data-state=3D"closed"><button class=3D"h-10 rounded-lg px-2.5 text-to=
ken-text-secondary focus-visible:outline-0 hover:bg-token-main-surface-seco=
ndary focus-visible:bg-token-main-surface-secondary"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0=
 24 24" class=3D"icon-xl-heavy"><path fill=3D"currentColor" fill-rule=3D"ev=
enodd" d=3D"M11.293 3.293a1 1 0 0 1 1.414 0l4 4a1 1 0 0 1-1.414 1.414L13 6.=
414V15a1 1 0 1 1-2 0V6.414L8.707 8.707a1 1 0 0 1-1.414-1.414zM4 14a1 1 0 0 =
1 1 1v3a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-3a1 1 0 1 1 2 0v3a3 3 0 0 1-3 3H6a3=
 3 0 0 1-3-3v-3a1 1 0 0 1 1-1" clip-rule=3D"evenodd"></path></svg></button>=
</span><button data-testid=3D"fruit-juice-profile" class=3D"flex h-10 w-10 =
items-center justify-center rounded-full hover:bg-token-main-surface-second=
ary focus-visible:bg-token-main-surface-secondary focus-visible:outline-0" =
type=3D"button" id=3D"radix-:r1tc:" aria-haspopup=3D"menu" aria-expanded=3D=
"false" data-state=3D"closed"><div class=3D"flex items-center justify-cente=
r overflow-hidden rounded-full"><div class=3D"relative flex"><img alt=3D"Us=
er" referrerpolicy=3D"no-referrer" loading=3D"lazy" width=3D"32" height=3D"=
32" decoding=3D"async" data-nimg=3D"1" class=3D"rounded-sm" src=3D"https://=
lh3.googleusercontent.com/a/ACg8ocKQxvDv3aYMW5-vKSjDkBaasYWjAAhvucs9UEBEizG=
R=3Ds96-c" style=3D"color: transparent;"></div></div></button></div></div><=
div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"co=
nversation-turn-2" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py=
-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:g=
ap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-a=
uthor-role=3D"user" data-message-id=3D"aaa27f1d-a571-4e5f-b686-c5e017c15896=
" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full ju=
ice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap=
-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-se=
condary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.create_widgets()

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def create_widgets(self):
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_sumoongi_image()
        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)

        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.load_level_image()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        self.level_label.tkraise()

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D50, y=3D150)
       =20
    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def start_test(self):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.place(x=3D38, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY RAND() LIMIT 20", (selected_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score_message =3D f"=EC=A0=90=EC=88=98 : {len(self.test_words) - le=
n(incorrect_words)}/{len(self.test_words)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)
       =20

    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D"Level=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=B4!")
        self.level_dropdown.place(x=3D40, y=3D80)
        self.level_label.place(x=3D60, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)
       =20
    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelExam(user_id)
    app.mainloop()

=EC=9D=B4=EA=B1=B0 =EB=82=B4 =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=
 =ED=8E=98=EC=9D=B4=EC=A7=80=EC=9D=B8=EB=8D=B0, =EB=82=B4=EA=B0=80 =EC=83=
=81 =EC=A4=91 =ED=95=98 =EB=A1=9C =EC=8B=9C=ED=97=98 =EC=84=A0=ED=83=9D=EC=
=9D=84 =ED=95=A0 =EC=88=98 =EC=9E=88=EA=B2=8C =ED=96=88=EC=9E=96=EC=95=84? =
=EC=9D=B4=EA=B1=B0 =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=
=EC=97=90=EC=84=9C user table=EC=97=90=EC=84=9C =EC=A7=80=EA=B8=88 =EC=9C=
=A0=EC=A0=80=EC=97=90 =EB=8C=80=ED=95=9C level=EA=B0=92=EC=9D=84 =EA=B2=80=
=EC=83=89=ED=95=B4=EC=84=9C =EB=A7=8C=EC=95=BD level=EC=9D=B4 400=EB=AF=B8=
=EB=A7=8C=EC=9D=B4=EB=A9=B4 =ED=95=98 =EB=A0=88=EB=B2=A8=EB=A7=8C =EC=84=A0=
=ED=83=9D=ED=95=A0=EC=88=98=EC=9E=88=EA=B2=8C =ED=95=B4=EC=A3=BC=EA=B3=A0, =
400=EC=9D=B4=EC=83=81 700=EB=AF=B8=EB=A7=8C=EC=9D=B4=EB=A9=B4 =ED=95=98, =
=EC=A4=91 =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=A0=EC=88=98=
=EC=9E=88=EA=B2=8C, =EB=A7=8C=EC=95=BD 700 =EC=9D=B4=EC=83=81=EC=9D=B4=EB=
=A9=B4 =EA=B7=B8=EB=95=8C=EB=B6=80=ED=84=B0=EB=8A=94 =ED=95=98 =EC=A4=91 =
=EC=83=81 =EB=AA=A8=EB=93=A0 =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=A0 =EC=88=98 =EC=9E=88=EA=B2=8C =EC=A0=9C=ED=95=9C=ED=95=B4=EC=A4=98=
<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 g=
roup-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed">=
<button class=3D"flex h-9 w-9 items-center justify-center rounded-full text=
-token-text-secondary transition hover:bg-token-main-surface-tertiary"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.=
094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 =
5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 =
3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 =
2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></spa=
n></div></div></div></div></div></div></div></div></div></div><div class=3D=
"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-t=
urn-3" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3=
 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto fl=
ex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-=
[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relativ=
e items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-=
avatar flex h-6 w-6 items-center justify-center overflow-hidden rounded-ful=
l juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-cen=
ter justify-center bg-token-main-surface-primary text-token-text-primary h-=
8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"assistant" data-message-id=3D"f40e3c70-6c65-4df1-9400-72fe8c764168=
" dir=3D"auto" class=3D"text-message flex flex-col items-start whitespace-p=
re-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end=
 overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empt=
y:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-wo=
rds dark:prose-invert light"><p>=ED=98=84=EC=9E=AC =EC=BD=94=EB=93=9C=EC=97=
=90=EC=84=9C =EC=82=AC=EC=9A=A9=EC=9E=90=EA=B0=80 =EC=84=A0=ED=83=9D=ED=95=
=A0 =EC=88=98 =EC=9E=88=EB=8A=94 =EB=A0=88=EB=B2=A8=EC=9D=84 =EB=8D=B0=EC=
=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=9D=98 <code>user</code> =ED=
=85=8C=EC=9D=B4=EB=B8=94=EC=97=90 =EC=A0=80=EC=9E=A5=EB=90=9C <code>level</=
code> =EA=B0=92=EC=9D=84 =EA=B8=B0=EB=B0=98=EC=9C=BC=EB=A1=9C =EC=A0=9C=ED=
=95=9C=ED=95=98=EB=8A=94 =EA=B8=B0=EB=8A=A5=EC=9D=84 =EC=B6=94=EA=B0=80=ED=
=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4 =EA=B8=B0=EB=8A=A5=EC=
=9D=80 =EC=82=AC=EC=9A=A9=EC=9E=90=EA=B0=80 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=
=9E=A8=EC=9D=84 =EC=8B=A4=ED=96=89=ED=95=A0 =EB=95=8C =EB=8D=B0=EC=9D=B4=ED=
=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =ED=98=84=EC=9E=AC =EC=
=9C=A0=EC=A0=80=EC=9D=98 =EB=A0=88=EB=B2=A8=EC=9D=84 =EA=B0=80=EC=A0=B8=EC=
=99=80=EC=84=9C =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=95=
=84=EB=9E=98=EB=8A=94 =EC=9D=B4=EB=9F=AC=ED=95=9C =EA=B8=B0=EB=8A=A5=EC=9D=
=84 =EC=B6=94=EA=B0=80=ED=95=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=
=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] borde=
r-token-border-medium"><div class=3D"flex items-center relative text-token-=
text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans =
justify-between rounded-t-md"><span>python</span><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 i=
tems-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 =
3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 =
2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1=
 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=
=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></s=
pan></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as</sp=
an> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE user_id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_sumoongi_image()
        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.load_level_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        self.level_label.tkraise()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)
       =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EB=B3=80=EA=B2=BD=EB=90=9C =EC=BD=94=
=EB=93=9C=EC=97=90=EC=84=9C=EB=8A=94 <code>get_user_level</code> =EB=A9=94=
=EC=84=9C=EB=93=9C=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC =EB=8D=B0=
=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =ED=98=84=
=EC=9E=AC =EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =EB=A0=88=EB=B2=A8=EC=9D=84 =
=EA=B0=80=EC=A0=B8=EC=98=B5=EB=8B=88=EB=8B=A4. =EA=B7=B8=EB=A6=AC=EA=B3=A0 =
<code>configure_level_options</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =
=EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9C=A0=EC=A0=80 =EB=A0=88=EB=B2=A8=
=EC=97=90 =EB=94=B0=EB=9D=BC =EC=84=A0=ED=83=9D =EA=B0=80=EB=8A=A5=ED=95=9C=
 =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.=
</p><p><strong>Q1:</strong> How can I further optimize the database query t=
o make it more efficient?
<strong>Q2:</strong> What additional features could be added to the level s=
election process to improve user experience?
<strong>Q3:</strong> How can I improve error handling in this application t=
o make it more robust?</p></div></div></div></div><div class=3D"mt-1 flex g=
ap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rou=
nded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border =
md:border-token-border-light md:hidden"><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C=
6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.0=
0005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2=
629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3=
.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.4=
03 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319=
 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019=
 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9=
996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185=
 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16=
.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.60=
64 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665Z=
M15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18=
593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385=
 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15=
.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.000=
1C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8=
.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button=
></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg =
text-token-text-secondary hover:bg-token-main-surface-secondary"><span clas=
s=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
</span></button></span><div class=3D"flex"><span class=3D"" data-state=3D"c=
losed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token=
-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725=
 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.=
36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921=
 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045=
C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 =
15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.00=
45 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65=
574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 =
13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6=
661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258=
 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.=
0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.00=
45 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fil=
l=3D"currentColor"></path></svg></span></button></span></div><span class=3D=
"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1tj:" aria-h=
aspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cur=
sor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-tok=
en-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-=
0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.=
4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943=
a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.2=
96a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306=
-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-=
1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0=
 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.=
47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229=
 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1=
.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.16=
5 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.9=
98c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 =
1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187=
-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.1=
92-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line=
-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</=
span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quatern=
ary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 =
1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-=
1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></=
button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></d=
iv></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"a=
uto" data-testid=3D"conversation-turn-4" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa292e4-16fd-4b=
c3-a026-5e11eb562973" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 1967, in __call__
    return self.func(*args)
           ^^^^^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\UserMainPage.py", =
line 217, in SwitchToLevelExam
    app =3D LevelExam(self.userID)
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\UserExamLevelPage.=
py", line 24, in __init__
    self.create_widgets()
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\UserExamLevelPage.=
py", line 52, in create_widgets
    self.back_button =3D self.create_image_button(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\UserExamLevelPage.=
py", line 141, in create_image_button
    normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\site-packages\PIL\ImageTk.py", line 126, in __init__
    self.__photo =3D tkinter.PhotoImage(**kw)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 4146, in __init__
    Image.__init__(self, 'photo', name, cnf, master, **kw)
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 4083, in __init__
    master =3D _get_default_root('create image')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 319, in _get_default_root
    raise RuntimeError(f"Too early to {what}: no default root window")
RuntimeError: Too early to create image: no default root window
Exception ignored in: &lt;function PhotoImage.__del__ at 0x0000015B4D936840=
&gt;
Traceback (most recent call last):
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\site-packages\PIL\ImageTk.py", line 132, in __del__
    name =3D self.__photo.name
           ^^^^^^^^^^^^
AttributeError: 'PhotoImage' object has no attribute '_PhotoImage__photo'<d=
iv class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 gro=
up-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex h-9 w-9 items-center justify-center rounded-full text-t=
oken-text-secondary transition hover:bg-token-main-surface-tertiary"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-=
rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.09=
4 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 =
0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.=
355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.=
536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span>=
</div></div></div></div></div></div></div></div></div></div><div class=3D"w=
-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tur=
n-5" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 t=
ext-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex=
 flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[4=
0rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative =
items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-av=
atar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full =
juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-cente=
r justify-center bg-token-main-surface-primary text-token-text-primary h-8 =
w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"assistant" data-message-id=3D"8b87493d-6fb9-45bb-b85d-c21b575c05e5=
" dir=3D"auto" class=3D"text-message flex flex-col items-start whitespace-p=
re-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end=
 overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empt=
y:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-wo=
rds dark:prose-invert light"><p>=EC=9D=B4 =EC=98=A4=EB=A5=98=EB=8A=94 <code=
>ImageTk.PhotoImage</code> =EA=B0=9D=EC=B2=B4=EB=A5=BC =EC=83=9D=EC=84=B1=
=ED=95=98=EB=A0=A4 =ED=95=A0 =EB=95=8C, =EA=B8=B0=EB=B3=B8 Tkinter =EB=A3=
=A8=ED=8A=B8 =EC=9C=88=EB=8F=84=EC=9A=B0=EA=B0=80 =EC=95=84=EC=A7=81 =EC=83=
=9D=EC=84=B1=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EA=B8=B0 =EB=95=8C=EB=AC=
=B8=EC=97=90 =EB=B0=9C=EC=83=9D=ED=95=98=EB=8A=94 =EB=AC=B8=EC=A0=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=98=EA=B8=
=B0 =EC=9C=84=ED=95=B4=EC=84=9C=EB=8A=94 Tkinter =EB=A3=A8=ED=8A=B8 =EC=9C=
=88=EB=8F=84=EC=9A=B0=EA=B0=80 =EC=83=9D=EC=84=B1=EB=90=9C =ED=9B=84=EC=97=
=90 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=98=EB=8A=
=94 =EC=9E=91=EC=97=85=EC=9D=B4 =EC=9D=B4=EB=A3=A8=EC=96=B4=EC=A7=80=EB=8F=
=84=EB=A1=9D =ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=A8=
=BC=EC=A0=80, =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=
=98=EB=8A=94 =EC=BD=94=EB=93=9C=EA=B0=80 =EB=A3=A8=ED=8A=B8 =EC=9C=88=EB=8F=
=84=EC=9A=B0=EA=B0=80 =EC=83=9D=EC=84=B1=EB=90=9C =ED=9B=84=EC=97=90 =EC=8B=
=A4=ED=96=89=EB=90=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=95=98=EA=B2=
=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EA=B7=B8=EB=A6=AC=EA=B3=A0 =EC=9D=B4=EB=AF=
=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=
=9C=EA=B0=80 =EC=83=9D=EC=84=B1=EC=9E=90 =EB=A9=94=EC=84=9C=EB=93=9C =EB=82=
=B4=EC=97=90=EC=84=9C =EC=A7=81=EC=A0=91 =ED=98=B8=EC=B6=9C=EB=90=98=EC=A7=
=80 =EC=95=8A=EB=8F=84=EB=A1=9D =EB=B6=84=EB=A6=AC=ED=95=98=EA=B2=A0=EC=8A=
=B5=EB=8B=88=EB=8B=A4.</p><p>=EC=95=84=EB=9E=98=EB=8A=94 =EC=88=98=EC=A0=95=
=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">import</spa=
n> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE user_id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(<span class=3D"hljs-number">0</span>, self.load_images) =
 <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=
=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=
=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</span>
        self.level_label.tkraise()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)
       =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EC=9D=B4=
=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EC=9E=91=EC=97=85=EC=9D=84 <code>sel=
f.after(0, self.load_images)</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =
=ED=86=B5=ED=95=B4 Tkinter =EC=9C=88=EB=8F=84=EC=9A=B0=EA=B0=80 =EC=B4=88=
=EA=B8=B0=ED=99=94=EB=90=9C =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=AC=ED=95=98=
=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =ED=86=
=B5=ED=95=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EC=8B=9C =EB=
=A3=A8=ED=8A=B8 =EC=9C=88=EB=8F=84=EC=9A=B0=EA=B0=80 =EC=95=84=EC=A7=81 =EC=
=83=9D=EC=84=B1=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=84 =EB=B0=9C=EC=83=9D=ED=
=95=98=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=A9=EB=
=8B=88=EB=8B=A4.</p><p><strong>Q1:</strong> How can I further optimize the =
database query to make it more efficient?
<strong>Q2:</strong> What additional features could be added to the level s=
election process to improve user experience?
<strong>Q3:</strong> How can I improve error handling in this application t=
o make it more robust?</p></div></div></div></div><div class=3D"mt-1 flex g=
ap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rou=
nded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border =
md:border-token-border-light md:hidden"><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C=
6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.0=
0005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2=
629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3=
.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.4=
03 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319=
 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019=
 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9=
996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185=
 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16=
.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.60=
64 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665Z=
M15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18=
593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385=
 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15=
.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.000=
1C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8=
.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button=
></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg =
text-token-text-secondary hover:bg-token-main-surface-secondary"><span clas=
s=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
</span></button></span><div class=3D"flex"><span class=3D"" data-state=3D"c=
losed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token=
-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725=
 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.=
36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921=
 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045=
C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 =
15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.00=
45 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65=
574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 =
13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6=
661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258=
 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.=
0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.00=
45 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fil=
l=3D"currentColor"></path></svg></span></button></span></div><span class=3D=
"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1tr:" aria-h=
aspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cur=
sor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-tok=
en-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-=
0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.=
4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943=
a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.2=
96a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306=
-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-=
1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0=
 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.=
47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229=
 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1=
.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.16=
5 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.9=
98c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 =
1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187=
-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.1=
92-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line=
-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</=
span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quatern=
ary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 =
1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-=
1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></=
button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></d=
iv></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"a=
uto" data-testid=3D"conversation-turn-6" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa25fd1-dbba-47=
80-88c7-ee997045f5c1" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"flex w-[70%] flex-row items-center justify-end gap-1"><div class=3D=
"overflow-hidden rounded-lg w-full h-full max-w-96 max-h-64"><div class=3D"=
relative flex h-auto w-full max-w-lg items-center justify-center overflow-h=
idden bg-token-main-surface-secondary text-token-text-tertiary"><button typ=
e=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-controls=
=3D"radix-:r2gk:" data-state=3D"closed" class=3D"overflow-hidden rounded-lg=
 w-full h-full max-w-96 max-h-64"><img alt=3D"=EC=97=85=EB=A1=9C=EB=93=9C=
=ED=95=9C =EC=9D=B4=EB=AF=B8=EC=A7=80" loading=3D"lazy" width=3D"928" heigh=
t=3D"380" decoding=3D"async" data-nimg=3D"1" class=3D"max-w-full object-cov=
er object-center overflow-hidden rounded-lg w-full h-full max-w-96 max-h-64=
 transition-opacity duration-300 opacity-100" src=3D"https://files.oaiuserc=
ontent.com/file-PQn0Eq036RO1hZ8mI7vh2M4j?se=3D2024-05-28T03%3A10%3A45Z&amp;=
sp=3Dr&amp;sv=3D2023-11-03&amp;sr=3Db&amp;rscc=3Dmax-age%3D299%2C%20immutab=
le&amp;rscd=3Dattachment%3B%20filename%3Dimage.png&amp;sig=3D8T4KlRpiSkPGWe=
60xjipGwb2GaPV5NenGpwzv4tiKcI%3D" style=3D"color: transparent;"></button></=
div></div></div><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4]=
 px-5 py-2.5 dark:bg-token-main-surface-secondary rounded-tr-lg">=EC=9D=B4 =
=EC=97=90=EB=9F=AC=EC=B0=BD=EC=9D=B4 =EB=82=98=EC=98=B4</div></div></div></=
div></div></div></div></div></div><div class=3D"w-full text-token-text-prim=
ary" dir=3D"auto" data-testid=3D"conversation-turn-7" data-scroll-anchor=3D=
"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md=
:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base ju=
ice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"c84a52ca-6273-4281-a755-11d09fcfea0e" dir=3D"auto" class=3D"min-=
h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-w=
ords [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-aut=
o gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:=
first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-=
invert light"><p>=EC=97=90=EB=9F=AC =EB=A9=94=EC=8B=9C=EC=A7=80=EC=97=90 =
=EB=94=B0=EB=A5=B4=EB=A9=B4 <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=
=EC=97=90=EC=84=9C <code>user_id</code> =EC=BB=AC=EB=9F=BC=EC=9D=84 =EC=B0=
=BE=EC=9D=84 =EC=88=98 =EC=97=86=EB=8B=A4=EB=8A=94 =EB=AC=B8=EC=A0=9C=EA=B0=
=80 =EB=B0=9C=EC=83=9D=ED=95=98=EA=B3=A0 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =EC=9D=B4=EB=8A=94 <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=97=
=90 <code>user_id</code>=EB=9D=BC=EB=8A=94 =EC=BB=AC=EB=9F=BC=EC=9D=B4 =EC=
=A1=B4=EC=9E=AC=ED=95=98=EC=A7=80 =EC=95=8A=EA=B8=B0 =EB=95=8C=EB=AC=B8=EC=
=9D=BC =EA=B0=80=EB=8A=A5=EC=84=B1=EC=9D=B4 =EB=86=92=EC=8A=B5=EB=8B=88=EB=
=8B=A4. =EC=8B=A4=EC=A0=9C =ED=85=8C=EC=9D=B4=EB=B8=94 =EA=B5=AC=EC=A1=B0=
=EB=A5=BC =ED=99=95=EC=9D=B8=ED=95=98=EC=97=AC =EC=A0=81=EC=A0=88=ED=95=9C =
=EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=B4=
=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=ED=85=8C=EC=9D=B4=EB=B8=94=EC=
=9D=98 =EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=B4 <code>user_id</code>=
=EA=B0=80 =EC=95=84=EB=8B=8C =EA=B2=BD=EC=9A=B0, =EC=98=AC=EB=B0=94=EB=A5=
=B8 =EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=
=98=EB=8F=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=
=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EB=A7=8C=EC=95=BD =EB=8D=B0=EC=
=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90 =EC=A0=91=EA=B7=BC=ED=
=95=A0 =EC=88=98 =EC=9E=88=EB=8B=A4=EB=A9=B4, =ED=85=8C=EC=9D=B4=EB=B8=94 =
=EA=B5=AC=EC=A1=B0=EB=A5=BC =ED=99=95=EC=9D=B8=ED=95=98=EC=97=AC =EC=98=AC=
=EB=B0=94=EB=A5=B8 =EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=84 =EC=B0=BE=
=EC=95=84=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=98=88=EB=A5=BC =
=EB=93=A4=EC=96=B4, <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=97=90=
=EC=84=9C =EC=9C=A0=EC=A0=80=EB=A5=BC =EC=8B=9D=EB=B3=84=ED=95=98=EB=8A=94 =
=EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=B4 <code>id</code>=EB=9D=BC=EB=
=A9=B4, =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=B4 =EC=BF=BC=EB=A6=AC=
=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px]=
 border-token-border-medium"><div class=3D"flex items-center relative text-=
token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font=
-sans justify-between rounded-t-md"><span>python</span><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex g=
ap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" h=
eight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fi=
ll=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0=
 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h=
2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM=
5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-r=
ule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button>=
</span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" d=
ir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_">get_user_=
level</span>(<span class=3D"hljs-params">self</span>):
    <span class=3D"hljs-keyword">try</span>:
        cursor =3D self.connection.cursor()
        query =3D <span class=3D"hljs-string">"SELECT level FROM user WHERE=
 id =3D %s"</span>  <span class=3D"hljs-comment"># =EC=88=98=EC=A0=95=EB=90=
=9C =EB=B6=80=EB=B6=84</span>
        cursor.execute(query, (self.user,))
        result =3D cursor.fetchone()
        cursor.close()
        <span class=3D"hljs-keyword">return</span> result[<span class=3D"hl=
js-number">0</span>] <span class=3D"hljs-keyword">if</span> result <span cl=
ass=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
    <span class=3D"hljs-keyword">except</span> mysql.connector.Error <span =
class=3D"hljs-keyword">as</span> err:
        messagebox.showerror(<span class=3D"hljs-string">"Database Query Er=
ror"</span>, <span class=3D"hljs-string">f"An error occurred: <span class=
=3D"hljs-subst">{err}</span>"</span>)
        self.destroy()
</code></div></div></pre><p>=EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=
=EC=8A=A4=EC=97=90=EC=84=9C <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=
=EC=9D=98 =EA=B5=AC=EC=A1=B0=EB=A5=BC =EC=95=8C=EC=A7=80 =EB=AA=BB=ED=95=98=
=EB=8A=94 =EA=B2=BD=EC=9A=B0, =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=
=B4 =ED=85=8C=EC=9D=B4=EB=B8=94 =EA=B5=AC=EC=A1=B0=EB=A5=BC =ED=99=95=EC=9D=
=B8=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><pre><div c=
lass=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medi=
um"><div class=3D"flex items-center relative text-token-text-secondary bg-t=
oken-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rou=
nded-t-md"><span>python</span><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-=
2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5=
h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 =
0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path><=
/svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div =
class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">def<=
/span> <span class=3D"hljs-title function_">check_user_table_structure</spa=
n>(<span class=3D"hljs-params">self</span>):
    <span class=3D"hljs-keyword">try</span>:
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"DESCRIBE user"</span>)
        result =3D cursor.fetchall()
        cursor.close()
        <span class=3D"hljs-keyword">return</span> result
    <span class=3D"hljs-keyword">except</span> mysql.connector.Error <span =
class=3D"hljs-keyword">as</span> err:
        messagebox.showerror(<span class=3D"hljs-string">"Database Query Er=
ror"</span>, <span class=3D"hljs-string">f"An error occurred: <span class=
=3D"hljs-subst">{err}</span>"</span>)
        self.destroy()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=82=AC=
=EC=9A=A9=ED=95=98=EC=97=AC =ED=85=8C=EC=9D=B4=EB=B8=94=EC=9D=98 =EA=B5=AC=
=EC=A1=B0=EB=A5=BC =ED=99=95=EC=9D=B8=ED=95=9C =ED=9B=84, =EC=98=AC=EB=B0=
=94=EB=A5=B8 =EC=BB=AC=EB=9F=BC =EC=9D=B4=EB=A6=84=EC=9D=84 =EC=82=AC=EC=9A=
=A9=ED=95=98=EB=8F=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=
=95=ED=95=98=EC=84=B8=EC=9A=94.</p><p>=EC=9C=84=EC=9D=98 =EB=B0=A9=EB=B2=95=
=EC=9D=84 =ED=86=B5=ED=95=B4 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=
=ED=95=B4 =EB=B3=B4=EC=8B=9C=EA=B3=A0, =ED=95=84=EC=9A=94=ED=95=9C =EA=B2=
=BD=EC=9A=B0 =EC=B6=94=EA=B0=80=EC=A0=81=EC=9C=BC=EB=A1=9C =EB=8F=84=EC=9B=
=80=EC=9D=84 =EC=9A=94=EC=B2=AD=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94.</p></=
div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-=
3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-to=
ken-main-surface-primary md:absolute md:border md:border-token-border-light=
 md:hidden"><div class=3D"flex items-center"><span class=3D"" data-state=3D=
"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-tok=
en-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-cent=
er justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 =
10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00=
005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16=
 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 =
19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.=
73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 1=
8H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5=
.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6=
725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 =
22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.=
5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.999=
6 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C1=
9.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.56=
88 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 =
12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.=
5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637=
C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10=
.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fil=
l=3D"currentColor"></path></svg></span></button></span><span class=3D"" dat=
a-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary ho=
ver:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] =
items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md=
-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0=
 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-=
9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9=
a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 =
0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><div cl=
ass=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounde=
d-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span=
 class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.88=
05 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L=
7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.9475=
3C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.=
0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 1=
5.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367=
 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 =
13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.053=
6 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10=
.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.19=
02V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9=
444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.004=
5 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></sv=
g></span></button></span></div><span class=3D"" data-state=3D"closed"><butt=
on type=3D"button" id=3D"radix-:r1u3:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 te=
xt-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><di=
v class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h=
-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><pa=
th fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44=
 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119=
 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038=
.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.=
055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path=
 fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 =
4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747=
.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1=
.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2=
.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179=
-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 =
2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87=
 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1=
.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2=
.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opa=
city: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.29=
3-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414=
" clip-rule=3D"evenodd"></path></svg></div></button></span></div></div></di=
v><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div clas=
s=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversati=
on-turn-8" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] =
px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-aut=
o flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:ma=
x-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relativ=
e flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa246c7-f0c5-4220-a6cb-7296785fd297" dir=3D"a=
uto" class=3D"min-h-[20px] text-message flex flex-col items-start whitespac=
e-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-=
end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:e=
mpty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] r=
ounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">i=
mport tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def get_user_level(self):
        try:
            cursor =3D self.connection.cursor()
            query =3D "SELECT level FROM user WHERE id =3D %s"  # =EC=88=98=
=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            return result[0] if result else 0
        except mysql.connector.Error as err:
            messagebox.showerror("Database Query Error", f"An error occurre=
d: {err}")
            self.destroy()


    def create_widgets(self):
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D"readonly", font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)

        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(0, self.load_images)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=
=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=
=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.
        self.level_label.tkraise()

    def configure_level_options(self):
        if self.user_level &lt; 400:
            self.level_dropdown.config(values=3D["=ED=95=98"])
            self.level_var.set("=ED=95=98")
        elif self.user_level &lt; 700:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91"])
            self.level_var.set("=ED=95=98")
        else:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91", =
"=EC=83=81"])
            self.level_var.set("=ED=95=98")

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D50, y=3D150)
       =20
    def load_images(self):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def start_test(self):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.place(x=3D38, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY RAND() LIMIT 20", (selected_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score_message =3D f"=EC=A0=90=EC=88=98 : {len(self.test_words) - le=
n(incorrect_words)}/{len(self.test_words)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)
       =20

    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D"Level=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=B4!")
        self.level_dropdown.place(x=3D40, y=3D80)
        self.level_label.place(x=3D60, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)
       =20
    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelExam(user_id)
    app.mainloop()

=EA=B7=B8 level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4! =EB=9D=BC=EB=B2=A8=EC=
=9D=B4=EB=9E=91, ~~=EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D!, ~~=EB=
=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4! =EB=9D=BC=EB=
=B2=A8=EB=93=A4=EC=9D=B4 =EC=95=88=EB=82=98=EC=99=80<div class=3D"absolute =
bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation=
-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h=
-9 w-9 items-center justify-center rounded-full text-token-text-secondary t=
ransition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3=
.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 2=
4" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9=
 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13=
 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.6=
28-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586=
z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></div></d=
iv></div></div></div></div></div></div><div class=3D"w-full text-token-text=
-primary" dir=3D"auto" data-testid=3D"conversation-turn-9" data-scroll-anch=
or=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-au=
to md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-ba=
se juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem=
]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div =
class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 ite=
ms-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8">=
<div class=3D"relative p-1 rounded-sm flex items-center justify-center bg-t=
oken-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41=
" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">=
ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 3=
7.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.834=
04 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.=
85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.72=
49 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.422=
14C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8=
.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.95646=
4 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.544=
9 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.=
7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321=
 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17=
.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.49=
98C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 =
35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.1=
15 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 4=
0.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.=
8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666=
 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3=
813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213=
 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.98=
42 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 3=
5.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5=
1397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.081=
8 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.=
902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24=
.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.08=
93 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 =
34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.=
17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.52=
28 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8=
.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.49=
79C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 =
28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55=
289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556=
L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12=
.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.99=
67 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37=
.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.30=
86 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 =
30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.33=
48 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 1=
4.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.450=
4 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V1=
1.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1=
048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376=
 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.=
40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.30=
55 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763=
 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10=
.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.426=
59 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3=
.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.86=
68 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C=
14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.=
9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985=
V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex fle=
x-grow flex-col max-w-full"><div data-message-author-role=3D"assistant" dat=
a-message-id=3D"2d750c9e-ef3c-4690-b303-66c65c1bf850" dir=3D"auto" class=3D=
"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap br=
eak-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-=
x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden j=
uice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:p=
rose-invert light"><p>=EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EC=A7=
=80 =EC=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=8A=94 =EC=9C=84=EC=A0=AF=EB=93=
=A4=EC=9D=B4 =EB=8B=A4=EB=A5=B8 =EC=9C=84=EC=A0=AF=EC=97=90 =EC=9D=98=ED=95=
=B4 =EA=B0=80=EB=A0=A4=EC=A7=80=EA=B1=B0=EB=82=98 =EB=A0=88=EC=9D=B4=EC=95=
=84=EC=9B=83 =EB=B0=B0=EC=B9=98=EA=B0=80 =EC=9E=98=EB=AA=BB=EB=90=9C =EA=B2=
=BD=EC=9A=B0 =EB=B0=9C=EC=83=9D=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. =EC=9D=B4 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=
=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =EB=9D=BC=EB=B2=A8=EC=9D=98 =EB=A0=88=EC=
=9D=B4=EC=95=84=EC=9B=83=EC=9D=84 =ED=99=95=EC=9D=B8=ED=95=98=EA=B3=A0 =EB=
=B0=B0=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EB=9D=BC=EB=B2=A8 =EB=
=B0=B0=EC=B9=98=EC=99=80 =EA=B4=80=EB=A0=A8=EB=90=9C =EC=BD=94=EB=93=9C=EB=
=A5=BC =EC=88=98=EC=A0=95=ED=95=9C =EB=B6=80=EB=B6=84=EC=9E=85=EB=8B=88=EB=
=8B=A4. =EB=98=90=ED=95=9C, =EC=9D=BC=EB=B6=80 =EC=BD=94=EB=93=9C=EB=A5=BC =
=EA=B0=84=EA=B2=B0=ED=95=98=EA=B2=8C =EC=A0=95=EB=A6=AC=ED=96=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-key=
word">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 flex"><div class=3D"z-10 flex items-center justify-center rounde=
d-lg text-token-text-secondary"><button class=3D"flex h-[30px] w-[30px] ite=
ms-center justify-center rounded-md hover:bg-token-main-surface-secondary d=
isabled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M14.707 5.293a1 1 0 0 1 0 1.414L9.414 12l5.293 5.293a1 1 0 0 1-1.4=
14 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0" clip-rule=3D"evenodd=
"></path></svg></button><div class=3D"px-0.5 text-sm font-semibold tabular-=
nums">2/2</div><button disabled=3D"" class=3D"flex h-[30px] w-[30px] items-=
center justify-center rounded-md hover:bg-token-main-surface-secondary disa=
bled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd"=
 d=3D"M9.293 18.707a1 1 0 0 1 0-1.414L14.586 12 9.293 6.707a1 1 0 0 1 1.414=
-1.414l6 6a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414 0" clip-rule=3D"evenodd">=
</path></svg></button></div><div class=3D"flex items-center md:invisible"><=
span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-toke=
n-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex=
 h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd=
" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372=
C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.=
00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.=
2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 =
3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.=
403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.3431=
9 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.801=
9 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.=
9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.618=
5 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 1=
6.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6=
064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665=
ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.1=
8593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.438=
5 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 1=
5.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.00=
01C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 =
8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></butto=
n></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg=
 text-token-text-secondary hover:bg-token-main-surface-secondary"><span cla=
ss=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"htt=
p://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rul=
e=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a=
3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1=
 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 =
0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg=
></span></button></span><div class=3D"flex"><span class=3D"" data-state=3D"=
closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-toke=
n-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-cente=
r justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.672=
5 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6=
.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.492=
1 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.004=
5C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045=
 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0=
045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.6=
5574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089=
 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.=
6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.825=
8 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17=
.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0=
045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fi=
ll=3D"currentColor"></path></svg></span></button></span></div><span class=
=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1ub:" ari=
a-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"=
cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-=
token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:=
pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.85=
5a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.30=
6.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.9=
3 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 =
2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-=
.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a=
1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.0=
95 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-=
2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.=
095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779=
-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725=
 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1=
.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-=
1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.08=
1 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D=
"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;"=
>4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"=
24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-qu=
aternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.2=
93a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0=
 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></d=
iv></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></di=
v></div></div></div></div><div class=3D"w-full text-token-text-primary" dir=
=3D"auto" data-testid=3D"conversation-turn-10" data-scroll-anchor=3D"false"=
><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 l=
g:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap=
-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div clas=
s=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa26cf4-f=
416-4bdb-b4b7-c616034c99e7" dir=3D"auto" class=3D"min-h-[20px] text-message=
 flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&=
amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=
=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start=
"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 d=
ark:bg-token-main-surface-secondary">=EC=88=98=EC=A0=95<div class=3D"absolu=
te bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversat=
ion-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"fle=
x h-9 w-9 items-center justify-center rounded-full text-token-text-secondar=
y transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 =
8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713z=
M13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 =
1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.=
586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></div>=
</div></div></div></div></div></div></div><div class=3D"w-full text-token-t=
ext-primary" dir=3D"auto" data-testid=3D"conversation-turn-11" data-scroll-=
anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 =
m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 tex=
t-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[4=
8rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><=
div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6=
 items-center justify-center overflow-hidden rounded-full juice:h-8 juice:w=
-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-center =
bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg width=
=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-=
9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.=
0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126=
 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8=
215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575=
 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614=
 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.9=
8686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0=
.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 =
22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.959=
51 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8=
.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2=
107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946=
 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31=
.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.82=
1C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.=
6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.49=
78 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 1=
7.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.13=
7 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L2=
9.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052=
 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.=
7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.00=
64C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 =
26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.35=
32 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9=
979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988=
 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10=
.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6=
194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491=
 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.=
4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206=
 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15=
.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.223=
5 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 2=
0.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6=
531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364=
C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.=
849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103=
 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32=
.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319=
 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.=
1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 =
26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.=
8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.922=
5 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6=
.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3=
723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095=
 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 1=
9.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6=
071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377=
 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.=
6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215=
 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10=
.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.0=
71 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 2=
2.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div=
></div><div class=3D"group/conversation-turn relative flex w-full min-w-0 f=
lex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"fl=
ex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assistan=
t" data-message-id=3D"dd4f82db-b407-4d7b-9f98-99ff57bbbf74" dir=3D"auto" cl=
ass=3D"text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fi=
rst:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert light"><p>=EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EC=A7=80 =EC=
=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=98=EA=
=B8=B0 =EC=9C=84=ED=95=B4 =EB=9D=BC=EB=B2=A8=EC=9D=98 =EB=B0=B0=EC=B9=98=EC=
=99=80 =EA=B4=80=EB=A0=A8=EB=90=9C =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=
=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=9D=BC=EB=B2=A8=EC=
=9D=B4 =EB=8B=A4=EB=A5=B8 =EC=9C=84=EC=A0=AF=EB=93=A4=EC=97=90 =EC=9D=98=ED=
=95=B4 =EA=B0=80=EB=A0=A4=EC=A7=80=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=
=95=98=EA=B3=A0, =ED=95=84=EC=9A=94=ED=95=9C =EA=B2=BD=EC=9A=B0 =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=AC=EB=8A=94 =EC=9E=91=EC=97=85=EC=9D=84 =ED=8F=AC=ED=95=A8=
=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=95=84=EB=9E=98=EB=8A=94 =EC=88=98=EC=
=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div=
 class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-me=
dium"><div class=3D"flex items-center relative text-token-text-secondary bg=
-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between r=
ounded-t-md"><span>python</span><div class=3D"flex items-center"><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div=
 class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>  <span class=3D"hljs-comment"># =EC=88=98=EC=A0=95=
=EB=90=9C =EB=B6=80=EB=B6=84</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(<span class=3D"hljs-number">0</span>, self.load_images) =
 <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=
=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=
=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
        self.level_image_canvas.lift()  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=
=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.sumoongi_canvas.lift()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=
=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)
       =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>self.level_label.lift()</code>=EC=99=80 =EA=B0=99=EC=9D=80 =
=EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =
=EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=
=EB=A1=9C =EC=98=AC=EB=A6=AC=EB=8A=94 =EC=9E=91=EC=97=85=EC=9D=84 =EC=88=98=
=ED=96=89=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =ED=86=B5=
=ED=95=B4 =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=8B=A4=EB=A5=B8 =EC=9C=84=EC=A0=AF=
=EB=93=A4=EC=97=90 =EC=9D=98=ED=95=B4 =EA=B0=80=EB=A0=A4=EC=A7=80=EC=A7=80 =
=EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=98=90=ED=
=95=9C <code>self.level_label.place()</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=
=95=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EB=
=AA=85=ED=99=95=ED=95=98=EA=B2=8C =EC=84=A4=EC=A0=95=ED=95=98=EA=B3=A0, <co=
de>place</code> =EB=A9=94=EC=84=9C=EB=93=9C =EC=9D=B4=ED=9B=84=EC=97=90 <co=
de>lift()</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =ED=98=B8=EC=B6=9C=ED=
=95=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=9D=B4 =ED=95=AD=EC=83=81 =EC=B5=9C=EC=
=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EC=97=90 =EC=9C=84=EC=B9=98=ED=95=98=EB=
=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=9D=B4 =EC=BD=94=EB=
=93=9C=EB=A5=BC =EC=8B=A4=ED=96=89=ED=95=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=
=9D=B4 =EC=A0=95=EC=83=81=EC=A0=81=EC=9C=BC=EB=A1=9C =ED=91=9C=EC=8B=9C=EB=
=90=98=EB=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=B4 =EB=B3=B4=EC=84=B8=EC=
=9A=94. =EC=B6=94=EA=B0=80=EC=A0=81=EC=9D=B8 =EB=AC=B8=EC=A0=9C=EA=B0=80 =
=EB=B0=9C=EC=83=9D=ED=95=98=EB=A9=B4 =EC=95=8C=EB=A0=A4=EC=A3=BC=EC=84=B8=
=EC=9A=94.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:h=
idden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 =
z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border-to=
ken-border-light md:hidden"><div class=3D"flex items-center"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H=
5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5=
a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 =
0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></butt=
on></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11=
.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.16=
65 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.9=
4753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 =
21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C=
15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2958=
9C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 =
5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.9=
9743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002=
 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13=
.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C1=
7.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 =
19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curren=
tColor"></path></svg></span></button></span></div><span class=3D"" data-sta=
te=3D"closed"><button type=3D"button" id=3D"radix-:r1uj:" aria-haspopup=3D"=
menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer=
 rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-sur=
face-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div cla=
ss=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.79=
5 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0=
 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0=
 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 =
0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2=
.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.8=
87c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 =
1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.46=
7 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-=
3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.5=
04 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.50=
3 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 =
2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.06=
4-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-=
1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 te=
xt-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.4=
14 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-=
6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></sp=
an></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-t=
estid=3D"conversation-turn-12" data-scroll-anchor=3D"false"><div class=3D"p=
y-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">=
<div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-=
6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col =
gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data=
-message-author-role=3D"user" data-message-id=3D"aaa2734f-aa2e-4780-9c74-e3=
054d232e89" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"re=
lative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-=
surface-secondary">=EB=82=B4=EA=B0=80 =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C user level=EC=9D=84 =EC=B0=B8=EC=A1=B0=
=ED=95=98=EB=8A=94 =EC=88=98=EC=A0=95=EC=9D=84 =ED=95=9C =EB=92=A4=EB=A1=9C=
 =EB=9D=BC=EB=B2=A8=EB=93=A4=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EC=A7=80 =EC=95=8A=
=EA=B1=B0=EB=93=A0? =EC=9D=B4=EA=B1=B0=EB=9E=91 =EA=B4=80=EB=A0=A8=ED=95=B4=
=EC=84=9C =EB=AC=B8=EC=A0=9C=EA=B0=80 =EC=9E=88=EB=8A=94=EA=B1=B0=EA=B0=99=
=EC=9D=80=EB=8D=B0 =ED=95=9C=EB=B2=88 =EB=B4=90=EB=B0=94<div class=3D"absol=
ute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversa=
tion-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"fl=
ex h-9 w-9 items-center justify-center rounded-full text-token-text-seconda=
ry transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://ww=
w.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 =
24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1=
 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713=
zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0=
 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3=
.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></div=
></div></div></div></div></div></div></div><div class=3D"w-full text-token-=
text-primary" dir=3D"auto" data-testid=3D"conversation-turn-13" data-scroll=
-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4=
 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 te=
xt-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[=
48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div>=
<div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-=
6 items-center justify-center overflow-hidden rounded-full juice:h-8 juice:=
w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-center=
 bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg width=
=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-=
9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.=
0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126=
 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8=
215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575=
 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614=
 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.9=
8686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0=
.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 =
22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.959=
51 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8=
.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2=
107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946=
 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31=
.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.82=
1C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.=
6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.49=
78 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 1=
7.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.13=
7 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L2=
9.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052=
 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.=
7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.00=
64C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 =
26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.35=
32 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9=
979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988=
 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10=
.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6=
194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491=
 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.=
4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206=
 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15=
.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.223=
5 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 2=
0.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6=
531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364=
C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.=
849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103=
 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32=
.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319=
 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.=
1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 =
26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.=
8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.922=
5 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6=
.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3=
723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095=
 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 1=
9.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6=
071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377=
 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.=
6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215=
 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10=
.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.0=
71 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 2=
2.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div=
></div><div class=3D"group/conversation-turn relative flex w-full min-w-0 f=
lex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"fl=
ex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assistan=
t" data-message-id=3D"436b2e54-7540-4a69-9dc8-8ace0cd3bd6c" dir=3D"auto" cl=
ass=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end ove=
rflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hi=
dden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words =
dark:prose-invert light"><p>=EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=B3=B4=EC=9D=B4=
=EC=A7=80 =EC=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=8A=94 =EC=97=AC=EB=9F=AC=
 =EA=B0=80=EC=A7=80 =EC=9D=B4=EC=9C=A0=EB=A1=9C =EB=B0=9C=EC=83=9D=ED=95=A0=
 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=A3=BC=EB=A1=9C =EB=8D=
=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=BF=BC=EB=A6=AC =EB=B6=
=80=EB=B6=84=EC=97=90=EC=84=9C =EC=98=88=EC=99=B8=EA=B0=80 =EB=B0=9C=EC=83=
=9D=ED=95=98=EA=B1=B0=EB=82=98 =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=
=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0=EA=B3=BC =EA=B4=80=EB=A0=A8=EB=90=9C =EB=AC=
=B8=EC=A0=9C=EA=B0=80 =EC=9E=88=EC=9D=84 =EB=95=8C =EB=B0=9C=EC=83=9D=ED=95=
=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=BD=94=EB=93=9C=EB=
=A5=BC =EC=A0=90=EA=B2=80=ED=95=B4 =EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=
=8B=A4.</p><p>=ED=98=84=EC=9E=AC =EC=BD=94=EB=93=9C=EB=A5=BC =EB=B6=84=EC=
=84=9D=ED=95=B4 =EB=B3=B4=EB=A9=B4, <code>get_user_level</code> =EB=A9=94=
=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=BF=BC=EB=A6=AC=EB=A5=BC =EC=8B=A4=ED=96=89=ED=95=98=
=EB=8A=94 =EB=8F=99=EC=95=88 =EC=98=88=EC=99=B8=EA=B0=80 =EB=B0=9C=EC=83=9D=
=ED=95=98=EB=A9=B4, =EA=B7=B8=EB=A1=9C =EC=9D=B8=ED=95=B4 =EB=82=98=EB=A8=
=B8=EC=A7=80 =EC=9C=84=EC=A0=AF =EC=83=9D=EC=84=B1 =EA=B3=BC=EC=A0=95=EC=9D=
=B4 =EC=A0=9C=EB=8C=80=EB=A1=9C =EC=88=98=ED=96=89=EB=90=98=EC=A7=80 =EC=95=
=8A=EC=9D=84 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=
=A5=BC =ED=95=B4=EA=B2=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =EB=AA=87 =
=EA=B0=80=EC=A7=80 =EC=A0=90=EA=B2=80 =EC=82=AC=ED=95=AD=EA=B3=BC =EC=88=98=
=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EB=A5=BC =EC=A0=9C=EC=95=88=ED=95=A9=
=EB=8B=88=EB=8B=A4:</p><ol><li>=EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=
=B4=EC=8A=A4 =EC=BF=BC=EB=A6=AC=EA=B0=80 =EC=A0=9C=EB=8C=80=EB=A1=9C =EC=8B=
=A4=ED=96=89=EB=90=98=EA=B3=A0 =EA=B2=B0=EA=B3=BC=EB=A5=BC =EB=B0=98=ED=99=
=98=ED=95=98=EB=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=A9=EB=8B=88=EB=8B=
=A4.</li><li>=EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=
=B0=EA=B2=B0 =EB=B0=8F =EC=BF=BC=EB=A6=AC=EC=97=90=EC=84=9C =EB=B0=9C=EC=83=
=9D=ED=95=A0 =EC=88=98 =EC=9E=88=EB=8A=94 =EC=98=88=EC=99=B8=EB=A5=BC =EC=
=9E=A1=EC=95=84=EB=82=B4=EA=B3=A0 =EC=B2=98=EB=A6=AC=ED=95=A9=EB=8B=88=EB=
=8B=A4.</li><li>=EB=9D=BC=EB=B2=A8=EC=9D=B4 =EC=A0=9C=EB=8C=80=EB=A1=9C =EC=
=83=9D=EC=84=B1=EB=90=98=EA=B3=A0 =EB=B0=B0=EC=B9=98=EB=90=98=EC=97=88=EB=
=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=A9=EB=8B=88=EB=8B=A4.</li></ol><p>=
=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=9D=B4=EB=9F=AC=ED=95=9C =EC=82=AC=ED=95=AD=
=EC=9D=84 =EB=B0=98=EC=98=81=ED=95=98=EC=97=AC =EC=88=98=EC=A0=95=EB=90=9C =
=EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark b=
g-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class=
=3D"flex items-center relative text-token-text-secondary bg-token-main-surf=
ace-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><sp=
an>python</span><div class=3D"flex items-center"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0=
 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3=
 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-=
1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1=
 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=
=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overf=
low-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-=
pre hljs language-python"><span class=3D"hljs-keyword">import</span> tkinte=
r <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.connection:
            <span class=3D"hljs-keyword">return</span>
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">return</span>
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png
</span></code></div></div></pre></div></div></div></div><div class=3D"mt-1 =
flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-sta=
rt rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:b=
order md:border-token-border-light md:hidden"><div class=3D"flex items-cent=
er"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text=
-token-text-secondary hover:bg-token-main-surface-secondary"><span class=3D=
"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7=
.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776=
 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6757=
2 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.8=
1069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.414=
2 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7=
.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C2=
0.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.104=
2 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 1=
7.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9=
638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458=
 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.=
35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.015=
6 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 1=
7.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5=
455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 =
12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.=
3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></=
button></span><span class=3D"" data-state=3D"closed"><button class=3D"round=
ed-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><spa=
n class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg></span></button></span><div class=3D"flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg=
-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-=
center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C1=
1.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6=
271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 1=
2.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H1=
8.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18=
.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961Z=
M14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.473=
8C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9=
.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.37=
82C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 1=
3.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 =
4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4=
 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045=
Z" fill=3D"currentColor"></path></svg></span></button></span></div><span cl=
ass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1ur:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-14" data-scroll-anchor=3D"fa=
lse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px=
-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice=
:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa240=
d7-174c-4474-8081-06d55eb9a796" dir=3D"auto" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start whitespace-pre-wrap break-words [.text-messa=
ge+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cla=
ss=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-sta=
rt"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5=
 dark:bg-token-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def get_user_level(self):
        try:
            cursor =3D self.connection.cursor()
            query =3D "SELECT level FROM user WHERE id =3D %s"  # =EC=88=98=
=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            return result[0] if result else 0
        except mysql.connector.Error as err:
            messagebox.showerror("Database Query Error", f"An error occurre=
d: {err}")
            self.destroy()


    def create_widgets(self):
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D"readonly", font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)

        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(0, self.load_images)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=
=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=
=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.
        self.level_label.tkraise()

    def configure_level_options(self):
        if self.user_level &lt; 400:
            self.level_dropdown.config(values=3D["=ED=95=98"])
            self.level_var.set("=ED=95=98")
        elif self.user_level &lt; 700:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91"])
            self.level_var.set("=ED=95=98")
        else:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91", =
"=EC=83=81"])
            self.level_var.set("=ED=95=98")

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D50, y=3D150)
       =20
    def load_images(self):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def start_test(self):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.place(x=3D38, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY RAND() LIMIT 20", (selected_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score_message =3D f"=EC=A0=90=EC=88=98 : {len(self.test_words) - le=
n(incorrect_words)}/{len(self.test_words)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)
       =20

    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D"Level=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=B4!")
        self.level_dropdown.place(x=3D40, y=3D80)
        self.level_label.place(x=3D60, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)
       =20
    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelExam(user_id)
    app.mainloop()

=EC=A7=80=EA=B8=88 =EC=BD=94=EB=93=9C=EB=B3=B4=EB=A9=B4 level=EC=84=A0=ED=
=83=9D =EC=A0=84=EC=97=90=EB=8A=94 level=EC=9D=84=EC=84=A0=ED=83=9D=ED=95=
=B4! =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=82=98=EC=98=A4=EA=B2=8C =EB=90=98=EC=
=96=B4=EC=9E=88=EA=B3=A0 =EC=84=A0=ED=83=9D=ED=9B=84=EC=97=90=EB=8A=94 ~~le=
vel=EC=9D=84 =EC=84=A0=ED=83=9D! =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=82=98=EC=
=98=A4=EA=B3=A0 level=EC=97=90 =EB=8C=80=ED=95=98=EC=97=AC =EC=8B=9C=ED=97=
=98=EC=8B=9C=EC=9E=91=EC=9D=84 =ED=95=98=EB=A9=B4 ~~level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=96=88=EC=96=B4!=EB=A1=9C =EB=B3=80=EA=B2=BD=EB=90=98=EA=B3=
=A0, =EC=9D=B4=ED=9B=84 =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=81=9D=EB=82=9C=EB=
=92=A4=EC=97=90=EB=8A=94 =EB=8B=A4=EC=8B=9C level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=95=B4! =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EC=9E=96=EC=95=
=84?
=EC=9D=B4=EA=B1=B0 =EB=82=B4=EA=B0=80 =EC=9C=A0=EC=A0=80 =ED=85=8C=EC=9D=B4=
=EB=B8=94=EC=97=90=EC=84=9C level=EC=9D=84 =EC=B0=B8=EC=A1=B0=ED=96=88=EC=
=9C=BC=EB=8B=88=EA=B9=90 =EC=9D=B4=EA=B1=B0=EC=97=90 =EB=A7=9E=EC=B6=B0=EC=
=84=9C label=EB=93=A4=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =EA=B8=
=B0=EC=A1=B4=EC=97=90 =EC=9E=88=EB=8D=98=EA=B1=B0 =EC=82=AD=EC=A0=9C=ED=95=
=98=EA=B3=A0 =EB=8B=A4=EC=8B=9C =EC=A0=81=EC=96=B4=EB=B4=90<div class=3D"ab=
solute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conve=
rsation-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D=
"flex h-9 w-9 items-center justify-center rounded-full text-token-text-seco=
ndary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0=
 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 =
0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.=
713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 =
0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.58=
6 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></=
div></div></div></div></div></div></div></div><div class=3D"w-full text-tok=
en-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-15" data-scr=
oll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:p=
x-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3=
 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-=
w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><d=
iv><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6=
 w-6 items-center justify-center overflow-hidden rounded-full juice:h-8 jui=
ce:w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-cen=
ter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg wid=
th=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D=
"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 1=
4.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.61=
26 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25=
.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7855=
75 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.36=
14 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5=
.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312=
C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8361=
2 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.9=
5951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322=
 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38=
.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.49=
46 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 =
31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.=
821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 2=
4.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.=
4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117=
 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.=
137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542=
L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.0=
52 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 2=
7.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.=
0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6604=
8 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.=
3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28=
.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.69=
88 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 =
10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13=
.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.194=
91 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 2=
0.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.2=
06 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 =
15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2=
235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955=
 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25=
.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.13=
64C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 2=
2.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.11=
03 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 =
32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.3=
19 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 3=
5.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.094=
3 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 1=
5.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9=
225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158=
 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33=
.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.60=
95 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423=
 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10=
.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.83=
77 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C2=
0.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.942=
15 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 =
10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16=
.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071=
 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></d=
iv></div><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assist=
ant" data-message-id=3D"b609658e-dac2-487e-8d88-d1f21a716e6a" dir=3D"auto" =
class=3D"text-message flex flex-col items-start whitespace-pre-wrap break-w=
ords [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-aut=
o gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:=
first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-=
invert light"><p>=EC=95=84=EB=9E=98=EB=8A=94 =EC=A3=BC=EC=96=B4=EC=A7=84 =
=EC=A1=B0=EA=B1=B4=EC=97=90 =EB=A7=9E=EC=B6=B0=EC=84=9C <code>LevelExam</co=
de> =ED=81=B4=EB=9E=98=EC=8A=A4=EC=9D=98 =EB=9D=BC=EB=B2=A8=EB=93=A4=EC=9D=
=B4 =EB=B3=B4=EC=9D=B4=EB=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=98=EA=B3=
=A0, =EC=9C=A0=EC=A0=80 =ED=85=8C=EC=9D=B4=EB=B8=94=EC=97=90=EC=84=9C =EB=
=A0=88=EB=B2=A8=EC=9D=84 =EC=B0=B8=EC=A1=B0=ED=95=9C =EC=9D=B4=ED=9B=84=EC=
=97=90 =EB=9D=BC=EB=B2=A8=EB=93=A4=EC=9D=B4 =EC=98=AC=EB=B0=94=EB=A5=B4=EA=
=B2=8C =ED=91=9C=EC=8B=9C=EB=90=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=
=95=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4.</p><p>=EB=9D=BC=EB=B2=
=A8=EC=9D=98 =EC=83=81=ED=83=9C=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=
=B8=ED=95=98=EA=B3=A0 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EB=B6=80=EB=B6=
=84=EC=9D=84 =EB=AA=85=ED=99=95=ED=9E=88 =ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] borde=
r-token-border-medium"><div class=3D"flex items-center relative text-token-=
text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans =
justify-between rounded-t-md"><span>python</span><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 i=
tems-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 =
3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 =
2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1=
 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=
=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></s=
pan></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as</sp=
an> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.connection:
            <span class=3D"hljs-keyword">return</span>
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">return</span>
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(<span class=3D"hljs-number">0</span>, self.load_images) =
 <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=
=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=
=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
        self.level_image_canvas.lift()  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=
=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.sumoongi_canvas.lift()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=
=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.timer_label.lift()  <span class=3D"hljs-comment"># =ED=83=80=
=EC=9D=B4=EB=A8=B8 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =
=EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)
       =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.level_label.lift()  <span class=3D"hljs-comment"># =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.sumoongi_canvas.lift()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=
=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)
        self.start_button.lift()  <span class=3D"hljs-comment"># =EB=B2=84=
=ED=8A=BC=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EB=8A=94 =EB=8B=A4=
=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=80 =EC=82=AC=ED=95=AD=EB=93=A4=EC=9D=84 =
=EC=88=98=EC=A0=95=ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><ol><li=
><code>self.level_label.lift()</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =
=EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A0=A4 =EB=8B=A4=
=EB=A5=B8 =EC=9C=84=EC=A0=AF=EB=93=A4=EC=97=90 =EA=B0=80=EB=A0=A4=EC=A7=80=
=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</li><li>=
<code>reset_to_initial</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C=
 =EB=9D=BC=EB=B2=A8=EA=B3=BC =EC=9D=B4=EB=AF=B8=EC=A7=80, =EB=B2=84=ED=8A=
=BC=EC=9D=84 =EB=8B=A4=EC=8B=9C =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=
=A8=EB=A1=9C =EC=98=AC=EB=A0=A4 =EC=A0=9C=EB=8C=80=EB=A1=9C =EB=B3=B4=EC=9D=
=B4=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><code>connect_da=
tabase</code>=EC=99=80 <code>get_user_level</code> =EB=A9=94=EC=84=9C=EB=93=
=9C=EC=97=90=EC=84=9C =EC=98=88=EC=99=B8 =EC=B2=98=EB=A6=AC=EB=A1=9C =EC=9D=
=B8=ED=95=B4 =EC=9C=84=EC=A0=AF =EC=83=9D=EC=84=B1=EC=9D=B4 =EC=A4=91=EB=8B=
=A8=EB=90=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =EB=B3=B4=EC=99=84=ED=95=
=A9=EB=8B=88=EB=8B=A4.</li></ol><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=A5=BC =
=ED=86=B5=ED=95=B4 =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EC=A0=9C=EB=8C=80=EB=A1=9C =
=ED=91=9C=EC=8B=9C=EB=90=98=EB=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=B4 =
=EB=B3=B4=EC=84=B8=EC=9A=94. =EC=B6=94=EA=B0=80=EC=A0=81=EC=9D=B8 =EB=AC=B8=
=EC=A0=9C=EA=B0=80 =EB=B0=9C=EC=83=9D=ED=95=98=EB=A9=B4 =EC=95=8C=EB=A0=A4=
=EC=A3=BC=EC=84=B8=EC=9A=94.</p></div></div></div></div><div class=3D"mt-1 =
flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-sta=
rt rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:b=
order md:border-token-border-light md:hidden"><div class=3D"flex items-cent=
er"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text=
-token-text-secondary hover:bg-token-main-surface-secondary"><span class=3D=
"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7=
.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776=
 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6757=
2 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.8=
1069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.414=
2 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7=
.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C2=
0.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.104=
2 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 1=
7.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9=
638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458=
 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.=
35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.015=
6 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 1=
7.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5=
455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 =
12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.=
3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></=
button></span><span class=3D"" data-state=3D"closed"><button class=3D"round=
ed-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><spa=
n class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg></span></button></span><div class=3D"flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg=
-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-=
center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C1=
1.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6=
271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 1=
2.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H1=
8.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18=
.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961Z=
M14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.473=
8C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9=
.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.37=
82C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 1=
3.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 =
4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4=
 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045=
Z" fill=3D"currentColor"></path></svg></span></button></span></div><span cl=
ass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1v3:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-16" data-scroll-anchor=3D"fa=
lse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px=
-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice=
:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2b7=
43-fd98-4817-b308-17bfa6cb35c6" dir=3D"auto" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start whitespace-pre-wrap break-words [.text-messa=
ge+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cla=
ss=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-sta=
rt"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5=
 dark:bg-token-main-surface-secondary">=EC=95=84=EB=8B=88 =EB=B0=B0=EC=B9=
=98=EC=97=90=EB=8A=94 =EB=AC=B8=EC=A0=9C=EA=B0=80 =EC=97=86=EB=8B=A4=EA=B3=
=A0 =EA=B7=B8=EB=83=A5 =EB=A0=88=EB=B2=A8 =EC=B0=B8=EC=A1=B0=ED=95=98=EB=8A=
=94=EA=B2=83=EB=95=8C=EB=AC=B8=EC=97=90 =EB=AC=B8=EC=A0=9C=EA=B0=80 =EB=B0=
=9C=EC=83=9D=ED=95=9C=EA=B2=83 =EA=B0=99=EB=8B=A4=EB=8B=88=EA=B9=90"?<div c=
lass=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-h=
over/conversation-turn:block"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"flex h-9 w-9 items-center justify-center rounded-full text-token=
-text-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.=
094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 =
1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-=
.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 =
0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-17=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avata=
r flex h-6 w-6 items-center justify-center overflow-hidden rounded-full jui=
ce:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center j=
ustify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8=
"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"6788c1d6-6d5d-431e-8474-cf9426b0ba0d" dir=
=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whit=
espace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:i=
tems-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 ju=
ice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full =
break-words dark:prose-invert light"><p>=EC=95=8C=EA=B2=A0=EC=8A=B5=EB=8B=
=88=EB=8B=A4. =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=
=90=EC=84=9C =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=B0=B8=EC=A1=B0=ED=95=9C =EC=9D=
=B4=ED=9B=84 =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EC=A0=9C=EB=8C=80=EB=A1=9C =ED=91=
=9C=EC=8B=9C=EB=90=98=EC=A7=80 =EC=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=9D=
=BC=EB=A9=B4, =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=
=B0=EA=B2=B0 =EB=B0=8F =EC=BF=BC=EB=A6=AC =EA=B3=BC=EC=A0=95=EC=97=90=EC=84=
=9C =EB=B0=9C=EC=83=9D=ED=95=98=EB=8A=94 =EC=98=88=EC=99=B8=EB=82=98 =EB=8D=
=B0=EC=9D=B4=ED=84=B0=EB=A5=BC =EC=A0=9C=EB=8C=80=EB=A1=9C =EA=B0=80=EC=A0=
=B8=EC=98=A4=EC=A7=80 =EB=AA=BB=ED=95=98=EB=8A=94 =EA=B2=83=EC=9D=B4 =EC=9B=
=90=EC=9D=B8=EC=9D=BC =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=
=94=B0=EB=9D=BC=EC=84=9C, =EC=98=88=EC=99=B8 =EC=B2=98=EB=A6=AC=EB=A5=BC =
=EA=B0=95=ED=99=94=ED=95=98=EA=B3=A0 =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=A5=BC =
=EC=98=AC=EB=B0=94=EB=A5=B4=EA=B2=8C =EA=B0=80=EC=A0=B8=EC=98=A4=EB=8A=94=
=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.=
</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EB=B3=B4=EC=
=9D=B4=EC=A7=80 =EC=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=
=B2=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =EC=88=98=EC=A0=95=EB=90=9C =EC=
=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4. =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=
=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0 =EB=B0=8F =EC=BF=BC=EB=A6=AC =
=EA=B3=BC=EC=A0=95=EC=97=90=EC=84=9C =EB=B0=9C=EC=83=9D=ED=95=A0 =EC=88=98 =
=EC=9E=88=EB=8A=94 =EC=98=88=EC=99=B8=EB=A5=BC =EC=9E=A1=EC=95=84=EB=82=B4=
=EA=B3=A0, =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=A5=BC =EC=98=AC=EB=B0=94=EB=A5=B4=
=EA=B2=8C =EA=B0=80=EC=A0=B8=EC=98=A4=EB=8F=84=EB=A1=9D =ED=95=98=EC=98=80=
=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded=
-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-cen=
ter relative text-token-text-secondary bg-token-main-surface-secondary px-4=
 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span><d=
iv class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0=
 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3=
v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h=
-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 =
0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=
=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text=
-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-p=
ython"><span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hl=
js-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.connection:
            <span class=3D"hljs-keyword">return</span>
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">return</span>
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1vb:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-18" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa2b60d-033a-4b=
b4-b907-9389b1fbed9a" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=88=98=EC=A0=95=ED=95=A0 =EB=B6=80=EB=B6=84=
=EC=9D=B4 =EB=AD=94=EB=8D=B0? =EA=B7=B8=EA=B2=83=EB=A7=8C =EB=A7=90=ED=95=
=B4=EB=B4=90=EB=B0=94<div class=3D"absolute bottom-0 right-full top-0 -mr-3=
.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-cen=
ter rounded-full text-token-text-secondary transition hover:bg-token-main-s=
urface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 =
1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.1=
5-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.=
838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.4=
14 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></div></div></div></div></div></div></di=
v></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-tes=
tid=3D"conversation-turn-19" data-scroll-anchor=3D"false"><div class=3D"py-=
2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><d=
iv class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 =
md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0=
 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><d=
iv class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overf=
low-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rou=
nded-sm flex items-center justify-center bg-token-main-surface-primary text=
-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0=
 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5=
324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744=
 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.49=
85C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1=
.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C1=
6.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4=
4666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 1=
0.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7=
21698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.475=
9 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 3=
2.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.89=
07 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C=
19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.=
8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.502=
7 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.=
7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517=
 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 3=
7.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.900=
4 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26=
.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.954=
1 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.=
3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838=
 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5=
.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.72=
48C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8=
408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 =
24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.=
7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3878=
5 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 =
8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19=
351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267=
 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.=
5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046=
 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.=
30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.49=
81C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 =
12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6=
606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 =
36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.=
6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586=
 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.05=
56ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 =
10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9=
948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753=
 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24=
.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.315=
89 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 =
10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10=
.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.94=
41 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 =
11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2=
1869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034=
 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.=
7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.487=
7 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 1=
7.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColo=
r"></path></svg></div></div></div></div></div><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"4c689492-ad83-=
4c65-b486-fbe284210c2e" dir=3D"auto" class=3D"min-h-[20px] text-message fle=
x flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;=
]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"fl=
ex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div clas=
s=3D"markdown prose w-full break-words dark:prose-invert light"><p>=EC=95=
=8C=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=AC=B8=EC=A0=9C=EA=B0=80 =EB=B0=
=9C=EC=83=9D=ED=95=9C =EB=B6=80=EB=B6=84=EC=9D=84 =EC=88=98=EC=A0=95=ED=95=
=98=EA=B3=A0 =EC=98=AC=EB=B0=94=EB=A5=B4=EA=B2=8C =EB=8D=B0=EC=9D=B4=ED=84=
=B0=EB=A5=BC =EA=B0=80=EC=A0=B8=EC=98=AC =EC=88=98 =EC=9E=88=EB=8F=84=EB=A1=
=9D =EC=A1=B0=EC=B9=98=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=A4=91=EC=9A=94=ED=95=9C =EC=88=98=EC=
=A0=95 =EC=82=AC=ED=95=AD=EC=9E=85=EB=8B=88=EB=8B=A4:</p><ol><li><strong>=
=EC=98=88=EC=99=B8 =EC=B2=98=EB=A6=AC =EC=B6=94=EA=B0=80</strong>: =EB=8D=
=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0 =EB=B0=
=8F =EC=BF=BC=EB=A6=AC=EC=97=90=EC=84=9C =EB=B0=9C=EC=83=9D=ED=95=A0 =EC=88=
=98 =EC=9E=88=EB=8A=94 =EC=98=88=EC=99=B8=EB=A5=BC =EC=9E=A1=EC=95=84=EB=82=
=B4=EA=B3=A0, =EC=9D=B4=EB=A5=BC =EC=82=AC=EC=9A=A9=EC=9E=90=EC=97=90=EA=B2=
=8C =EC=95=8C=EB=A6=AC=EB=8A=94 =EB=B0=A9=EC=8B=9D=EC=9C=BC=EB=A1=9C =EC=88=
=98=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EB=8D=B0=EC=9D=B4=
=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0 =EC=83=81=ED=83=9C =
=ED=99=95=EC=9D=B8</strong>: =EC=97=B0=EA=B2=B0=EC=97=90 =EC=8B=A4=ED=8C=A8=
=ED=95=98=EB=A9=B4 =EC=9D=B4=ED=9B=84=EC=9D=98 =EC=BD=94=EB=93=9C=EB=A5=BC =
=EC=8B=A4=ED=96=89=ED=95=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=A9=
=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=AC=EB=B0=94=EB=A5=B8 =EB=8D=B0=
=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=BF=BC=EB=A6=AC</strong>: =
=EC=BF=BC=EB=A6=AC=EB=A5=BC =ED=99=95=EC=9D=B8=ED=95=98=EA=B3=A0, =EC=98=AC=
=EB=B0=94=EB=A5=B4=EA=B2=8C =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=A5=BC =EA=B0=80=
=EC=A0=B8=EC=98=A4=EB=8A=94=EC=A7=80 =ED=99=95=EC=9D=B8=ED=95=A9=EB=8B=88=
=EB=8B=A4.</li></ol><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =ED=95=B4=EB=8B=B9 =EB=
=B6=80=EB=B6=84=EC=9D=84 =EC=88=98=EC=A0=95=ED=95=9C =EC=BD=94=EB=93=9C=EC=
=9E=85=EB=8B=88=EB=8B=A4:</p><h3>1. =EC=98=88=EC=99=B8 =EC=B2=98=EB=A6=AC =
=EC=B6=94=EA=B0=80</h3><ul><li>=EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=
=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0 =EB=B0=8F =EC=BF=BC=EB=A6=AC=EC=97=90=EC=84=
=9C =EC=98=88=EC=99=B8=EA=B0=80 =EB=B0=9C=EC=83=9D=ED=96=88=EC=9D=84 =EB=95=
=8C =EC=82=AC=EC=9A=A9=EC=9E=90=EC=97=90=EA=B2=8C =EC=95=8C=EB=A6=AC=EA=B3=
=A0 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=9E=A8=EC=9D=B4 =EC=95=88=EC=A0=84=ED=95=
=98=EA=B2=8C =EC=A2=85=EB=A3=8C=EB=90=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=
=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li></ul><h3>2. =EB=8D=B0=EC=9D=B4=ED=84=B0=
=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0 =EC=83=81=ED=83=9C =ED=99=95=
=EC=9D=B8</h3><ul><li>=EC=97=B0=EA=B2=B0=EC=97=90 =EC=8B=A4=ED=8C=A8=ED=95=
=98=EB=A9=B4 =EC=9D=B4=ED=9B=84=EC=9D=98 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=8B=
=A4=ED=96=89=ED=95=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=
=88=EB=8B=A4.</li></ul><h3>=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C:<=
/h3><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-to=
ken-border-medium"><div class=3D"flex items-center relative text-token-text=
-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans just=
ify-between rounded-t-md"><span>python</span><div class=3D"flex items-cente=
r"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"2=
4" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3=
 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3=
 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 =
0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"eve=
nodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></d=
iv></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"=
><code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-k=
eyword">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.connection:
            <span class=3D"hljs-keyword">return</span>
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">return</span>
        self.create_widgets()
        self.configure_level_options()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-literal">None</s=
pan>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(<span class=3D"hljs-number">0</span>, self.load_images) =
 <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=
=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=
=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</span>
        self.level_label.tkraise()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-keyword">not</span> <span c=
lass=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">if</span> self.user_level &lt; <sp=
an class=3D"hljs-number">400</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)
            <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <=
span class=3D"hljs-number">700</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)
            <span class=3D"hljs-keyword">else</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <=
span class=3D"hljs-string">"=EC=83=81"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1vj:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-20" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa286d2-9206-4d=
36-a4f3-ef509d6aeef9" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">self.after(0, self.load_images)  # =EC=9D=B4=
=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =
=ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=
=EB=8B=88=EB=8B=A4.
=EC=9D=B4 =EB=AC=B8=EC=9E=A5=EB=95=8C=EB=AC=B8=EC=97=90 tkraise=EA=B0=80 =
=EC=A0=81=EC=9A=A9 =EC=95=88=EB=90=98=EB=8A=94=EA=B1=B0 =EA=B0=99=EC=9D=80=
=EB=8D=B0<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div><div class=3D"mt-1 flex gap-3 empt=
y:hidden juice:mr-1 juice:flex-row-reverse"><div class=3D"items-center just=
ify-start rounded-xl p-1 flex"><div class=3D"z-10 flex items-center justify=
-center rounded-lg text-token-text-secondary"><button disabled=3D"" class=
=3D"flex h-[30px] w-[30px] items-center justify-center rounded-md hover:bg-=
token-main-surface-secondary disabled:opacity-50 disabled:hover:bg-transpar=
ent"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"cu=
rrentColor" fill-rule=3D"evenodd" d=3D"M14.707 5.293a1 1 0 0 1 0 1.414L9.41=
4 12l5.293 5.293a1 1 0 0 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1=
 1.414 0" clip-rule=3D"evenodd"></path></svg></button><div class=3D"px-0.5 =
text-sm font-semibold tabular-nums">1/2</div><button class=3D"flex h-[30px]=
 w-[30px] items-center justify-center rounded-md hover:bg-token-main-surfac=
e-secondary disabled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M9.293 18.707a1 1 0 0 1 0-1.414L14.586 12 9.293 6.7=
07a1 1 0 0 1 1.414-1.414l6 6a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414 0" clip=
-rule=3D"evenodd"></path></svg></button></div></div></div></div></div></div=
></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" dat=
a-testid=3D"conversation-turn-21" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-s=
hrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:p=
t-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-cente=
r overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative =
p-1 rounded-sm flex items-center justify-center bg-token-main-surface-prima=
ry text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=
=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full"><div data-message-author-role=3D"assistant" data-message-id=3D"0f162=
a5f-73c5-4290-affb-8e3253025372" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">=
<div class=3D"markdown prose w-full break-words dark:prose-invert light"><p=
>=EA=B7=B8=EB=A0=87=EB=8B=A4=EB=A9=B4, <code>self.after(0, self.load_images=
)</code> =EB=AC=B8=EC=9E=A5 =EB=95=8C=EB=AC=B8=EC=97=90 <code>tkraise</code=
>=EA=B0=80 =EC=A0=81=EC=9A=A9=EB=90=98=EC=A7=80 =EC=95=8A=EB=8A=94 =EA=B2=
=83=EC=9D=B4 =EB=AC=B8=EC=A0=9C=EC=9D=BC =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. <code>self.after(0, self.load_images)</code>=EA=B0=80 =EC=8B=
=A4=ED=96=89=EB=90=98=EB=8A=94 =EB=8F=99=EC=95=88 =EB=8B=A4=EB=A5=B8 =EC=9C=
=84=EC=A0=AF=EB=93=A4=EC=9D=B4 =EC=A0=95=EC=83=81=EC=A0=81=EC=9C=BC=EB=A1=
=9C =EB=B0=B0=EC=B9=98=EB=90=98=EA=B8=B0 =EC=A0=84=EC=97=90 =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=EA=B0=80 =EB=A8=BC=EC=A0=80 =EC=9D=B4=EB=A3=
=A8=EC=96=B4=EC=A0=B8=EC=84=9C =EA=B7=B8=EB=9F=B0 =EA=B2=83 =EA=B0=99=EC=8A=
=B5=EB=8B=88=EB=8B=A4.</p><p>=EC=9D=B4=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=98=
=EA=B8=B0 =EC=9C=84=ED=95=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=
=EA=B0=80 =EC=99=84=EB=A3=8C=EB=90=9C =ED=9B=84=EC=97=90 <code>tkraise</cod=
e>=EB=A5=BC =ED=98=B8=EC=B6=9C=ED=95=98=EB=8F=84=EB=A1=9D =EC=88=9C=EC=84=
=9C=EB=A5=BC =EC=A1=B0=EC=A0=95=ED=95=B4 =EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=
=88=EB=8B=A4. <code>create_widgets</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=
=90=EC=84=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=
=9C =ED=9B=84=EC=97=90 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=
=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=AC=EB=8F=84=EB=A1=9D =ED=95=
=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=
:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-t=
oken-border-medium"><div class=3D"flex items-center relative text-token-tex=
t-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans jus=
tify-between rounded-t-md"><span>python</span><div class=3D"flex items-cent=
er"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 item=
s-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"=
24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"cur=
rentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a=
3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a=
3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0=
 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"ev=
enodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></=
div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr=
"><code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-=
keyword">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.connection:
            <span class=3D"hljs-keyword">return</span>
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">return</span>
        self.create_widgets()
        self.configure_level_options()
        self.load_images()  <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=
=B8=EC=A7=80=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EB=A1=
=9C=EB=93=9C</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-literal">None</s=
pan>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
literal">None</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level <span class=
=3D"hljs-keyword">is</span> <span class=3D"hljs-keyword">not</span> <span c=
lass=3D"hljs-literal">None</span>:
            <span class=3D"hljs-keyword">if</span> self.user_level &lt; <sp=
an class=3D"hljs-number">400</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)
            <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <=
span class=3D"hljs-number">700</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)
            <span class=3D"hljs-keyword">else</span>:
                self.level_dropdown.config(values=3D[<span class=3D"hljs-st=
ring">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <=
span class=3D"hljs-string">"=EC=83=81"</span>])
                self.level_var.<span class=3D"hljs-built_in">set</span>(<sp=
an class=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =ED=9B=84 =EB=9D=BC=EB=B2=A8=EC=9D=
=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=
=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
        self.level_image_canvas.tkraise()  <span class=3D"hljs-comment"># =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=
=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.sumoongi_canvas.tkraise()  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=
=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.timer_label.tkraise()  <span class=3D"hljs-comment"># =ED=83=
=80=EC=9D=B4=EB=A8=B8 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=
=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r1vr:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-22" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa280c3-2055-44=
12-b0a2-bc4d65223c66" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def get_user_level(self):
        try:
            cursor =3D self.connection.cursor()
            query =3D "SELECT level FROM user WHERE id =3D %s"  # =EC=88=98=
=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            return result[0] if result else 0
        except mysql.connector.Error as err:
            messagebox.showerror("Database Query Error", f"An error occurre=
d: {err}")
            self.destroy()


    def create_widgets(self):
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D"readonly", font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)

        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.after(0, self.load_images)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=
=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=
=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.
        self.level_label.tkraise()

    def configure_level_options(self):
        if self.user_level &lt; 400:
            self.level_dropdown.config(values=3D["=ED=95=98"])
            self.level_var.set("=ED=95=98")
        elif self.user_level &lt; 700:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91"])
            self.level_var.set("=ED=95=98")
        else:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91", =
"=EC=83=81"])
            self.level_var.set("=ED=95=98")

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D50, y=3D150)
       =20
    def load_images(self):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def start_test(self):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.place(x=3D38, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY RAND() LIMIT 20", (selected_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score_message =3D f"=EC=A0=90=EC=88=98 : {len(self.test_words) - le=
n(incorrect_words)}/{len(self.test_words)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)
       =20

    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D"Level=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=B4!")
        self.level_dropdown.place(x=3D40, y=3D80)
        self.level_label.place(x=3D60, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)
        self.level_label.tkraise()

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)
       =20
    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelExam(user_id)
    app.mainloop()

=EC=9D=B4=EA=B1=B0 =EB=82=B4 =EC=A0=84=EC=B2=B4=EC=BD=94=EB=93=9C=EC=9D=B8=
=EB=8D=B0 =ED=95=AD=EC=83=81 level_label=EC=9D=B4 =EB=8B=A4=EB=A5=B8 =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=B3=B4=EB=8B=A4 =EC=9C=84=EC=97=90 =EC=9E=88=EA=B2=
=8C =ED=95=B4=EB=B4=90<div class=3D"absolute bottom-0 right-full top-0 -mr-=
3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" =
data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-ce=
nter rounded-full text-token-text-secondary transition hover:bg-token-main-=
surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" he=
ight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fil=
l=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1=
 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.=
15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-=
.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.=
414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></pat=
h></svg></button></span></div></div></div></div></div></div></div></div></d=
iv></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-te=
stid=3D"conversation-turn-23" data-scroll-anchor=3D"false"><div class=3D"py=
-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><=
div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6=
 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-=
0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><=
div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center over=
flow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 ro=
unded-sm flex items-center justify-center bg-token-main-surface-primary tex=
t-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 =
0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.=
5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.274=
4 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4=
985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 =
1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C=
16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.=
44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 =
10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.=
721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.47=
59 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 =
32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8=
907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366=
C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39=
.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.50=
27 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38=
.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.451=
7 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 =
37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.90=
04 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 2=
6.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.95=
41 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30=
.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.483=
8 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 =
5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7=
248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.=
8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376=
 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33=
.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.387=
85 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364=
 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1=
9351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.826=
7 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28=
.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.0404=
6 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3=
.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4=
981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928=
 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.=
6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878=
 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30=
.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.958=
6 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0=
556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045=
 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.=
9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.075=
3 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L2=
4.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31=
589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334=
 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L1=
0.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9=
441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848=
 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.=
21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.103=
4 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14=
.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.48=
77 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 =
17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentCol=
or"></path></svg></div></div></div></div></div><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"f=
lex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><=
div data-message-author-role=3D"assistant" data-message-id=3D"fdb1af3c-fdd1=
-49e7-9081-c7574f48c0e2" dir=3D"auto" class=3D"text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p>=EB=8B=A4=EB=A5=B8 =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=B3=B4=EB=8B=A4 =ED=95=AD=EC=83=81 <code>leve=
l_label</code>=EC=9D=B4 =EC=9C=84=EC=97=90 =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=
=A1=9D =ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4, =EA=B0=81 =EC=9D=B4=EB=AF=B8=
=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=9C =ED=9B=84=EC=97=90 <code>lev=
el_label</code>=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=
=A1=9C =EC=98=AC=EB=A6=AC=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EC=82=AC=EC=
=9A=A9=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4 =
=EC=9E=91=EC=97=85=EC=9D=84 <code>load_images</code> =ED=95=A8=EC=88=98 =EB=
=82=B4=EC=97=90=EC=84=9C =EC=88=98=ED=96=89=ED=95=98=EA=B2=A0=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=
=9C =EC=A0=84=EC=B2=B4 =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><p=
re><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-bo=
rder-medium"><div class=3D"flex items-center relative text-token-text-secon=
dary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-be=
tween rounded-t-md"><span>python</span><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cente=
r"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fil=
l=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0=
 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0=
 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 =
1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd">=
</path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></d=
iv><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code=
 class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword=
">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()
        self.load_images()  <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=
=84=EC=97=90 =EC=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=
=88=EB=8B=A4.</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =ED=9B=84 =EB=9D=BC=EB=B2=A8=EC=9D=
=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=
=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.timer_label.tkraise()  <span class=3D"hljs-comment"># =ED=83=
=80=EC=9D=B4=EB=A8=B8 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=
=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)
        self.level_label.tkraise()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84=EC=9D=98 =EC=BD=94=EB=93=9C=EC=97=90=
=EC=84=9C:</p><ul><li>=EB=AA=A8=EB=93=A0 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=
=BC =EB=A1=9C=EB=93=9C=ED=95=9C =ED=9B=84=EC=97=90 <code>self.level_label.t=
kraise()</code>=EB=A5=BC =ED=98=B8=EC=B6=9C=ED=95=98=EC=97=AC =EB=9D=BC=EB=
=B2=A8=EC=9D=B4 =ED=95=AD=EC=83=81 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=
=B2=A8=EB=A1=9C =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=
=8B=A4.</li><li>=EA=B0=81 =EC=8B=9C=EC=A0=90=EC=97=90 =ED=95=84=EC=9A=94=ED=
=95=9C =EB=9D=BC=EB=B2=A8=EC=9D=98 <code>tkraise()</code> =ED=98=B8=EC=B6=
=9C=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC UI =EC=9A=94=EC=86=8C=EB=
=93=A4=EC=9D=B4 =EB=8B=A4=EB=A5=B8 UI =EC=9A=94=EC=86=8C=EB=93=A4=EC=97=90 =
=EC=9D=98=ED=95=B4 =EA=B0=80=EB=A0=A4=EC=A7=80=EC=A7=80 =EC=95=8A=EB=8F=84=
=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.</li></ul></div></div></div></div><di=
v class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-ce=
nter justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary =
md:absolute md:border md:border-token-border-light md:hidden"><div class=3D=
"flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D=
"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary=
"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4=
.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8=
.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.4912=
9 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.=
0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C1=
3 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 =
1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM2=
0.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.317=
6 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 1=
7.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7=
059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001=
C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.=
62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.199=
5 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 1=
8.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8=
483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 =
12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.=
2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path=
></svg></span></button></span><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"cur=
rentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a=
3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a=
3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0=
 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"ev=
enodd"></path></svg></span></button></span><div class=3D"flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] =
w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.=
9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.2=
9476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49=
209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6=
569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644=
L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.473=
76L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 =
9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2=
941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 =
14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 1=
4.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H=
18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 1=
8.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></sp=
an></div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=
=3D"radix-:r203:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-seconda=
ry h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items=
-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-f=
ull icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentCol=
or" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.50=
3.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.=
512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.5=
15-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2=
.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor=
" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 =
1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123=
 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-=
1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.9=
87c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 =
0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.=
888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.0=
5-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 =
1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg><=
/div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left=
: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
 text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.4=
14 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenod=
d"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 =
lg:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-toke=
n-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-24" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa25d64-c0f6-44a3-b953-4d4f0eec68e0" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4=
f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=98=A4=EC=BC=80=EC=
=9D=B4 =EC=97=AC=EA=B8=B0=EA=B9=8C=EC=A7=80=EB=8A=94 =EB=8B=A4 =EB=90=90=EA=
=B1=B0=EB=93=A0? =EC=9D=B4=EC=A0=9C =ED=95=98 ,=EC=A4=91, =EC=83=81 =EB=A0=
=88=EB=B2=A8=EC=97=90 =EB=8C=80=ED=95=98=EC=97=AC =EC=8B=9C=ED=97=98=EC=9D=
=84 =ED=86=B5=EA=B3=BC=ED=95=98=EB=A9=B4 =EA=B0=81=EA=B0=81 user table=EC=
=9D=98 level=EA=B0=92=EC=9D=84 30, 45, 60 =EC=94=A9 =EC=98=AC=EB=A6=AC=EA=
=B3=A0 =ED=86=B5=EA=B3=BC=EA=B8=B0=EC=A4=80=EC=9D=80 =EC=8B=9C=ED=97=98=EB=
=8B=A8=EC=96=B4=EC=A4=91 80%=EC=9D=B4=EC=83=81=EC=9D=84 =EB=A7=9E=EC=B6=9C=
=EC=8B=9C=EC=97=90 =ED=86=B5=EA=B3=BC=EB=A1=9C =EC=9D=B8=EC=A0=95=ED=95=B4=
=EC=A4=98<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-25" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"37487969-57fc-429c-b0a9-cf=
9849668c01" dir=3D"auto" class=3D"text-message flex flex-col items-start wh=
itespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice=
:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 =
juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-ful=
l break-words dark:prose-invert light"><p>=EC=A2=8B=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =ED=95=98, =EC=A4=91, =EC=83=81 =EB=A0=88=EB=B2=A8=EC=9D=98 =EC=8B=9C=
=ED=97=98=EC=9D=84 =ED=86=B5=EA=B3=BC=ED=95=98=EB=A9=B4 =EA=B0=81=EA=B0=81 =
<code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=9D=98 <code>level</code> =
=EA=B0=92=EC=9D=84 30, 45, 60=EC=94=A9 =EC=98=AC=EB=A6=AC=EA=B3=A0, =ED=86=
=B5=EA=B3=BC =EA=B8=B0=EC=A4=80=EC=9D=80 =EC=8B=9C=ED=97=98 =EB=8B=A8=EC=96=
=B4 =EC=A4=91 80% =EC=9D=B4=EC=83=81 =EB=A7=9E=EC=B7=84=EC=9D=84 =EB=95=8C=
=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=9D=B4=EB=
=A5=BC =EC=9C=84=ED=95=B4 <code>finish_test</code> =EB=A9=94=EC=84=9C=EB=93=
=9C=EC=97=90=EC=84=9C =EC=A0=90=EC=88=98=EB=A5=BC =EA=B3=84=EC=82=B0=ED=95=
=98=EA=B3=A0, =EA=B8=B0=EC=A4=80=EC=9D=84 =ED=86=B5=EA=B3=BC=ED=96=88=EC=9D=
=84 =EA=B2=BD=EC=9A=B0 <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=9D=
=98 <code>level</code> =EA=B0=92=EC=9D=84 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=
=B8=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=
=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =
=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:<=
/p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-tok=
en-border-medium"><div class=3D"flex items-center relative text-token-text-=
secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>python</span><div class=3D"flex items-center=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-=
center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></di=
v></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr">=
<code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-ke=
yword">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()
        self.load_images()  <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=
=84=EC=97=90 =EC=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=
=88=EB=8B=A4.</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"SELECT level FROM user W=
HERE id =3D %s"</span>
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            <span class=3D"hljs-keyword">return</span> result[<span class=
=3D"hljs-number">0</span>] <span class=3D"hljs-keyword">if</span> result <s=
pan class=3D"hljs-keyword">else</span> <span class=3D"hljs-number">0</span>
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Quer=
y Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cla=
ss=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_user_level</span>(<span class=3D"hljs-params">self, increment<=
/span>):
        <span class=3D"hljs-keyword">try</span>:
            new_level =3D self.user_level + increment
            cursor =3D self.connection.cursor()
            query =3D <span class=3D"hljs-string">"UPDATE user SET level =
=3D %s WHERE id =3D %s"</span>
            cursor.execute(query, (new_level, self.user))
            self.connection.commit()
            cursor.close()
            self.user_level =3D new_level
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Upda=
te Error"</span>, <span class=3D"hljs-string">f"An error occurred: <span cl=
ass=3D"hljs-subst">{err}</span>"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D<span class=3D"hljs-string">"readonly"</span>, font=3D(<span=
 class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</=
span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D<span class=3D"hl=
js-string">"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-stri=
ng">"black"</span>, highlightthickness=3D<span class=3D"hljs-number">1</spa=
n>)
        self.exam_frame_container.place(x=3D<span class=3D"hljs-number">350=
</span>, y=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"=
hljs-number">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D<span class=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yvi=
ew)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        self.scrollable_frame.bind(<span class=3D"hljs-string">"&lt;Configu=
re&gt;"</span>, <span class=3D"hljs-keyword">lambda</span> e: self.canvas.c=
onfigure(scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string">"all"<=
/span>)))
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)
        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.start_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=
=91=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png"</span>, self.start_test,=
 <span class=3D"hljs-number">1.0</span>
        )
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)

        self.timer_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>,=
 font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hlj=
s-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=
=8C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=8B=9C=
=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png"</span>, self.finish_test=
, <span class=3D"hljs-number">1.0</span>
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.next_test_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_test_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">configure_level_options</span>(<span class=3D"hljs-params">self</span=
>):
        <span class=3D"hljs-keyword">if</span> self.user_level &lt; <span c=
lass=3D"hljs-number">400</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">elif</span> self.user_level &lt; <span=
 class=3D"hljs-number">700</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)
        <span class=3D"hljs-keyword">else</span>:
            self.level_dropdown.config(values=3D[<span class=3D"hljs-string=
">"=ED=95=98"</span>, <span class=3D"hljs-string">"=EC=A4=91"</span>, <span=
 class=3D"hljs-string">"=EC=83=81"</span>])
            self.level_var.<span class=3D"hljs-built_in">set</span>(<span c=
lass=3D"hljs-string">"=ED=95=98"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D!"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span=
 class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string">"#FFFFF=
F"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">150</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =ED=9B=84 =EB=9D=BC=EB=B2=A8=EC=9D=
=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=
=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_sumoongi_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">300</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=3D"hlj=
s-number">300</span>, height=3D<span class=3D"hljs-number">300</span>, bg=
=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span c=
lass=3D"hljs-number">0</span>)
        self.sumoongi_canvas.create_image(<span class=3D"hljs-number">0</sp=
an>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_test</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">38</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=
=EC=A0=95</span>
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D<span class=3D"hljs-number">75</span>, y=
=3D<span class=3D"hljs-number">310</span>)
        self.timer_label.tkraise()  <span class=3D"hljs-comment"># =ED=83=
=80=EC=9D=B4=EB=A8=B8 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=
=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC</span>
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)
        self.prev_test_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.next_test_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_test_words</span>(<span class=3D"hljs-params">self</span>):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY RAND() LIMIT 20"</span>, (selec=
ted_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.entry_vars =3D [tk.StringVar() <span class=3D"hljs-keyword">fo=
r</span> _ <span class=3D"hljs-keyword">in</span> <span class=3D"hljs-built=
_in">range</span>(<span class=3D"hljs-built_in">len</span>(self.test_words)=
)]
        self.current_test_page =3D <span class=3D"hljs-number">0</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_test_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * <span class=3D"hljs-number=
">10</span>
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ <span class=3D"hljs-number">10</span>, <span class=3D"hljs-built_in">len<=
/span>(self.test_words))
        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.test_words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>, wraplength=3D<span class=3D"hljs-number">20=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>, padx=3D<span class=3D"hljs-number">0</span>, pady=3D<span=
 class=3D"hljs-number">0</span>)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <s=
pan class=3D"hljs-number">11</span>), width=3D<span class=3D"hljs-number">2=
0</span>)
            entry.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, padx=3D<span class=3D"hljs-number"=
>0</span>, pady=3D<span class=3D"hljs-number">0</span>, sticky=3D<span clas=
s=3D"hljs-string">"e"</span>)
            entry.grid(ipady=3D<span class=3D"hljs-number">5</span>)  <span=
 class=3D"hljs-comment"># Adjust height with internal padding</span>
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">6</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">4</span>)
        self.update_test_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_test_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.prev_test_button.place(x=3D<span class=3D"hljs-number">400=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.next_test_button.place(x=3D<span class=3D"hljs-number">500=
</span>, y=3D<span class=3D"hljs-number">556</span>)
            self.next_test_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D<span class=3D"hljs-number">600</span>, y=
=3D<span class=3D"hljs-number">556</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_test_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_test_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_test_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_test_page + <s=
pan class=3D"hljs-number">1</span>) * <span class=3D"hljs-number">10</span>=
 &lt; <span class=3D"hljs-built_in">len</span>(self.test_words):
            self.current_test_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_test_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.time_remaining &gt; <sp=
an class=3D"hljs-number">0</span>:
            minutes, seconds =3D <span class=3D"hljs-built_in">divmod</span=
>(self.time_remaining, <span class=3D"hljs-number">60</span>)
            self.timer_label.config(text=3D<span class=3D"hljs-string">f"=
=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{minutes:0=
2}</span>=EB=B6=84 <span class=3D"hljs-subst">{seconds:02}</span>=EC=B4=88"=
</span>)
            self.time_remaining -=3D <span class=3D"hljs-number">1</span>
            self.timer_id =3D self.after(<span class=3D"hljs-number">1000</=
span>, self.update_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.finish_test()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D <span class=3D"hljs-number">600</span>  <sp=
an class=3D"hljs-comment"># Reset to 10 minutes</span>
        self.timer_label.config(text=3D<span class=3D"hljs-string">"=EB=82=
=A8=EC=9D=80=EC=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">finish_test</span>(<span class=3D"hljs-params">self</span>):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for=
</span> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=
=3D"hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-ke=
yword">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower(=
)]
        score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 =
: <span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</=
span>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(=
self.test_words)}</span>"</span>
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =EC=A2=85=EB=A3=8C"</span>, score_message)

        correct_count =3D <span class=3D"hljs-built_in">len</span>(self.tes=
t_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)
        pass_percentage =3D correct_count / <span class=3D"hljs-built_in">l=
en</span>(self.test_words)

        <span class=3D"hljs-keyword">if</span> pass_percentage &gt;=3D <spa=
n class=3D"hljs-number">0.8</span>:
            <span class=3D"hljs-keyword">if</span> self.level_var.get() =3D=
=3D <span class=3D"hljs-string">"=ED=95=98"</span>:
                self.update_user_level(<span class=3D"hljs-number">30</span=
>)
            <span class=3D"hljs-keyword">elif</span> self.level_var.get() =
=3D=3D <span class=3D"hljs-string">"=EC=A4=91"</span>:
                self.update_user_level(<span class=3D"hljs-number">45</span=
>)
            <span class=3D"hljs-keyword">elif</span> self.level_var.get() =
=3D=3D <span class=3D"hljs-string">"=EC=83=81"</span>:
                self.update_user_level(<span class=3D"hljs-number">60</span=
>)
            messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=
=97=98 =ED=86=B5=EA=B3=BC"</span>, <span class=3D"hljs-string">"=EC=B6=95=
=ED=95=98=ED=95=A9=EB=8B=88=EB=8B=A4! =EC=8B=9C=ED=97=98=EC=97=90 =ED=86=B5=
=EA=B3=BC=ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)
            spell_label.config(wraplength=3Dwrap_length / <span class=3D"hl=
js-number">2</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)
            mean_label.config(wraplength=3Dwrap_length / <span class=3D"hlj=
s-number">2</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=
=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_in=
itial, <span class=3D"hljs-number">1.0</span>
        )
        self.result_confirm_button.place(x=3D<span class=3D"hljs-number">35=
0</span>, y=3D<span class=3D"hljs-number">560</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_result_sumoongi_image</span>(<span class=3D"hljs-params">self</s=
pan>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">200</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D<span class=
=3D"hljs-number">200</span>, height=3D<span class=3D"hljs-number">200</span=
>, bg=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<s=
pan class=3D"hljs-number">0</span>)
        self.result_sumoongi_canvas.create_image(<span class=3D"hljs-number=
">100</span>, <span class=3D"hljs-number">100</span>, image=3Dphoto, anchor=
=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D<span class=3D"hljs-number">8=
5</span>, y=3D<span class=3D"hljs-number">310</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D<span class=3D"hljs-string">"Level=
=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>=
, y=3D<span class=3D"hljs-number">80</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
        self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</spa=
n>, y=3D<span class=3D"hljs-number">150</span>)
        self.start_button.place(x=3D<span class=3D"hljs-number">130</span>,=
 y=3D<span class=3D"hljs-number">310</span>)
        self.level_label.tkraise()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">stop_test_and_go_back</span>(<span class=3D"hljs-params">self</span>)=
:
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, <span class=3D"hljs-string">"UserMainPage"</s=
pan>, self.user)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, highlightthickness=3D<span class=3D=
"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelExam(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>finish_test</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90 =EB=
=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=80 =EB=82=B4=EC=9A=A9=EC=9D=84 =EC=
=B6=94=EA=B0=80=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><ol><li>=EC=A0=95=
=EB=8B=B5 =EA=B0=9C=EC=88=98=EC=99=80 =ED=86=B5=EA=B3=BC =EA=B8=B0=EC=A4=80=
=EC=9D=84 =EA=B3=84=EC=82=B0=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C.</li><li>=
=ED=86=B5=EA=B3=BC =EC=8B=9C <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=
=EC=9D=98 <code>level</code> =EA=B0=92=EC=9D=84 =EC=97=85=EB=8D=B0=EC=9D=B4=
=ED=8A=B8=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C.</li><li>=ED=86=B5=EA=B3=BC =
=EC=8B=9C =EC=95=8C=EB=A6=BC =EB=A9=94=EC=8B=9C=EC=A7=80=EB=A5=BC =ED=91=9C=
=EC=8B=9C=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C.</li></ol><p>=EC=9D=B4=EB=A0=
=87=EA=B2=8C =ED=95=98=EB=A9=B4 =EA=B0=81 =EB=A0=88=EB=B2=A8=EC=9D=98 =EC=
=8B=9C=ED=97=98=EC=9D=84 =ED=86=B5=EA=B3=BC=ED=95=A0 =EB=95=8C=EB=A7=88=EB=
=8B=A4 =ED=95=B4=EB=8B=B9 =EB=A0=88=EB=B2=A8=EC=97=90 =EB=94=B0=EB=9D=BC <c=
ode>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=9D=98 <code>level</code> =EA=
=B0=92=EC=9D=B4 =EC=A6=9D=EA=B0=80=ED=95=98=EA=B3=A0, =ED=86=B5=EA=B3=BC =
=EC=97=AC=EB=B6=80=EB=A5=BC =EC=82=AC=EC=9A=A9=EC=9E=90=EC=97=90=EA=B2=8C =
=EC=95=8C=EB=A6=B4 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div=
></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3">=
<div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token=
-main-surface-primary md:absolute md:border md:border-token-border-light md=
:hidden"><div class=3D"flex items-center"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-=
main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center =
justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10=
.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.0000=
5 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4=
 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19=
.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73=
463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H=
4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.6=
1102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.672=
5 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22=
.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.54=
75C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 =
13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.=
6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688=
 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12=
.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.51=
58 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C1=
6.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0=
526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=
=3D"currentColor"></path></svg></span></button></span><span class=3D"" data=
-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hov=
er:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] i=
tems-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-=
heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 =
1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9=
a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a=
1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0=
 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><div cla=
ss=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounded=
-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span =
class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.880=
5 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7=
.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753=
C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0=
045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15=
.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 =
4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 1=
3H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536=
 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.=
4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.190=
2V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.94=
44 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045=
 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg=
></span></button></span></div><span class=3D"" data-state=3D"closed"><butto=
n type=3D"button" id=3D"radix-:r20b:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 te=
xt-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><di=
v class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h=
-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><pa=
th fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44=
 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119=
 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038=
.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.=
055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path=
 fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 =
4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747=
.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1=
.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2=
.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179=
-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 =
2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87=
 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1=
.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2=
.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opa=
city: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.29=
3-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414=
" clip-rule=3D"evenodd"></path></svg></div></button></span></div></div></di=
v><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div clas=
s=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversati=
on-turn-26" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px]=
 px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-au=
to flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-rol=
e=3D"user" data-message-id=3D"aaa264c6-06f4-478f-986a-29e281370cbc" dir=3D"=
auto" class=3D"min-h-[20px] text-message flex flex-col items-start whitespa=
ce-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items=
-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:=
empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] =
rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=
user table=EC=9D=98 id test1=EC=9D=B8 =EA=B2=83=EC=9D=98 level=EC=9D=84 690=
=EC=9C=BC=EB=A1=9C =EB=B0=94=EA=BE=B8=EB=8A=94 =EC=BF=BC=EB=A6=AC=EB=AC=B8=
=EC=A2=80<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-27" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"6dbfaf08-5f68-4be7-82b5-c3=
0d0d82e2e3" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p><code>user</code> =
=ED=85=8C=EC=9D=B4=EB=B8=94=EC=97=90=EC=84=9C <code>id</code>=EA=B0=80 <cod=
e>test1</code>=EC=9D=B8 =EB=A0=88=EC=BD=94=EB=93=9C=EC=9D=98 <code>level</c=
ode>=EC=9D=84 690=EC=9C=BC=EB=A1=9C =EB=B3=80=EA=B2=BD=ED=95=98=EB=8A=94 SQ=
L =EC=BF=BC=EB=A6=AC=EB=8A=94 =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=8A=
=B5=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md bo=
rder-[0.5px] border-token-border-medium"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>sql</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-sql"><s=
pan class=3D"hljs-keyword">UPDATE</span> <span class=3D"hljs-keyword">user<=
/span>
<span class=3D"hljs-keyword">SET</span> level <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">690</span>
<span class=3D"hljs-keyword">WHERE</span> id <span class=3D"hljs-operator">=
=3D</span> <span class=3D"hljs-string">'test1'</span>;
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r20j:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-28" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa25572-9d3a-4e=
e8-8e79-81bb73f403f4" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()
        self.load_images()  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=
=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=84=EC=97=90 =EC=B2=98=EB=A6=
=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4.

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def get_user_level(self):
        try:
            cursor =3D self.connection.cursor()
            query =3D "SELECT level FROM user WHERE id =3D %s"
            cursor.execute(query, (self.user,))
            result =3D cursor.fetchone()
            cursor.close()
            return result[0] if result else 0
        except mysql.connector.Error as err:
            messagebox.showerror("Database Query Error", f"An error occurre=
d: {err}")
            self.destroy()

    def update_user_level(self, increment):
        try:
            new_level =3D self.user_level + increment
            cursor =3D self.connection.cursor()
            query =3D "UPDATE user SET level =3D %s WHERE id =3D %s"
            cursor.execute(query, (new_level, self.user))
            self.connection.commit()
            cursor.close()
            self.user_level =3D new_level
        except mysql.connector.Error as err:
            messagebox.showerror("Database Update Error", f"An error occurr=
ed: {err}")

    def create_widgets(self):
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, state=3D"readonly", font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)

        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)

        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)

        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()

        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC

    def configure_level_options(self):
        if self.user_level &lt; 400:
            self.level_dropdown.config(values=3D["=ED=95=98"])
            self.level_var.set("=ED=95=98")
        elif self.user_level &lt; 700:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91"])
            self.level_var.set("=ED=95=98")
        else:
            self.level_dropdown.config(values=3D["=ED=95=98", "=EC=A4=91", =
"=EC=83=81"])
            self.level_var.set("=ED=95=98")

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D50, y=3D150)
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC
       =20
    def load_images(self):
        self.load_level_image()
        self.load_sumoongi_image()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        self.level_label.tkraise()  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=
=EB=93=9C =ED=9B=84 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84=
 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def start_test(self):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.place(x=3D38, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.timer_label.tkraise()  # =ED=83=80=EC=9D=B4=EB=A8=B8 =EB=9D=BC=
=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =
=EC=98=AC=EB=A6=BC
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        selected_level =3D self.level_var.get()
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY RAND() LIMIT 20", (selected_level,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()

        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score_message =3D f"=EC=A0=90=EC=88=98 : {len(self.test_words) - le=
n(incorrect_words)}/{len(self.test_words)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        correct_count =3D len(self.test_words) - len(incorrect_words)
        pass_percentage =3D correct_count / len(self.test_words)

        if pass_percentage &gt;=3D 0.1:
            if self.level_var.get() =3D=3D "=ED=95=98":
                self.update_user_level(30)
            elif self.level_var.get() =3D=3D "=EC=A4=91":
                self.update_user_level(45)
            elif self.level_var.get() =3D=3D "=EC=83=81":
                self.update_user_level(60)
            messagebox.showinfo("=EC=8B=9C=ED=97=98 =ED=86=B5=EA=B3=BC", "=
=EC=B6=95=ED=95=98=ED=95=A9=EB=8B=88=EB=8B=A4! =EC=8B=9C=ED=97=98=EC=97=90 =
=ED=86=B5=EA=B3=BC=ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4.")

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)

    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.level_label.config(text=3D"Level=EC=9D=84 =EC=84=A0=ED=83=9D=
=ED=95=B4!")
        self.level_dropdown.place(x=3D40, y=3D80)
        self.level_label.place(x=3D60, y=3D150)  # =EB=A0=88=EC=9D=B4=EB=B8=
=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)
        self.level_label.tkraise()

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)
       =20
    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelExam(user_id)
    app.mainloop()

=EA=B7=B8 =EC=8B=9C=ED=97=98=EC=9D=B4 =EB=81=9D=EB=82=98=EA=B3=A0 level=EC=
=9D=84 =EB=8B=A4=EC=8B=9C =EC=B0=B8=EC=A1=B0=ED=95=B4=EC=84=9C =EB=93=9C=EB=
=A1=AD=EB=B0=95=EC=8A=A4=EB=A5=BC update=EC=8B=9C=EC=BC=9C=EC=A4=98=EC=95=
=BC=EC=A7=80<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden=
 pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-center round=
ed-full text-token-text-secondary transition hover:bg-token-main-surface-te=
rtiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6=
.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.=
789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628=
l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293=
-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></=
button></span></div></div></div></div></div></div></div></div></div></div><=
div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"co=
nversation-turn-29" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:p=
y-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex fl=
ex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=
=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidd=
en rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm =
flex items-center justify-center bg-token-main-surface-primary text-token-t=
ext-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col=
 gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div dat=
a-message-author-role=3D"assistant" data-message-id=3D"9f08b2a4-4156-4942-8=
77c-3541ebd867f3" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex=
-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5=
 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-f=
ull flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"m=
arkdown prose w-full break-words dark:prose-invert light"><p>=EC=8B=9C=ED=
=97=98=EC=9D=B4 =EB=81=9D=EB=82=98=EA=B3=A0 <code>level</code> =EA=B0=92=EC=
=9D=84 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=9C =ED=9B=84, =EB=93=9C=
=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=EB=A5=BC =EC=97=85=EB=8D=B0=
=EC=9D=B4=ED=8A=B8=ED=95=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=95=98=
=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4=
 <code>reset_to_initial</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=
=9C <code>configure_level_options</code>=EB=A5=BC =EB=8B=A4=EC=8B=9C =ED=98=
=B8=EC=B6=9C=ED=95=98=EC=97=AC =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=
=94=EB=89=B4=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=A9=EB=8B=
=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C=
 =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark =
bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div clas=
s=3D"flex items-center relative text-token-text-secondary bg-token-main-sur=
face-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><s=
pan>python</span><div class=3D"flex items-center"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-=
3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1=
-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 =
1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=
=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overf=
low-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-=
pre hljs language-python"><span class=3D"hljs-keyword">import</span> tkinte=
r <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelExam</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =EC=8B=9C=ED=97=98"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D <span class=3D"hljs-number">0</span>
        self.total_questions =3D <span class=3D"hljs-number">20</span>
        self.current_test_page =3D <span class=3D"hljs-number">0</span>
        self.time_remaining =3D <span class=3D"hljs-number">600</span>
        self.timer_id =3D <span class=3D"hljs-literal">None</span>
        self.user_level =3D self.get_user_level()
        self.create_widgets()
        self.configure_level_options()
        self.load_images()  <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=EB=A5=BC =EC=B4=88=EA=B8=B0=ED=99=94 =ED=9B=
=84=EC=97=90 =EC=B2=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=
=88=EB=8B=A4.</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            <span class=3D"hljs-keyword">return</span> mysql.connector.conn=
ect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r20r:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-30" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa233ae-b017-40=
05-ba76-3a7c58c870ab" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84=
=EB=A7=8C<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-31" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"f31417ab-680e-4864-929d-7d=
884a4dc095" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p>=EC=88=98=EC=A0=95=
=EB=90=9C =EB=B6=80=EB=B6=84=EC=9D=80 <code>reset_to_initial</code> =EB=A9=
=94=EC=84=9C=EB=93=9C=EC=99=80 <code>finish_test</code> =EB=A9=94=EC=84=9C=
=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4. <code>reset_to_initial</code>=EC=97=
=90=EC=84=9C <code>configure_level_options</code>=EB=A5=BC =ED=98=B8=EC=B6=
=9C=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=98=EA=B3=A0, <code>finish_test</code>=
 =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C <code>user_level</code>=EC=
=9D=84 =EB=8B=A4=EC=8B=9C =EC=B0=B8=EC=A1=B0=ED=95=98=EB=8F=84=EB=A1=9D =EC=
=88=98=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=
=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84=EC=9E=85=EB=8B=
=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5=
px] border-token-border-medium"><div class=3D"flex items-center relative te=
xt-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs f=
ont-sans justify-between rounded-t-md"><span>python</span><div class=3D"fle=
x items-center"><span class=3D"" data-state=3D"closed"><button class=3D"fle=
x gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24=
" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 =
0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3=
-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 =
1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" cli=
p-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</butt=
on></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined=
" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span cl=
ass=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_">finish=
_test</span>(<span class=3D"hljs-params">self</span>):
    self.reset_timer()
    self.timer_label.place_forget()

    self.canvas_img.place_forget()
    self.load_result_sumoongi_image()

    incorrect_words =3D [(spell, mean) <span class=3D"hljs-keyword">for</sp=
an> i, (spell, mean) <span class=3D"hljs-keyword">in</span> <span class=3D"=
hljs-built_in">enumerate</span>(self.test_words) <span class=3D"hljs-keywor=
d">if</span> self.entry_vars[i].get().strip().lower() !=3D spell.lower()]
    score_message =3D <span class=3D"hljs-string">f"=EC=A0=90=EC=88=98 : <s=
pan class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self.tes=
t_words) - <span class=3D"hljs-built_in">len</span>(incorrect_words)}</span=
>/<span class=3D"hljs-subst">{<span class=3D"hljs-built_in">len</span>(self=
.test_words)}</span>"</span>
    messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98 =EC=
=A2=85=EB=A3=8C"</span>, score_message)

    correct_count =3D <span class=3D"hljs-built_in">len</span>(self.test_wo=
rds) - <span class=3D"hljs-built_in">len</span>(incorrect_words)
    pass_percentage =3D correct_count / <span class=3D"hljs-built_in">len</=
span>(self.test_words)

    <span class=3D"hljs-keyword">if</span> pass_percentage &gt;=3D <span cl=
ass=3D"hljs-number">0.8</span>:
        <span class=3D"hljs-keyword">if</span> self.level_var.get() =3D=3D =
<span class=3D"hljs-string">"=ED=95=98"</span>:
            self.update_user_level(<span class=3D"hljs-number">30</span>)
        <span class=3D"hljs-keyword">elif</span> self.level_var.get() =3D=
=3D <span class=3D"hljs-string">"=EC=A4=91"</span>:
            self.update_user_level(<span class=3D"hljs-number">45</span>)
        <span class=3D"hljs-keyword">elif</span> self.level_var.get() =3D=
=3D <span class=3D"hljs-string">"=EC=83=81"</span>:
            self.update_user_level(<span class=3D"hljs-number">60</span>)
        messagebox.showinfo(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=
 =ED=86=B5=EA=B3=BC"</span>, <span class=3D"hljs-string">"=EC=B6=95=ED=95=
=98=ED=95=A9=EB=8B=88=EB=8B=A4! =EC=8B=9C=ED=97=98=EC=97=90 =ED=86=B5=EA=B3=
=BC=ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-keyw=
ord">in</span> self.scrollable_frame.winfo_children():
        widget.destroy()

    frame_width =3D self.scrollable_frame.winfo_width()
    wrap_length =3D frame_width - <span class=3D"hljs-number">20</span>

    <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span class=3D=
"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>(inc=
orrect_words):
        word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=3D"=
hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</span>=
, pady=3D<span class=3D"hljs-number">5</span>)
        word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0</sp=
an>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hlj=
s-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

        spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<span cl=
ass=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</spa=
n>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hljs-st=
ring">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>)
        spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-strin=
g">"w"</span>)
        spell_label.config(wraplength=3Dwrap_length / <span class=3D"hljs-n=
umber">2</span>)

        mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span clas=
s=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">10</span>=
), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span class=
=3D"hljs-string">"e"</span>)
        mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, column=
=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-strin=
g">"e"</span>)
        mean_label.config(wraplength=3Dwrap_length / <span class=3D"hljs-nu=
mber">2</span>)

        word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</span=
>, weight=3D<span class=3D"hljs-number">1</span>)
        word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</span=
>, weight=3D<span class=3D"hljs-number">1</span>)

    self.prev_test_button.place_forget()
    self.next_test_button.place_forget()
    self.end_button.place_forget()

    self.result_confirm_button =3D self.create_image_button(
        <span class=3D"hljs-string">"=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=
=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EA=B2=B0=EA=
=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.reset_to_initi=
al, <span class=3D"hljs-number">1.0</span>
    )
    self.result_confirm_button.place(x=3D<span class=3D"hljs-number">350</s=
pan>, y=3D<span class=3D"hljs-number">560</span>)

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">reset_to_initial</span>(<span class=3D"hljs-params">self</span>):
    self.result_confirm_button.place_forget()
    self.result_sumoongi_canvas.place_forget()
    self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=A7=
=84=ED=96=89=EB=8F=84.png"</span>)
    <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-keyw=
ord">in</span> self.scrollable_frame.winfo_children():
        widget.destroy()
    self.user_level =3D self.get_user_level()  <span class=3D"hljs-comment"=
># =EC=8B=9C=ED=97=98 =ED=9B=84=EC=97=90 =EC=B5=9C=EC=8B=A0 =EB=A0=88=EB=B2=
=A8=EC=9D=84 =EB=8B=A4=EC=8B=9C =EA=B0=80=EC=A0=B8=EC=98=B5=EB=8B=88=EB=8B=
=A4.</span>
    self.configure_level_options()  <span class=3D"hljs-comment"># =EB=A0=
=88=EB=B2=A8 =EC=98=B5=EC=85=98=EC=9D=84 =EC=B5=9C=EC=8B=A0 =EC=83=81=ED=83=
=9C=EB=A1=9C =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=A9=EB=8B=88=EB=8B=
=A4.</span>
    self.level_label.config(text=3D<span class=3D"hljs-string">"Level=EC=9D=
=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>)
    self.level_dropdown.place(x=3D<span class=3D"hljs-number">40</span>, y=
=3D<span class=3D"hljs-number">80</span>)
    self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=3D<=
span class=3D"hljs-number">150</span>)  <span class=3D"hljs-comment"># =EB=
=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=B9=98 =EB=B3=B5=EA=B7=80</span>
    self.sumoongi_canvas.place(x=3D<span class=3D"hljs-number">400</span>, =
y=3D<span class=3D"hljs-number">150</span>)
    self.start_button.place(x=3D<span class=3D"hljs-number">130</span>, y=
=3D<span class=3D"hljs-number">310</span>)
    self.level_label.tkraise()
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r213:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-32" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa268bf-6d6e-4b=
af-9463-ad6f635a731d" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D tk.Button(self, text=3D"=EC=9D=B4=EC=A0=84=EC=
=9C=BC=EB=A1=9C", command=3Dlambda: Util.SwitchPage(self, "UserMainPage", s=
elf.user), width=3D6, height=3D1, font=3D("Helvetica", 8))
        self.back_button.place(x=3D25, y=3D10)  # =EC=A2=8C=ED=91=9C (10, 1=
0) =EC=9C=84=EC=B9=98=EC=97=90 =EB=B2=84=ED=8A=BC =EB=B0=B0=EC=B9=98

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"=EB=82=9C=EC=9D=B4=EB=
=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=3D("He=
lvetica", 20), bg=3D"#FFFFFF")
        self.level_label.place(x=3D45, y=3D100)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D70, y=3D140)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.l=
oad_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D"=EB=A0=88=EB=B2=A8", font=
=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D150, y=3D215)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D240)
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D275)  # =EC=9D=B4=EB=AF=B8=EC=A7=
=80 =EC=9C=84=EC=B9=98 =EC=A7=80=EC=A0=95

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC 300x200 =ED=81=AC=EA=B8=B0=EB=A1=
=9C =EC=A1=B0=EC=A0=95
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        words =3D cursor.fetchall()
        cursor.close()

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        if words:
            for spell, mean in words:
                word_label =3D ttk.Label(self.scrollable_frame, text=3Df"{s=
pell} / {mean}", font=3D("Helvetica", 12), background=3D"#FFFFFF")
                word_label.pack(anchor=3D"w", pady=3D2)
        else:
            messagebox.showinfo("=EB=8B=A8=EC=96=B4 =EC=97=86=EC=9D=8C", "=
=EC=84=A0=ED=83=9D=ED=95=9C =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =ED=95=B4=
=EB=8B=B9=ED=95=98=EB=8A=94 =EB=8B=A8=EC=96=B4=EA=B0=80 =EC=97=86=EC=8A=B5=
=EB=8B=88=EB=8B=A4.")

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()


=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5=EA=B3=BC =EB=98=91=EA=B0=99=
=EC=9D=B4 =EB=B0=94=EA=BF=94=EB=B4=90 =EB=8B=A8 =EC=9D=B4=EA=B1=B0=EB=8A=94=
 =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5=ED=8E=98=EC=9D=B4=EC=A7=80=
=EC=95=BC, =EC=98=86=EC=97=90 level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=98=EB=
=A9=B4 =EA=B7=B8=EA=B2=83=EC=97=90 =EB=A7=9E=EC=B6=B0=EB=8B=A8=EC=96=B4=EA=
=B0=80 =EB=82=98=EC=98=A4=EB=8A=94=EA=B1=B0=EC=95=BC, =EA=B7=B8=EA=B1=B0 =
=EB=B9=BC=EB=A9=B4 =EA=B0=99=EC=95=84<div class=3D"absolute bottom-0 right-=
full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-ce=
nter justify-center rounded-full text-token-text-secondary transition hover=
:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" =
width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ico=
n-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a=
4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.=
79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6=
.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 =
11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D=
"evenodd"></path></svg></button></span></div></div></div></div></div></div>=
</div></div></div></div><div class=3D"w-full text-token-text-primary" dir=
=3D"auto" data-testid=3D"conversation-turn-33" data-scroll-anchor=3D"false"=
><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 l=
g:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap=
-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div clas=
s=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-=
0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center ju=
stify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"08938b26-604c-4921-bd49-87c201795225" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=EC=A2=8B=EC=8A=B5=EB=8B=88=EB=8B=A4. =EA=B8=B0=EC=A1=B4=EC=
=9D=98 =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=EC=
=A7=80=EB=A5=BC =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=
=9D=B4=EC=A7=80=EC=99=80 =EB=8F=99=EC=9D=BC=ED=95=9C =EA=B5=AC=EC=A1=B0=EB=
=A1=9C =EB=B3=80=EA=B2=BD=ED=95=98=EB=A9=B4=EC=84=9C, =EC=84=A0=ED=83=9D=ED=
=95=9C =EB=A0=88=EB=B2=A8=EC=97=90 =EB=A7=9E=EC=B6=B0 =EB=8B=A8=EC=96=B4=EB=
=A5=BC =ED=91=9C=EC=8B=9C=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=98=EA=B2=A0=EC=
=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=
=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div cl=
ass=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-mediu=
m"><div class=3D"flex items-center relative text-token-text-secondary bg-to=
ken-main-surface-secondary px-4 py-2 text-xs font-sans justify-between roun=
ded-t-md"><span>python</span><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-=
2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5=
h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 =
0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path><=
/svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div =
class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D tk.Button(self, text=3D<span class=3D"hljs-str=
ing">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C"</span>, command=3D<span class=
=3D"hljs-keyword">lambda</span>: Util.SwitchPage(self, <span class=3D"hljs-=
string">"UserMainPage"</span>, self.user), width=3D<span class=3D"hljs-numb=
er">6</span>, height=3D<span class=3D"hljs-number">1</span>, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">8</sp=
an>))
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)  <span class=3D"hljs-comment"># =
=EC=A2=8C=ED=91=9C (10, 10) =EC=9C=84=EC=B9=98=EC=97=90 =EB=B2=84=ED=8A=BC =
=EB=B0=B0=EC=B9=98</span>

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">45</span>, y=
=3D<span class=3D"hljs-number">100</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">70</span>=
, y=3D<span class=3D"hljs-number">140</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=EB=A0=88=EB=B2=A8"</span>, font=3D(<span class=3D"hljs-string">"Helveti=
ca"</span>, <span class=3D"hljs-number">12</span>), bg=3D<span class=3D"hlj=
s-string">"#FFFFFF"</span>)
        self.bar_label.place(x=3D<span class=3D"hljs-number">150</span>, y=
=3D<span class=3D"hljs-number">215</span>)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">240</span>)
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">275</span>)  <span class=3D"hljs-comment"># =
=EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=B9=98 =EC=A7=80=EC=A0=95</span>

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)  <s=
pan class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC 300x200 =
=ED=81=AC=EA=B8=B0=EB=A1=9C =EC=A1=B0=EC=A0=95</span>
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        words =3D cursor.fetchall()
        cursor.close()

        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        <span class=3D"hljs-keyword">if</span> words:
            <span class=3D"hljs-keyword">for</span> spell, mean <span class=
=3D"hljs-keyword">in</span> words:
                word_label =3D ttk.Label(self.scrollable_frame, text=3D<spa=
n class=3D"hljs-string">f"<span class=3D"hljs-subst">{spell}</span> / <span=
 class=3D"hljs-subst">{mean}</span>"</span>, font=3D(<span class=3D"hljs-st=
ring">"Helvetica"</span>, <span class=3D"hljs-number">12</span>), backgroun=
d=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
                word_label.pack(anchor=3D<span class=3D"hljs-string">"w"</s=
pan>, pady=3D<span class=3D"hljs-number">2</span>)
        <span class=3D"hljs-keyword">else</span>:
            messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=A8=EC=
=96=B4 =EC=97=86=EC=9D=8C"</span>, <span class=3D"hljs-string">"=EC=84=A0=
=ED=83=9D=ED=95=9C =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =ED=95=B4=EB=8B=B9=
=ED=95=98=EB=8A=94 =EB=8B=A8=EC=96=B4=EA=B0=80 =EC=97=86=EC=8A=B5=EB=8B=88=
=EB=8B=A4."</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=
=EC=A7=80=EB=A5=BC =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=
=EC=9D=B4=EC=A7=80=EC=99=80 =EC=9C=A0=EC=82=AC=ED=95=98=EA=B2=8C =EA=B5=AC=
=ED=98=84=ED=96=88=EC=9C=BC=EB=A9=B0, =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=
=ED=83=9D=ED=95=98=EB=A9=B4 =ED=95=B4=EB=8B=B9 =EB=A0=88=EB=B2=A8=EC=97=90 =
=EB=A7=9E=EB=8A=94 =EB=8B=A8=EC=96=B4 =EB=AA=A9=EB=A1=9D=EC=9D=B4 =ED=91=9C=
=EC=8B=9C=EB=90=98=EB=8F=84=EB=A1=9D <code>load_words</code> =EB=A9=94=EC=
=84=9C=EB=93=9C=EB=A5=BC =EA=B5=AC=ED=98=84=ED=96=88=EC=8A=B5=EB=8B=88=EB=
=8B=A4. =ED=95=84=EC=9A=94=ED=95=9C =EB=8B=A4=EB=A5=B8 UI =EC=9A=94=EC=86=
=8C=EB=93=A4=EC=9D=80 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=
=98=EC=9D=B4=EC=A7=80=EC=9D=98 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=9C=
=A0=EC=A7=80=ED=95=98=EB=A9=B4=EC=84=9C =EA=B5=AC=ED=98=84=ED=96=88=EC=8A=
=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex g=
ap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rou=
nded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border =
md:border-token-border-light md:hidden"><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C=
6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.0=
0005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2=
629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3=
.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.4=
03 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319=
 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019=
 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9=
996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185=
 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16=
.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.60=
64 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665Z=
M15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18=
593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385=
 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15=
.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.000=
1C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8=
.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button=
></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg =
text-token-text-secondary hover:bg-token-main-surface-secondary"><span clas=
s=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
</span></button></span><div class=3D"flex"><span class=3D"" data-state=3D"c=
losed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token=
-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725=
 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.=
36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921=
 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045=
C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 =
15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.00=
45 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65=
574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 =
13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6=
661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258=
 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.=
0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.00=
45 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fil=
l=3D"currentColor"></path></svg></span></button></span></div><span class=3D=
"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r21b:" aria-h=
aspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cur=
sor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-tok=
en-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-=
0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.=
4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943=
a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.2=
96a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306=
-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-=
1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0=
 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.=
47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229=
 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1=
.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.16=
5 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.9=
98c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 =
1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187=
-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.1=
92-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line=
-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</=
span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quatern=
ary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 =
1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-=
1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></=
button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></d=
iv></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"a=
uto" data-testid=3D"conversation-turn-34" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2ccd8-b29d=
-4b84-b71a-bd8829d79838" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D tk.Button(self, text=3D"=EC=9D=B4=EC=A0=84=EC=
=9C=BC=EB=A1=9C", command=3Dlambda: Util.SwitchPage(self, "UserMainPage", s=
elf.user), width=3D6, height=3D1, font=3D("Helvetica", 8))
        self.back_button.place(x=3D25, y=3D10)  # =EC=A2=8C=ED=91=9C (10, 1=
0) =EC=9C=84=EC=B9=98=EC=97=90 =EB=B2=84=ED=8A=BC =EB=B0=B0=EC=B9=98

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"=EB=82=9C=EC=9D=B4=EB=
=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=3D("He=
lvetica", 20), bg=3D"#FFFFFF")
        self.level_label.place(x=3D45, y=3D100)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D70, y=3D140)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.l=
oad_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D"=EB=A0=88=EB=B2=A8", font=
=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D150, y=3D215)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D240)
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D275)  # =EC=9D=B4=EB=AF=B8=EC=A7=
=80 =EC=9C=84=EC=B9=98 =EC=A7=80=EC=A0=95

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC 300x200 =ED=81=AC=EA=B8=B0=EB=A1=
=9C =EC=A1=B0=EC=A0=95
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        words =3D cursor.fetchall()
        cursor.close()

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        if words:
            for spell, mean in words:
                word_label =3D ttk.Label(self.scrollable_frame, text=3Df"{s=
pell} / {mean}", font=3D("Helvetica", 12), background=3D"#FFFFFF")
                word_label.pack(anchor=3D"w", pady=3D2)
        else:
            messagebox.showinfo("=EB=8B=A8=EC=96=B4 =EC=97=86=EC=9D=8C", "=
=EC=84=A0=ED=83=9D=ED=95=9C =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =ED=95=B4=
=EB=8B=B9=ED=95=98=EB=8A=94 =EB=8B=A8=EC=96=B4=EA=B0=80 =EC=97=86=EC=8A=B5=
=EB=8B=88=EB=8B=A4.")

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EA=B7=B8 =EB=8B=A8=EC=96=B4 =EB=82=98=EC=98=A4=EB=8A=94 =EB=B6=80=EB=B6=84=
 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5=EC=B2=98=EB=9F=BC =ED=94=84=
=EB=A0=88=EC=9E=84=EC=97=90 =EB=9D=BC=EB=B2=A8=EB=A1=9C =EB=82=98=EC=98=A4=
=EA=B2=8C =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EB=82=98=EC=98=A4=EA=B2=8C =
=ED=95=B4=EB=B4=90, =EC=95=84=EB=9E=98 =EC=9D=B4=EC=A0=84 =EB=8B=A4=EC=9D=
=8C=EB=B2=84=ED=8A=BC=EB=8F=84 =EC=9E=88=EA=B2=8C=ED=95=98=EA=B3=A0<div cla=
ss=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hov=
er/conversation-turn:block"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-t=
ext-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.=
094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 =
1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-=
.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 =
0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-35=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avata=
r flex h-6 w-6 items-center justify-center overflow-hidden rounded-full jui=
ce:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center j=
ustify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8=
"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"91cb3c06-7881-4219-9bb7-3ee95f2906f5" dir=
=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whit=
espace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:i=
tems-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 ju=
ice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full =
break-words dark:prose-invert light"><p>=EC=A2=8B=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =EB=8B=A8=EC=96=B4 =EB=82=98=EC=98=A4=EB=8A=94 =EB=B6=80=EB=B6=84=EC=
=9D=84 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5=EC=B2=98=EB=9F=BC =ED=
=94=84=EB=A0=88=EC=9E=84=EC=97=90 =EB=9D=BC=EB=B2=A8=EB=A1=9C =EB=82=98=EC=
=98=A4=EA=B2=8C =ED=95=98=EA=B3=A0, =EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=8B=A4=
=EC=9D=8C =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EA=B2=A0=
=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=
=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div=
 class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-me=
dium"><div class=3D"flex items-center relative text-token-text-secondary bg=
-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between r=
ounded-t-md"><span>python</span><div class=3D"flex items-center"><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div=
 class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D tk.Button(self, text=3D<span class=3D"hljs-str=
ing">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C"</span>, command=3D<span class=
=3D"hljs-keyword">lambda</span>: Util.SwitchPage(self, <span class=3D"hljs-=
string">"UserMainPage"</span>, self.user), width=3D<span class=3D"hljs-numb=
er">6</span>, height=3D<span class=3D"hljs-number">1</span>, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">8</sp=
an>))
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">45</span>, y=
=3D<span class=3D"hljs-number">100</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">70</span>=
, y=3D<span class=3D"hljs-number">140</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=EB=A0=88=EB=B2=A8"</span>, font=3D(<span class=3D"hljs-string">"Helveti=
ca"</span>, <span class=3D"hljs-number">12</span>), bg=3D<span class=3D"hlj=
s-string">"#FFFFFF"</span>)
        self.bar_label.place(x=3D<span class=3D"hljs-number">150</span>, y=
=3D<span class=3D"hljs-number">215</span>)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">240</span>)
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.prev_button =3D tk.Button(self, text=3D<span class=3D"hljs-str=
ing">"=EC=9D=B4=EC=A0=84"</span>, command=3Dself.prev_page, state=3Dtk.DISA=
BLED, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=
=3D"hljs-number">12</span>))
        self.prev_button.place(x=3D<span class=3D"hljs-number">350</span>, =
y=3D<span class=3D"hljs-number">560</span>)

        self.next_button =3D tk.Button(self, text=3D<span class=3D"hljs-str=
ing">"=EB=8B=A4=EC=9D=8C"</span>, command=3Dself.next_page, state=3Dtk.DISA=
BLED, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=
=3D"hljs-number">12</span>))
        self.next_button.place(x=3D<span class=3D"hljs-number">450</span>, =
y=3D<span class=3D"hljs-number">560</span>)
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">275</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D=
"hljs-number">2</span>, sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, anchor=3D<span =
class=3D"hljs-string">"w"</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.next_button.config(state=3Dtk.NORMAL)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=
=EB=93=9C=EB=8A=94 =EB=8B=A8=EC=96=B4 =EB=AA=A9=EB=A1=9D=EC=9D=84 =ED=8E=98=
=EC=9D=B4=EC=A7=80=EB=B3=84=EB=A1=9C =ED=91=9C=EC=8B=9C=ED=95=98=EA=B3=A0, =
=EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC=EC=9D=84=
 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=8E=98=EC=9D=B4=EC=A7=80 =EA=B0=84=
 =EC=9D=B4=EB=8F=99=EC=9D=84 =ED=95=A0 =EC=88=98 =EC=9E=88=EA=B2=8C =ED=95=
=A9=EB=8B=88=EB=8B=A4. =EB=8B=A8=EC=96=B4 =EB=AA=A9=EB=A1=9D=EC=9D=B4 <code=
>self.words</code>=EC=97=90 =EC=A0=80=EC=9E=A5=EB=90=98=EA=B3=A0, =ED=98=84=
=EC=9E=AC =ED=8E=98=EC=9D=B4=EC=A7=80=EB=A5=BC =EB=82=98=ED=83=80=EB=82=B4=
=EB=8A=94 <code>self.current_page</code> =EB=B3=80=EC=88=98=EB=A5=BC =EC=82=
=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=8E=98=EC=9D=B4=EC=A7=80=EB=B3=84 =EB=8B=
=A8=EC=96=B4=EB=A5=BC =ED=91=9C=EC=8B=9C=ED=95=A9=EB=8B=88=EB=8B=A4. <code>=
display_words</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=8A=94 =ED=98=84=EC=9E=
=AC =ED=8E=98=EC=9D=B4=EC=A7=80=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=A5=BC =ED=91=
=9C=EC=8B=9C=ED=95=98=EA=B3=A0, <code>update_buttons</code> =EB=A9=94=EC=84=
=9C=EB=93=9C=EB=8A=94 =EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=8B=A4=EC=9D=8C =EB=
=B2=84=ED=8A=BC=EC=9D=98 =EC=83=81=ED=83=9C=EB=A5=BC =EC=97=85=EB=8D=B0=EC=
=9D=B4=ED=8A=B8=ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div=
 class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-cen=
ter justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary m=
d:absolute md:border md:border-token-border-light md:hidden"><div class=3D"=
flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"=
rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"=
><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.=
54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.=
00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129=
 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0=
902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13=
 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1=
 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20=
.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176=
 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17=
.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.70=
59 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C=
20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.6=
2017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995=
 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18=
.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.84=
83C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 1=
2.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2=
687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path>=
</svg></span></button></span><span class=3D"" data-state=3D"closed"><button=
 class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-=
secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cente=
r"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fil=
l=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3=
 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3=
 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 =
0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"eve=
nodd"></path></svg></span></button></span><div class=3D"flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] =
w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.=
9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.2=
9476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49=
209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6=
569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644=
L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.473=
76L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 =
9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2=
941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 =
14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 1=
4.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H=
18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 1=
8.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></sp=
an></div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=
=3D"radix-:r21j:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-seconda=
ry h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items=
-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-f=
ull icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentCol=
or" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.50=
3.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.=
512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.5=
15-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2=
.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor=
" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 =
1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123=
 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-=
1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.9=
87c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 =
0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.=
888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.0=
5-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 =
1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg><=
/div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left=
: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
 text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.4=
14 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenod=
d"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 =
lg:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-toke=
n-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-36" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa21053-a720-4c1a-9b7a-a588beea280a" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4=
f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EB=8B=A8=EC=96=B4 =
=EB=82=98=EC=98=A4=EB=8A=94 =EA=B3=B3 =EB=9D=BC=EB=B2=A8 =EB=B0=B0=EA=B2=BD=
=EC=9D=B4=EB=82=98 =EC=9D=B4=EC=A0=84 =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC=
 =EB=8B=A8=EC=96=B4 =EB=AA=A8=EC=96=91, =ED=98=B8=EB=B2=84=ED=96=88=EC=9D=
=84=EB=95=8C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=93=B1 =EB=94=94=EC=9E=90=EC=9D=
=B8 =EC=A0=81 =EB=AA=A8=EB=93=A0=EB=B6=80=EB=B6=84=EC=9D=84 =EC=9D=BC=EC=9E=
=90=EB=B3=84 =ED=95=99=EC=8A=B5=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=
=8C =ED=95=98=EB=9D=BC=EA=B3=A0<div class=3D"absolute bottom-0 right-full t=
op-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center j=
ustify-center rounded-full text-token-text-secondary transition hover:bg-to=
ken-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536=
 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 =
1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a=
3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5=
 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"even=
odd"></path></svg></button></span></div></div></div></div></div></div></div=
></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"aut=
o" data-testid=3D"conversation-turn-37" data-scroll-anchor=3D"false"><div c=
lass=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 =
xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juic=
e:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"fl=
ex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 jui=
ce:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-c=
enter overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relat=
ive p-1 rounded-sm flex items-center justify-center bg-token-main-surface-p=
rimary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" vie=
wBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path=
 d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8=
409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 3=
2.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.789=
3 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058=
 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 =
9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.1750=
5C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 =
16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.8=
1966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.089=
2 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37=
.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.37=
47 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 =
26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.=
5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 =
29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8=
556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.887=
4 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.=
0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964=
 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.=
0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 =
21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0=
892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.1974=
2 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L1=
3.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 1=
4.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.72=
83 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L=
16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.=
9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.552=
79 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V=
19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64=
893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 =
15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5=
082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862=
 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25=
.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.47=
69 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 1=
8.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.36=
17 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 =
32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6=
066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 3=
1.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.87=
17L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 1=
0.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9=
783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207=
 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29=
.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.539=
45 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424=
 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10=
.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.21=
73 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C=
16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93=
941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 =
9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.=
2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.497=
8L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"=
currentColor"></path></svg></div></div></div></div></div><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max=
-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"1cc=
6bb82-8b07-4812-b9cb-64ca1972c1c9" dir=3D"auto" class=3D"min-h-[20px] text-=
message flex flex-col items-start whitespace-pre-wrap break-words [.text-me=
ssage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div =
class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]=
"><div class=3D"markdown prose w-full break-words dark:prose-invert light">=
<p>=EC=95=8C=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=BC=EC=9E=90=EB=B3=
=84 =ED=95=99=EC=8A=B5=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EB=94=
=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EC=A0=81=EC=9A=A9=ED=95=98=EB=8F=84=EB=A1=
=9D =EC=88=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=97=
=AC=EA=B8=B0=EC=84=9C=EB=8A=94 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B2=84=ED=8A=
=BC=EA=B3=BC =EB=B0=B0=EA=B2=BD=EC=83=89, =EB=A0=88=EC=9D=B4=EB=B8=94 =EC=
=8A=A4=ED=83=80=EC=9D=BC =EB=93=B1=EC=9D=84 =EB=AA=A8=EB=91=90 =EC=9D=BC=EC=
=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=
=B2=8C =EB=A7=8C=EB=93=AD=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=
=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=
=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] borde=
r-token-border-medium"><div class=3D"flex items-center relative text-token-=
text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans =
justify-between rounded-t-md"><span>python</span><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 i=
tems-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 =
3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 =
2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1=
 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=
=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></s=
pan></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as</sp=
an> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">45</span>, y=
=3D<span class=3D"hljs-number">100</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">70</span>=
, y=3D<span class=3D"hljs-number">140</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=EB=A0=88=EB=B2=A8"</span>, font=3D(<span class=3D"hljs-string">"Helveti=
ca"</span>, <span class=3D"hljs-number">12</span>), bg=3D<span class=3D"hlj=
s-string">"#FFFFFF"</span>)
        self.bar_label.place(x=3D<span class=3D"hljs-number">150</span>, y=
=3D<span class=3D"hljs-number">215</span>)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">240</span>)
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>,
            self.prev_page, <span class=3D"hljs-number">1.0</span>
        )
        self.prev_button.place(x=3D<span class=3D"hljs-number">350</span>, =
y=3D<span class=3D"hljs-number">560</span>)

        self.next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>,
            self.next_page, <span class=3D"hljs-number">1.0</span>
        )
        self.next_button.place(x=3D<span class=3D"hljs-number">450</span>, =
y=3D<span class=3D"hljs-number">560</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">275</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()

        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)

        <span class=3D"hljs-keyword">for</span> i, (spell, mean) <span clas=
s=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</span>=
(self.words[start_index:end_index]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.grid(row=3Di, column=3D<span class=3D"hljs-number">0=
</span>, columnspan=3D<span class=3D"hljs-number">2</span>, padx=3D<span cl=
ass=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-number">2</span>, =
sticky=3D<span class=3D"hljs-string">"ew"</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span =
class=3D"hljs-string">"w"</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"w"</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"w"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.next_button.config(state=3Dtk.NORMAL)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=
=BC=EC=9D=84 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B2=84=ED=8A=BC=EC=9C=BC=EB=A1=
=9C =EB=A7=8C=EB=93=A4=EC=97=88=EA=B3=A0, =EB=A0=88=EC=9D=B4=EB=B8=94 =EC=
=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=
=8A=B5=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EC=A0=81=EC=9A=A9=ED=
=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=98=90=ED=95=9C, =EB=8B=A8=EC=96=B4 =
=EB=AA=A9=EB=A1=9D=EC=9D=84 =ED=8E=98=EC=9D=B4=EC=A7=80=EB=B3=84=EB=A1=9C =
=EB=82=98=EB=88=84=EC=96=B4 =ED=91=9C=EC=8B=9C=ED=95=98=EA=B3=A0, =EC=9D=B4=
=EC=A0=84 =EB=B0=8F =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC=EC=9D=84 =ED=86=
=B5=ED=95=B4 =ED=8E=98=EC=9D=B4=EC=A7=80=EB=A5=BC =EC=9D=B4=EB=8F=99=ED=95=
=A0 =EC=88=98 =EC=9E=88=EA=B2=8C =EA=B5=AC=ED=98=84=ED=96=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empt=
y:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p=
-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border=
-token-border-light md:hidden"><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] =
w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129=
 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15=
C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.=
1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C=
10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81=
069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.3431=
5 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.0931=
3 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.=
0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.869=
5 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C2=
0.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98=
627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.799=
4 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.=
4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.560=
4C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 1=
4.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.49=
96 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 =
15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span=
><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-to=
ken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"fl=
ex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-=
3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1=
-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 =
1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></=
button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-sur=
face-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-=
center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 =
11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.=
1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9=
.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 =
2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.004=
5C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29=
589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.74=
6 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9=
.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.50=
02 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 =
13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5=
C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.4477=
2 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curr=
entColor"></path></svg></span></button></span></div><span class=3D"" data-s=
tate=3D"closed"><button type=3D"button" id=3D"radix-:r21r:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-38" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa272bc-8a5c-4a5b-9c=
64-43e8262a20b3" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">=EA=B7=B8 =EB=8B=A8=EC=96=B4 =EB=82=98=EC=98=A4=EB=
=8A=94 =EB=9D=BC=EB=B2=A8 =EC=B5=9C=EB=8C=80=EA=B8=B8=EC=9D=B4=EB=82=98 =ED=
=94=84=EB=A0=88=EC=9E=84 =EC=A0=84=EC=B2=B4=EC=97=90 =EB=9D=BC=EB=B2=A8=EC=
=9D=B4 =EC=B0=A8=EC=A7=80=ED=95=98=EB=8A=94 =EB=B9=84=EC=9C=A8=EC=9D=B4=EB=
=82=98 =EA=B7=B8=EB=9F=B0=EA=B2=83=EB=93=A4 =EA=B7=B8=EB=A6=AC=EA=B3=A0 =ED=
=85=8D=EC=8A=A4=ED=8A=B8 =EC=A0=95=EB=A0=AC=EA=B8=B0=EC=A4=80 =EA=B0=99=EC=
=9D=80=EA=B1=B0 =EB=AA=A8=EB=93=A0 =EA=B8=B0=EC=A4=80=EC=9D=84 =EC=9D=BC=EC=
=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5=ED=8E=98=EC=9D=B4=EC=A7=80=EC=99=80 =EA=
=B0=99=EC=9D=B4 =ED=95=B4=EC=A4=98
import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk
import datetime

class DayStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.current_page =3D 0
        self.days_per_page =3D 30  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EC=9D=BC =EC=88=98
        self.words_per_page =3D 12  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=
=A4=EC=A0=95
        self.current_word_page =3D 0  # =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=
=B4 =ED=8E=98=EC=9D=B4=EC=A7=80
        self.wordday =3D 0  # =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=
=B4=EC=9D=BC =EC=B4=88=EA=B8=B0=EA=B0=92
        self.selected_day =3D None  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90 =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80
        self.create_widgets()
        self.update_progress_bar()
   =20
    def connect_database(self):
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        style =3D ttk.Style()
        style.configure("TButton",
                        padding=3D0,  # =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=
=BC=EB=A1=9C =EC=84=A4=EC=A0=95
                        background=3D"#FFFFFF",  # =EB=B0=B0=EA=B2=BD=EC=83=
=89 =EC=A0=9C=EA=B1=B0
                        relief=3D"flat")  # =ED=85=8C=EB=91=90=EB=A6=AC =EC=
=A0=9C=EA=B1=B0
        style.configure("Selected.TButton",
                padding=3D0,
                background=3D"#FFFFFF",  # =EC=84=A0=ED=83=9D=EB=90=9C =EB=
=B2=84=ED=8A=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95
                relief=3D"flat")

        self.back_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=
=B8=EB=B2=84.png",
            command=3Dlambda: Util.SwitchPage(self, "UserMainPage", self.us=
er),
            scale=3D0.8
        )
        self.back_button.place(x=3D25, y=3D10)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D"#FFFFFF")
        self.buttons_frame.place(x=3D25, y=3D90)

        self.day_label =3D tk.Label(self, text=3D"=ED=95=99=EC=8A=B5 =EC=9D=
=BC=EC=9E=90=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=
=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.day_label.place(x=3D70, y=3D45)

        self.bar_label =3D tk.Label(self, text=3D"=EC=A7=84=EB=8F=84=EC=9C=
=A8", font=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D145, y=3D285)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D310)
        self.progress_bar['value'] =3D 0
       =20
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

        self.prev_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.prev_page,
            scale=3D1.0
        )
        self.prev_button.place(x=3D25, y=3D250)
       =20
        self.next_button =3D self.create_image_button(
            normal_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.next_page,
            scale=3D1.0
        )
        self.next_button.place(x=3D260, y=3D250)

        self.load_day_buttons()

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")
       =20
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_word=
_page, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_word=
_page, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
        self.word_prev_button.place_forget()
        self.word_next_button.place_forget()

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_day_buttons(self):
        cursor =3D self.connection.cursor()
       =20
        # Get maximum day from toeicword table
        cursor.execute("SELECT MAX(Day) FROM toeicword")
        max_day =3D cursor.fetchone()[0]
       =20
        # Get user wordday and gendate
        cursor.execute("SELECT wordday, gendate FROM user WHERE id =3D %s",=
 (self.user,))
        user_data =3D cursor.fetchone()
        wordday, gendate =3D user_data[0], user_data[1]
       =20
        cursor.close()

        # Convert gendate to date type if it's datetime
        if isinstance(gendate, datetime.datetime):
            gendate =3D gendate.date()

        today =3D datetime.date.today()
        days_since_gendate =3D (today - gendate).days

        # Limit wordday to days_since_gendate
        if wordday &gt; days_since_gendate:
            wordday =3D days_since_gendate

        self.wordday =3D wordday  # Update self.wordday

        self.total_pages =3D (max_day + self.days_per_page - 1) // self.day=
s_per_page
        self.update_day_buttons()

    def update_day_buttons(self):
        for widget in self.buttons_frame.winfo_children():
            widget.destroy()
       =20
        start_day =3D self.current_page * self.days_per_page
        end_day =3D start_day + self.days_per_page
        if end_day &gt; start_day + self.days_per_page:
            end_day =3D start_day + self.days_per_page
       =20
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT DISTINCT Day FROM toeicword WHERE Day BETWEE=
N %s AND %s ORDER BY Day", (start_day, end_day))
        days =3D cursor.fetchall()
        cursor.close()

        rows, cols =3D 6, 5
        day_iter =3D iter(days)
        for r in range(rows):
            for c in range(cols):
                try:
                    day =3D next(day_iter)[0]
                    btn =3D ttk.Button(self.buttons_frame, text=3Df"{day+1}=
", command=3Dlambda d=3Dday: self.select_day(d), width=3D7, style=3D"TButto=
n")
                    if day &lt; self.wordday:  # =EC=88=98=EC=A0=95=EB=90=
=9C =EB=B6=80=EB=B6=84: day &lt; self.wordday
                        btn.state(['!disabled'])  # Enable button if within=
 wordday limit
                    else:
                        btn.state(['disabled'])  # Disable button if beyond=
 wordday limit
                    if self.selected_day is not None and day =3D=3D self.se=
lected_day:  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =EA=B0=95=EC=
=A1=B0
                        btn.configure(style=3D"Selected.TButton")
                    btn.grid(row=3Dr, column=3Dc, padx=3D1, pady=3D1)
                except StopIteration:
                    break

        self.update_navigation_buttons()







    def update_navigation_buttons(self):
        if self.current_page &gt; 0:
            self.prev_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_button.config(state=3Dtk.DISABLED)
       =20
        if self.current_page &lt; self.total_pages - 1:
            self.next_button.config(state=3Dtk.NORMAL)
        else:
            self.next_button.config(state=3Dtk.DISABLED)

    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo          =20

    def select_day(self, day):
        self.current_day =3D day
        self.selected_day =3D day  # =ED=98=84=EC=9E=AC =EC=84=A0=ED=83=9D=
=ED=95=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=A0=80=EC=9E=A5
        self.day_label.config(text=3Df"{day+1}=EC=9D=BC=EC=B0=A8 =EB=8B=A8=
=EC=96=B4 =ED=95=99=EC=8A=B5")
        self.current_word_page =3D 0  # =EC=9D=BC=EC=9E=90 =EC=84=A0=ED=83=
=9D =EC=8B=9C =EB=8B=A8=EC=96=B4 =ED=8E=98=EC=9D=B4=EC=A7=80 =EC=B4=88=EA=
=B8=B0=ED=99=94
        self.load_words(day + 1)  # =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=
=EB=B6=84: day + 1 =EC=A0=84=EB=8B=AC
        self.update_day_buttons()  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90=EB=A5=BC =EA=B0=95=EC=A1=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =
=EB=B2=84=ED=8A=BC =EC=8A=A4=ED=83=80=EC=9D=BC =EC=97=85=EB=8D=B0=EC=9D=B4=
=ED=8A=B8

    def load_words(self, day):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Day =3D %s"=
, (day,))
        self.words =3D cursor.fetchall()
        cursor.close()
        self.display_words()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 90%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_word_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()


    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_word_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_word_page(self):
        if self.current_word_page &gt; 0:
            self.current_word_page -=3D 1
            self.display_words()

    def next_word_page(self):
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.current_word_page +=3D 1
            self.display_words()

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.update_day_buttons()

    def next_page(self):
        if self.current_page &lt; self.total_pages - 1:
            self.current_page +=3D 1
            self.update_day_buttons()


    def update_progress_bar(self):
        cursor =3D self.connection.cursor()

        cursor.execute("SELECT wordday FROM user WHERE id =3D %s", (self.us=
er,))
        wordday =3D cursor.fetchone()[0]

        cursor.execute("SELECT MAX(Day) FROM toeicword")
        total_day =3D cursor.fetchone()[0]

        cursor.close()

        progress_value =3D (wordday / total_day) * 100
        self.progress_bar['value'] =3D progress_value

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D DayStudy(user_id)
    app.mainloop()

=EC=9D=B4=EA=B1=B4 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=
=EC=9D=B4=EC=A7=80 =EC=BD=94=EB=93=9C=EC=95=BC<div class=3D"absolute bottom=
-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:=
block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9=
 items-center justify-center rounded-full text-token-text-secondary transit=
ion hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cla=
ss=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.2=
93 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.19=
7l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414=
l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.83=
7L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" cli=
p-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" dir=3D"auto" data-testid=3D"conversation-turn-39" data-scroll-anchor=3D=
"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md=
:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base ju=
ice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"3582e03f-84fe-4b54-bf89-e6921e93dbf3" dir=3D"auto" class=3D"text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>=EC=95=8C=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=BC=EC=9E=90=EB=B3=
=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=EC=A7=80=EC=99=80 =EB=8F=99=EC=9D=
=BC=ED=95=9C =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EC=A0=81=EC=9A=A9=ED=95=
=98=EC=97=AC =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=
=B4=EC=A7=80 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EA=B2=
=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=9E=
=84=EA=B3=BC =EB=A0=88=EC=9D=B4=EB=B8=94, =EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=
=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EB=93=B1 =EB=AA=A8=EB=93=A0 =EC=8A=A4=
=ED=83=80=EC=9D=BC=EC=9D=84 =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EC=A1=B0=
=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=
=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=88=98=EC=A4=80=EB=B3=84 =ED=
=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=EC=A7=80 =EC=BD=94=EB=93=9C=EC=9E=85=EB=
=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[=
0.5px] border-token-border-medium"><div class=3D"flex items-center relative=
 text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>python</span><div class=3D"=
flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3=
 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 =
1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0=
-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" =
clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</b=
utton></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefi=
ned" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span=
 class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">=
as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">45</span>, y=
=3D<span class=3D"hljs-number">100</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">70</span>=
, y=3D<span class=3D"hljs-number">140</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=EB=A0=88=EB=B2=A8"</span>, font=3D(<span class=3D"hljs-string">"Helveti=
ca"</span>, <span class=3D"hljs-number">12</span>), bg=3D<span class=3D"hlj=
s-string">"#FFFFFF"</span>)
        self.bar_label.place(x=3D<span class=3D"hljs-number">150</span>, y=
=3D<span class=3D"hljs-number">215</span>)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">240</span>)
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">275</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=
=EC=A7=80=EC=99=80 =EB=8F=99=EC=9D=BC=ED=95=9C =EC=8A=A4=ED=83=80=EC=9D=BC=
=EC=9D=84 =EC=A0=81=EC=9A=A9=ED=95=98=EC=97=AC =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84, =EB=9D=BC=EB=B2=A8, =EC=9D=B4=EC=A0=84 =EB=B0=8F =EB=8B=
=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EB=93=B1=EC=9D=84 =EA=B5=AC=EC=84=B1=ED=95=
=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>display_words</code> =ED=95=
=A8=EC=88=98=EC=97=90=EC=84=9C =EB=8B=A8=EC=96=B4 =EB=9D=BC=EB=B2=A8=EC=9D=
=98 =EB=B0=B0=EA=B2=BD=EC=83=89, =ED=85=8D=EC=8A=A4=ED=8A=B8 =EC=A0=95=EB=
=A0=AC, =EC=B5=9C=EB=8C=80 =EA=B8=B8=EC=9D=B4 =EB=93=B1=EC=9D=84 =EC=9D=BC=
=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=B4=EC=A7=80=EC=99=80 =
=EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-=
3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounde=
d-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:=
border-token-border-light md:hidden"><div class=3D"flex items-center"><span=
 class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-te=
xt-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[=
30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.=
49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.000=
05V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.262=
9L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.0=
6701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403=
 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2=
.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6=
.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.999=
6 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 2=
0.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1=
962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064=
 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM1=
5.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.1859=
3 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 1=
5.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4=
632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C=
16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.2=
3218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button><=
/span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r223:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-40" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa24102-b9f7-4d=
20-be94-edddacb2bfd6" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D 0
        self.words_per_page =3D 10
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"=EB=82=9C=EC=9D=B4=EB=
=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=3D("He=
lvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D45, y=3D100)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D70, y=3D140)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.l=
oad_words)
       =20
        self.bar_label =3D tk.Label(self, text=3D"=EB=A0=88=EB=B2=A8", font=
=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D150, y=3D215)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D240)
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
       =20
        # =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EC=B6=
=94=EA=B0=80
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_page=
, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_page=
, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)

        self.update_buttons()
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D275)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20
       =20
    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D 0
        self.display_words()
        self.update_buttons()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()

    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.display_words()
            self.update_buttons()

    def next_page(self):
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.current_page +=3D 1
            self.display_words()
            self.update_buttons()

    def update_buttons(self):
        if self.current_page =3D=3D 0:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        else:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        if (self.current_page + 1) * self.words_per_page &gt;=3D len(self.w=
ords):
            self.word_next_button.config(state=3Dtk.DISABLED)
        else:
            self.word_next_button.config(state=3Dtk.NORMAL)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EA=B7=B8 =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=B4=EB=9E=91 =
=EB=98=91=EA=B0=99=EC=9D=B4 =EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84 =
=EC=82=AC=EC=A7=84 =EC=9C=84=EC=B9=98=ED=95=98=EA=B2=8C =ED=95=98=EA=B2=8C =
=ED=95=B4=EC=A3=BC=EA=B3=A0 =EA=B7=B8 =EC=9C=84=EC=97=90 =ED=94=84=EB=A1=9C=
=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=9E=88=EA=B2=8C=ED=95=B4=EC=A4=98<d=
iv class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 gro=
up-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex h-9 w-9 items-center justify-center rounded-full text-t=
oken-text-secondary transition hover:bg-token-main-surface-tertiary"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-=
rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.09=
4 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 =
0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.=
355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.=
536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span>=
</div></div></div></div></div></div></div></div></div></div><div class=3D"w=
-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tur=
n-41" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 =
text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto fle=
x flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[=
40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative=
 items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-a=
vatar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full=
 juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-cent=
er justify-center bg-token-main-surface-primary text-token-text-primary h-8=
 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"assistant" data-message-id=3D"8d21e782-95ea-44aa-a256-06c02c0ba8af=
" dir=3D"auto" class=3D"text-message flex flex-col items-start whitespace-p=
re-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end=
 overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empt=
y:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-wo=
rds dark:prose-invert light"><p>=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=
=98=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=9C =EB=B0=A9=EC=8B=9D=EC=9C=BC=EB=A1=
=9C <code>=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84</code> =EC=82=AC=EC=
=A7=84=EA=B3=BC =EA=B7=B8 =EC=9C=84=EC=97=90 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=
=A0=88=EC=8A=A4=EB=B0=94=EB=A5=BC =EB=B0=B0=EC=B9=98=ED=95=98=EB=8F=84=EB=
=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=
=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=
=95=EB=90=9C =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5 =ED=8E=98=EC=9D=
=B4=EC=A7=80 =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div cl=
ass=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-mediu=
m"><div class=3D"flex items-center relative text-token-text-secondary bg-to=
ken-main-surface-secondary px-4 py-2 text-xs font-sans justify-between roun=
ded-t-md"><span>python</span><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-=
2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5=
h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 =
0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path><=
/svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div =
class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">45</span>, y=
=3D<span class=3D"hljs-number">100</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">70</span>=
, y=3D<span class=3D"hljs-number">140</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">300</span>)  <span class=3D"hljs-comment">#=
 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C=
 =EC=A1=B0=EC=A0=95</span>
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 <code>=EC=
=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84</code> =EC=82=AC=EC=A7=84=EC=9D=
=84 <code>progress_bar</code> =EC=9C=84=EC=97=90 =EC=9C=84=EC=B9=98=ED=95=
=98=EA=B2=8C =ED=95=98=EA=B3=A0, <code>progress_bar</code>=EC=9D=98 =EC=9C=
=84=EC=B9=98=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EC=97=AC <code>=EC=8B=9C=
=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84</code> =EC=82=AC=EC=A7=84 =EC=95=84=EB=
=9E=98=EC=97=90 =EB=B0=B0=EC=B9=98=ED=95=98=EB=8F=84=EB=A1=9D =EB=B3=80=EA=
=B2=BD=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>=EC=8B=9C=ED=97=98=EC=A7=
=84=ED=96=89=EB=8F=84</code> =EC=82=AC=EC=A7=84=EA=B3=BC =ED=94=84=EB=A1=9C=
=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EA=B0=80 <code>=EC=88=98=EC=A4=80=EB=
=B3=84 =EC=8B=9C=ED=97=98</code> =ED=8E=98=EC=9D=B4=EC=A7=80=EC=99=80 =EB=
=8F=99=EC=9D=BC=ED=95=9C =EC=9C=84=EC=B9=98=EC=97=90 =EC=9E=88=EB=8F=84=EB=
=A1=9D =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></d=
iv></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div=
 class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-mai=
n-surface-primary md:absolute md:border md:border-token-border-light md:hid=
den"><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed=
"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main=
-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center just=
ify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828=
 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8=
.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6=
C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527=
 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 1=
3 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.3=
4315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L=
8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.7=
5833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418=
 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19=
.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.51=
75 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 =
7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8=
679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001=
C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16=
.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.229=
8 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 1=
5.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"cu=
rrentColor"></path></svg></span></button></span><span class=3D"" data-state=
=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-=
token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-c=
enter justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24=
" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h=
9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0=
 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 =
0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1=
z" clip-rule=3D"evenodd"></path></svg></span></button></span><div class=3D"=
flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.=
9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.6505=
4 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91=
145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5=
V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391=
 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.603=
64 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.0=
0451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9=
908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 =
19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C1=
5.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.=
31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5=
523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></sp=
an></button></span></div><span class=3D"" data-state=3D"closed"><button typ=
e=3D"button" id=3D"radix-:r22b:" aria-haspopup=3D"menu" aria-expanded=3D"fa=
lse" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-tok=
en-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><div clas=
s=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full =
[&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fil=
l=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802=
-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801=
.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1=
.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.0=
94-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=
=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775=
 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-=
4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.=
003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 =
1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 =
2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069=
.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.90=
7-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-=
2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z=
"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity:=
 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.or=
g/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" =
class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.2=
93a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" cli=
p-rule=3D"evenodd"></path></svg></div></button></span></div></div></div><di=
v class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"=
w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tu=
rn-42" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3=
 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto fl=
ex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-=
[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative fl=
ex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"=
user" data-message-id=3D"aaa20fe8-ca17-458f-9a57-136e2bc4efdc" dir=3D"auto"=
 class=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pr=
e-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end =
overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty=
:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] round=
ed-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">impor=
t tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk
import datetime

class DayStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.current_page =3D 0
        self.days_per_page =3D 30  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EC=9D=BC =EC=88=98
        self.words_per_page =3D 12  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=
=A4=EC=A0=95
        self.current_word_page =3D 0  # =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=
=B4 =ED=8E=98=EC=9D=B4=EC=A7=80
        self.wordday =3D 0  # =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=
=B4=EC=9D=BC =EC=B4=88=EA=B8=B0=EA=B0=92
        self.selected_day =3D None  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90 =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80
        self.create_widgets()
        self.update_progress_bar()
   =20
    def connect_database(self):
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        style =3D ttk.Style()
        style.configure("TButton",
                        padding=3D0,  # =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=
=BC=EB=A1=9C =EC=84=A4=EC=A0=95
                        background=3D"#FFFFFF",  # =EB=B0=B0=EA=B2=BD=EC=83=
=89 =EC=A0=9C=EA=B1=B0
                        relief=3D"flat")  # =ED=85=8C=EB=91=90=EB=A6=AC =EC=
=A0=9C=EA=B1=B0
        style.configure("Selected.TButton",
                padding=3D0,
                background=3D"#FFFFFF",  # =EC=84=A0=ED=83=9D=EB=90=9C =EB=
=B2=84=ED=8A=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95
                relief=3D"flat")

        self.back_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=
=B8=EB=B2=84.png",
            command=3Dlambda: Util.SwitchPage(self, "UserMainPage", self.us=
er),
            scale=3D0.8
        )
        self.back_button.place(x=3D25, y=3D10)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D"#FFFFFF")
        self.buttons_frame.place(x=3D25, y=3D90)

        self.day_label =3D tk.Label(self, text=3D"=ED=95=99=EC=8A=B5 =EC=9D=
=BC=EC=9E=90=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=
=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.day_label.place(x=3D70, y=3D45)

        self.bar_label =3D tk.Label(self, text=3D"=EC=A7=84=EB=8F=84=EC=9C=
=A8", font=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D145, y=3D285)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D310)
        self.progress_bar['value'] =3D 0
       =20
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

        self.prev_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.prev_page,
            scale=3D1.0
        )
        self.prev_button.place(x=3D25, y=3D250)
       =20
        self.next_button =3D self.create_image_button(
            normal_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.next_page,
            scale=3D1.0
        )
        self.next_button.place(x=3D260, y=3D250)

        self.load_day_buttons()

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")
       =20
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_word=
_page, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_word=
_page, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
        self.word_prev_button.place_forget()
        self.word_next_button.place_forget()

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_day_buttons(self):
        cursor =3D self.connection.cursor()
       =20
        # Get maximum day from toeicword table
        cursor.execute("SELECT MAX(Day) FROM toeicword")
        max_day =3D cursor.fetchone()[0]
       =20
        # Get user wordday and gendate
        cursor.execute("SELECT wordday, gendate FROM user WHERE id =3D %s",=
 (self.user,))
        user_data =3D cursor.fetchone()
        wordday, gendate =3D user_data[0], user_data[1]
       =20
        cursor.close()

        # Convert gendate to date type if it's datetime
        if isinstance(gendate, datetime.datetime):
            gendate =3D gendate.date()

        today =3D datetime.date.today()
        days_since_gendate =3D (today - gendate).days

        # Limit wordday to days_since_gendate
        if wordday &gt; days_since_gendate:
            wordday =3D days_since_gendate

        self.wordday =3D wordday  # Update self.wordday

        self.total_pages =3D (max_day + self.days_per_page - 1) // self.day=
s_per_page
        self.update_day_buttons()

    def update_day_buttons(self):
        for widget in self.buttons_frame.winfo_children():
            widget.destroy()
       =20
        start_day =3D self.current_page * self.days_per_page
        end_day =3D start_day + self.days_per_page
        if end_day &gt; start_day + self.days_per_page:
            end_day =3D start_day + self.days_per_page
       =20
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT DISTINCT Day FROM toeicword WHERE Day BETWEE=
N %s AND %s ORDER BY Day", (start_day, end_day))
        days =3D cursor.fetchall()
        cursor.close()

        rows, cols =3D 6, 5
        day_iter =3D iter(days)
        for r in range(rows):
            for c in range(cols):
                try:
                    day =3D next(day_iter)[0]
                    btn =3D ttk.Button(self.buttons_frame, text=3Df"{day}",=
 command=3Dlambda d=3Dday: self.select_day(d), width=3D7, style=3D"TButton"=
)
                    if day &lt; self.wordday:  # =EC=88=98=EC=A0=95=EB=90=
=9C =EB=B6=80=EB=B6=84: day &lt; self.wordday
                        btn.state(['!disabled'])  # Enable button if within=
 wordday limit
                    else:
                        btn.state(['disabled'])  # Disable button if beyond=
 wordday limit
                    if self.selected_day is not None and day =3D=3D self.se=
lected_day:  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =EA=B0=95=EC=
=A1=B0
                        btn.configure(style=3D"Selected.TButton")
                    btn.grid(row=3Dr, column=3Dc, padx=3D1, pady=3D1)
                except StopIteration:
                    break

        self.update_navigation_buttons()







    def update_navigation_buttons(self):
        if self.current_page &gt; 0:
            self.prev_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_button.config(state=3Dtk.DISABLED)
       =20
        if self.current_page &lt; self.total_pages - 1:
            self.next_button.config(state=3Dtk.NORMAL)
        else:
            self.next_button.config(state=3Dtk.DISABLED)

    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo          =20

    def select_day(self, day):
        self.current_day =3D day
        self.selected_day =3D day  # =ED=98=84=EC=9E=AC =EC=84=A0=ED=83=9D=
=ED=95=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=A0=80=EC=9E=A5
        self.day_label.config(text=3Df"{day}=EC=9D=BC=EC=B0=A8 =EB=8B=A8=EC=
=96=B4 =ED=95=99=EC=8A=B5")
        self.current_word_page =3D 0  # =EC=9D=BC=EC=9E=90 =EC=84=A0=ED=83=
=9D =EC=8B=9C =EB=8B=A8=EC=96=B4 =ED=8E=98=EC=9D=B4=EC=A7=80 =EC=B4=88=EA=
=B8=B0=ED=99=94
        self.load_words(day)  # =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=
=84: day + 1 =EC=A0=84=EB=8B=AC
        self.update_day_buttons()  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90=EB=A5=BC =EA=B0=95=EC=A1=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =
=EB=B2=84=ED=8A=BC =EC=8A=A4=ED=83=80=EC=9D=BC =EC=97=85=EB=8D=B0=EC=9D=B4=
=ED=8A=B8

    def load_words(self, day):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Day =3D %s"=
, (day,))
        self.words =3D cursor.fetchall()
        cursor.close()
        self.display_words()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 90%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_word_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()


    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_word_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_word_page(self):
        if self.current_word_page &gt; 0:
            self.current_word_page -=3D 1
            self.display_words()

    def next_word_page(self):
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.current_word_page +=3D 1
            self.display_words()

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.update_day_buttons()

    def next_page(self):
        if self.current_page &lt; self.total_pages - 1:
            self.current_page +=3D 1
            self.update_day_buttons()


    def update_progress_bar(self):
        cursor =3D self.connection.cursor()

        cursor.execute("SELECT wordday FROM user WHERE id =3D %s", (self.us=
er,))
        wordday =3D cursor.fetchone()[0]

        cursor.execute("SELECT MAX(Day) FROM toeicword")
        total_day =3D cursor.fetchone()[0]

        cursor.close()

        progress_value =3D (wordday / total_day) * 100
        self.progress_bar['value'] =3D progress_value

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D DayStudy(user_id)
    app.mainloop()

=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5 =EC=BD=94=EB=93=9C=EC=9D=B8=
=EB=8D=B0 user=EC=9D=98 wordday=EA=B0=80 24=EC=9D=B8=EB=8D=B0, =EB=B2=84=ED=
=8A=BC=EC=9D=80 23=EA=B9=8C=EC=A7=80=EB=A7=8C =ED=99=9C=EC=84=B1=ED=99=94 =
=EB=90=98=EC=96=B4=EC=9E=88=EA=B1=B0=EB=93=A0?<div class=3D"absolute bottom=
-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:=
block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9=
 items-center justify-center rounded-full text-token-text-secondary transit=
ion hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cla=
ss=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.2=
93 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.19=
7l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414=
l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.83=
7L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" cli=
p-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" dir=3D"auto" data-testid=3D"conversation-turn-43" data-scroll-anchor=3D=
"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md=
:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base ju=
ice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"8027ed2b-5432-4023-8988-7794c25a8093" dir=3D"auto" class=3D"min-=
h-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-w=
ords [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-aut=
o gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:=
first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-=
invert light"><p><code>wordday</code>=EB=8A=94 0=EB=B6=80=ED=84=B0 =EC=8B=
=9C=EC=9E=91=ED=95=98=EB=8A=94 =EC=9D=B8=EB=8D=B1=EC=8A=A4=EC=9D=B4=EB=AF=
=80=EB=A1=9C <code>wordday</code>=EA=B0=80 24=EC=9D=BC =EA=B2=BD=EC=9A=B0, =
0=EB=B6=80=ED=84=B0 23=EA=B9=8C=EC=A7=80=EC=9D=98 =EC=9D=BC=EC=9E=90=EA=B0=
=80 =ED=99=9C=EC=84=B1=ED=99=94=EB=90=98=EC=96=B4=EC=95=BC =ED=95=A9=EB=8B=
=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EA=B8=B0 =EC=
=9C=84=ED=95=B4=EC=84=9C=EB=8A=94 =EB=B2=84=ED=8A=BC =ED=99=9C=EC=84=B1=ED=
=99=94 =EC=A1=B0=EA=B1=B4=EC=9D=84 =ED=99=95=EC=9D=B8=ED=95=98=EA=B3=A0, =
=EC=9D=B4=EB=A5=BC =EC=A0=81=EC=A0=88=ED=95=98=EA=B2=8C =EC=A1=B0=EC=A0=95=
=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=
=9D=80 <code>update_day_buttons</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=
=EC=84=9C =ED=99=9C=EC=84=B1=ED=99=94 =EC=A1=B0=EA=B1=B4=EC=9D=84 =EC=88=98=
=EC=A0=95=ED=95=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><=
div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border=
-medium"><div class=3D"flex items-center relative text-token-text-secondary=
 bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-betwee=
n rounded-t-md"><span>python</span><div class=3D"flex items-center"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><=
svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D=
"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" =
fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3=
 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3=
 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a=
1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></pa=
th></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><=
div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code cla=
ss=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">im=
port</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">import</span> datetime

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>DayStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=9D=BC=EC=9E=90=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.days_per_page =3D <span class=3D"hljs-number">30</span>  <span=
 class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EC=9D=BC =EC=88=98</span>
        self.words_per_page =3D <span class=3D"hljs-number">12</span>  <spa=
n class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=A4=EC=A0=
=95</span>
        self.current_word_page =3D <span class=3D"hljs-number">0</span>  <s=
pan class=3D"hljs-comment"># =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=B4 =ED=8E=
=98=EC=9D=B4=EC=A7=80</span>
        self.wordday =3D <span class=3D"hljs-number">0</span>  <span class=
=3D"hljs-comment"># =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=B4=EC=9D=BC=
 =EC=B4=88=EA=B8=B0=EA=B0=92</span>
        self.selected_day =3D <span class=3D"hljs-literal">None</span>  <sp=
an class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =
=EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80</span>
        self.create_widgets()
        self.update_progress_bar()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"TButton"</span>,
                        padding=3D<span class=3D"hljs-number">0</span>,  <s=
pan class=3D"hljs-comment"># =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=BC=EB=A1=
=9C =EC=84=A4=EC=A0=95</span>
                        background=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>,  <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=A0=
=9C=EA=B1=B0</span>
                        relief=3D<span class=3D"hljs-string">"flat"</span>)=
  <span class=3D"hljs-comment"># =ED=85=8C=EB=91=90=EB=A6=AC =EC=A0=9C=EA=
=B1=B0</span>
        style.configure(<span class=3D"hljs-string">"Selected.TButton"</spa=
n>,
                padding=3D<span class=3D"hljs-number">0</span>,
                background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, =
 <span class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=EB=90=9C =EB=B2=84=ED=8A=
=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95</span>
                relief=3D<span class=3D"hljs-string">"flat"</span>)

        self.back_button =3D self.create_image_button(
          =20
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r22j:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-44" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa24236-7748-4c=
d2-8027-303185de2a91" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=95=84=EB=8B=88=EC=A7=80 24=EB=A9=B4 1=EC=
=9D=BC=EC=B0=A8=EB=B6=80=ED=84=B0 24=EC=9D=BC=EC=B0=A8=EA=B9=8C=EC=A7=80 =
=EC=98=A4=ED=94=88=EC=9D=B8=EA=B1=B0=EC=95=BC<div class=3D"absolute bottom-=
0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:b=
lock"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 =
items-center justify-center rounded-full text-token-text-secondary transiti=
on hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/20=
00/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" clas=
s=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.29=
3 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197=
l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l=
-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837=
L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip=
-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></di=
v></div></div></div></div></div><div class=3D"w-full text-token-text-primar=
y" dir=3D"auto" data-testid=3D"conversation-turn-45" data-scroll-anchor=3D"=
false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:=
px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base jui=
ce:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><di=
v class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"b411cafd-4210-446a-813d-9e92d13ef03e" dir=3D"auto" class=3D"text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>=EC=95=8C=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>wordday</code>=EA=
=B0=80 24=EC=9D=BC =EA=B2=BD=EC=9A=B0, 1=EC=9D=BC=EC=B0=A8=EB=B6=80=ED=84=
=B0 24=EC=9D=BC=EC=B0=A8=EA=B9=8C=EC=A7=80 =ED=99=9C=EC=84=B1=ED=99=94=EB=
=90=98=EC=96=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =
=EC=9C=84=ED=95=B4 =EB=B2=84=ED=8A=BC =ED=99=9C=EC=84=B1=ED=99=94 =EC=A1=B0=
=EA=B1=B4=EC=9D=84 =EC=88=98=EC=A0=95=ED=95=98=EC=97=AC <code>wordday</code=
>=EA=B0=80 =ED=8F=AC=ED=95=A8=EB=90=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =ED=8F=
=AC=ED=95=A8=ED=95=98=EB=8F=84=EB=A1=9D =EB=B3=80=EA=B2=BD=ED=95=98=EA=B2=
=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=
=EC=A0=95=EB=90=9C <code>update_day_buttons</code> =EB=A9=94=EC=84=9C=EB=93=
=9C=EA=B0=80 =ED=8F=AC=ED=95=A8=EB=90=9C =EC=A0=84=EC=B2=B4 =EC=BD=94=EB=93=
=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 roun=
ded-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-=
center relative text-token-text-secondary bg-token-main-surface-secondary p=
x-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span=
><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/200=
0/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 =
3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-=
3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1=
-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1=
 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=
=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 t=
ext-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs languag=
e-python"><span class=3D"hljs-keyword">import</span> tkinter <span class=3D=
"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">import</span> datetime

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>DayStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=9D=BC=EC=9E=90=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.days_per_page =3D <span class=3D"hljs-number">30</span>  <span=
 class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EC=9D=BC =EC=88=98</span>
        self.words_per_page =3D <span class=3D"hljs-number">12</span>  <spa=
n class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=A4=EC=A0=
=95</span>
        self.current_word_page =3D <span class=3D"hljs-number">0</span>  <s=
pan class=3D"hljs-comment"># =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=B4 =ED=8E=
=98=EC=9D=B4=EC=A7=80</span>
        self.wordday =3D <span class=3D"hljs-number">0</span>  <span class=
=3D"hljs-comment"># =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=B4=EC=9D=BC=
 =EC=B4=88=EA=B8=B0=EA=B0=92</span>
        self.selected_day =3D <span class=3D"hljs-literal">None</span>  <sp=
an class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =
=EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80</span>
        self.create_widgets()
        self.update_progress_bar()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"TButton"</span>,
                        padding=3D<span class=3D"hljs-number">0</span>,  <s=
pan class=3D"hljs-comment"># =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=BC=EB=A1=
=9C =EC=84=A4=EC=A0=95</span>
                        background=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>,  <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=A0=
=9C=EA=B1=B0</span>
                        relief=3D<span class=3D"hljs-string">"flat"</span>)=
  <span class=3D"hljs-comment"># =ED=85=8C=EB=91=90=EB=A6=AC =EC=A0=9C=EA=
=B1=B0</span>
        style.configure(<span class=3D"hljs-string">"Selected.TButton"</spa=
n>,
                padding=3D<span class=3D"hljs-number">0</span>,
                background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, =
 <span class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=EB=90=9C =EB=B2=84=ED=8A=
=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95</span>
                relief=3D<span class=3D"hljs-string">"flat"</span>)

        self.back_button =3D self.create_image_button(
            normal_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=
=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,
            hover_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=A0=
=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            command=3D<span class=3D"hljs-keyword">lambda</span>: Util.Swit=
chPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.user),
            scale=3D<span class=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-stri=
ng">"#FFFFFF"</span>)
        self.buttons_frame.place(x=3D<span class=3D"hljs-number">25</span>,=
 y=3D<span class=3D"hljs-number">90</span>)

        self.day_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=ED=95=99=EC=8A=B5 =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=
=98=EC=84=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helveti=
ca"</span>, <span class=3D"hljs-number">16</span>), bg=3D<span class=3D"hlj=
s-string">"#FFFFFF"</span>)
        self.day_label.place(x=3D<span class=3D"hljs-number">70</span>, y=
=3D<span class=3D"hljs-number">45</span>)

        self.bar_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=EC=A7=84=EB=8F=84=EC=9C=A8"</span>, font=3D(<span class=3D"hljs-string"=
>"Helvetica"</span>, <span class=3D"hljs-number">12</span>), bg=3D<span cla=
ss=3D"hljs-string">"#FFFFFF"</span>)
        self.bar_label.place(x=3D<span class=3D"hljs-number">145</span>, y=
=3D<span class=3D"hljs-number">285</span>)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">310</span>)
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>
       =20
        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)

        self.prev_button =3D self.create_image_button(
            normal_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=
=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>,
            hover_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=A0=
=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>,
            command=3Dself.prev_page,
            scale=3D<span class=3D"hljs-number">1.0</span>
        )
        self.prev_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">250</span>)
       =20
        self.next_button =3D self.create_image_button(
            normal_image_path=3D<span class=3D"hljs-string">"=EB=8B=A4=EC=
=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>,
            hover_image_path=3D<span class=3D"hljs-string">"=EB=8B=A4=EC=9D=
=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>,
            command=3Dself.next_page,
            scale=3D<span class=3D"hljs-number">1.0</span>
        )
        self.next_button.place(x=3D<span class=3D"hljs-number">260</span>, =
y=3D<span class=3D"hljs-number">250</span>)

        self.load_day_buttons()

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)
       =20
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_word_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_word_p=
age, <span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_prev_button.place_forget()
        self.word_next_button.place_forget()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_day_buttons</span>(<span class=3D"hljs-params">self</span>):
        cursor =3D self.connection.cursor()
       =20
        <span class=3D"hljs-comment"># Get maximum day from toeicword table=
</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT MAX(Day) FROM to=
eicword"</span>)
        max_day =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]
       =20
        <span class=3D"hljs-comment"># Get user wordday and gendate</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT wordday, gendate=
 FROM user WHERE id =3D %s"</span>, (self.user,))
        user_data =3D cursor.fetchone()
        wordday, gendate =3D user_data[<span class=3D"hljs-number">0</span>=
], user_data[<span class=3D"hljs-number">1</span>]
       =20
        cursor.close()

        <span class=3D"hljs-comment"># Convert gendate to date type if it's=
 datetime</span>
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in=
">isinstance</span>(gendate, datetime.datetime):
            gendate =3D gendate.date()

        today =3D datetime.date.today()
        days_since_gendate =3D (today - gendate).days

        <span class=3D"hljs-comment"># Limit wordday to days_since_gendate<=
/span>
        <span class=3D"hljs-keyword">if</span> wordday &gt; days_since_gend=
ate:
            wordday =3D days_since_gendate

        self.wordday =3D wordday  <span class=3D"hljs-comment"># Update sel=
f.wordday</span>

        self.total_pages =3D (max_day + self.days_per_page - <span class=3D=
"hljs-number">1</span>) // self.days_per_page
        self.update_day_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_day_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.buttons_frame.winfo_children():
            widget.destroy()
       =20
        start_day =3D self.current_page * self.days_per_page
        end_day =3D start_day + self.days_per_page
        <span class=3D"hljs-keyword">if</span> end_day &gt; start_day + sel=
f.days_per_page:
            end_day =3D start_day + self.days_per_page
       =20
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT DISTINCT Day FRO=
M toeicword WHERE Day BETWEEN %s AND %s ORDER BY Day"</span>, (start_day, e=
nd_day))
        days =3D cursor.fetchall()
        cursor.close()

        rows, cols =3D <span class=3D"hljs-number">6</span>, <span class=3D=
"hljs-number">5</span>
        day_iter =3D <span class=3D"hljs-built_in">iter</span>(days)
        <span class=3D"hljs-keyword">for</span> r <span class=3D"hljs-keywo=
rd">in</span> <span class=3D"hljs-built_in">range</span>(rows):
            <span class=3D"hljs-keyword">for</span> c <span class=3D"hljs-k=
eyword">in</span> <span class=3D"hljs-built_in">range</span>(cols):
                <span class=3D"hljs-keyword">try</span>:
                    day =3D <span class=3D"hljs-built_in">next</span>(day_i=
ter)[<span class=3D"hljs-number">0</span>]
                    btn =3D ttk.Button(self.buttons_frame, text=3D<span cla=
ss=3D"hljs-string">f"<span class=3D"hljs-subst">{day}</span>"</span>, comma=
nd=3D<span class=3D"hljs-keyword">lambda</span> d=3Dday: self.select_day(d)=
, width=3D<span class=3D"hljs-number">7</span>, style=3D<span class=3D"hljs=
-string">"TButton"</span>)
                    <span class=3D"hljs-keyword">if</span> day &lt; self.wo=
rdday:  <span class=3D"hljs-comment"># =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=
=80=EB=B6=84: day &lt; self.wordday</span>
                        btn.state([<span class=3D"hljs-string">'!disabled'<=
/span>])  <span class=3D"hljs-comment"># Enable button if within wordday li=
mit</span>
                    <span class=3D"hljs-keyword">else</span>:
                        btn.state([<span class=3D"hljs-string">'disabled'</=
span>])  <span class=3D"hljs-comment"># Disable button if beyond wordday li=
mit</span>
                    <span class=3D"hljs-keyword">if</span> self.selected_da=
y <span class=3D"hljs-keyword">is</span> <span class=3D"hljs-keyword">not</=
span> <span class=3D"hljs-literal">None</span> <span class=3D"hljs-keyword"=
>and</span> day =3D=3D self.selected_day:  <span class=3D"hljs-comment"># =
=EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =EA=B0=95=EC=A1=B0</span>
                        btn.configure(style=3D<span class=3D"hljs-string">"=
Selected.TButton"</span>)
                    btn.grid(row=3Dr, column=3Dc, padx=3D<span class=3D"hlj=
s-number">1</span>, pady=3D<span class=3D"hljs-number">1</span>)
                <span class=3D"hljs-keyword">except</span> StopIteration:
                    <span class=3D"hljs-keyword">break</span>

        self.update_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_navigation_buttons</span>(<span class=3D"hljs-params">self</sp=
an>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &lt; self.=
total_pages - <span class=3D"hljs-number">1</span>:
            self.next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">select_day</span>(<span class=3D"hljs-params">self, day</span>):
        self.current_day =3D day
        self.selected_day =3D day  <span class=3D"hljs-comment"># =ED=98=84=
=EC=9E=AC =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=A0=80=
=EC=9E=A5</span>
        self.day_label.config(text=3D<span class=3D"hljs-string">f"<span cl=
ass=3D"hljs-subst">{day}</span>=EC=9D=BC=EC=B0=A8 =EB=8B=A8=EC=96=B4 =ED=95=
=99=EC=8A=B5"</span>)
        self.current_word_page =3D <span class=3D"hljs-number">0</span>  <s=
pan class=3D"hljs-comment"># =EC=9D=BC=EC=9E=90 =EC=84=A0=ED=83=9D =EC=8B=
=9C =EB=8B=A8=EC=96=B4 =ED=8E=98=EC=9D=B4=EC=A7=80 =EC=B4=88=EA=B8=B0=ED=99=
=94</span>
        self.load_words(day)  <span class=3D"hljs-comment"># =EC=88=98=EC=
=A0=95=EB=90=9C =EB=B6=80=EB=B6=84: day + 1 =EC=A0=84=EB=8B=AC</span>
        self.update_day_buttons()  <span class=3D"hljs-comment"># =EC=84=A0=
=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =EA=B0=95=EC=A1=B0=ED=95=98=
=EA=B8=B0 =EC=9C=84=ED=95=B4 =EB=B2=84=ED=8A=BC =EC=8A=A4=ED=83=80=EC=9D=BC=
 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, day</span>):
        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Day =3D %s"</span>, (day,))
        self.words =3D cursor.fetchall()
        cursor.close()
        self.display_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 90%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_word_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()


    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_word_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_word_page + <s=
pan class=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=
=3D"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_word_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_word_page &gt; =
<span class=3D"hljs-number">0</span>:
            self.current_word_page -=3D <span class=3D"hljs-number">1</span=
>
            self.display_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_word_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_word_page + <s=
pan class=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=
=3D"hljs-built_in">len</span>(self.words):
            self.current_word_page +=3D <span class=3D"hljs-number">1</span=
>
            self.display_words()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.update_day_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &lt; self.=
total_pages - <span class=3D"hljs-number">1</span>:
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.update_day_buttons()


    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress_bar</span>(<span class=3D"hljs-params">self</span>):
        cursor =3D self.connection.cursor()

        cursor.execute(<span class=3D"hljs-string">"SELECT wordday FROM use=
r WHERE id =3D %s"</span>, (self.user,))
        wordday =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        cursor.execute(<span class=3D"hljs-string">"SELECT MAX(Day) FROM to=
eicword"</span>)
        total_day =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]

        cursor.close()

        progress_value =3D (wordday / total_day) * <span class=3D"hljs-numb=
er">100</span>
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D p=
rogress_value

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D DayStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>wordday</code>=EA=B0=80 24=EC=9D=BC =EA=B2=BD=EC=9A=B0, 1=
=EC=9D=BC=EC=B0=A8=EB=B6=80=ED=84=B0 24=EC=9D=BC=EC=B0=A8=EA=B9=8C=EC=A7=80=
=EC=9D=98 =EB=B2=84=ED=8A=BC=EC=9D=B4 =ED=99=9C=EC=84=B1=ED=99=94=EB=90=98=
=EB=8F=84=EB=A1=9D =EC=84=A4=EC=A0=95=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4. <code>update_day_buttons</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=
=97=90=EC=84=9C <code>if day &lt;=3D self.wordday:</code>=EB=A1=9C =EC=A1=
=B0=EA=B1=B4=EC=9D=84 =EB=B3=80=EA=B2=BD=ED=95=98=EC=97=AC <code>wordday</c=
ode> =EA=B0=92=EA=B9=8C=EC=A7=80 =ED=8F=AC=ED=95=A8=EB=90=98=EB=8F=84=EB=A1=
=9D =ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></d=
iv><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"it=
ems-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-pr=
imary md:absolute md:border md:border-token-border-light md:hidden"><div cl=
ass=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 1=
0.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3=
.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 1=
6 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.525=
2 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V1=
9.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 =
16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.=
06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.51=
91 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 2=
1.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2=
896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996=
 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19=
.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.6578=
9 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 1=
3.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0=
539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 =
16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.3=
0063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor=
"></path></svg></span></button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main=
-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center just=
ify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 =
0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3=
h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1z=
M5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-=
rule=3D"evenodd"></path></svg></span></button></span><div class=3D"flex"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4=
267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93=
226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.207=
28 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.00=
45 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 =
15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.3663=
7 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32=
185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.960=
28 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L1=
3.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.=
44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.=
8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.55=
68 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></butt=
on></span></div><span class=3D"" data-state=3D"closed"><button type=3D"butt=
on" id=3D"radix-:r22r:" aria-haspopup=3D"menu" aria-expanded=3D"false" data=
-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-s=
econdary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex=
 items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_sv=
g]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"cur=
rentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.=
305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.3=
17.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-=
2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792=
-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"curre=
ntColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.14=
6 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.09=
4-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248=
-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.=
002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.1=
18A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 =
1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.=
094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.2=
1-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path>=
</svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; paddi=
ng-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 =
0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=
=3D"evenodd"></path></svg></div></button></span></div></div></div><div clas=
s=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"w-full=
 text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-46"=
 data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-=
base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fle=
x-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem=
] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"user" =
data-message-id=3D"aaa24efc-87b2-45b8-8610-09742775cd38" dir=3D"auto" class=
=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap=
 break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overfl=
ow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidde=
n items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl=
 bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">24=EC=9D=BC=
=EC=B0=A8=EA=B9=8C=EC=A7=80 =EC=97=B4=EB=A6=AC=EC=A7=80 =EC=95=8A=EA=B3=A0 =
23=EC=9D=BC=EC=B0=A8 =EA=B9=8C=EC=A7=80=EB=A7=8C =EC=97=B4=EB=A0=A4=EC=9E=
=88=EC=96=B4=20
import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk
import datetime

class DayStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.current_page =3D 0
        self.days_per_page =3D 30  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EC=9D=BC =EC=88=98
        self.words_per_page =3D 12  # =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=
=EB=8B=B9 =EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=
=A4=EC=A0=95
        self.current_word_page =3D 0  # =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=
=B4 =ED=8E=98=EC=9D=B4=EC=A7=80
        self.wordday =3D 0  # =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=
=B4=EC=9D=BC =EC=B4=88=EA=B8=B0=EA=B0=92
        self.selected_day =3D None  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90 =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80
        self.create_widgets()
        self.update_progress_bar()
   =20
    def connect_database(self):
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        style =3D ttk.Style()
        style.configure("TButton",
                        padding=3D0,  # =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=
=BC=EB=A1=9C =EC=84=A4=EC=A0=95
                        background=3D"#FFFFFF",  # =EB=B0=B0=EA=B2=BD=EC=83=
=89 =EC=A0=9C=EA=B1=B0
                        relief=3D"flat")  # =ED=85=8C=EB=91=90=EB=A6=AC =EC=
=A0=9C=EA=B1=B0
        style.configure("Selected.TButton",
                padding=3D0,
                background=3D"#FFFFFF",  # =EC=84=A0=ED=83=9D=EB=90=9C =EB=
=B2=84=ED=8A=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95
                relief=3D"flat")

        self.back_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=
=B8=EB=B2=84.png",
            command=3Dlambda: Util.SwitchPage(self, "UserMainPage", self.us=
er),
            scale=3D0.8
        )
        self.back_button.place(x=3D25, y=3D10)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D"#FFFFFF")
        self.buttons_frame.place(x=3D25, y=3D90)

        self.day_label =3D tk.Label(self, text=3D"=ED=95=99=EC=8A=B5 =EC=9D=
=BC=EC=9E=90=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=
=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.day_label.place(x=3D70, y=3D45)

        self.bar_label =3D tk.Label(self, text=3D"=EC=A7=84=EB=8F=84=EC=9C=
=A8", font=3D("Helvetica", 12), bg=3D"#FFFFFF")
        self.bar_label.place(x=3D145, y=3D285)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D310)
        self.progress_bar['value'] =3D 0
       =20
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)

        self.prev_button =3D self.create_image_button(
            normal_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.prev_page,
            scale=3D1.0
        )
        self.prev_button.place(x=3D25, y=3D250)
       =20
        self.next_button =3D self.create_image_button(
            normal_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png",
            hover_image_path=3D"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=
=B8=EB=B2=84.png",
            command=3Dself.next_page,
            scale=3D1.0
        )
        self.next_button.place(x=3D260, y=3D250)

        self.load_day_buttons()

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")
       =20
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_word=
_page, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_word=
_page, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
        self.word_prev_button.place_forget()
        self.word_next_button.place_forget()

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_day_buttons(self):
        cursor =3D self.connection.cursor()
       =20
        # Get maximum day from toeicword table
        cursor.execute("SELECT MAX(Day) FROM toeicword")
        max_day =3D cursor.fetchone()[0]
       =20
        # Get user wordday and gendate
        cursor.execute("SELECT wordday, gendate FROM user WHERE id =3D %s",=
 (self.user,))
        user_data =3D cursor.fetchone()
        wordday, gendate =3D user_data[0], user_data[1]
       =20
        cursor.close()

        # Convert gendate to date type if it's datetime
        if isinstance(gendate, datetime.datetime):
            gendate =3D gendate.date()

        today =3D datetime.date.today()
        days_since_gendate =3D (today - gendate).days

        # Limit wordday to days_since_gendate
        if wordday &gt; days_since_gendate:
            wordday =3D days_since_gendate

        self.wordday =3D wordday  # Update self.wordday

        self.total_pages =3D (max_day + self.days_per_page - 1) // self.day=
s_per_page
        self.update_day_buttons()

    def update_day_buttons(self):
        for widget in self.buttons_frame.winfo_children():
            widget.destroy()
       =20
        start_day =3D self.current_page * self.days_per_page
        end_day =3D start_day + self.days_per_page
        if end_day &gt; start_day + self.days_per_page:
            end_day =3D start_day + self.days_per_page
       =20
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT DISTINCT Day FROM toeicword WHERE Day BETWEE=
N %s AND %s ORDER BY Day", (start_day, end_day))
        days =3D cursor.fetchall()
        cursor.close()

        rows, cols =3D 6, 5
        day_iter =3D iter(days)
        for r in range(rows):
            for c in range(cols):
                try:
                    day =3D next(day_iter)[0]
                    btn =3D ttk.Button(self.buttons_frame, text=3Df"{day}",=
 command=3Dlambda d=3Dday: self.select_day(d), width=3D7, style=3D"TButton"=
)
                    if day &lt; self.wordday:  # =EC=88=98=EC=A0=95=EB=90=
=9C =EB=B6=80=EB=B6=84: day &lt; self.wordday
                        btn.state(['!disabled'])  # Enable button if within=
 wordday limit
                    else:
                        btn.state(['disabled'])  # Disable button if beyond=
 wordday limit
                    if self.selected_day is not None and day =3D=3D self.se=
lected_day:  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =EA=B0=95=EC=
=A1=B0
                        btn.configure(style=3D"Selected.TButton")
                    btn.grid(row=3Dr, column=3Dc, padx=3D1, pady=3D1)
                except StopIteration:
                    break

        self.update_navigation_buttons()

    def update_navigation_buttons(self):
        if self.current_page &gt; 0:
            self.prev_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_button.config(state=3Dtk.DISABLED)
       =20
        if self.current_page &lt; self.total_pages - 1:
            self.next_button.config(state=3Dtk.NORMAL)
        else:
            self.next_button.config(state=3Dtk.DISABLED)

    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo          =20

    def select_day(self, day):
        self.current_day =3D day
        self.selected_day =3D day  # =ED=98=84=EC=9E=AC =EC=84=A0=ED=83=9D=
=ED=95=9C =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=A0=80=EC=9E=A5
        self.day_label.config(text=3Df"{day}=EC=9D=BC=EC=B0=A8 =EB=8B=A8=EC=
=96=B4 =ED=95=99=EC=8A=B5")
        self.current_word_page =3D 0  # =EC=9D=BC=EC=9E=90 =EC=84=A0=ED=83=
=9D =EC=8B=9C =EB=8B=A8=EC=96=B4 =ED=8E=98=EC=9D=B4=EC=A7=80 =EC=B4=88=EA=
=B8=B0=ED=99=94
        self.load_words(day)  # =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=
=84: day + 1 =EC=A0=84=EB=8B=AC
        self.update_day_buttons()  # =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=
=EC=9E=90=EB=A5=BC =EA=B0=95=EC=A1=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =
=EB=B2=84=ED=8A=BC =EC=8A=A4=ED=83=80=EC=9D=BC =EC=97=85=EB=8D=B0=EC=9D=B4=
=ED=8A=B8

    def load_words(self, day):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Day =3D %s"=
, (day,))
        self.words =3D cursor.fetchall()
        cursor.close()
        self.display_words()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 90%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_word_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()


    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_word_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_word_page(self):
        if self.current_word_page &gt; 0:
            self.current_word_page -=3D 1
            self.display_words()

    def next_word_page(self):
        if (self.current_word_page + 1) * self.words_per_page &lt; len(self=
.words):
            self.current_word_page +=3D 1
            self.display_words()

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.update_day_buttons()

    def next_page(self):
        if self.current_page &lt; self.total_pages - 1:
            self.current_page +=3D 1
            self.update_day_buttons()


    def update_progress_bar(self):
        cursor =3D self.connection.cursor()

        cursor.execute("SELECT wordday FROM user WHERE id =3D %s", (self.us=
er,))
        wordday =3D cursor.fetchone()[0]

        cursor.execute("SELECT MAX(Day) FROM toeicword")
        total_day =3D cursor.fetchone()[0]

        cursor.close()

        progress_value =3D (wordday / total_day) * 100
        self.progress_bar['value'] =3D progress_value

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D DayStudy(user_id)
    app.mainloop()

=EC=BD=94=EB=93=9C=EB=8A=94 =EC=9D=B4=EA=B1=B0=EC=95=BC<div class=3D"absolu=
te bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversat=
ion-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"fle=
x h-9 w-9 items-center justify-center rounded-full text-token-text-secondar=
y transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 =
8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713z=
M13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 =
1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.=
586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></div>=
</div></div></div></div></div></div></div><div class=3D"w-full text-token-t=
ext-primary" dir=3D"auto" data-testid=3D"conversation-turn-47" data-scroll-=
anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 =
m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 tex=
t-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[4=
8rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><=
div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6=
 items-center justify-center overflow-hidden rounded-full juice:h-8 juice:w=
-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-center =
bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg width=
=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-=
9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.=
0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126=
 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8=
215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575=
 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614=
 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.9=
8686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0=
.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 =
22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.959=
51 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8=
.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2=
107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946=
 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31=
.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.82=
1C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.=
6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.49=
78 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 1=
7.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.13=
7 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L2=
9.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052=
 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.=
7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.00=
64C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 =
26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.35=
32 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9=
979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988=
 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10=
.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6=
194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491=
 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.=
4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206=
 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15=
.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.223=
5 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 2=
0.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6=
531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364=
C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.=
849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103=
 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32=
.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319=
 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.=
1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 =
26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.=
8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.922=
5 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6=
.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3=
723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095=
 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 1=
9.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6=
071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377=
 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.=
6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215=
 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10=
.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.0=
71 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 2=
2.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div=
></div><div class=3D"group/conversation-turn relative flex w-full min-w-0 f=
lex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"fl=
ex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assistan=
t" data-message-id=3D"e4472172-b6d4-4cd7-a5ef-4f7141e95270" dir=3D"auto" cl=
ass=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end ove=
rflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hi=
dden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words =
dark:prose-invert light"><p><code>wordday</code>=EA=B0=80 24=EC=9D=BC =EB=
=95=8C 1=EC=9D=BC=EB=B6=80=ED=84=B0 24=EC=9D=BC=EA=B9=8C=EC=A7=80 =EB=B2=84=
=ED=8A=BC=EC=9D=B4 =ED=99=9C=EC=84=B1=ED=99=94=EB=90=98=EB=8F=84=EB=A1=9D =
=ED=95=98=EB=A0=A4=EB=A9=B4, <code>update_day_buttons</code> =EB=A9=94=EC=
=84=9C=EB=93=9C=EC=97=90=EC=84=9C =EB=B2=84=ED=8A=BC =ED=99=9C=EC=84=B1=ED=
=99=94 =EC=A1=B0=EA=B1=B4=EC=9D=84 <code>day &lt;=3D self.wordday</code>=EB=
=A1=9C =EC=88=98=EC=A0=95=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p=
><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C <code>update_da=
y_buttons</code> =EB=A9=94=EC=84=9C=EB=93=9C=EA=B0=80 =ED=8F=AC=ED=95=A8=EB=
=90=9C =EC=A0=84=EC=B2=B4 =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p=
><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token=
-border-medium"><div class=3D"flex items-center relative text-token-text-se=
condary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify=
-between rounded-t-md"><span>python</span><div class=3D"flex items-center">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" =
fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"current=
Color" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 =
0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 =
0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0=
-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenod=
d"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div>=
</div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><c=
ode class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyw=
ord">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">import</span> datetime

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>DayStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=9D=BC=EC=9E=90=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.days_per_page =3D <span class=3D"hljs-number">30</span>  <span=
 class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EC=9D=BC =EC=88=98</span>
        self.words_per_page =3D <span class=3D"hljs-number">12</span>  <spa=
n class=3D"hljs-comment"># =ED=95=9C =ED=8E=98=EC=9D=B4=EC=A7=80=EB=8B=B9 =
=EB=8B=A8=EC=96=B4 =EC=88=98, =EC=B4=88=EA=B8=B0=EA=B0=92 =EC=84=A4=EC=A0=
=95</span>
        self.current_word_page =3D <span class=3D"hljs-number">0</span>  <s=
pan class=3D"hljs-comment"># =ED=98=84=EC=9E=AC =EB=8B=A8=EC=96=B4 =ED=8E=
=98=EC=9D=B4=EC=A7=80</span>
        self.wordday =3D <span class=3D"hljs-number">0</span>  <span class=
=3D"hljs-comment"># =EC=82=AC=EC=9A=A9=EC=9E=90 =EB=8B=A8=EC=96=B4=EC=9D=BC=
 =EC=B4=88=EA=B8=B0=EA=B0=92</span>
        self.selected_day =3D <span class=3D"hljs-literal">None</span>  <sp=
an class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =
=EC=B4=88=EA=B8=B0=EA=B0=92 =EC=B6=94=EA=B0=80</span>
        self.create_widgets()
        self.update_progress_bar()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"TButton"</span>,
                        padding=3D<span class=3D"hljs-number">0</span>,  <s=
pan class=3D"hljs-comment"># =ED=8C=A8=EB=94=A9=EC=9D=84 0=EC=9C=BC=EB=A1=
=9C =EC=84=A4=EC=A0=95</span>
                        background=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>,  <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=A0=
=9C=EA=B1=B0</span>
                        relief=3D<span class=3D"hljs-string">"flat"</span>)=
  <span class=3D"hljs-comment"># =ED=85=8C=EB=91=90=EB=A6=AC =EC=A0=9C=EA=
=B1=B0</span>
        style.configure(<span class=3D"hljs-string">"Selected.TButton"</spa=
n>,
                padding=3D<span class=3D"hljs-number">0</span>,
                background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, =
 <span class=3D"hljs-comment"># =EC=84=A0=ED=83=9D=EB=90=9C =EB=B2=84=ED=8A=
=BC =EC=83=89=EC=83=81 =EC=84=A4=EC=A0=95</span>
                relief=3D<span class=3D"hljs-string">"flat"</span>)

        self.back_button =3D self.create_image_button(
            normal_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=
=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,
            hover_image_path=3D<span class=3D"hljs-string">"=EC=9D=B4=EC=A0=
=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            command=3D<span class=3D"hljs-keyword">lambda</span>: Util.Swit=
chPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.user),
            scale=3D<span class=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-stri=
ng">"#FFFFFF"</span>)
        self.buttons_frame.place(x=3D<span class=3D"hljs-number">25</span>,=
 y=3D<span class=3D"hljs-number">90</span>)

        self.day_label =3D tk.Label(self, text=3D<span class=3D"hljs-string=
">"=ED=95=99=EC=8A=B5 =EC=9D=BC=EC=9E=90=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=
=98=EC=84=B8=EC=9A=94"</span>,
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r233:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-48" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa2532a-3016-42=
73-8343-9d865cd1c92e" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=88=98=EC=A0=95=EB=B6=80=EB=B6=84=EB=A7=8C<=
div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 gr=
oup-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><=
button class=3D"flex h-9 w-9 items-center justify-center rounded-full text-=
token-text-secondary transition hover:bg-token-main-surface-tertiary"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.0=
94 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5=
 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3=
.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2=
.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span=
></div></div></div></div></div></div></div></div></div></div><div class=3D"=
w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tu=
rn-49" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3=
 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto fl=
ex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-=
[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relativ=
e items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-=
avatar flex h-6 w-6 items-center justify-center overflow-hidden rounded-ful=
l juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-cen=
ter justify-center bg-token-main-surface-primary text-token-text-primary h-=
8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"assistant" data-message-id=3D"d99276ae-1bf5-42d0-a9a4-1fe21ea8d114=
" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full ju=
ice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap=
-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-=
full break-words dark:prose-invert light"><p>=EC=88=98=EC=A0=95=EB=90=9C =
=EB=B6=80=EB=B6=84=EB=A7=8C =EC=95=84=EB=9E=98=EC=97=90 =EC=A0=9C=EA=B3=B5=
=EB=90=9C =EC=BD=94=EB=93=9C=EB=A5=BC =EC=B0=B8=EA=B3=A0=ED=95=B4 =EC=A3=BC=
=EC=84=B8=EC=9A=94:</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function=
_">update_day_buttons</span>(<span class=3D"hljs-params">self</span>):
    <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-keyw=
ord">in</span> self.buttons_frame.winfo_children():
        widget.destroy()
   =20
    start_day =3D self.current_page * self.days_per_page
    end_day =3D start_day + self.days_per_page
    <span class=3D"hljs-keyword">if</span> end_day &gt; start_day + self.da=
ys_per_page:
        end_day =3D start_day + self.days_per_page
   =20
    cursor =3D self.connection.cursor()
    cursor.execute(<span class=3D"hljs-string">"SELECT DISTINCT Day FROM to=
eicword WHERE Day BETWEEN %s AND %s ORDER BY Day"</span>, (start_day, end_d=
ay))
    days =3D cursor.fetchall()
    cursor.close()

    rows, cols =3D <span class=3D"hljs-number">6</span>, <span class=3D"hlj=
s-number">5</span>
    day_iter =3D <span class=3D"hljs-built_in">iter</span>(days)
    <span class=3D"hljs-keyword">for</span> r <span class=3D"hljs-keyword">=
in</span> <span class=3D"hljs-built_in">range</span>(rows):
        <span class=3D"hljs-keyword">for</span> c <span class=3D"hljs-keywo=
rd">in</span> <span class=3D"hljs-built_in">range</span>(cols):
            <span class=3D"hljs-keyword">try</span>:
                day =3D <span class=3D"hljs-built_in">next</span>(day_iter)=
[<span class=3D"hljs-number">0</span>]
                btn =3D ttk.Button(self.buttons_frame, text=3D<span class=
=3D"hljs-string">f"<span class=3D"hljs-subst">{day}</span>"</span>, command=
=3D<span class=3D"hljs-keyword">lambda</span> d=3Dday: self.select_day(d), =
width=3D<span class=3D"hljs-number">7</span>, style=3D<span class=3D"hljs-s=
tring">"TButton"</span>)
                <span class=3D"hljs-keyword">if</span> day &lt;=3D self.wor=
dday:  <span class=3D"hljs-comment"># =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=
=EB=B6=84: day &lt;=3D self.wordday</span>
                    btn.state([<span class=3D"hljs-string">'!disabled'</spa=
n>])  <span class=3D"hljs-comment"># Enable button if within wordday limit<=
/span>
                <span class=3D"hljs-keyword">else</span>:
                    btn.state([<span class=3D"hljs-string">'disabled'</span=
>])  <span class=3D"hljs-comment"># Disable button if beyond wordday limit<=
/span>
                <span class=3D"hljs-keyword">if</span> self.selected_day <s=
pan class=3D"hljs-keyword">is</span> <span class=3D"hljs-keyword">not</span=
> <span class=3D"hljs-literal">None</span> <span class=3D"hljs-keyword">and=
</span> day =3D=3D self.selected_day:  <span class=3D"hljs-comment"># =EC=
=84=A0=ED=83=9D=ED=95=9C =EC=9D=BC=EC=9E=90 =EA=B0=95=EC=A1=B0</span>
                    btn.configure(style=3D<span class=3D"hljs-string">"Sele=
cted.TButton"</span>)
                btn.grid(row=3Dr, column=3Dc, padx=3D<span class=3D"hljs-nu=
mber">1</span>, pady=3D<span class=3D"hljs-number">1</span>)
            <span class=3D"hljs-keyword">except</span> StopIteration:
                <span class=3D"hljs-keyword">break</span>

    self.update_navigation_buttons()
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r23b:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-50" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa20149-cb38-41=
02-b24b-d4ef3b3210fc" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">import tkinter as tk
from tkinter import ttk, messagebox
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk
import datetime

class DayExam(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=9D=BC=EC=9E=90=EB=B3=84 =EC=8B=9C=ED=97=98")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.current_page =3D 0
        self.days_per_page =3D 30
        self.test_words =3D []
        self.entry_vars =3D []
        self.correct_count =3D 0
        self.total_questions =3D 20
        self.current_day =3D None
        self.current_test_page =3D 0
        self.time_remaining =3D 600
        self.timer_id =3D None
        self.wordday =3D 0
        self.load_user_data()
        self.create_widgets()

    def connect_database(self):
        try:
            return mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()

    def load_user_data(self):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT wordday, gendate FROM user WHERE id =3D %s",=
 (self.user,))
        user_data =3D cursor.fetchone()
        cursor.close()
        if user_data:
            self.wordday, gendate =3D user_data[0], user_data[1]
            print(f"Loaded user data: wordday=3D{self.wordday}, gendate=3D{=
gendate}")
            if isinstance(gendate, datetime.datetime):
                gendate =3D gendate.date()
            self.days_since_gendate =3D (datetime.date.today() - gendate).d=
ays
            print(f"Converted gendate: {gendate}")
        else:
            self.wordday =3D 0
            self.days_since_gendate =3D 0

    def create_widgets(self):
        style =3D ttk.Style()
        style.configure("TButton",
                        padding=3D0,
                        background=3D"#FFFFFF",
                        relief=3D"flat")
       =20
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)
       =20
        self.buttons_frame =3D tk.Frame(self, bg=3D"#FFFFFF")
        self.buttons_frame.place(x=3D25, y=3D90)
       =20
        self.day_label =3D tk.Label(self, text=3D"=EB=A8=BC=EC=A0=80 =EB=82=
=A0=EC=A7=9C=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=
=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.day_label.place(x=3D70, y=3D45)
       =20
        self.exam_frame_container =3D tk.Frame(self, bg=3D"#FFFFFF", highli=
ghtbackground=3D"black", highlightthickness=3D1)
        self.exam_frame_container.place(x=3D350, y=3D35, width=3D425, heigh=
t=3D515)
       =20
        self.canvas =3D tk.Canvas(self.exam_frame_container, bg=3D"#FFFFFF"=
)
        self.scrollbar =3D tk.Scrollbar(self.exam_frame_container, orient=
=3D"vertical", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")
        self.scrollable_frame.bind("&lt;Configure&gt;", lambda e: self.canv=
as.configure(scrollregion=3Dself.canvas.bbox("all")))
        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)
        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")
       =20
        self.load_sumoongi_image()
       =20
        self.start_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=ED=98=B8=EB=B2=84.png", self.start_tes=
t, 1.0
        )
        self.start_button.place(x=3D130, y=3D310)
       =20
        self.timer_label =3D tk.Label(self, text=3D"=EB=82=A8=EC=9D=80=EC=
=8B=9C=EA=B0=84: 10=EB=B6=84 00=EC=B4=88", font=3D("Helvetica", 16), bg=3D"=
#FFFFFF")
        self.timer_label.place_forget()
        self.end_button =3D self.create_image_button(
            "=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=EC=9D=BC=EB=B0=98.png", "=
=EC=8B=9C=ED=97=98=EC=A2=85=EB=A3=8C=ED=98=B8=EB=B2=84.png", self.finish_te=
st, 1.0
        )
        self.end_button.place_forget()
       =20
        self.day_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_day_=
page, 1.0
        )
        self.day_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_day_=
page, 1.0
        )
        self.day_prev_button.place(x=3D25, y=3D250)
        self.day_next_button.place(x=3D260, y=3D250)
       =20
        self.prev_test_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_test=
_page, 1.0
        )
        self.next_test_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_test=
_page, 1.0
        )
        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
       =20
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)
        self.load_day_buttons()
        self.update_day_navigation_buttons()

    def load_sumoongi_image(self):
        image =3D Image.open("=EC=8B=9C=ED=97=98=EC=8B=9C=EC=9E=91=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((300, 300), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.sumoongi_canvas =3D tk.Canvas(self, width=3D300, height=3D300,=
 bg=3D'white', highlightthickness=3D0)
        self.sumoongi_canvas.create_image(0, 0, image=3Dphoto, anchor=3Dtk.=
NW)
        self.sumoongi_canvas.image =3D photo
        self.sumoongi_canvas.place(x=3D400, y=3D150)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def load_day_buttons(self):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT MAX(Day) FROM toeicword")
        max_day =3D cursor.fetchone()[0]
        cursor.close()
        self.total_pages =3D (max_day + self.days_per_page - 1) // self.day=
s_per_page
        self.update_day_buttons()

    def update_day_buttons(self):
        for widget in self.buttons_frame.winfo_children():
            widget.destroy()
        start_day =3D self.current_page * self.days_per_page
        end_day =3D min(start_day + self.days_per_page, start_day + self.da=
ys_per_page)
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT DISTINCT Day FROM toeicword WHERE Day BETWEE=
N %s AND %s ORDER BY Day", (start_day, end_day))
        days =3D cursor.fetchall()
        cursor.close()
        rows, cols =3D 6, 5
        day_iter =3D iter(days)
        for r in range(rows):
            for c in range(cols):
                try:
                    day =3D next(day_iter)[0]
                    btn =3D ttk.Button(self.buttons_frame, text=3Df"{day}",=
 command=3Dlambda d=3Dday: self.select_day(d), width=3D7, style=3D"TButton"=
)
                    if day &lt; self.wordday and day &lt;=3D self.days_sinc=
e_gendate:
                        btn.state(['!disabled'])
                    else:
                        btn.state(['disabled'])
                    print(f"Day {day + 1} button {'enabled' if day &lt; sel=
f.wordday and day &lt; self.days_since_gendate else 'disabled'}")  # =EB=94=
=94=EB=B2=84=EA=B9=85 =EC=B6=9C=EB=A0=A5
                    btn.grid(row=3Dr, column=3Dc, padx=3D1, pady=3D1)
                except StopIteration:
                    break
        self.update_day_navigation_buttons()

    def prev_day_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.update_day_buttons()

    def next_day_page(self):
        if (self.current_page + 1) * self.days_per_page &lt; self.total_pag=
es * self.days_per_page:
            self.current_page +=3D 1
            self.update_day_buttons()

    def update_day_navigation_buttons(self):
        self.day_prev_button.place(x=3D25, y=3D250)
        self.day_next_button.place(x=3D260, y=3D250)
        if self.current_page &gt; 0:
            self.day_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.day_prev_button.config(state=3Dtk.DISABLED)
        if (self.current_page + 1) * self.days_per_page &lt; self.total_pag=
es * self.days_per_page:
            self.day_next_button.config(state=3Dtk.NORMAL)
        else:
            self.day_next_button.config(state=3Dtk.DISABLED)

    def load_image(self, image_path):
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)
        image =3D Image.open(image_path)
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.canvas_img.create_image(150, 100, image=3Dphoto)
        self.canvas_img.image =3D photo

    def select_day(self, day):
        self.current_day =3D day
        self.day_label.config(text=3Df"{day}=EC=9D=BC=EC=B0=A8 =EC=8B=9C=ED=
=97=98 =EC=A4=80=EB=B9=84")

    def start_test(self):
        if self.current_day is None:
            messagebox.showinfo("Select Day", "Please select a day first!")
            return
        self.sumoongi_canvas.place_forget()
        self.start_button.place_forget()
        self.timer_label.place(x=3D75, y=3D310)
        self.end_button.place(x=3D600, y=3D556)
        self.prev_test_button.place(x=3D400, y=3D556)
        self.next_test_button.place(x=3D500, y=3D556)
        self.load_test_words()
        self.display_test_words()
        self.reset_timer()
        self.update_timer()

    def load_test_words(self):
        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Day =3D %s =
ORDER BY RAND() LIMIT 20", (self.current_day,))
        words =3D cursor.fetchall()
        cursor.close()
        self.test_words =3D words
        self.correct_count =3D 0
        self.entry_vars =3D [tk.StringVar() for _ in range(len(self.test_wo=
rds))]
        self.current_test_page =3D 0

    def display_test_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        start_index =3D self.current_test_page * 10
        end_index =3D min(start_index + 10, len(self.test_words))
        for i, (spell, mean) in enumerate(self.test_words[start_index:end_i=
ndex]):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, columnspan=3D2, padx=3D5, =
pady=3D2, sticky=3D"ew")
            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            mean_label.grid(row=3D0, column=3D0, sticky=3D"w", padx=3D0, pa=
dy=3D0)
            entry =3D tk.Entry(word_frame, textvariable=3Dself.entry_vars[s=
tart_index + i], font=3D("Helvetica", 11), width=3D20)
            entry.grid(row=3D0, column=3D1, padx=3D0, pady=3D0, sticky=3D"e=
")
            entry.grid(ipady=3D5)  # Adjust height with internal padding
            word_frame.grid_columnconfigure(0, weight=3D6)
            word_frame.grid_columnconfigure(1, weight=3D4)
        self.update_test_navigation_buttons()

    def update_test_navigation_buttons(self):
        if self.current_test_page &gt; 0:
            self.prev_test_button.place(x=3D400, y=3D556)
            self.prev_test_button.config(state=3Dtk.NORMAL)
        else:
            self.prev_test_button.config(state=3Dtk.DISABLED)
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.next_test_button.place(x=3D500, y=3D556)
            self.next_test_button.config(state=3Dtk.NORMAL)
        else:
            self.next_test_button.config(state=3Dtk.DISABLED)
        self.end_button.place(x=3D600, y=3D556)

    def prev_test_page(self):
        if self.current_test_page &gt; 0:
            self.current_test_page -=3D 1
            self.display_test_words()

    def next_test_page(self):
        if (self.current_test_page + 1) * 10 &lt; len(self.test_words):
            self.current_test_page +=3D 1
            self.display_test_words()

    def update_timer(self):
        if self.time_remaining &gt; 0:
            minutes, seconds =3D divmod(self.time_remaining, 60)
            self.timer_label.config(text=3Df"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=
=B0=84: {minutes:02}=EB=B6=84 {seconds:02}=EC=B4=88")
            self.time_remaining -=3D 1
            self.timer_id =3D self.after(1000, self.update_timer)
        else:
            self.finish_test()

    def reset_timer(self):
        if self.timer_id:
            self.after_cancel(self.timer_id)
        self.time_remaining =3D 600  # Reset to 10 minutes
        self.timer_label.config(text=3D"=EB=82=A8=EC=9D=80=EC=8B=9C=EA=B0=
=84: 10=EB=B6=84 00=EC=B4=88")

    def finish_test(self):
        self.reset_timer()
        self.timer_label.place_forget()  # =ED=83=80=EC=9D=B4=EB=A8=B8 =EB=
=9D=BC=EB=B2=A8 =EC=88=A8=EA=B9=80

        # =EA=B8=B0=EC=A1=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=88=A8=EA=B8=B0=
=EA=B3=A0 =EC=83=88=EB=A1=9C=EC=9A=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=91=9C=
=EC=8B=9C
        self.canvas_img.place_forget()
        self.load_result_sumoongi_image()

        incorrect_words =3D [(spell, mean) for i, (spell, mean) in enumerat=
e(self.test_words) if self.entry_vars[i].get().strip().lower() !=3D spell.l=
ower()]
        score =3D len(self.test_words) - len(incorrect_words)
        score_message =3D f"=EC=A0=90=EC=88=98 : {score}/{len(self.test_wor=
ds)}"
        messagebox.showinfo("=EC=8B=9C=ED=97=98 =EC=A2=85=EB=A3=8C", score_=
message)

        # =EC=A0=90=EC=88=98 =EA=B3=84=EC=82=B0 =ED=9B=84 wordday =EC=A6=9D=
=EA=B0=80 =EC=97=AC=EB=B6=80 =EA=B2=B0=EC=A0=95
        if score / len(self.test_words) &gt;=3D 0.1 and self.wordday &lt; s=
elf.days_since_gendate:
            self.wordday +=3D 1
            cursor =3D self.connection.cursor()
            cursor.execute("UPDATE user SET wordday =3D %s WHERE id =3D %s"=
, (self.wordday, self.user))
            self.connection.commit()
            cursor.close()
            messagebox.showinfo("=EC=B6=95=ED=95=98=ED=95=A9=EB=8B=88=EB=8B=
=A4!", f"=EB=8B=A4=EC=9D=8C =EC=9D=BC=EC=9E=90=EA=B0=80 =EC=97=B4=EB=A0=B8=
=EC=8A=B5=EB=8B=88=EB=8B=A4! =ED=98=84=EC=9E=AC =EC=9D=BC=EC=9E=90: {self.w=
ordday}=EC=9D=BC=EC=B0=A8")

        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()

        frame_width =3D self.scrollable_frame.winfo_width()
        wrap_length =3D frame_width - 20

        for i, (spell, mean) in enumerate(incorrect_words):
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.grid(row=3Di, column=3D0, padx=3D5, pady=3D2, sticky=
=3D"ew")

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 10, "bold"), bg=3D"#F0F0F0", anchor=3D"w")
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")
            spell_label.config(wraplength=3Dwrap_length / 2)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 10), bg=3D"#F0F0F0", anchor=3D"e")
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")
            mean_label.config(wraplength=3Dwrap_length / 2)

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.prev_test_button.place_forget()
        self.next_test_button.place_forget()
        self.end_button.place_forget()

        # =EA=B2=B0=EA=B3=BC =ED=99=95=EC=9D=B8 =EB=B2=84=ED=8A=BC =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EC=A0=81=EC=9A=A9
        self.result_confirm_button =3D self.create_image_button(
            "=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.reset_to_=
initial, 1.0
        )
        self.result_confirm_button.place(x=3D350, y=3D560)


    def load_result_sumoongi_image(self):
        image =3D Image.open("=EA=B2=B0=EA=B3=BC=ED=99=95=EC=9D=B8=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((200, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.result_sumoongi_canvas =3D tk.Canvas(self, width=3D200, height=
=3D200, bg=3D'white', highlightthickness=3D0)
        self.result_sumoongi_canvas.create_image(100, 100, image=3Dphoto, a=
nchor=3Dtk.CENTER)
        self.result_sumoongi_canvas.image =3D photo
        self.result_sumoongi_canvas.place(x=3D85, y=3D310)  # Same position=
 as the original image

    def reset_to_initial(self):
        self.result_confirm_button.place_forget()
        self.result_sumoongi_canvas.place_forget()
        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # Load the original image again
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
        self.day_label.config(text=3D"=EB=A8=BC=EC=A0=80 =EB=82=A0=EC=A7=9C=
=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94")
        self.load_day_buttons()
        self.sumoongi_canvas.place(x=3D400, y=3D150)
        self.start_button.place(x=3D130, y=3D310)

    def stop_test_and_go_back(self):
        self.reset_timer()
        self.finish_test()
        Util.SwitchPage(self, "UserMainPage", self.user)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D DayExam(user_id)
    app.mainloop()

=EC=9D=BC=EC=9E=90=EB=B3=84 =EC=8B=9C=ED=97=98=EB=8F=84 =EB=98=91=EA=B0=99=
=EC=9D=B4 wordday=EA=B0=80 24=EC=9D=B8=EB=8D=B0 23=EA=B9=8C=EC=A7=80=EB=A7=
=8C =EB=9C=A8=EA=B1=B0=EB=93=A0? =EC=88=98=EC=A0=95=ED=95=A0=EA=B3=B3=EC=A2=
=80 =EC=95=8C=EB=A0=A4=EC=A4=98<div class=3D"absolute bottom-0 right-full t=
op-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center j=
ustify-center rounded-full text-token-text-secondary transition hover:bg-to=
ken-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536=
 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 =
1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a=
3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5=
 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"even=
odd"></path></svg></button></span></div></div></div></div></div></div></div=
></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"aut=
o" data-testid=3D"conversation-turn-51" data-scroll-anchor=3D"false"><div c=
lass=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 =
xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juic=
e:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"fl=
ex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 jui=
ce:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-c=
enter overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relat=
ive p-1 rounded-sm flex items-center justify-center bg-token-main-surface-p=
rimary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" vie=
wBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path=
 d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8=
409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 3=
2.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.789=
3 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058=
 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 =
9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.1750=
5C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 =
16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.8=
1966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.089=
2 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37=
.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.37=
47 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 =
26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.=
5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 =
29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8=
556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.887=
4 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.=
0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964=
 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.=
0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 =
21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0=
892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.1974=
2 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L1=
3.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 1=
4.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.72=
83 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L=
16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.=
9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.552=
79 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V=
19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64=
893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 =
15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5=
082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862=
 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25=
.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.47=
69 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 1=
8.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.36=
17 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 =
32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6=
066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 3=
1.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.87=
17L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 1=
0.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9=
783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207=
 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29=
.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.539=
45 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424=
 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10=
.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.21=
73 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C=
16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93=
941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 =
9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.=
2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.497=
8L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"=
currentColor"></path></svg></div></div></div></div></div><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max=
-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"246=
e7f3d-26ab-4c10-b356-5cdabfac24f0" dir=3D"auto" class=3D"min-h-[20px] text-=
message flex flex-col items-start whitespace-pre-wrap break-words [.text-me=
ssage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div =
class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]=
"><div class=3D"markdown prose w-full break-words dark:prose-invert light">=
<p>=EC=9D=BC=EC=9E=90=EB=B3=84 =EC=8B=9C=ED=97=98=EC=97=90=EC=84=9C=EB=8F=
=84 <code>wordday</code>=EB=A5=BC =EA=B8=B0=EC=A4=80=EC=9C=BC=EB=A1=9C =EB=
=B2=84=ED=8A=BC=EC=9D=B4 =ED=99=9C=EC=84=B1=ED=99=94=EB=90=98=EB=8F=84=EB=
=A1=9D =EC=88=98=EC=A0=95=ED=95=98=EB=A0=A4=EB=A9=B4, =EC=A1=B0=EA=B1=B4=EC=
=9D=84 <code>day &lt;=3D self.wordday</code>=EB=A1=9C =EB=B3=80=EA=B2=BD=ED=
=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EB=8B=A4=EC=9D=8C=EC=9D=80 =
=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:<=
/p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-tok=
en-border-medium"><div class=3D"flex items-center relative text-token-text-=
secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>python</span><div class=3D"flex items-center=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-=
center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></di=
v></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr">=
<code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-ke=
yword">def</span> <span class=3D"hljs-title function_">update_day_buttons</=
span>(<span class=3D"hljs-params">self</span>):
    <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-keyw=
ord">in</span> self.buttons_frame.winfo_children():
        widget.destroy()
    start_day =3D self.current_page * self.days_per_page
    end_day =3D <span class=3D"hljs-built_in">min</span>(start_day + self.d=
ays_per_page, start_day + self.days_per_page)
    cursor =3D self.connection.cursor()
    cursor.execute(<span class=3D"hljs-string">"SELECT DISTINCT Day FROM to=
eicword WHERE Day BETWEEN %s AND %s ORDER BY Day"</span>, (start_day, end_d=
ay))
    days =3D cursor.fetchall()
    cursor.close()
    rows, cols =3D <span class=3D"hljs-number">6</span>, <span class=3D"hlj=
s-number">5</span>
    day_iter =3D <span class=3D"hljs-built_in">iter</span>(days)
    <span class=3D"hljs-keyword">for</span> r <span class=3D"hljs-keyword">=
in</span> <span class=3D"hljs-built_in">range</span>(rows):
        <span class=3D"hljs-keyword">for</span> c <span class=3D"hljs-keywo=
rd">in</span> <span class=3D"hljs-built_in">range</span>(cols):
            <span class=3D"hljs-keyword">try</span>:
                day =3D <span class=3D"hljs-built_in">next</span>(day_iter)=
[<span class=3D"hljs-number">0</span>]
                btn =3D ttk.Button(self.buttons_frame, text=3D<span class=
=3D"hljs-string">f"<span class=3D"hljs-subst">{day}</span>"</span>, command=
=3D<span class=3D"hljs-keyword">lambda</span> d=3Dday: self.select_day(d), =
width=3D<span class=3D"hljs-number">7</span>, style=3D<span class=3D"hljs-s=
tring">"TButton"</span>)
                <span class=3D"hljs-keyword">if</span> day &lt;=3D self.wor=
dday <span class=3D"hljs-keyword">and</span> day &lt;=3D self.days_since_ge=
ndate:  <span class=3D"hljs-comment"># =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=
=80=EB=B6=84: day &lt;=3D self.wordday</span>
                    btn.state([<span class=3D"hljs-string">'!disabled'</spa=
n>])
                <span class=3D"hljs-keyword">else</span>:
                    btn.state([<span class=3D"hljs-string">'disabled'</span=
>])
                <span class=3D"hljs-built_in">print</span>(<span class=3D"h=
ljs-string">f"Day <span class=3D"hljs-subst">{day}</span> button <span clas=
s=3D"hljs-subst">{<span class=3D"hljs-string">'enabled'</span> <span class=
=3D"hljs-keyword">if</span> day &lt;=3D self.wordday <span class=3D"hljs-ke=
yword">and</span> day &lt;=3D self.days_since_gendate <span class=3D"hljs-k=
eyword">else</span> <span class=3D"hljs-string">'disabled'</span>}</span>"<=
/span>)  <span class=3D"hljs-comment"># =EB=94=94=EB=B2=84=EA=B9=85 =EC=B6=
=9C=EB=A0=A5</span>
                btn.grid(row=3Dr, column=3Dc, padx=3D<span class=3D"hljs-nu=
mber">1</span>, pady=3D<span class=3D"hljs-number">1</span>)
            <span class=3D"hljs-keyword">except</span> StopIteration:
                <span class=3D"hljs-keyword">break</span>
    self.update_day_navigation_buttons()
</code></div></div></pre><p>=EC=9D=B4 =EC=88=98=EC=A0=95=EC=9D=80 <code>day=
 &lt;=3D self.wordday</code> =EC=A1=B0=EA=B1=B4=EC=9D=84 =EC=82=AC=EC=9A=A9=
=ED=95=98=EC=97=AC <code>wordday</code>=EA=B0=80 24=EC=9D=BC =EB=95=8C 24=
=EC=9D=BC=EA=B9=8C=EC=A7=80 =EB=B2=84=ED=8A=BC=EC=9D=B4 =ED=99=9C=EC=84=B1=
=ED=99=94=EB=90=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4. <code>day=
</code>=EA=B0=80 <code>wordday</code>=EC=99=80 =EA=B0=99=EA=B1=B0=EB=82=98 =
=EC=9E=91=EC=9D=84 =EB=95=8C =EB=B2=84=ED=8A=BC=EC=9D=B4 =ED=99=9C=EC=84=B1=
=ED=99=94=EB=90=98=EB=AF=80=EB=A1=9C 24=EC=9D=BC=EC=B0=A8=EA=B9=8C=EC=A7=80=
 =EC=98=AC=EB=B0=94=EB=A5=B4=EA=B2=8C =ED=91=9C=EC=8B=9C=EB=90=A9=EB=8B=88=
=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:h=
idden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 =
z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border-to=
ken-border-light md:hidden"><div class=3D"flex items-center"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H=
5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5=
a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 =
0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></butt=
on></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11=
.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.16=
65 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.9=
4753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 =
21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C=
15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2958=
9C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 =
5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.9=
9743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002=
 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13=
.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C1=
7.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 =
19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curren=
tColor"></path></svg></span></button></span></div><span class=3D"" data-sta=
te=3D"closed"><button type=3D"button" id=3D"radix-:r23j:" aria-haspopup=3D"=
menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer=
 rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-sur=
face-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div cla=
ss=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.79=
5 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0=
 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0=
 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 =
0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2=
.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.8=
87c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 =
1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.46=
7 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-=
3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.5=
04 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.50=
3 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 =
2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.06=
4-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-=
1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 te=
xt-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.4=
14 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-=
6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></sp=
an></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-t=
estid=3D"conversation-turn-52" data-scroll-anchor=3D"false"><div class=3D"p=
y-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">=
<div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-=
6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col =
gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data=
-message-author-role=3D"user" data-message-id=3D"aaa2e30b-805e-463c-8bb0-ed=
724f2078df" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"re=
lative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-=
surface-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D 0
        self.words_per_page =3D 10
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"=EB=82=9C=EC=9D=B4=EB=
=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=3D("He=
lvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D45, y=3D100)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D70, y=3D140)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.l=
oad_words)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D320)  # =EC=9C=84=EC=B9=98=EB=
=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C =EC=A1=B0=EC=A0=95
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
       =20
        # =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EC=B6=
=94=EA=B0=80
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_page=
, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_page=
, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)

        self.update_buttons()
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20
       =20
    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D 0
        self.display_words()
        self.update_buttons()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()

    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.display_words()
            self.update_buttons()

    def next_page(self):
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.current_page +=3D 1
            self.display_words()
            self.update_buttons()

    def update_buttons(self):
        if self.current_page =3D=3D 0:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        else:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        if (self.current_page + 1) * self.words_per_page &gt;=3D len(self.w=
ords):
            self.word_next_button.config(state=3Dtk.DISABLED)
        else:
            self.word_next_button.config(state=3Dtk.NORMAL)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EC=9D=B4=EA=B1=B4 =EB=82=B4 =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5=
 =EC=BD=94=EB=93=9C=EC=9D=B8=EB=8D=B0, =EC=88=98=EC=A4=80=EB=B3=84=EC=8B=9C=
=ED=97=98=EC=97=90=EC=84=9C '=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png'=EB=A5=BC =EC=88=98=EC=A4=80=EB=B3=84=ED=95=99=EC=8A=
=B5 =EC=BD=94=EB=93=9C=EC=97=90 =EB=98=91=EA=B0=99=EC=9D=80 =EC=9C=84=EC=B9=
=98=EC=97=90 =EB=98=91=EA=B0=99=EC=9D=80 =ED=81=AC=EA=B8=B0=EB=A1=9C =EB=A7=
=8C=EB=93=A4=EC=96=B4=EC=A3=BC=EA=B3=A0, =EC=88=98=EC=A4=80=EC=84=A0=ED=83=
=9D =EB=93=9C=EB=A1=AD=EB=B0=95=EC=8A=A4=EB=8F=84 =EC=88=98=EC=A4=80=EB=B3=
=84=EC=8B=9C=ED=97=98=EC=9D=B4=EB=9E=91 =EB=8F=99=EC=9D=BC=ED=95=9C =EC=9C=
=84=EC=B9=98=EC=97=90 =EC=9E=88=EA=B2=8C =ED=95=B4=EC=A4=98<div class=3D"ab=
solute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conve=
rsation-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D=
"flex h-9 w-9 items-center justify-center rounded-full text-token-text-seco=
ndary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0=
 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 =
0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.=
713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 =
0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.58=
6 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></=
div></div></div></div></div></div></div></div><div class=3D"w-full text-tok=
en-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-53" data-scr=
oll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:p=
x-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3=
 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-=
w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><d=
iv><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6=
 w-6 items-center justify-center overflow-hidden rounded-full juice:h-8 jui=
ce:w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-cen=
ter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg wid=
th=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D=
"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 1=
4.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.61=
26 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25=
.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7855=
75 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.36=
14 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5=
.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312=
C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8361=
2 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.9=
5951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322=
 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38=
.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.49=
46 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 =
31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.=
821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 2=
4.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.=
4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117=
 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.=
137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542=
L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.0=
52 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 2=
7.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.=
0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6604=
8 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.=
3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28=
.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.69=
88 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 =
10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13=
.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.194=
91 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 2=
0.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.2=
06 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 =
15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2=
235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955=
 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25=
.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.13=
64C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 2=
2.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.11=
03 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 =
32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.3=
19 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 3=
5.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.094=
3 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 1=
5.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9=
225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158=
 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33=
.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.60=
95 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423=
 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10=
.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.83=
77 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C2=
0.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.942=
15 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 =
10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16=
.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071=
 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></d=
iv></div><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assist=
ant" data-message-id=3D"5dc05d03-8497-42a1-bd66-f96c947e5a77" dir=3D"auto" =
class=3D"text-message flex flex-col items-start whitespace-pre-wrap break-w=
ords [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-aut=
o gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:=
first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-=
invert light"><p>=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80 =EB=93=9C=EB=A1=AD=EB=B0=95=EC=8A=A4=
=EB=A5=BC =EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5 =EC=BD=94=EB=93=9C=
=EC=97=90 =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EB=B0=B0=EC=B9=98=ED=95=98=
=EB=A0=A4=EB=A9=B4, =EC=95=84=EB=9E=98=EC=99=80 =EA=B0=99=EC=9D=B4 =EC=BD=
=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=
=88=EB=8B=A4. =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=
=98=EA=B3=A0 =EB=B0=B0=EC=B9=98=ED=95=98=EB=8A=94 =ED=95=A8=EC=88=98=EB=A5=
=BC =EC=B6=94=EA=B0=80=ED=95=98=EA=B3=A0, =EB=93=9C=EB=A1=AD=EB=B0=95=EC=8A=
=A4=EC=9D=98 =EC=9C=84=EC=B9=98=EB=A5=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=
=8C =EC=A1=B0=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"da=
rk bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div c=
lass=3D"flex items-center relative text-token-text-secondary bg-token-main-=
surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"=
><span>python</span><div class=3D"flex items-center"><span class=3D"" data-=
state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 =
0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0=
 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h=
9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=
=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D=
"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!white=
space-pre hljs language-python"><span class=3D"hljs-keyword">import</span> =
tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"=EB=82=9C=EC=9D=B4=EB=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=
=B8=EC=9A=94"</span>, font=3D(<span class=3D"hljs-string">"Helvetica"</span=
>, <span class=3D"hljs-number">16</span>), bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.load_words)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)  <span class=3D"hljs-comment">#=
 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C=
 =EC=A1=B0=EC=A0=95</span>
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C =EC=88=98=EC=A4=80=EB=B3=84 =
=ED=95=99=EC=8A=B5 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C '=EC=88=98=EC=A4=80=
=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=EC=9D=B4.png' =EC=9D=B4=EB=AF=B8=EC=A7=
=80=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EA=B3=A0, =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=EB=A5=BC =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=
=9C=ED=97=98 =EC=BD=94=EB=93=9C=EC=99=80 =EB=8F=99=EC=9D=BC=ED=95=9C =EC=9C=
=84=EC=B9=98=EC=97=90 =EB=B0=B0=EC=B9=98=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden =
juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -=
mt-1 bg-token-main-surface-primary md:absolute md:border md:border-token-bo=
rder-light md:hidden"><div class=3D"flex items-center"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary ho=
ver:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] =
items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C1=
1 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.=
25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 =
3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.458=
8C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.5=
9714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331=
L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4=
 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.=
27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.999=
6 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 2=
0.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9=
444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149=
 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C1=
6.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.537=
9 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 1=
6.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.7=
66 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 =
16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.9=
0049Z" fill=3D"currentColor"></path></svg></span></button></span><span clas=
s=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-se=
condary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px]=
 w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000=
/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 =
0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0=
 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-=
1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></s=
pan><div class=3D"flex"><span class=3D"" data-state=3D"closed"><button clas=
s=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secon=
dary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22=
.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.099=
75 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.4=
3684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 =
3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 1=
5 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.3939=
9 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 =
13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.=
6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608=
 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15=
.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4=
.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 =
5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor">=
</path></svg></span></button></span></div><span class=3D"" data-state=3D"cl=
osed"><button type=3D"button" id=3D"radix-:r23r:" aria-haspopup=3D"menu" ar=
ia-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded=
-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-surface-sec=
ondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&=
amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0=
 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.12=
3 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.79=
4c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 =
0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .0=
01-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"><=
/path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 =
2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1=
.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a=
1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.=
187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339=
-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 =
1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.=
094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.=
901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.=
576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" s=
tyle=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"=
currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 =
14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 =
0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></span></div=
></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></di=
v><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D=
"conversation-turn-54" data-scroll-anchor=3D"false"><div class=3D"py-2 juic=
e:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max=
-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-=
turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md=
:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message=
-author-role=3D"user" data-message-id=3D"aaa2dfa9-a41c-4df7-af6c-e2f5943f64=
d9" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-sta=
rt whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full =
juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col g=
ap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"relative m=
ax-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-=
secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D 0
        self.words_per_page =3D 10
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"=EB=82=9C=EC=9D=B4=EB=
=8F=84=EB=A5=BC =EC=84=A0=ED=83=9D=ED=95=98=EC=84=B8=EC=9A=94", font=3D("He=
lvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.l=
oad_words)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D320)  # =EC=9C=84=EC=B9=98=EB=
=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C =EC=A1=B0=EC=A0=95
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
        self.load_level_image()  # =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=
=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C
       =20
        # =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EC=B6=
=94=EA=B0=80
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_page=
, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_page=
, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)

        self.update_buttons()
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)
       =20
    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D 0
        self.display_words()
        self.update_buttons()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()

    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.display_words()
            self.update_buttons()

    def next_page(self):
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.current_page +=3D 1
            self.display_words()
            self.update_buttons()

    def update_buttons(self):
        if self.current_page =3D=3D 0:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        else:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        if (self.current_page + 1) * self.words_per_page &gt;=3D len(self.w=
ords):
            self.word_next_button.config(state=3Dtk.DISABLED)
        else:
            self.word_next_button.config(state=3Dtk.NORMAL)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5=EC=BD=94=EB=93=9C=EC=9D=B8=
=EB=8D=B0, =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=97=90=EC=84=9C=
 level_label=EC=9D=98 =EC=9C=84=EC=B9=98=EC=97=90=EB=8B=A4=EA=B0=80 =EB=98=
=91=EA=B0=99=EC=9D=B4 =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=A7=91=EC=96=B4=EB=84=
=A3=EB=8A=94=EB=8D=B0, =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=97=
=90=EC=84=9C =EC=B2=98=EB=9F=BC level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=9D=84=EB=95=8C=EB=8A=94 'Level=EC=9D=84 =EC=
=84=A0=ED=83=9D=ED=95=B4!' =EB=9D=BC=EA=B3=A0 =ED=95=B4=EC=A3=BC=EA=B3=A0, =
=EB=A7=8C=EC=95=BD =EB=A0=88=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=98=
=EB=A9=B4 '~~=EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=84=A0=ED=83=9D=ED=96=88=EC=96=
=B4!'=EB=9D=BC=EA=B3=A0 =EC=B6=9C=EB=A0=A5=EB=90=98=EA=B2=8C =ED=95=B4=EC=
=A4=98, =EA=B7=B8=EB=A6=AC=EA=B3=A0 =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=
=ED=97=98=EC=97=90=EC=84=9C =EC=B2=98=EB=9F=BC, =EB=9D=BC=EB=B2=A8=EC=9D=B4=
 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9C=84=EB=A1=9C =EB=B3=B4=EC=9D=BC=EC=88=98 =
=EC=9E=88=EB=8F=84=EB=A1=9D tkraise=ED=95=98=EB=8A=94=EA=B1=B0 =EC=9E=8A=EC=
=A7=80=EB=A7=90=EA=B3=A0<div class=3D"absolute bottom-0 right-full top-0 -m=
r-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"=
" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-=
center rounded-full text-token-text-secondary transition hover:bg-token-mai=
n-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" =
height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0=
 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-=
1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 =
0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L1=
4.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></p=
ath></svg></button></span></div></div></div></div></div></div></div></div><=
/div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-=
testid=3D"conversation-turn-55" data-scroll-anchor=3D"false"><div class=3D"=
py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"=
><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap=
-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrin=
k-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"=
><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center ov=
erflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 =
rounded-sm flex items-center justify-center bg-token-main-surface-primary t=
ext-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"=
0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M3=
7.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2=
744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4=
.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.721=
9 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.50019=
7C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 =
5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.6885=
4 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 =
0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.=
4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.1243=
7 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12=
.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.63=
66C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 =
39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.=
5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 =
38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4=
517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.045=
9 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.=
9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386=
 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.=
9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V=
30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4=
838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.710=
7 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30=
.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 3=
0.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.03=
76 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 =
33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3=
8785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.93=
64 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8=
.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8=
267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 =
28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04=
046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858=
 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12=
.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.69=
28 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 3=
6.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.68=
78 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 =
30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9=
586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20=
.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.10=
45 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 2=
5.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0=
753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949=
L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.=
31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.83=
34 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419=
L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19=
.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.788=
48 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 =
3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1=
034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C=
14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.=
4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.732=
5 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentC=
olor"></path></svg></div></div></div></div></div><div class=3D"group/conver=
sation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"assistant" data-message-id=3D"513fbc2f-5b=
33-432e-b314-923f1f89a017" dir=3D"auto" class=3D"text-message flex flex-col=
 items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 jui=
ce:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full =
flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markd=
own prose w-full break-words dark:prose-invert light"><p>=EB=8B=A4=EC=9D=8C=
=EC=9D=80 <code>LevelStudy</code> =EC=BD=94=EB=93=9C=EC=97=90 <code>level_l=
abel</code>=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EA=B3=A0, =EC=88=98=EC=A4=
=80=EB=B3=84 =EC=8B=9C=ED=97=98=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=
=8C =EB=9D=BC=EB=B2=A8=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=
=90 =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =ED=95=98=EB=8A=94 =EB=B0=A9=EB=B2=
=95=EC=9E=85=EB=8B=88=EB=8B=A4. =EC=84=A0=ED=83=9D=ED=95=9C =EB=A0=88=EB=B2=
=A8=EC=97=90 =EB=94=B0=EB=9D=BC =EB=9D=BC=EB=B2=A8 =ED=85=8D=EC=8A=A4=ED=8A=
=B8=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=98=EA=B3=A0 <code>t=
kraise</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=
=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=
=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=AC=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=
=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5=
px] border-token-border-medium"><div class=3D"flex items-center relative te=
xt-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs f=
ont-sans justify-between rounded-t-md"><span>python</span><div class=3D"fle=
x items-center"><span class=3D"" data-state=3D"closed"><button class=3D"fle=
x gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24=
" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 =
0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3=
-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 =
1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" cli=
p-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</butt=
on></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined=
" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span cl=
ass=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as<=
/span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">60</span>, y=
=3D<span class=3D"hljs-number">150</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">75</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)  <span class=3D"hljs-comment">#=
 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C=
 =EC=A1=B0=EC=A0=95</span>
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">200</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C =EC=88=98=EC=A4=80=EB=B3=84 =
=ED=95=99=EC=8A=B5 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C <code>level_label</=
code>=EC=9D=98 =EC=9C=84=EC=B9=98=EC=97=90 =EB=A0=88=EC=9D=B4=EB=B8=94=EC=
=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EA=B3=A0, =EC=88=98=EC=A4=80=EB=B3=84 =
=EC=8B=9C=ED=97=98=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EB=9D=BC=
=EB=B2=A8=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=90 =EB=B3=B4=
=EC=9D=B4=EB=8F=84=EB=A1=9D =ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=84=A0=
=ED=83=9D=ED=95=9C =EB=A0=88=EB=B2=A8=EC=97=90 =EB=94=B0=EB=9D=BC =EB=9D=BC=
=EB=B2=A8 =ED=85=8D=EC=8A=A4=ED=8A=B8=EA=B0=80 =EC=97=85=EB=8D=B0=EC=9D=B4=
=ED=8A=B8=EB=90=98=EA=B3=A0 <code>tkraise</code> =EB=A9=94=EC=84=9C=EB=93=
=9C=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=9D=BC=EB=B2=A8=EC=9D=
=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=
=AC=EB=8F=84=EB=A1=9D =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden =
juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 flex">=
<div class=3D"z-10 flex items-center justify-center rounded-lg text-token-t=
ext-secondary"><button disabled=3D"" class=3D"flex h-[30px] w-[30px] items-=
center justify-center rounded-md hover:bg-token-main-surface-secondary disa=
bled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd"=
 d=3D"M14.707 5.293a1 1 0 0 1 0 1.414L9.414 12l5.293 5.293a1 1 0 0 1-1.414 =
1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0" clip-rule=3D"evenodd"><=
/path></svg></button><div class=3D"px-0.5 text-sm font-semibold tabular-num=
s">1/2</div><button class=3D"flex h-[30px] w-[30px] items-center justify-ce=
nter rounded-md hover:bg-token-main-surface-secondary disabled:opacity-50 d=
isabled:hover:bg-transparent"><svg xmlns=3D"http://www.w3.org/2000/svg" wid=
th=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-m=
d-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M9.293 18.7=
07a1 1 0 0 1 0-1.414L14.586 12 9.293 6.707a1 1 0 0 1 1.414-1.414l6 6a1 1 0 =
0 1 0 1.414l-6 6a1 1 0 0 1-1.414 0" clip-rule=3D"evenodd"></path></svg></bu=
tton></div><div class=3D"flex items-center md:invisible"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary =
hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px=
] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099=
C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 =
6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.552=
3 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4=
588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1=
.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.93=
31L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005=
 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 =
6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9=
996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054=
 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14=
.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.91=
49 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049=
C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5=
379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357=
 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15=
.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.985=
9 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7=
.90049Z" fill=3D"currentColor"></path></svg></span></button></span><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-=
secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30p=
x] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/20=
00/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" clas=
s=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"=
M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3=
 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 =
0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1=
-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></=
span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-seco=
ndary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 2=
2.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09=
975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.=
43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045=
 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 =
15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.393=
99 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351=
 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13=
.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.3560=
8 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 1=
5.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 =
4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045=
 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"=
></path></svg></span></button></span></div><span class=3D"" data-state=3D"c=
losed"><button type=3D"button" id=3D"radix-:r243:" aria-haspopup=3D"menu" a=
ria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounde=
d-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-surface-se=
condary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[=
&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://=
www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 =
0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.1=
23 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.7=
94c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796=
 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .=
001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z">=
</path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313=
 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 =
1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123=
a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2=
.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.33=
9-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309=
 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3=
.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-=
.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1=
.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" =
style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D=
"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewB=
ox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12=
 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0=
 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></span></di=
v></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></d=
iv><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=
=3D"conversation-turn-56" data-scroll-anchor=3D"false"><div class=3D"py-2 j=
uice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div =
class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:=
max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversati=
on-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"user" data-message-id=3D"aaa211c9-6135-4128-9fd1-e7a1325=
e0f7a" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-=
start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-fu=
ll juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-co=
l gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"relativ=
e max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surfa=
ce-secondary">import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D 0
        self.words_per_page =3D 10
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D60, y=3D150)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D75)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D320)  # =EC=9C=84=EC=B9=98=EB=
=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C =EC=A1=B0=EC=A0=95
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
        self.load_level_image()  # =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=
=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C
       =20
        # =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EC=B6=
=94=EA=B0=80
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_page=
, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_page=
, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)

        self.update_buttons()
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D2=
00, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D110)
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC
       =20
    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D 0
        self.display_words()
        self.update_buttons()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()

    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.display_words()
            self.update_buttons()

    def next_page(self):
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.current_page +=3D 1
            self.display_words()
            self.update_buttons()

    def update_buttons(self):
        if self.current_page =3D=3D 0:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        else:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        if (self.current_page + 1) * self.words_per_page &gt;=3D len(self.w=
ords):
            self.word_next_button.config(state=3Dtk.DISABLED)
        else:
            self.word_next_button.config(state=3Dtk.NORMAL)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EC=9D=B4=EA=B1=B0 =EB=9D=BC=EB=B2=A8=EC=9D=80 =EC=9E=98 =EC=B6=9C=EB=A0=A5=
=EB=90=98=EB=8A=94=EB=8D=B0 =EC=9D=B4=EC=A0=9C =EB=8B=A8=EC=96=B4=EB=93=A4=
=EC=9D=B4 =EC=95=88=EB=B3=B4=EC=9D=B4=EB=8A=94=EB=8D=B0?<div class=3D"absol=
ute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversa=
tion-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"fl=
ex h-9 w-9 items-center justify-center rounded-full text-token-text-seconda=
ry transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://ww=
w.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 =
24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1=
 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713=
zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0=
 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3=
.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></div=
></div></div></div></div></div></div></div><div class=3D"w-full text-token-=
text-primary" dir=3D"auto" data-testid=3D"conversation-turn-57" data-scroll=
-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4=
 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 te=
xt-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[=
48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div>=
<div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-=
6 items-center justify-center overflow-hidden rounded-full juice:h-8 juice:=
w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-center=
 bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg width=
=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-=
9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.=
0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126=
 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8=
215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575=
 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614=
 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.9=
8686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0=
.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 =
22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.959=
51 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8=
.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2=
107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946=
 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31=
.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.82=
1C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.=
6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.49=
78 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 1=
7.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.13=
7 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L2=
9.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052=
 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.=
7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.00=
64C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 =
26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.35=
32 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9=
979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988=
 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10=
.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6=
194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491=
 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.=
4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206=
 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15=
.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.223=
5 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 2=
0.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6=
531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364=
C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.=
849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103=
 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32=
.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319=
 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.=
1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 =
26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.=
8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.922=
5 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6=
.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3=
723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095=
 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 1=
9.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6=
071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377=
 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.=
6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215=
 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10=
.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.0=
71 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 2=
2.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div=
></div><div class=3D"group/conversation-turn relative flex w-full min-w-0 f=
lex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"fl=
ex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assistan=
t" data-message-id=3D"cfc2dfa4-2cbd-4c78-8b68-799db199a5f9" dir=3D"auto" cl=
ass=3D"text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fi=
rst:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-in=
vert light"><p>=EC=BD=94=EB=93=9C=EB=A5=BC =EB=8B=A4=EC=8B=9C =ED=99=95=EC=
=9D=B8=ED=95=9C =EA=B2=B0=EA=B3=BC, <code>level_image_canvas</code>=EA=B0=
=80 <code>self.scrollable_frame</code>=EC=99=80 =EA=B2=B9=EC=B9=98=EA=B8=B0=
 =EB=95=8C=EB=AC=B8=EC=97=90 =EB=8B=A8=EC=96=B4=EB=93=A4=EC=9D=B4 =EB=B3=B4=
=EC=9D=B4=EC=A7=80 =EC=95=8A=EC=9D=84 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4. <code>tkraise()</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=
=82=AC=EC=9A=A9=ED=95=B4 <code>level_image_canvas</code>=EA=B0=80 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=9D=BC=EA=B0=80=
=EB=A9=B4=EC=84=9C <code>scrollable_frame</code>=EC=9D=98 =EB=82=B4=EC=9A=
=A9=EC=9D=B4 =EA=B0=80=EB=A0=A4=EC=A7=88 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. <code>tkraise()</code>=EB=A5=BC =EC=A0=81=EC=A0=88=ED=9E=88 =
=EC=82=AC=EC=9A=A9=ED=95=98=EA=B3=A0 <code>level_image_canvas</code>=EC=99=
=80 <code>scrollable_frame</code>=EA=B0=80 =EA=B2=B9=EC=B9=98=EC=A7=80 =EC=
=95=8A=EB=8F=84=EB=A1=9D =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95=ED=
=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=
=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=
=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] borde=
r-token-border-medium"><div class=3D"flex items-center relative text-token-=
text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans =
justify-between rounded-t-md"><span>python</span><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 i=
tems-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 =
3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 =
2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1=
 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=
=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></s=
pan></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as</sp=
an> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">50</span>, y=
=3D<span class=3D"hljs-number">60</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">100</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)  <span class=3D"hljs-comment">#=
 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C=
 =EC=A1=B0=EC=A0=95</span>
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D <=
span class=3D"hljs-number">0</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">182</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">110</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.load_words()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C =EB=8B=A8=EC=96=B4=EB=93=A4=
=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EC=A7=80 =EC=95=8A=EB=8A=94 =EB=AC=B8=EC=A0=9C=
=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>lev=
el_image_canvas</code>=EC=99=80 <code>scrollable_frame</code>=EC=9D=98 =EC=
=9C=84=EC=B9=98=EA=B0=80 =EA=B2=B9=EC=B9=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=
=A1=9D =EC=88=98=EC=A0=95=ED=95=98=EA=B3=A0, =EB=9D=BC=EB=B2=A8=EA=B3=BC =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B5=9C=EC=83=81=EC=9C=84=EB=A1=9C =
=EC=98=AC=EB=A6=AC=EB=8A=94 =EC=9E=91=EC=97=85=EC=9D=84 =EC=A0=81=EC=A0=88=
=ED=9E=88 =EC=A0=81=EC=9A=A9=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>upd=
ate_level_label</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C <code>=
load_words</code>=EB=A5=BC =ED=98=B8=EC=B6=9C=ED=95=B4 =EB=A0=88=EB=B2=A8 =
=EC=84=A0=ED=83=9D =EC=8B=9C =EB=8B=A8=EC=96=B4=EA=B0=80 =ED=91=9C=EC=8B=9C=
=EB=90=98=EB=8F=84=EB=A1=9D =ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div>=
</div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><=
div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-=
main-surface-primary md:absolute md:border md:border-token-border-light md:=
hidden"><div class=3D"flex items-center"><span class=3D"" data-state=3D"clo=
sed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-m=
ain-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center j=
ustify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10=
.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.0000=
5 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4=
 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19=
.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73=
463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H=
4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.6=
1102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.672=
5 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22=
.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.54=
75C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 =
13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.=
6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688=
 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12=
.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.51=
58 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C1=
6.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0=
526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=
=3D"currentColor"></path></svg></span></button></span><span class=3D"" data=
-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hov=
er:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] i=
tems-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-=
heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 =
1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9=
a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a=
1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0=
 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><div cla=
ss=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounded=
-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span =
class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.880=
5 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7=
.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753=
C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0=
045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15=
.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 =
4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 1=
3H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536=
 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.=
4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.190=
2V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.94=
44 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045=
 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg=
></span></button></span></div><span class=3D"" data-state=3D"closed"><butto=
n type=3D"button" id=3D"radix-:r24b:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 te=
xt-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><di=
v class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h=
-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><pa=
th fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44=
 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119=
 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038=
.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.=
055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path=
 fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 =
4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747=
.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1=
.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2=
.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179=
-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 =
2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87=
 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1=
.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2=
.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opa=
city: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.29=
3-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414=
" clip-rule=3D"evenodd"></path></svg></div></button></span></div></div></di=
v><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div clas=
s=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversati=
on-turn-58" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px]=
 px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-au=
to flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-rol=
e=3D"user" data-message-id=3D"aaa2c68f-dfa3-4d3b-9143-5125245a88d3" dir=3D"=
auto" class=3D"min-h-[20px] text-message flex flex-col items-start whitespa=
ce-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items=
-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:=
empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] =
rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=
import tkinter as tk
from tkinter import messagebox, ttk
import mysql.connector
import sys
from Util import Util
from PIL import Image, ImageTk

class LevelStudy(tk.Tk):
    def __init__(self, user):
        super().__init__()
        self.user =3D user
        self.geometry("800x600")
        self.title("=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5")
        self.configure(bg=3D"#FFFFFF")
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D 0
        self.words_per_page =3D 10
        self.create_widgets()
   =20
    def connect_database(self):
        # db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=98
        try:
            connection =3D mysql.connector.connect(
                host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com=
",
                user=3D"admin",
                password=3D"seat0323",
                database=3D"wordbook"
            )
            return connection
        except mysql.connector.Error as err:
            messagebox.showerror("Database Connection Error", f"An error oc=
curred: {err}")
            self.destroy()
   =20
    def create_widgets(self):
        # =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=8C =EC=83=9D=EC=84=B1=ED=95=A8=
=EC=88=98
       =20
        # =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80, =EC=A2=
=8C=ED=91=9C =EC=A7=80=EC=A0=95
        self.back_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png",
            lambda: Util.SwitchPage(self, "UserMainPage", self.user), 0.8
        )
        self.back_button.place(x=3D25, y=3D10)

        # =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=A0=ED=83=9D =EB=A0=88=EC=9D=B4=
=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=A4=EC=9A=B4 =EB=A9=94=EB=89=B4=
 =EC=B6=94=EA=B0=80
        self.level_label =3D tk.Label(self, text=3D"Level=EC=9D=84 =EC=84=
=A0=ED=83=9D=ED=95=B4!", font=3D("Helvetica", 16), bg=3D"#FFFFFF")
        self.level_label.place(x=3D37, y=3D135)

        self.level_var =3D tk.StringVar(value=3D"=ED=95=98")
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D["=ED=95=98", "=EC=A4=91", "=EC=83=81"], state=3D"readonly"=
, font=3D("Helvetica", 12))
        self.level_dropdown.place(x=3D37, y=3D60)
        self.level_dropdown.bind("&lt;&lt;ComboboxSelected&gt;&gt;", self.u=
pdate_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D"horizontal", =
length=3D300, mode=3D'determinate', maximum=3D100)
        self.progress_bar.place(x=3D25, y=3D320)  # =EC=9C=84=EC=B9=98=EB=
=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C =EC=A1=B0=EC=A0=95
        self.progress_bar['value'] =3D 0

        self.word_frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightbackgro=
und=3D"black", highlightcolor=3D"black", highlightthickness=3D1)
        self.word_frame.place(x=3D350, y=3D35, width=3D425, height=3D515)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D"#FFFFFF")
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D"vertica=
l", command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D"#FFFFFF")

        self.scrollable_frame.bind(
            "&lt;Configure&gt;",
            lambda e: self.canvas.configure(
                scrollregion=3Dself.canvas.bbox("all")
            )
        )

        self.canvas.create_window((0, 0), window=3Dself.scrollable_frame, a=
nchor=3D"nw")
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.set)

        self.canvas.pack(side=3D"left", fill=3D"both", expand=3DTrue)
        self.scrollbar.pack(side=3D"right", fill=3D"y")

        self.load_image("=EC=8B=9C=ED=97=98=EC=A7=84=ED=96=89=EB=8F=84.png"=
)  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95
        self.load_level_image()  # =EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=
=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C
       =20
        # =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=8C =EB=B2=84=ED=8A=BC =EC=B6=
=94=EA=B0=80
        self.word_prev_button =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.prev_page=
, 1.0
        )
        self.word_next_button =3D self.create_image_button(
            "=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png", "=
=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png", self.next_page=
, 1.0
        )
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)

        self.update_buttons()
   =20
    def load_image(self, image_path):
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=A4=EC=A0=95
        self.canvas_img =3D tk.Canvas(self, width=3D300, height=3D200, bg=
=3D'white', borderwidth=3D0, highlightthickness=3D0)
        self.canvas_img.place(x=3D25, y=3D350)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC =EC=97=B4=EA=B8=B0
        image =3D Image.open(image_path)
           =20
        # =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=
=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95
        resized_image =3D image.resize((300, 200), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)

        # =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=80 =
=EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=
 =EC=A4=91=EC=95=99
        self.canvas_img.create_image(150, 100, image=3Dphoto)
           =20
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=
=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=98=ED=83=80=EB=82=A8
        self.canvas_img.image =3D photo          =20

    def load_level_image(self):
        image =3D Image.open("=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=
=EB=AD=89=EC=9D=B4.png")
        resized_image =3D image.resize((320, 182), Image.Resampling.LANCZOS=
)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D320, height=3D1=
82, bg=3D'white', highlightthickness=3D0)
        self.level_image_canvas.create_image(0, 0, image=3Dphoto, anchor=3D=
tk.NW)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D15, y=3D95)
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC

    def update_level_label(self, event=3DNone):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3Df"{selected_level} Level=EC=9D=84 =
=EC=84=A0=ED=83=9D=ED=96=88=EC=96=B4!", bg=3D"#FFFFFF")
        self.level_label.tkraise()  # =EB=9D=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=
=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BC
        self.load_words()
       =20
    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, scale):
        original_normal_image =3D Image.open(normal_image_path)
        original_hover_image =3D Image.open(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (int(original_normal_image.width * scale), int(original_normal_=
image.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (int(original_hover_image.width * scale), int(original_hover_im=
age.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button
       =20
    def load_words(self, event=3DNone):
        # =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90 =EB=94=B0=EB=9D=BC toeicword=
=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=
=EC=98=B4
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute("SELECT Spell, Mean FROM toeicword WHERE Difficulty =
=3D %s ORDER BY Spell", (selected_difficulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D 0
        self.display_words()
        self.update_buttons()

    def display_words(self):
        for widget in self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  # =EB=A0=88=EC=9D=B4=EC=95=84=EC=9B=83 =EC=
=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8

        frame_height =3D self.word_frame.winfo_height() * 0.99  # =ED=94=84=
=EB=A0=88=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=
=A9
        word_frame_height =3D 40  # =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=
=EB=A0=88=EC=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4
        self.words_per_page =3D max(1, int(frame_height / word_frame_height=
))  # =EC=B5=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =
=ED=91=9C=EC=8B=9C
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D min(start_index + self.words_per_page, len(self.words=
))
       =20
        for spell, mean in self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D"#F0F0F0", =
padx=3D10, pady=3D5)
            word_frame.pack(fill=3D"x", padx=3D5, pady=3D2)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D("Hel=
vetica", 12, "bold"), bg=3D"#F0F0F0", anchor=3D"w", wraplength=3D200)
            spell_label.grid(row=3D0, column=3D0, sticky=3D"w")

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D("Helve=
tica", 12), bg=3D"#F0F0F0", anchor=3D"e", wraplength=3D290)
            mean_label.grid(row=3D0, column=3D1, sticky=3D"e")

            word_frame.grid_columnconfigure(0, weight=3D1)
            word_frame.grid_columnconfigure(1, weight=3D1)

        self.update_word_navigation_buttons()

    def update_word_navigation_buttons(self):
        self.word_prev_button.place(x=3D400, y=3D556)
        self.word_next_button.place(x=3D500, y=3D556)
       =20
        if self.current_page &gt; 0:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        else:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.word_next_button.config(state=3Dtk.NORMAL)
        else:
            self.word_next_button.config(state=3Dtk.DISABLED)

    def prev_page(self):
        if self.current_page &gt; 0:
            self.current_page -=3D 1
            self.display_words()
            self.update_buttons()

    def next_page(self):
        if (self.current_page + 1) * self.words_per_page &lt; len(self.word=
s):
            self.current_page +=3D 1
            self.display_words()
            self.update_buttons()

    def update_buttons(self):
        if self.current_page =3D=3D 0:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        else:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        if (self.current_page + 1) * self.words_per_page &gt;=3D len(self.w=
ords):
            self.word_next_button.config(state=3Dtk.DISABLED)
        else:
            self.word_next_button.config(state=3Dtk.NORMAL)

if __name__ =3D=3D "__main__":
    user_id =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D LevelStudy(user_id)
    app.mainloop()

=EB=B3=B4=EB=A9=B4 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =
=EC=9E=88=EC=9E=96=EC=95=84? =EC=9D=B4=EA=B1=B0 =ED=94=84=EB=A1=9C=EA=B7=B8=
=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=9C=A0=EC=A0=80=EB=A9=94=EC=9D=B8=ED=99=94=
=EB=A9=B4=EC=97=90=EC=84=9C =EC=97=B0=EB=8F=99=ED=95=9C user table=EC=97=90=
=EC=84=9C level=EA=B0=92 =EC=B0=B8=EC=A1=B0=ED=95=98=EB=8A=94 =ED=94=84=EB=
=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EB=A1=9C =ED=95=B4=EC=A4=98<div =
class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-=
hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex h-9 w-9 items-center justify-center rounded-full text-toke=
n-text-secondary transition hover:bg-token-main-surface-tertiary"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" v=
iewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rul=
e=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7=
.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0=
 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355=
-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536=
 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></d=
iv></div></div></div></div></div></div></div></div></div><div class=3D"w-fu=
ll text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-5=
9" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 tex=
t-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex f=
lex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40r=
em] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative it=
ems-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avat=
ar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full ju=
ice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center =
justify-center bg-token-main-surface-primary text-token-text-primary h-8 w-=
8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"=
-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.524=
1 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.=
68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098=
 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.=
1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.=
16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.3008=
5 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.0=
2839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.=
5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 =
28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8=
123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492=
C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40=
.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.17=
04 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 =
35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.837=
1 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 1=
6.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.=
7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 =
26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2=
825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C=
29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.194=
6 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM=
6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.=
0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233=
 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731=
 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29=
.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.86=
43 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064Z=
M4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10=
.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.263=
8 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 2=
6.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.13=
07 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4=
.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6=
194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333=
 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33=
.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.424=
4 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28=
.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.60=
47 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 2=
0.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.246=
4 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.=
6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.271=
2L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C1=
6.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53=
903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044=
 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35=
.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9=
893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098=
 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.=
38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.26=
49 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 2=
2.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.863=
56 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 =
21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.=
4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></di=
v></div></div></div><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-rol=
e=3D"assistant" data-message-id=3D"682ef807-2063-4a12-bb6c-8cca6795fc04" di=
r=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whi=
tespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:=
items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 j=
uice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full=
 break-words dark:prose-invert light"><p>=ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=
=88=EC=8A=A4=EB=B0=94=EB=A5=BC =EC=9C=A0=EC=A0=80 =EB=A9=94=EC=9D=B8=ED=99=
=94=EB=A9=B4=EA=B3=BC =EC=97=B0=EB=8F=99=ED=95=98=EC=97=AC <code>user</code=
> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=9D=98 <code>level</code> =EA=B0=92=EC=9D=
=84 =EC=B0=B8=EC=A1=B0=ED=95=98=EC=97=AC =EC=84=A4=EC=A0=95=ED=95=98=EB=A0=
=A4=EB=A9=B4, =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EA=B0=
=92=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=EB=8A=94 =EB=B6=80=EB=B6=84=EC=9D=
=84 =EC=B6=94=EA=B0=80=ED=95=B4=EC=A3=BC=EC=96=B4=EC=95=BC =ED=95=A9=EB=8B=
=88=EB=8B=A4. =EC=9D=B4=EB=95=8C <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=
=94=EC=9D=98 <code>level</code> =EA=B0=92=EC=9D=84 =EC=9D=BD=EC=96=B4=EC=99=
=80=EC=84=9C =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EC=9D=
=98 <code>value</code> =EC=86=8D=EC=84=B1=EC=97=90 =EB=B0=98=EC=98=81=ED=95=
=98=EB=A9=B4 =EB=90=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=
=95=B4 <code>create_widgets</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=
=84=9C =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EA=B0=92=EC=
=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=
=B6=94=EA=B0=80=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=
=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md bo=
rder-[0.5px] border-token-border-medium"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>python</span><div cla=
ss=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-=
sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3=
-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 =
3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1=
 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-=
1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-key=
word">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT level FROM u=
ser WHERE id =3D %s"</span>, (self.user,))
            level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]
            cursor.close()
            <span class=3D"hljs-keyword">return</span> level
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Erro=
r"</span>, <span class=3D"hljs-string">f"An error occurred: <span class=3D"=
hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
number">0</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">37</span>, y=
=3D<span class=3D"hljs-number">135</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">60</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)
        self.update_progress_bar()  <span class=3D"hljs-comment"># =ED=94=
=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=97=85=EB=8D=B0=EC=9D=
=B4=ED=8A=B8</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress_bar</span>(<span class=3D"hljs-params">self</span>):
        level =3D self.get_user_level()
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D l=
evel  <span class=3D"hljs-comment"># level =EA=B0=92=EC=9D=84 =ED=94=84=EB=
=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EC=97=90 =EC=84=A4=EC=A0=95</spa=
n>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">182</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">95</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r24j:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-60" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa26ec8-7b2f-4b=
09-b678-03926b3b3638" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=95=84 =EB=A7=9E=EB=8B=A4 =EA=B7=B8=EB=A6=
=AC=EA=B3=A0 =EB=A0=88=EB=B2=A8 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=
=A4=EB=B0=94=EB=8A=94 =EB=A0=88=EB=B2=A8=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=
=82=98=EB=88=88=EA=B2=83=EC=9D=98 =EB=82=98=EB=A8=B8=EC=A7=80=EB=A5=BC =ED=
=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EB=A1=9C =ED=91=9C=ED=
=98=84=ED=95=98=EB=8A=94=EA=B1=B0 =EA=B8=B0=EC=96=B5=ED=95=98=EC=A7=80?<div=
 class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group=
-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex h-9 w-9 items-center justify-center rounded-full text-tok=
en-text-secondary transition hover:bg-token-main-surface-tertiary"><svg xml=
ns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" =
viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 =
7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 =
0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.35=
5-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.53=
6 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></=
div></div></div></div></div></div></div></div></div></div><div class=3D"w-f=
ull text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-=
61" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 te=
xt-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex =
flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40=
rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative i=
tems-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-ava=
tar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full j=
uice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center=
 justify-center bg-token-main-surface-primary text-token-text-primary h-8 w=
-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D=
"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.52=
41 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8=
.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.909=
8 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21=
.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1=
.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.300=
85 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.=
02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20=
.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182=
 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.=
8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.149=
2C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 4=
0.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1=
704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547=
 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.83=
71 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 =
16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17=
.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019=
 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.=
2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359=
C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.19=
46 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849Z=
M6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26=
.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.123=
3 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.73=
1 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 2=
9.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8=
643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064=
ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 1=
0.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.26=
38 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 =
26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1=
307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 =
4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.=
6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.633=
3 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L3=
3.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.42=
44 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 2=
8.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6=
047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 =
20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.24=
64 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26=
.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.27=
12L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C=
16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.5=
3903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.204=
4 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 3=
5.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.=
9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.809=
8 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5=
.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2=
649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 =
22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86=
356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424=
 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25=
.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></d=
iv></div></div></div><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><d=
iv class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-ro=
le=3D"assistant" data-message-id=3D"d2fe8a0d-48c9-4b16-9fde-f90968d74927" d=
ir=3D"auto" class=3D"text-message flex flex-col items-start whitespace-pre-=
wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end ov=
erflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:h=
idden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words=
 dark:prose-invert light"><p>=EB=84=A4, =EB=A0=88=EB=B2=A8 =EA=B0=92=EC=9D=
=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88 =EB=82=98=EB=A8=B8=EC=A7=80=EB=
=A5=BC =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EC=97=90 =EB=
=B0=98=EC=98=81=ED=95=98=EB=8A=94 =EB=B0=A9=EC=8B=9D=EC=9C=BC=EB=A1=9C =EA=
=B5=AC=ED=98=84=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=
=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4 <code>get_user_level</code> =EB=A9=94=EC=
=84=9C=EB=93=9C=EB=A5=BC =ED=86=B5=ED=95=B4 =EA=B0=80=EC=A0=B8=EC=98=A8 =EB=
=A0=88=EB=B2=A8 =EA=B0=92=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88=
 =EB=82=98=EB=A8=B8=EC=A7=80=EB=A5=BC =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=
=EC=8A=A4=EB=B0=94=EC=9D=98 =EA=B0=92=EC=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95=
=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=
=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div=
 class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-me=
dium"><div class=3D"flex items-center relative text-token-text-secondary bg=
-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between r=
ounded-t-md"><span>python</span><div class=3D"flex items-center"><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div=
 class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT level FROM u=
ser WHERE id =3D %s"</span>, (self.user,))
            level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]
            cursor.close()
            <span class=3D"hljs-keyword">return</span> level
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Erro=
r"</span>, <span class=3D"hljs-string">f"An error occurred: <span class=3D"=
hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
number">0</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">37</span>, y=
=3D<span class=3D"hljs-number">135</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">60</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)
       =20
        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)
        self.update_progress_bar()  <span class=3D"hljs-comment"># =ED=94=
=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=97=85=EB=8D=B0=EC=9D=
=B4=ED=8A=B8</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress_bar</span>(<span class=3D"hljs-params">self</span>):
        level =3D self.get_user_level()
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D l=
evel % <span class=3D"hljs-number">100</span>  <span class=3D"hljs-comment"=
># level =EA=B0=92=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88 =EB=82=
=98=EB=A8=B8=EC=A7=80=EB=A5=BC =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=
=A4=EB=B0=94=EC=97=90 =EC=84=A4=EC=A0=95</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">182</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">95</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.load_words()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C, <code>update_progress_bar</=
code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=8A=94 <code>user</code> =ED=85=8C=EC=
=9D=B4=EB=B8=94=EC=97=90=EC=84=9C =EA=B0=80=EC=A0=B8=EC=98=A8 <code>level</=
code> =EA=B0=92=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88 =EB=82=98=
=EB=A8=B8=EC=A7=80=EB=A5=BC =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=
=EB=B0=94 =EA=B0=92=EC=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=
=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:h=
idden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 =
z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border-to=
ken-border-light md:hidden"><div class=3D"flex items-center"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H=
5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5=
a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 =
0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></butt=
on></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11=
.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.16=
65 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.9=
4753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 =
21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C=
15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2958=
9C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 =
5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.9=
9743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002=
 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13=
.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C1=
7.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 =
19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curren=
tColor"></path></svg></span></button></span></div><span class=3D"" data-sta=
te=3D"closed"><button type=3D"button" id=3D"radix-:r24r:" aria-haspopup=3D"=
menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer=
 rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-sur=
face-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div cla=
ss=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.79=
5 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0=
 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0=
 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 =
0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2=
.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.8=
87c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 =
1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.46=
7 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-=
3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.5=
04 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.50=
3 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 =
2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.06=
4-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-=
1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 te=
xt-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.4=
14 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-=
6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></sp=
an></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-t=
estid=3D"conversation-turn-62" data-scroll-anchor=3D"false"><div class=3D"p=
y-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5">=
<div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-=
6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col =
gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data=
-message-author-role=3D"user" data-message-id=3D"aaa22087-9626-4e76-8d15-fe=
58d5d22941" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"re=
lative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-=
surface-secondary">=EA=B7=B8 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=
=EB=B0=94 =EC=9C=84=EC=97=90 =EB=9D=BC=EB=B2=A8=ED=95=98=EB=82=98=EB=A5=BC =
=EC=B6=94=EA=B0=80=ED=95=98=EB=8A=94=EB=8D=B0 =EC=9D=B4=EA=B1=B4 user table=
=EC=97=90=EC=84=9C =ED=98=84=EC=9E=AC =EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =
level=EC=9D=84 =EC=B0=B8=EC=A1=B0=ED=95=B4=EC=84=9C =ED=85=8D=EC=8A=A4=ED=
=8A=B8=EB=A5=BC Level (=ED=98=84=EC=9E=AC=EB=A0=88=EB=B2=A8) =ED=98=95=ED=
=83=9C=EB=A1=9C =EB=B3=B4=EC=97=AC=EC=A4=AC=EC=9C=BC=EB=A9=B4 =EC=A2=8B=EA=
=B2=A0=EC=96=B4<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hid=
den pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-center ro=
unded-full text-token-text-secondary transition hover:bg-token-main-surface=
-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D=
"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"cu=
rrentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.41=
4 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.15=
1l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.=
628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.=
293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg=
></button></span></div></div></div></div></div></div></div></div></div></di=
v><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D=
"conversation-turn-63" data-scroll-anchor=3D"false"><div class=3D"py-2 juic=
e:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max=
-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex =
flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div cla=
ss=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hi=
dden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-s=
m flex items-center justify-center bg-token-main-surface-primary text-token=
-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col=
 gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div dat=
a-message-author-role=3D"assistant" data-message-id=3D"771851c5-6516-4046-a=
7e1-18fb66aedb17" dir=3D"auto" class=3D"text-message flex flex-col items-st=
art whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full=
 juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col =
gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose=
 w-full break-words dark:prose-invert light"><p>=EB=84=A4, =ED=94=84=EB=A1=
=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=9C=84=EC=97=90 =EB=9D=BC=EB=B2=
=A8=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC =ED=98=84=EC=9E=AC =EC=82=
=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =EB=A0=88=EB=B2=A8=EC=9D=84 =ED=91=9C=EC=8B=
=9C=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =EB=9D=BC=EB=B2=A8=EC=9D=80 <code>get_user_level</code> =EB=A9=94=EC=
=84=9C=EB=93=9C=EC=97=90=EC=84=9C =EA=B0=80=EC=A0=B8=EC=98=A8 =EB=A0=88=EB=
=B2=A8 =EA=B0=92=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=85=8D=EC=
=8A=A4=ED=8A=B8=EB=A5=BC =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p>=
<p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=
=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 roun=
ded-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-=
center relative text-token-text-secondary bg-token-main-surface-secondary p=
x-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span=
><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/200=
0/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 =
3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-=
3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1=
-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1=
 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=
=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 t=
ext-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs languag=
e-python"><span class=3D"hljs-keyword">import</span> tkinter <span class=3D=
"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>LevelStudy</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, user</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.user =3D user
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EC=A4=80=EB=B3=84=
 =ED=95=99=EC=8A=B5"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.connection =3D self.connect_database()
        self.words =3D []
        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.words_per_page =3D <span class=3D"hljs-number">10</span>
        self.create_widgets()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># db=EC=97=B0=EA=B2=B0 =ED=95=A8=EC=88=
=98</span>
        <span class=3D"hljs-keyword">try</span>:
            connection =3D mysql.connector.connect(
                host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-n=
ortheast-2.rds.amazonaws.com"</span>,
                user=3D<span class=3D"hljs-string">"admin"</span>,
                password=3D<span class=3D"hljs-string">"seat0323"</span>,
                database=3D<span class=3D"hljs-string">"wordbook"</span>
            )
            <span class=3D"hljs-keyword">return</span> connection
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Conn=
ection Error"</span>, <span class=3D"hljs-string">f"An error occurred: <spa=
n class=3D"hljs-subst">{err}</span>"</span>)
            self.destroy()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">try</span>:
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT level FROM u=
ser WHERE id =3D %s"</span>, (self.user,))
            level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]
            cursor.close()
            <span class=3D"hljs-keyword">return</span> level
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            messagebox.showerror(<span class=3D"hljs-string">"Database Erro=
r"</span>, <span class=3D"hljs-string">f"An error occurred: <span class=3D"=
hljs-subst">{err}</span>"</span>)
            self.destroy()
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
number">0</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_widgets</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =EC=9A=94=EC=86=
=8C =EC=83=9D=EC=84=B1=ED=95=A8=EC=88=98</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84 =EB=B2=84=ED=8A=
=BC =EC=B6=94=EA=B0=80, =EC=A2=8C=ED=91=9C =EC=A7=80=EC=A0=95</span>
        self.back_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=EB=B2=84.png"</span>,
            <span class=3D"hljs-keyword">lambda</span>: Util.SwitchPage(sel=
f, <span class=3D"hljs-string">"UserMainPage"</span>, self.user), <span cla=
ss=3D"hljs-number">0.8</span>
        )
        self.back_button.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84 =EC=84=
=A0=ED=83=9D =EB=A0=88=EC=9D=B4=EB=B8=94 =EB=B0=8F =EB=93=9C=EB=A1=AD=EB=8B=
=A4=EC=9A=B4 =EB=A9=94=EB=89=B4 =EC=B6=94=EA=B0=80</span>
        self.level_label =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">"Level=EC=9D=84 =EC=84=A0=ED=83=9D=ED=95=B4!"</span>, font=3D(<span cla=
ss=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">16</span=
>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_label.place(x=3D<span class=3D"hljs-number">37</span>, y=
=3D<span class=3D"hljs-number">135</span>)

        self.level_var =3D tk.StringVar(value=3D<span class=3D"hljs-string"=
>"=ED=95=98"</span>)
        self.level_dropdown =3D ttk.Combobox(self, textvariable=3Dself.leve=
l_var, values=3D[<span class=3D"hljs-string">"=ED=95=98"</span>, <span clas=
s=3D"hljs-string">"=EC=A4=91"</span>, <span class=3D"hljs-string">"=EC=83=
=81"</span>], state=3D<span class=3D"hljs-string">"readonly"</span>, font=
=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-num=
ber">12</span>))
        self.level_dropdown.place(x=3D<span class=3D"hljs-number">37</span>=
, y=3D<span class=3D"hljs-number">60</span>)
        self.level_dropdown.bind(<span class=3D"hljs-string">"&lt;&lt;Combo=
boxSelected&gt;&gt;"</span>, self.update_level_label)
       =20
        <span class=3D"hljs-comment"># =ED=98=84=EC=9E=AC =EB=A0=88=EB=B2=
=A8=EC=9D=84 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EB=9D=BC=EB=B2=A8 =EC=B6=
=94=EA=B0=80</span>
        self.user_level =3D self.get_user_level()
        self.level_text_label =3D tk.Label(self, text=3D<span class=3D"hljs=
-string">f"Level <span class=3D"hljs-subst">{self.user_level}</span>"</span=
>, font=3D(<span class=3D"hljs-string">"Helvetica"</span>, <span class=3D"h=
ljs-number">12</span>), bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.level_text_label.place(x=3D<span class=3D"hljs-number">25</spa=
n>, y=3D<span class=3D"hljs-number">300</span>)  <span class=3D"hljs-commen=
t"># =EC=9C=84=EC=B9=98=EB=A5=BC =EC=A1=B0=EC=A0=95</span>

        self.progress_bar =3D ttk.Progressbar(self, orient=3D<span class=3D=
"hljs-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300=
</span>, mode=3D<span class=3D"hljs-string">'determinate'</span>, maximum=
=3D<span class=3D"hljs-number">100</span>)
        self.progress_bar.place(x=3D<span class=3D"hljs-number">25</span>, =
y=3D<span class=3D"hljs-number">320</span>)  <span class=3D"hljs-comment">#=
 =EC=9C=84=EC=B9=98=EB=A5=BC =EC=82=AC=EC=A7=84 =EC=95=84=EB=9E=98=EB=A1=9C=
 =EC=A1=B0=EC=A0=95</span>
        self.update_progress_bar()  <span class=3D"hljs-comment"># =ED=94=
=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94 =EC=97=85=EB=8D=B0=EC=9D=
=B4=ED=8A=B8</span>

        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>"#FFFFFF"</span>, highlightbackground=3D<span class=3D"hljs-string">"black=
"</span>, highlightcolor=3D<span class=3D"hljs-string">"black"</span>, high=
lightthickness=3D<span class=3D"hljs-number">1</span>)
        self.word_frame.place(x=3D<span class=3D"hljs-number">350</span>, y=
=3D<span class=3D"hljs-number">35</span>, width=3D<span class=3D"hljs-numbe=
r">425</span>, height=3D<span class=3D"hljs-number">515</span>)

        self.canvas =3D tk.Canvas(self.word_frame, bg=3D<span class=3D"hljs=
-string">"#FFFFFF"</span>)
        self.scrollbar =3D ttk.Scrollbar(self.word_frame, orient=3D<span cl=
ass=3D"hljs-string">"vertical"</span>, command=3Dself.canvas.yview)
        self.scrollable_frame =3D tk.Frame(self.canvas, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)

        self.scrollable_frame.bind(
            <span class=3D"hljs-string">"&lt;Configure&gt;"</span>,
            <span class=3D"hljs-keyword">lambda</span> e: self.canvas.confi=
gure(
                scrollregion=3Dself.canvas.bbox(<span class=3D"hljs-string"=
>"all"</span>)
            )
        )

        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself.scrollable_frame, anchor=
=3D<span class=3D"hljs-string">"nw"</span>)
        self.canvas.configure(yscrollcommand=3Dself.scrollbar.<span class=
=3D"hljs-built_in">set</span>)

        self.canvas.pack(side=3D<span class=3D"hljs-string">"left"</span>, =
fill=3D<span class=3D"hljs-string">"both"</span>, expand=3D<span class=3D"h=
ljs-literal">True</span>)
        self.scrollbar.pack(side=3D<span class=3D"hljs-string">"right"</spa=
n>, fill=3D<span class=3D"hljs-string">"y"</span>)

        self.load_image(<span class=3D"hljs-string">"=EC=8B=9C=ED=97=98=EC=
=A7=84=ED=96=89=EB=8F=84.png"</span>)  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EA=B2=BD=EB=A1=9C =EC=A7=80=EC=A0=95</span>
        self.load_level_image()  <span class=3D"hljs-comment"># =EC=88=98=
=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EB=A1=9C=EB=93=9C</span>
       =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EC=A0=84, =EB=8B=A4=EC=9D=
=8C =EB=B2=84=ED=8A=BC =EC=B6=94=EA=B0=80</span>
        self.word_prev_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=9D=B4=
=EC=A0=84=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.prev_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_next_button =3D self.create_image_button(
            <span class=3D"hljs-string">"=EB=8B=A4=EC=9D=8C=EB=B2=84=ED=8A=
=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EB=8B=A4=
=EC=9D=8C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png"</span>, self.next_page, =
<span class=3D"hljs-number">1.0</span>
        )
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)

        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress_bar</span>(<span class=3D"hljs-params">self</span>):
        level =3D self.user_level
        self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D l=
evel % <span class=3D"hljs-number">100</span>  <span class=3D"hljs-comment"=
># level =EA=B0=92=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88 =EB=82=
=98=EB=A8=B8=EC=A7=80=EB=A5=BC =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=
=A4=EB=B0=94=EC=97=90 =EC=84=A4=EC=A0=95</span>
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, image_path</span>=
):
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas_img =3D tk.Canvas(self, width=3D<span class=3D"hljs-num=
ber">300</span>, height=3D<span class=3D"hljs-number">200</span>, bg=3D<spa=
n class=3D"hljs-string">'white'</span>, borderwidth=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas_img.place(x=3D<span class=3D"hljs-number">25</span>, y=
=3D<span class=3D"hljs-number">350</span>)

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=
=8C=EC=9D=BC =EC=97=B4=EA=B8=B0</span>
        image =3D Image.<span class=3D"hljs-built_in">open</span>(image_pat=
h)
           =20
        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =ED=81=
=AC=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=81=
=AC=EA=B8=B0 =EC=A1=B0=EC=A0=95</span>
        resized_image =3D image.resize((<span class=3D"hljs-number">300</sp=
an>, <span class=3D"hljs-number">200</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4=EC=97=90=
 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EC=B9=98, =EC=9C=84=EC=B9=98=EB=8A=
=94 =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=A4=91=EC=95=99</span>
        self.canvas_img.create_image(<span class=3D"hljs-number">150</span>=
, <span class=3D"hljs-number">100</span>, image=3Dphoto)
           =20
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EA=B0=
=9D=EC=B2=B4 =EC=B0=B8=EC=A1=B0=EB=A5=BC =EC=9C=A0=EC=A7=80=ED=95=B4=EC=95=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =ED=99=94=EB=A9=B4=EC=97=90 =EB=82=
=98=ED=83=80=EB=82=A8</span>
        self.canvas_img.image =3D photo          =20

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_level_image</span>(<span class=3D"hljs-params">self</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cla=
ss=3D"hljs-string">"=EC=88=98=EC=A4=80=EC=84=A0=ED=83=9D=EC=88=98=EB=AD=89=
=EC=9D=B4.png"</span>)
        resized_image =3D image.resize((<span class=3D"hljs-number">320</sp=
an>, <span class=3D"hljs-number">182</span>), Image.Resampling.LANCZOS)
        photo =3D ImageTk.PhotoImage(resized_image)
        self.level_image_canvas =3D tk.Canvas(self, width=3D<span class=3D"=
hljs-number">320</span>, height=3D<span class=3D"hljs-number">182</span>, b=
g=3D<span class=3D"hljs-string">'white'</span>, highlightthickness=3D<span =
class=3D"hljs-number">0</span>)
        self.level_image_canvas.create_image(<span class=3D"hljs-number">0<=
/span>, <span class=3D"hljs-number">0</span>, image=3Dphoto, anchor=3Dtk.NW=
)
        self.level_image_canvas.image =3D photo
        self.level_image_canvas.place(x=3D<span class=3D"hljs-number">15</s=
pan>, y=3D<span class=3D"hljs-number">95</span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_level_label</span>(<span class=3D"hljs-params">self, event=3D<=
span class=3D"hljs-literal">None</span></span>):
        selected_level =3D self.level_var.get()
        self.level_label.config(text=3D<span class=3D"hljs-string">f"<span =
class=3D"hljs-subst">{selected_level}</span> Level=EC=9D=84 =EC=84=A0=ED=83=
=9D=ED=96=88=EC=96=B4!"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>)
        self.level_label.tkraise()  <span class=3D"hljs-comment"># =EB=9D=
=BC=EB=B2=A8=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=
=9C =EC=98=AC=EB=A6=BC</span>
        self.load_words()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_words</span>(<span class=3D"hljs-params">self, event=3D<span cla=
ss=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-comment"># =EB=82=9C=EC=9D=B4=EB=8F=84=EC=97=90=
 =EB=94=B0=EB=9D=BC toeicword=EC=97=90=EC=84=9C =EB=AA=A8=EB=93=A0 =EB=8B=
=A8=EC=96=B4 =EA=B0=80=EC=A0=B8=EC=98=B4</span>
        selected_difficulty =3D self.level_var.get()

        cursor =3D self.connection.cursor()
        cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean FROM=
 toeicword WHERE Difficulty =3D %s ORDER BY Spell"</span>, (selected_diffic=
ulty,))
        self.words =3D cursor.fetchall()
        cursor.close()

        self.current_page =3D <span class=3D"hljs-number">0</span>
        self.display_words()
        self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_words</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.scrollable_frame.winfo_children():
            widget.destroy()
           =20
        self.update_idletasks()  <span class=3D"hljs-comment"># =EB=A0=88=
=EC=9D=B4=EC=95=84=EC=9B=83 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>

        frame_height =3D self.word_frame.winfo_height() * <span class=3D"hl=
js-number">0.99</span>  <span class=3D"hljs-comment"># =ED=94=84=EB=A0=88=
=EC=9E=84 =EB=86=92=EC=9D=B4=EC=9D=98 99%=EB=A5=BC =EC=82=AC=EC=9A=A9</span=
>
        word_frame_height =3D <span class=3D"hljs-number">40</span>  <span =
class=3D"hljs-comment"># =EA=B0=81 =EB=8B=A8=EC=96=B4 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=98 =EB=86=92=EC=9D=B4</span>
        self.words_per_page =3D <span class=3D"hljs-built_in">max</span>(<s=
pan class=3D"hljs-number">1</span>, <span class=3D"hljs-built_in">int</span=
>(frame_height / word_frame_height))  <span class=3D"hljs-comment"># =EC=B5=
=9C=EC=86=8C 1=EA=B0=9C=EC=9D=98 =EB=8B=A8=EC=96=B4=EB=8A=94 =ED=91=9C=EC=
=8B=9C</span>
       =20
        start_index =3D self.current_page * self.words_per_page
        end_index =3D <span class=3D"hljs-built_in">min</span>(start_index =
+ self.words_per_page, <span class=3D"hljs-built_in">len</span>(self.words)=
)
       =20
        <span class=3D"hljs-keyword">for</span> spell, mean <span class=3D"=
hljs-keyword">in</span> self.words[start_index:end_index]:
            word_frame =3D tk.Frame(self.scrollable_frame, bg=3D<span class=
=3D"hljs-string">"#F0F0F0"</span>, padx=3D<span class=3D"hljs-number">10</s=
pan>, pady=3D<span class=3D"hljs-number">5</span>)
            word_frame.pack(fill=3D<span class=3D"hljs-string">"x"</span>, =
padx=3D<span class=3D"hljs-number">5</span>, pady=3D<span class=3D"hljs-num=
ber">2</span>)

            spell_label =3D tk.Label(word_frame, text=3Dspell, font=3D(<spa=
n class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12<=
/span>, <span class=3D"hljs-string">"bold"</span>), bg=3D<span class=3D"hlj=
s-string">"#F0F0F0"</span>, anchor=3D<span class=3D"hljs-string">"w"</span>=
, wraplength=3D<span class=3D"hljs-number">200</span>)
            spell_label.grid(row=3D<span class=3D"hljs-number">0</span>, co=
lumn=3D<span class=3D"hljs-number">0</span>, sticky=3D<span class=3D"hljs-s=
tring">"w"</span>)

            mean_label =3D tk.Label(word_frame, text=3Dmean, font=3D(<span =
class=3D"hljs-string">"Helvetica"</span>, <span class=3D"hljs-number">12</s=
pan>), bg=3D<span class=3D"hljs-string">"#F0F0F0"</span>, anchor=3D<span cl=
ass=3D"hljs-string">"e"</span>, wraplength=3D<span class=3D"hljs-number">29=
0</span>)
            mean_label.grid(row=3D<span class=3D"hljs-number">0</span>, col=
umn=3D<span class=3D"hljs-number">1</span>, sticky=3D<span class=3D"hljs-st=
ring">"e"</span>)

            word_frame.grid_columnconfigure(<span class=3D"hljs-number">0</=
span>, weight=3D<span class=3D"hljs-number">1</span>)
            word_frame.grid_columnconfigure(<span class=3D"hljs-number">1</=
span>, weight=3D<span class=3D"hljs-number">1</span>)

        self.update_word_navigation_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_word_navigation_buttons</span>(<span class=3D"hljs-params">sel=
f</span>):
        self.word_prev_button.place(x=3D<span class=3D"hljs-number">400</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
        self.word_next_button.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">556</span>)
       =20
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
       =20
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.NORMAL)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.DISABLED)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">prev_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page &gt; <span=
 class=3D"hljs-number">0</span>:
            self.current_page -=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_page</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &lt; <span class=3D"hl=
js-built_in">len</span>(self.words):
            self.current_page +=3D <span class=3D"hljs-number">1</span>
            self.display_words()
            self.update_buttons()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_buttons</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.current_page =3D=3D <sp=
an class=3D"hljs-number">0</span>:
            self.word_prev_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_prev_button.config(state=3Dtk.NORMAL)

        <span class=3D"hljs-keyword">if</span> (self.current_page + <span c=
lass=3D"hljs-number">1</span>) * self.words_per_page &gt;=3D <span class=3D=
"hljs-built_in">len</span>(self.words):
            self.word_next_button.config(state=3Dtk.DISABLED)
        <span class=3D"hljs-keyword">else</span>:
            self.word_next_button.config(state=3Dtk.NORMAL)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    user_id =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D LevelStudy(user_id)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 <code>Lev=
elStudy</code> =ED=81=B4=EB=9E=98=EC=8A=A4=EC=97=90 <code>get_user_level</c=
ode> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EC=97=
=AC <code>user</code> =ED=85=8C=EC=9D=B4=EB=B8=94=EC=97=90=EC=84=9C =ED=98=
=84=EC=9E=AC =EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =EB=A0=88=EB=B2=A8=EC=9D=
=84 =EA=B0=80=EC=A0=B8=EC=98=A4=EA=B3=A0, =EC=9D=B4=EB=A5=BC =ED=94=84=EB=
=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EC=99=80 =EB=9D=BC=EB=B2=A8=EC=
=97=90 =EB=B0=98=EC=98=81=ED=95=A9=EB=8B=88=EB=8B=A4. <code>create_widgets<=
/code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C <code>level_text_label=
</code>=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC =EB=A0=88=EB=B2=A8=EC=
=9D=84 =ED=91=9C=EC=8B=9C=ED=95=98=EA=B3=A0, <code>update_progress_bar</cod=
e> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C =ED=94=84=EB=A1=9C=EA=B7=
=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=
=B8=ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt=
-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-=
start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute m=
d:border md:border-token-border-light md:hidden"><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6757=
2 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44=
776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6=
7572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM=
8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.=
4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C=
1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3566=
5C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.=
1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.474=
4 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 1=
9.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4=
458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166=
 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.=
0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.537=
2 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 1=
5.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.49=
96 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 =
15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span=
></button></span><span class=3D"" data-state=3D"closed"><button class=3D"ro=
unded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><=
span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" v=
iewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3=
h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3=
v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 =
1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path=
></svg></span></button></span><div class=3D"flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:b=
g-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items=
-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C=
11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.=
6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 =
12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H=
18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 1=
8.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961=
ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.47=
38C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 =
9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3=
782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 =
13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045=
 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 =
4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.004=
5Z" fill=3D"currentColor"></path></svg></span></button></span></div><span c=
lass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r253:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-64" data-scroll-anchor=3D"fa=
lse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px=
-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice=
:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa227=
25-9568-4af7-bae1-1bb6937240ef" dir=3D"auto" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start whitespace-pre-wrap break-words [.text-messa=
ge+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cla=
ss=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-sta=
rt"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5=
 dark:bg-token-main-surface-secondary">=EC=97=AC=EA=B8=B0=EC=84=9C =EB=A0=
=88=EB=B2=A8=EC=9D=84 100=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88=EA=B2=83=EC=
=9D=98 =EB=AA=AB=EB=A7=8C =EB=B3=B4=EC=9D=B4=EA=B2=8C =ED=95=98=EA=B3=A0=EC=
=8B=B6=EC=96=B4</div></div></div><div data-message-author-role=3D"user" dat=
a-message-id=3D"aaa225b2-fcda-4d30-b0b8-515e9b5ad341" dir=3D"auto" class=3D=
"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap br=
eak-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-=
x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden i=
tems-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg=
-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=88=98=EC=
=A0=95=ED=95=A0=EB=B6=80=EB=B6=84=EB=A7=8C</div></div></div></div></div></d=
iv></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"a=
uto" data-testid=3D"conversation-turn-65" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 j=
uice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify=
-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"rel=
ative p-1 rounded-sm flex items-center justify-center bg-token-main-surface=
-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" v=
iewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><pa=
th d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37=
.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676=
 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7=
893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.30=
58 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.6762=
4 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17=
505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.49890=
5 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2=
.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0=
892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 =
37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.=
3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.505=
4 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 3=
3.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.072=
8 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39=
.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8=
874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 3=
6.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.49=
64 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 2=
1.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.986=
7 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37=
.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19=
742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244=
L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902=
 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.=
7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.101=
2L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 3=
3.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.5=
5279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.607=
1V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.=
64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.508=
9 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28=
.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.038=
62 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L=
25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.=
4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017=
 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.=
3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.171=
7 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32=
.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698=
 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.=
8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206=
 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11=
.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.12=
07 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C=
29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.5=
3945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.24=
24 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C=
10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.=
2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.8226=
4C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.=
93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.902=
4 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 1=
4.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4=
978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=
=3D"currentColor"></path></svg></div></div></div></div></div><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><=
div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col=
 max-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D=
"5f7358a4-3e2e-4023-a2c6-b9f244453546" dir=3D"auto" class=3D"min-h-[20px] t=
ext-message flex flex-col items-start whitespace-pre-wrap break-words [.tex=
t-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><=
div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[=
3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert lig=
ht"><p>=EC=88=98=EC=A0=95=ED=95=B4=EC=95=BC =ED=95=A0 =EB=B6=80=EB=B6=84=EC=
=9D=80 <code>update_progress_bar</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4. =ED=98=84=EC=9E=AC =EB=A0=88=EB=B2=A8=EC=9D=84 100=
=EC=9C=BC=EB=A1=9C =EB=82=98=EB=88=88 =EB=AA=AB=EC=9D=84 =ED=91=9C=EC=8B=9C=
=ED=95=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.<=
/p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-tok=
en-border-medium"><div class=3D"flex items-center relative text-token-text-=
secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>python</span><div class=3D"flex items-center=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-=
center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></di=
v></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr">=
<code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-ke=
yword">def</span> <span class=3D"hljs-title function_">update_progress_bar<=
/span>(<span class=3D"hljs-params">self</span>):
    cursor =3D self.connection.cursor()
    cursor.execute(<span class=3D"hljs-string">"SELECT level FROM user WHER=
E id =3D %s"</span>, (self.user,))
    level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]
    cursor.close()
   =20
    level_quotient =3D level // <span class=3D"hljs-number">100</span>
    progress_value =3D level % <span class=3D"hljs-number">100</span>
   =20
    self.level_text_label.config(text=3D<span class=3D"hljs-string">f"Level=
 <span class=3D"hljs-subst">{level_quotient}</span>"</span>)
    self.progress_bar[<span class=3D"hljs-string">'value'</span>] =3D progr=
ess_value
</code></div></div></pre><p>=EC=9D=B4=EB=A0=87=EA=B2=8C =EC=88=98=EC=A0=95=
=ED=95=98=EB=A9=B4, <code>update_progress_bar</code> =EB=A9=94=EC=84=9C=EB=
=93=9C=EB=8A=94 =ED=98=84=EC=9E=AC =EB=A0=88=EB=B2=A8=EC=9D=84 100=EC=9C=BC=
=EB=A1=9C =EB=82=98=EB=88=88 =EB=AA=AB=EC=9D=84 =EB=9D=BC=EB=B2=A8=EC=97=90=
 =ED=91=9C=EC=8B=9C=ED=95=98=EA=B3=A0, =EB=82=98=EB=A8=B8=EC=A7=80=EB=A5=BC=
 =ED=94=84=EB=A1=9C=EA=B7=B8=EB=A0=88=EC=8A=A4=EB=B0=94=EC=97=90 =EB=B0=98=
=EC=98=81=ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=
=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center ju=
stify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:abso=
lute md:border md:border-token-border-light md:hidden"><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounde=
d-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span=
 class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L=
6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 =
3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.09=
38 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.=
9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.26=
55 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.=
00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 =
6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.99=
96 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C=
21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.=
6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.999=
6 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 2=
0.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.099=
47C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 =
14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.=
5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113=
 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.=
85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg>=
</span></button></span><span class=3D"" data-state=3D"closed"><button class=
=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-second=
ary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0=
 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0=
 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 =
1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd">=
</path></svg></span></button></span><div class=3D"flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary h=
over:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px]=
 items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21=
.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.959=
58 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.=
37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29=
589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.661=
4 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 2=
1.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273=
 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13=
.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.0113=
1 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13=
.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 1=
4.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18=
.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H=
17.0045Z" fill=3D"currentColor"></path></svg></span></button></span></div><=
span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:=
r25a:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"=
 class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px]=
 hover:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-=
0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md=
 h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"=
24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M1=
9.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241=
.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836=
 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.2=
69-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.5=
06-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.=
001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2=
.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.37=
3 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754=
-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.3=
25 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.=
5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3=
.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.50=
3-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 =
2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span =
class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; widt=
h: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" he=
ight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token=
-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5=
.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6=
 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path><=
/svg></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></=
div></div></div></div></div></div><div class=3D"w-full text-token-text-prim=
ary" dir=3D"auto" data-testid=3D"conversation-turn-66" data-scroll-anchor=
=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto=
 md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base=
 juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"=
aaa2c105-81e1-4b71-9b1a-487f721cc4a2" dir=3D"auto" class=3D"min-h-[20px] te=
xt-message flex flex-col items-start whitespace-pre-wrap break-words [.text=
-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><d=
iv class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:ite=
ms-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 =
py-2.5 dark:bg-token-main-surface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0,0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg =3D "#FFFFFF")
        self.canvas =3D Canvas(
            bg =3D "#FFFFFF",
            height =3D 531,
            width =3D 747,
            bd =3D 0,
            highlightthickness =3D 0,
            relief =3D "ridge"
        )

        self.canvas.place(x =3D 0, y =3D 0)

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16",  highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D tk.Button(text=3D"=EC=A4=91=EB=
=B3=B5 =ED=99=95=EC=9D=B8", command=3Dself.CheckNicknameExistence)
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0, width =
=3D 60, height=3D34)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC",fg=3D"#000716",  h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height =3D 34=
)
        self.IDExistenceBtn =3D tk.Button(text=3D"=EC=A4=91=EB=B3=B5 =ED=99=
=95=EC=9D=B8", command=3Dself.CheckIDExistence)
        self.IDExistenceBtn.place(x=3D650.0, y=3D244.0, width =3D 60, heigh=
t=3D34)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC",fg=3D"#00071=
6",  highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height =
=3D 34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D tk.Button(text=3D"=EC=9D=B4=EC=A0=84=EC=9C=
=BC=EB=A1=9C", command=3Dself.SwitchToLoginPage)
        self.GoPrevPageBtn.place(x=3D356, y=3D367, width=3D133, height=3D38=
)

        self.SignUpBtn =3D tk.Button(text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=
=9E=85", command=3Dself.SignUp)
        self.SignUpBtn.place(x=3D511, y=3D367, width=3D133, height=3D38)
        self.SignUpBtn.config(state=3D"disabled")
        self.resizable(False, False)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                    messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=
=91=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=
=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                    messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=
=9D=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=
=95=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                    if self.ExistenceValues[0] =3D=3D 0:
                        self.ExistenceValues[0] +=3D 1
                    if sum(self.ExistenceValues) =3D=3D 2:
                        self.SignUpBtn.config(state=3D"active")
                   =20
    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return=20
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                    messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=
=91=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=
=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                   =20
            else:
                    messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=
=9D=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=
=95=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                    if self.ExistenceValues[1] =3D=3D 0:
                        self.ExistenceValues[1] +=3D 1
                    if sum(self.ExistenceValues) =3D=3D 2:
                        self.SignUpBtn.config(state=3D"active")
    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,));
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
    def SwitchToLoginPage(self):
            from LoginPage import LoginPage
            self.destroy()
            app =3D LoginPage()
            app.mainloop()
           =20
if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()



=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=B0=BD =EC=BD=94=EB=93=9C=EC=9D=B8=
=EB=8D=B0, =ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EB=B2=84=ED=8A=BC=EC=97=90=
 '=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.=
png'=EB=A5=BC =EC=A0=81=EC=9A=A9=ED=95=B4=EC=A3=BC=EA=B3=A0 =ED=98=B8=EB=B2=
=84=EC=9D=98 =EA=B2=BD=EC=9A=B0 '=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=
=84=ED=8A=BC=ED=98=B8=EB=B2=84.png'=EC=A0=81=EC=9A=A9=ED=95=B4=EC=A4=98, =
=EA=B7=B8=EB=A6=AC=EA=B3=A0 =EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C =EB=B2=84=
=ED=8A=BC=EC=97=90 '=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=EC=9D=BC=EB=B0=98.png'=EB=A5=BC =EC=A0=81=EC=9A=A9=ED=95=B4=EC=A3=BC=EA=B3=
=A0 =ED=98=B8=EB=B2=84=EC=9D=98 =EA=B2=BD=EC=9A=B0 '=EC=9D=B4=EC=A0=84=EC=
=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=B2=84.png'=EC=A0=81=EC=9A=A9=
=ED=95=B4=EC=A4=98, =EA=B7=B8=EB=A6=AC=EA=B3=A0 =EC=A4=91=EB=B3=B5=ED=99=95=
=EC=9D=B8 =EB=B2=84=ED=8A=BC=EC=9D=B4 =EC=9E=88=EA=B1=B0=EB=93=A0? =EA=B7=
=B8=EA=B1=B0 '=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png'=
=EC=A0=81=EC=9A=A9=ED=95=B4=EC=A3=BC=EA=B3=A0 =ED=98=B8=EB=B2=84=EC=9D=98 =
=EA=B2=BD=EC=9A=B0 '=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.=
png'=EC=A0=81=EC=9A=A9=ED=95=B4=EC=A4=98<div class=3D"absolute bottom-0 rig=
ht-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"=
><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items=
-center justify-center rounded-full text-token-text-secondary transition ho=
ver:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.2=
93a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.7=
36.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.38=
6 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.5=
86 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></div></div></div></d=
iv></div></div></div></div><div class=3D"w-full text-token-text-primary" di=
r=3D"auto" data-testid=3D"conversation-turn-67" data-scroll-anchor=3D"false=
"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 =
lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:ga=
p-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div cla=
ss=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt=
-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center j=
ustify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"26646ae0-2af1-4d08-8fae-f7ac4c2da913" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=
=A0=81=EC=9A=A9=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 <code>create_image_but=
ton</code> =ED=95=A8=EC=88=98=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EA=B3=A0=
, =ED=95=B4=EB=8B=B9 =ED=95=A8=EC=88=98=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=
=98=EC=97=AC =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=83=9D=EC=84=B1=ED=95=98=EB=8F=
=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=A9=EB=8B=
=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5=
px] border-token-border-medium"><div class=3D"flex items-center relative te=
xt-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs f=
ont-sans justify-between rounded-t-md"><span>python</span><div class=3D"fle=
x items-center"><span class=3D"" data-state=3D"closed"><button class=3D"fle=
x gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24=
" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 =
0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3=
-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 =
1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" cli=
p-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</butt=
on></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined=
" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span cl=
ass=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>,<spa=
n class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg =3D <span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg =3D <span class=3D"hljs-string">"#FFFFFF"</span>,
            height =3D <span class=3D"hljs-number">531</span>,
            width =3D <span class=3D"hljs-number">747</span>,
            bd =3D <span class=3D"hljs-number">0</span>,
            highlightthickness =3D <span class=3D"hljs-number">0</span>,
            relief =3D <span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x =3D <span class=3D"hljs-number">0</span>, y =3D=
 <span class=3D"hljs-number">0</span>)

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>,  highlightthickness=3D<span class=3D"hlj=
s-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence, <span class=3D"hljs-number">1.0</span>
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span=
 class=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</=
span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence, <span class=3D"hljs-number">1.0</span>
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">244.0</span>, width=3D<span class=
=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage, <span class=3D"hljs-number">1.0=
</span>
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-n=
umber">133</span>, height=3D<span class=3D"hljs-number">38</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp, <span class=3D"hljs-number">1.0</span>
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-numb=
er">133</span>, height=3D<span class=3D"hljs-number">38</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, scale</span>):
        original_normal_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(normal_image_path)
        original_hover_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(hover_image_path)
        normal_image =3D ImageTk.PhotoImage(original_normal_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_normal_image=
.width * scale), <span class=3D"hljs-built_in">int</span>(original_normal_i=
mage.height * scale)), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(original_hover_image.resize(
            (<span class=3D"hljs-built_in">int</span>(original_hover_image.=
width * scale), <span class=3D"hljs-built_in">int</span>(original_hover_ima=
ge.height * scale)), Image.Resampling.LANCZOS))
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)
                   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>=20
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)
                   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
           =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()
           =20
<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EB=8A=94 <code>cre=
ate_image_button</code> =ED=95=A8=EC=88=98=EB=A5=BC =EC=B6=94=EA=B0=80=ED=
=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=
=83=9D=EC=84=B1=ED=95=98=EA=B3=A0, =ED=95=B4=EB=8B=B9 =ED=95=A8=EC=88=98=EB=
=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC '=EC=A4=91=EB=B3=B5=ED=99=95=EC=
=9D=B8', '=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85', '=EC=9D=B4=EC=A0=84=EC=9C=
=BC=EB=A1=9C' =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=83=9D=EC=84=B1=ED=95=98=EB=8F=
=84=EB=A1=9D =EC=88=98=EC=A0=95=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden =
juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -=
mt-1 bg-token-main-surface-primary md:absolute md:border md:border-token-bo=
rder-light md:hidden"><div class=3D"flex items-center"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary ho=
ver:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] =
items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C1=
1 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.=
25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 =
3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.458=
8C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.5=
9714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331=
L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4=
 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.=
27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.999=
6 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 2=
0.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9=
444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149=
 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C1=
6.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.537=
9 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 1=
6.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.7=
66 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 =
16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.9=
0049Z" fill=3D"currentColor"></path></svg></span></button></span><span clas=
s=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-se=
condary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px]=
 w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000=
/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 =
0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0=
 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-=
1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></s=
pan><div class=3D"flex"><span class=3D"" data-state=3D"closed"><button clas=
s=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secon=
dary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22=
.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.099=
75 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.4=
3684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 =
3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 1=
5 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.3939=
9 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 =
13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.=
6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608=
 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15=
.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4=
.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 =
5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor">=
</path></svg></span></button></span></div><span class=3D"" data-state=3D"cl=
osed"><button type=3D"button" id=3D"radix-:r25i:" aria-haspopup=3D"menu" ar=
ia-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded=
-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-surface-sec=
ondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&=
amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0=
 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.12=
3 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.79=
4c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 =
0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .0=
01-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"><=
/path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 =
2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1=
.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a=
1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.=
187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339=
-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 =
1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.=
094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.=
901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.=
576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" s=
tyle=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"=
currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 =
14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 =
0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></span></div=
></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></di=
v><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D=
"conversation-turn-68" data-scroll-anchor=3D"false"><div class=3D"py-2 juic=
e:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div cla=
ss=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max=
-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-=
turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md=
:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message=
-author-role=3D"user" data-message-id=3D"aaa240f7-3e21-42a2-9732-252c16e2e3=
3b" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-sta=
rt whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full =
juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col g=
ap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"relative m=
ax-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-=
secondary">=EB=B2=84=ED=8A=BC=EC=97=90 =EC=A0=81=EC=9A=A9=ED=95=9C =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EB=94=B0=EB=A1=9C =ED=81=AC=EA=B8=B0=EC=A1=B0=EC=A0=
=95=ED=95=98=EC=A7=80=EB=A7=90=EA=B3=A0 =EB=B2=84=ED=8A=BC=EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EA=B7=B8=EB=8C=80=EB=A1=9C =EC=B6=9C=EB=A0=A5=EB=90=98=EA=B2=
=8C =ED=95=B4=EC=A3=BC=EA=B3=A0, =EB=B2=84=ED=8A=BC =EC=A0=84=EB=B6=80 tkra=
ise=ED=95=B4=EC=A4=98<div class=3D"absolute bottom-0 right-full top-0 -mr-3=
.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-cen=
ter rounded-full text-token-text-secondary transition hover:bg-token-main-s=
urface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 =
1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.1=
5-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.=
838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.4=
14 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></div></div></div></div></div></div></di=
v></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-tes=
tid=3D"conversation-turn-69" data-scroll-anchor=3D"false"><div class=3D"py-=
2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><d=
iv class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 =
md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0=
 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><d=
iv class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overf=
low-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rou=
nded-sm flex items-center justify-center bg-token-main-surface-primary text=
-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0=
 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5=
324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744=
 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.49=
85C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1=
.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C1=
6.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4=
4666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 1=
0.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7=
21698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.475=
9 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 3=
2.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.89=
07 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C=
19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.=
8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.502=
7 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.=
7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517=
 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 3=
7.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.900=
4 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26=
.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.954=
1 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.=
3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838=
 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5=
.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.72=
48C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8=
408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 =
24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.=
7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3878=
5 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 =
8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19=
351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267=
 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.=
5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046=
 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.=
30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.49=
81C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 =
12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6=
606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 =
36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.=
6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586=
 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.05=
56ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 =
10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9=
948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753=
 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24=
.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.315=
89 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 =
10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10=
.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.94=
41 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 =
11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2=
1869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034=
 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.=
7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.487=
7 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 1=
7.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColo=
r"></path></svg></div></div></div></div></div><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"f49cc35e-b0c4-=
4fca-92d9-85a4bf255209" dir=3D"auto" class=3D"min-h-[20px] text-message fle=
x flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;=
]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"fl=
ex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div clas=
s=3D"markdown prose w-full break-words dark:prose-invert light"><p>=EB=B2=
=84=ED=8A=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =ED=81=AC=EA=B8=B0 =EC=A1=
=B0=EC=A0=95=ED=95=98=EC=A7=80 =EC=95=8A=EA=B3=A0 =EA=B7=B8=EB=8C=80=EB=A1=
=9C =EC=B6=9C=EB=A0=A5=ED=95=98=EB=A9=B0, =EB=AA=A8=EB=93=A0 =EB=B2=84=ED=
=8A=BC=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=
=98=AC=EB=A6=AC=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=95=9C =EC=BD=94=EB=
=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 r=
ounded-md border-[0.5px] border-token-border-medium"><div class=3D"flex ite=
ms-center relative text-token-text-secondary bg-token-main-surface-secondar=
y px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</s=
pan><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"=
><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/=
2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cl=
ass=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5=
a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0=
 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 =
0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-=
9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=
=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-=
4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs lang=
uage-python"><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span=
 class=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</=
span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">244.0</span>, width=3D<span class=
=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-n=
umber">133</span>, height=3D<span class=3D"hljs-number">38</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-numb=
er">133</span>, height=3D<span class=3D"hljs-number">38</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.IDEntry.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D ImageTk.PhotoImage(file=3Dnormal_image_path)
        hover_image =3D ImageTk.PhotoImage(file=3Dhover_image_path)
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>)
        button.image =3D normal_image
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.bind(<span class=3D"hljs-string">"&lt;Button-1&gt;"</span>, =
<span class=3D"hljs-keyword">lambda</span> e: command())
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EB=B2=84=
=ED=8A=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =ED=81=AC=EA=B8=B0 =EC=A1=B0=
=EC=A0=95 =EC=97=86=EC=9D=B4 =EA=B7=B8=EB=8C=80=EB=A1=9C =EC=B6=9C=EB=A0=A5=
=ED=95=98=EB=A9=B0, =EB=AA=A8=EB=93=A0 =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=B5=
=9C=EC=83=81=EC=9C=84 =EB=A0=88=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=AC=EB=8F=
=84=EB=A1=9D =EC=88=98=EC=A0=95=EB=90=9C =EA=B2=83=EC=9E=85=EB=8B=88=EB=8B=
=A4. <code>create_image_button</code> =ED=95=A8=EC=88=98=EC=97=90=EC=84=9C=
=EB=8A=94 =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC=EC=9D=84 =EB=B0=94=
=EB=A1=9C <code>PhotoImage</code> =EA=B0=9D=EC=B2=B4=EB=A1=9C =EC=83=9D=EC=
=84=B1=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC=EC=97=90 =EC=A0=81=EC=9A=A9=ED=
=95=98=EA=B3=A0, <code>tkraise</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=
=EC=97=AC =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=B5=9C=EC=83=81=EC=9C=84 =EB=A0=88=
=EB=B2=A8=EB=A1=9C =EC=98=AC=EB=A6=BD=EB=8B=88=EB=8B=A4.</p></div></div></d=
iv></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=
=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surf=
ace-primary md:absolute md:border md:border-token-border-light md:hidden"><=
div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><but=
ton class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surfa=
ce-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.247=
34 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005=
H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.250=
19 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19=
.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.90=
99V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 1=
8 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.8106=
9 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C2=
2.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.59=
74 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 =
17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.=
9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.2272=
6 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.=
65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.49=
96 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 =
16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7=
564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004=
 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentC=
olor"></path></svg></span></button></span><span class=3D"" data-state=3D"cl=
osed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-=
main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center =
justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 =
0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3=
-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 =
1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" cli=
p-rule=3D"evenodd"></path></svg></span></button></span><div class=3D"flex">=
<span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-tok=
en-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"fle=
x h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L=
10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H=
6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3=
.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C2=
1.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3=
766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.=
36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C=
9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9=
.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.91=
53L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.004=
5 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278=
 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 1=
8.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></=
button></span></div><span class=3D"" data-state=3D"closed"><button type=3D"=
button" id=3D"radix-:r25q:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-te=
xt-secondary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"=
flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp=
;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"=
currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943=
 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 =
2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.=
93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.=
792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"cu=
rrentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6=
.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1=
.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.=
248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 =
1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-=
6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.8=
61 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55=
 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-=
3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></pa=
th></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; pa=
dding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000=
/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 =
1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rul=
e=3D"evenodd"></path></svg></div></button></span></div></div></div><div cla=
ss=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-70=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D=
"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"user"=
 data-message-id=3D"aaa280bd-d95f-45aa-840b-62a752e4698d" dir=3D"auto" clas=
s=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wra=
p break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overf=
low-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidd=
en items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3x=
l bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">import imp=
ortlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0, width=3D=
60, height=3D34)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D244.0, width=3D60, he=
ight=3D34)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367, width=3D133, height=3D38=
)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367, width=3D133, height=3D38)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.IDEntry.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D ImageTk.PhotoImage(file=3Dnormal_image_path)
        hover_image =3D ImageTk.PhotoImage(file=3Dhover_image_path)
        button =3D tk.Label(self, image=3Dnormal_image, bg=3D"#FFFFFF")
        button.image =3D normal_image
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.bind("&lt;Button-1&gt;", lambda e: command())
        return button

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()
=ED=98=B8=EB=B2=84 =ED=9A=A8=EA=B3=BC=EC=9D=BC=EB=95=8C =EB=B2=84=ED=8A=BC =
=EC=9C=97=EB=B6=80=EB=B6=84=EC=9D=B4 =EC=95=BD=EA=B0=84 =EC=9E=98=EB=A0=A4=
=EC=84=9C =EB=B3=B4=EC=9E=84<div class=3D"absolute bottom-0 right-full top-=
0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center just=
ify-center rounded-full text-token-text-secondary transition hover:bg-token=
-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.5=
36 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 =
0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 =
0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.1=
72L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></div></div></div></div></div></d=
iv></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" d=
ata-testid=3D"conversation-turn-71" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-s=
hrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:p=
t-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-cente=
r overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative =
p-1 rounded-sm flex items-center justify-center bg-token-main-surface-prima=
ry text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=
=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full"><div data-message-author-role=3D"assistant" data-message-id=3D"db4d3=
dc0-c560-4e32-88ed-559b577d2583" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">=
<div class=3D"markdown prose w-full break-words dark:prose-invert light"><p=
>=EB=B2=84=ED=8A=BC=EC=9D=B4 =EC=9E=98=EB=A0=A4 =EB=B3=B4=EC=9D=B4=EB=8A=94=
 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=98=EA=B8=B0 =EC=9C=84=
=ED=95=B4, <code>tk.Label</code> =EB=8C=80=EC=8B=A0 <code>tk.Button</code>=
=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EA=B3=A0, <code>ImageTk.PhotoImage</c=
ode> =EA=B0=9D=EC=B2=B4=EB=A5=BC <code>compound=3Dtk.CENTER</code> =EC=98=
=B5=EC=85=98=EA=B3=BC =ED=95=A8=EA=BB=98 <code>button</code>=EC=97=90 =ED=
=95=A0=EB=8B=B9=ED=95=98=EB=8A=94 =EB=B0=A9=EC=8B=9D=EC=9C=BC=EB=A1=9C =EC=
=88=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=
=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md bo=
rder-[0.5px] border-token-border-medium"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>python</span><div cla=
ss=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-=
sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3=
-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 =
3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1=
 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-=
1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span=
 class=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</=
span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">244.0</span>, width=3D<span class=
=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-n=
umber">133</span>, height=3D<span class=3D"hljs-number">38</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-numb=
er">133</span>, height=3D<span class=3D"hljs-number">38</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.IDEntry.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D ImageTk.PhotoImage(file=3Dnormal_image_path)
        hover_image =3D ImageTk.PhotoImage(file=3Dhover_image_path)
        button =3D tk.Button(self, image=3Dnormal_image, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and, compound=3Dtk.CENTER)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        button.image =3D normal_image  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_image  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C =EA=B0=81 =EB=B2=84=ED=8A=BC=
=EC=97=90 <code>tk.Button</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=
=AC =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =EC=9E=98=EB=A6=AC=EC=A7=80 =EC=95=
=8A=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=95=98=EC=98=80=EA=B3=A0, =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC <code>compound=3Dtk.CENTER</code> =EC=98=B5=
=EC=85=98=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC =
=EC=A4=91=EC=95=99=EC=97=90 =EB=B0=B0=EC=B9=98=ED=95=98=EC=98=80=EC=8A=B5=
=EB=8B=88=EB=8B=A4. <code>borderwidth</code>=EC=99=80 <code>highlightthickn=
ess</code>=EB=A5=BC 0=EC=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=98=EC=97=
=AC =EB=B2=84=ED=8A=BC =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EC=97=86=EC=95=
=B4=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt=
-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-=
start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute m=
d:border md:border-token-border-light md:hidden"><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6757=
2 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44=
776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6=
7572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM=
8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.=
4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C=
1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3566=
5C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.=
1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.474=
4 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 1=
9.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4=
458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166=
 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.=
0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.537=
2 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 1=
5.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.49=
96 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 =
15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span=
></button></span><span class=3D"" data-state=3D"closed"><button class=3D"ro=
unded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><=
span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" v=
iewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3=
h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3=
v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 =
1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path=
></svg></span></button></span><div class=3D"flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:b=
g-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items=
-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C=
11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.=
6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 =
12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H=
18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 1=
8.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961=
ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.47=
38C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 =
9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3=
782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 =
13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045=
 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 =
4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.004=
5Z" fill=3D"currentColor"></path></svg></span></button></span></div><span c=
lass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r262:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-72" data-scroll-anchor=3D"fa=
lse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px=
-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice=
:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2dc=
82-f8f8-4553-803d-db3cc16bf5c4" dir=3D"auto" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start whitespace-pre-wrap break-words [.text-messa=
ge+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cla=
ss=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-sta=
rt"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5=
 dark:bg-token-main-surface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0, width=3D=
60, height=3D34)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D244.0, width=3D60, he=
ight=3D34)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367, width=3D133, height=3D38=
)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367, width=3D133, height=3D38)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D ImageTk.PhotoImage(file=3Dnormal_image_path)
        hover_image =3D ImageTk.PhotoImage(file=3Dhover_image_path)
        button =3D tk.Button(self, image=3Dnormal_image, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand, compound=3Dtk.CENTER)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        button.image =3D normal_image  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_image  # Keep a reference to the hover=
 image
        return button

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=EB=B2=84=ED=8A=BC=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=97=90 =EC=98=81=
=ED=96=A5=EC=9D=84 =EC=A3=BC=EC=A7=80=EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=B4=
=EC=A4=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =EA=B7=B8=EB=8C=80=EB=A1=9C =
=EC=B6=9C=EB=A0=A5=EB=90=A0=EC=88=98 =EC=9E=88=EA=B2=8C =ED=95=98=EB=9D=BC=
=EA=B3=A0<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-73" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"32042d29-9c74-471a-b172-8f=
094e363fd8" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p>=EB=B2=84=ED=8A=BC=
=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=9B=90=EB=B3=B8 =EA=B7=B8=
=EB=8C=80=EB=A1=9C =EC=B6=9C=EB=A0=A5=ED=95=98=EB=A9=B4=EC=84=9C, =EB=B2=84=
=ED=8A=BC =EC=9E=90=EC=B2=B4=EC=97=90 =EB=B0=B0=EA=B2=BD=EC=9D=B4=EB=82=98 =
=ED=85=8C=EB=91=90=EB=A6=AC =EC=97=86=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EA=B7=B8=EB=8C=80=EB=A1=9C =EB=B3=B4=EC=97=AC=EC=A3=BC=EB=8A=94 =
=EB=B0=A9=EB=B2=95=EC=9C=BC=EB=A1=9C =EC=88=98=EC=A0=95=ED=95=98=EA=B2=A0=
=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=
=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">import</spa=
n> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span=
 class=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</=
span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">244.0</span>, width=3D<span class=
=3D"hljs-number">60</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-n=
umber">133</span>, height=3D<span class=3D"hljs-number">38</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>, width=3D<span class=3D"hljs-numb=
er">133</span>, height=3D<span class=3D"hljs-number">38</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4=EC=A0=9C =EB=B2=84=ED=8A=BC=EC=9D=98 =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=9B=90=EB=B3=B8 =EA=B7=B8=EB=8C=80=
=EB=A1=9C =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9E=98=EB=A6=AC=EC=A7=80 =
=EC=95=8A=EB=8F=84=EB=A1=9D =ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4. =
<code>tk.Button</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EA=B3=A0, <code=
>ImageTk.PhotoImage</code> =EA=B0=9D=EC=B2=B4=EB=A5=BC <code>compound=3Dtk.=
CENTER</code> =EC=98=B5=EC=85=98 =EC=97=86=EC=9D=B4 =ED=95=A0=EB=8B=B9=ED=
=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>borderwidth</code>=EC=99=
=80 <code>highlightthickness</code>=EB=A5=BC 0=EC=9C=BC=EB=A1=9C =EC=84=A4=
=EC=A0=95=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC =ED=85=8C=EB=91=90=EB=A6=AC=
=EB=A5=BC =EC=97=86=EC=95=B4=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></d=
iv></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=
=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surf=
ace-primary md:absolute md:border md:border-token-border-light md:hidden"><=
div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><but=
ton class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surfa=
ce-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.247=
34 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005=
H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.250=
19 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19=
.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.90=
99V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 1=
8 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.8106=
9 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C2=
2.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.59=
74 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 =
17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.=
9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.2272=
6 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.=
65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.49=
96 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 =
16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7=
564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004=
 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentC=
olor"></path></svg></span></button></span><span class=3D"" data-state=3D"cl=
osed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-=
main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center =
justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path=
 fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 =
0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3=
-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 =
1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" cli=
p-rule=3D"evenodd"></path></svg></span></button></span><div class=3D"flex">=
<span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-tok=
en-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"fle=
x h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L=
10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H=
6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3=
.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C2=
1.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3=
766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.=
36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C=
9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9=
.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.91=
53L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.004=
5 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278=
 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 1=
8.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></=
button></span></div><span class=3D"" data-state=3D"closed"><button type=3D"=
button" id=3D"radix-:r26a:" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-te=
xt-secondary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"=
flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp=
;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"=
currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943=
 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 =
2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.=
93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.=
792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"cu=
rrentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6=
.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1=
.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.=
248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 =
1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-=
6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.8=
61 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55=
 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-=
3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></pa=
th></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; pa=
dding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000=
/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 =
1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rul=
e=3D"evenodd"></path></svg></div></button></span></div></div></div><div cla=
ss=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-74=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D=
"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"user"=
 data-message-id=3D"aaa2db71-752e-43b6-a8a7-e27b7ae9cd73" dir=3D"auto" clas=
s=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wra=
p break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overf=
low-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidd=
en items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3x=
l bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">import imp=
ortlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0, width=3D=
60, height=3D34)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D244.0, width=3D60, he=
ight=3D34)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367, width=3D133, height=3D38=
)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367, width=3D133, height=3D38)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=EC=BD=94=EB=93=9C =EC=9A=94=EC=86=8C =EC=A0=84=EB=B6=80=EB=8B=A4 =EC=A7=80=
=EC=9B=A0=EB=8B=A4=EA=B0=80 =EB=8F=99=EC=9D=BC=EC=9C=84=EC=B9=98=EC=97=90 =
=EB=8F=99=EC=9D=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A1=9C =EB=84=88=EA=B0=80=
=ED=95=9C=EB=B2=88 =EB=8B=A4=EC=8B=9C =EB=B0=B0=EC=B9=98=ED=95=B4=EB=B4=90 =
=EB=A1=9C=EC=A7=81=EB=93=A4=EC=9D=80 =EA=B7=B8=EB=8C=80=EB=A1=9C =EB=91=90=
=EA=B3=A0<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-75" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"a6cebea0-11b8-4cd9-8613-61=
74127c8342" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p>=EB=AC=BC=EB=A1=A0=
=EC=9E=85=EB=8B=88=EB=8B=A4. =EB=B2=84=ED=8A=BC, =EC=9E=85=EB=A0=A5 =ED=95=
=84=EB=93=9C =EB=B0=8F =EA=B8=B0=ED=83=80 =EC=9A=94=EC=86=8C=EB=A5=BC =EB=
=8F=99=EC=9D=BC=ED=95=9C =EC=9C=84=EC=B9=98=EC=97=90 =EB=8F=99=EC=9D=BC=ED=
=95=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC =EB=8B=A4=EC=8B=9C =EB=B0=B0=EC=B9=98=ED=95=98=EA=B2=A0=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[=
0.5px] border-token-border-medium"><div class=3D"flex items-center relative=
 text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>python</span><div class=3D"=
flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3=
 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 =
1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0=
-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" =
clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</b=
utton></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefi=
ned" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span=
 class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EB=B2=84=
=ED=8A=BC, =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C =EB=B0=8F =EA=B8=B0=ED=83=
=80 =EC=9A=94=EC=86=8C=EB=A5=BC =EB=8F=99=EC=9D=BC=ED=95=9C =EC=9C=84=EC=B9=
=98=EC=97=90 =EB=8B=A4=EC=8B=9C =EB=B0=B0=EC=B9=98=ED=95=98=EA=B3=A0, =EB=
=AA=A8=EB=93=A0 =EB=B2=84=ED=8A=BC=EC=97=90 =EC=9B=90=EB=B3=B8 =EC=9D=B4=EB=
=AF=B8=EC=A7=80=EB=A5=BC =EA=B7=B8=EB=8C=80=EB=A1=9C =EC=82=AC=EC=9A=A9=ED=
=95=98=EB=8F=84=EB=A1=9D =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=
=8B=A4. =EB=98=90=ED=95=9C <code>tk.Button</code>=EC=9D=84 =EC=82=AC=EC=9A=
=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC=EC=9D=84 =EC=83=9D=EC=84=B1=ED=95=
=98=EA=B3=A0, =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B3=80=EA=B2=BD =EC=8B=9C =EC=
=9E=98=EB=A6=AC=EB=8A=94 =EB=AC=B8=EC=A0=9C=EA=B0=80 =EB=B0=9C=EC=83=9D=ED=
=95=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=96=88=EC=8A=B5=EB=8B=88=EB=
=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidd=
en juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-1=
0 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border-token=
-border-light md:hidden"><div class=3D"flex items-center"><span class=3D"" =
data-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary=
 hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30p=
x] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"=
0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.909=
9C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626=
 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.55=
23 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.=
4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 =
1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9=
331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.0000=
5 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409=
 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.=
9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.805=
4 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 1=
4.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9=
149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.9004=
9C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.=
5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.135=
7 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 1=
5.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.98=
59 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 =
7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><span c=
lass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text=
-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30=
px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cla=
ss=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D=
"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 =
3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1=
 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 =
1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button><=
/span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.281=
1 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7=
.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753=
L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0=
045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.7=
45 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.=
39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61=
351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743=
 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.3=
5608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.414=
1 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.00=
45 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0=
045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentCol=
or"></path></svg></span></button></span></div><span class=3D"" data-state=
=3D"closed"><button type=3D"button" id=3D"radix-:r26i:" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer r=
ounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-surfa=
ce-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=
=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795=
 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 =
.001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 =
0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0=
 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.=
317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.88=
7c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1=
-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467=
 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3=
.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.50=
4 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503=
 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2=
.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064=
-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1=
.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 tex=
t-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xm=
lns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none"=
 viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.41=
4 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6=
a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></spa=
n></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></d=
iv></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-te=
stid=3D"conversation-turn-76" data-scroll-anchor=3D"false"><div class=3D"py=
-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><=
div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6=
 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conver=
sation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col g=
ap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-=
message-author-role=3D"user" data-message-id=3D"aaa2635d-7052-4cf4-ace0-63c=
6a8dd8ba0" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:=
w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fle=
x-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"rel=
ative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-s=
urface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

x=3D100 y=3D72=EC=97=90 '=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png'=
=EB=84=A3=EC=96=B4=EC=A3=BC=EA=B3=A0 x=3D 400 y=3D 72=EC=97=90 '=ED=9A=8C=
=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png'=EB=84=A3=EC=96=B4=EC=A4=98<div cl=
ass=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-ho=
ver/conversation-turn:block"><span class=3D"" data-state=3D"closed"><button=
 class=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-=
text-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.=
094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 =
1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-=
.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 =
0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-77=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avata=
r flex h-6 w-6 items-center justify-center overflow-hidden rounded-full jui=
ce:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center j=
ustify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8=
"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"d9ad4c2c-2f36-4787-ac9f-c49ddaecdf0a" dir=
=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whit=
espace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:i=
tems-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 ju=
ice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full =
break-words dark:prose-invert light"><p>=EB=AC=BC=EB=A1=A0=EC=9E=85=EB=8B=
=88=EB=8B=A4. <code>=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png</code=
>=EC=99=80 <code>=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png</code> =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=A7=80=EC=A0=95=EB=90=9C =EC=9C=84=
=EC=B9=98=EC=97=90 =EC=B6=94=EA=B0=80=ED=95=98=EB=8F=84=EB=A1=9D =EC=BD=94=
=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=
=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px]=
 border-token-border-medium"><div class=3D"flex items-center relative text-=
token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font=
-sans justify-between rounded-t-md"><span>python</span><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex g=
ap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" h=
eight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fi=
ll=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0=
 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h=
2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM=
5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-r=
ule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button>=
</span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" d=
ir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">100</sp=
an>, y=3D<span class=3D"hljs-number">72</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">400</s=
pan>, y=3D<span class=3D"hljs-number">72</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 <code>=ED=
=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png</code>=EC=99=80 <code>=ED=9A=
=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png</code> =EC=9D=B4=EB=AF=B8=EC=A7=
=80=EB=A5=BC =EC=A7=80=EC=A0=95=EB=90=9C =EC=9C=84=EC=B9=98=EC=97=90 =EC=B6=
=94=EA=B0=80=ED=95=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=96=88=EC=8A=
=B5=EB=8B=88=EB=8B=A4. =EB=8B=A4=EB=A5=B8 =EA=B8=B0=EB=8A=A5=EC=9D=80 =EC=
=9D=B4=EC=A0=84=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=8C =EB=8F=99=EC=
=9E=91=ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D=
"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justi=
fy-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolut=
e md:border md:border-token-border-light md:hidden"><div class=3D"flex item=
s-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-l=
g text-token-text-secondary hover:bg-token-main-surface-secondary"><span cl=
ass=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6=
7572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8=
.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 =
6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.909=
9ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 =
10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.000=
05C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3=
5665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 =
10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.=
4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.684=
6 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 1=
0.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3=
166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C=
18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.=
5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.592=
1 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16=
.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.859=
05 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></s=
pan></button></span><span class=3D"" data-state=3D"closed"><button class=3D=
"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary=
"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor"=
 fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-=
3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 =
3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9=
a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></p=
ath></svg></span></button></span><div class=3D"flex"><span class=3D"" data-=
state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hove=
r:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] it=
ems-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.49=
61C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 =
21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.379=
23 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589=
 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 1=
5 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4=
961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10=
.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.15=
06 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 1=
7.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.95=
23 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0=
045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.55=
68 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.=
0045Z" fill=3D"currentColor"></path></svg></span></button></span></div><spa=
n class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r26=
q:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" cl=
ass=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] ho=
ver:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5=
 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-=
4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.8=
98.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82=
-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.=
241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-=
.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-=
.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001=
 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.22=
3 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1=
.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.=
47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 =
4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM=
6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.07=
6.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2=
.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3=
-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span cla=
ss=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: =
0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-te=
xt-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.29=
3 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a=
1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></sv=
g></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div=
></div></div></div></div></div><div class=3D"w-full text-token-text-primary=
" dir=3D"auto" data-testid=3D"conversation-turn-78" data-scroll-anchor=3D"f=
alse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:p=
x-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juic=
e:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col =
max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2a=
46d-9feb-402b-ab46-263ba2eaadfb" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-st=
art"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.=
5 dark:bg-token-main-surface-secondary">=ED=81=AC=EA=B8=B0=EB=A5=BC 66x102=
=EB=A1=9C =EC=A4=84=EC=9D=B4=EA=B3=A0=EC=8B=B6=EC=96=B4 =EB=91=98=EB=8B=A4 =
=EC=88=98=EC=A0=95=ED=95=A0 =EB=B6=80=EB=B6=84=EB=A7=8C =EB=B3=B4=EB=82=B4=
=EC=A4=98=EB=B4=90<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 =
hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data=
-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-center=
 rounded-full text-token-text-secondary transition hover:bg-token-main-surf=
ace-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6=
.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1=
.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838=
 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 =
6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></=
svg></button></span></div></div></div></div></div></div></div></div></div><=
/div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=
=3D"conversation-turn-79" data-scroll-anchor=3D"false"><div class=3D"py-2 j=
uice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div =
class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:=
max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 fl=
ex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div =
class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow=
-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounde=
d-sm flex items-center justify-center bg-token-main-surface-primary text-to=
ken-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41=
 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" r=
ole=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324=
 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37=
.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C=
30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94=
125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1=
708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4466=
6 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0=
087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7216=
98 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2=
.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3=
138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 =
37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.=
6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.832=
1 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 3=
3.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.775=
2 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38=
.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2=
733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 3=
1.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.55=
63 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 2=
1.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.388=
9C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37=
.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49=
804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C=
13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408=
 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.=
7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.749=
7C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 3=
2.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1=
9885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351=
 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.=
84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.515=
5 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23=
.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.306=
24 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C=
25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.=
4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606=
 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.=
8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.664=
1C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32=
.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556Z=
M35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.=
2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948=
 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11=
.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.17=
19 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 =
31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.=
8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.87=
52 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 =
10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.=
9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2186=
9 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.=
85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.702=
5 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 1=
4.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9=
975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor">=
</path></svg></div></div></div></div></div><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-=
col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div =
data-message-author-role=3D"assistant" data-message-id=3D"458fae76-225d-4d4=
4-bf85-f8c40aa84f0a" dir=3D"auto" class=3D"min-h-[20px] text-message flex f=
lex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:m=
t-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex =
w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=
=3D"markdown prose w-full break-words dark:prose-invert light"><p>=EC=9D=B4=
=EB=AF=B8=EC=A7=80 =ED=81=AC=EA=B8=B0=EB=A5=BC 66x102=EB=A1=9C =EC=A4=84=EC=
=9D=B4=EB=8A=94 =EB=B6=80=EB=B6=84=EB=A7=8C =EC=88=98=EC=A0=95=ED=95=9C =EC=
=BD=94=EB=93=9C=EB=8A=94 =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=8A=B5=EB=
=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[=
0.5px] border-token-border-medium"><div class=3D"flex items-center relative=
 text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>python</span><div class=3D"=
flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3=
 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 =
1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0=
-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" =
clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</b=
utton></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefi=
ned" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span=
 class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_">loa=
d_additional_images</span>(<span class=3D"hljs-params">self</span>):
    left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<span cl=
ass=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"</sp=
an>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs-num=
ber">102</span>), Image.Resampling.LANCZOS)
    right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<span c=
lass=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png"</s=
pan>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs-nu=
mber">102</span>), Image.Resampling.LANCZOS)

    left_photo =3D ImageTk.PhotoImage(left_image)
    right_photo =3D ImageTk.PhotoImage(right_image)

    self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<span=
 class=3D"hljs-string">"#FFFFFF"</span>)
    self.left_image_label.image =3D left_photo
    self.left_image_label.place(x=3D<span class=3D"hljs-number">100</span>,=
 y=3D<span class=3D"hljs-number">72</span>)

    self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=3D<sp=
an class=3D"hljs-string">"#FFFFFF"</span>)
    self.right_image_label.image =3D right_photo
    self.right_image_label.place(x=3D<span class=3D"hljs-number">400</span>=
, y=3D<span class=3D"hljs-number">72</span>)
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C =
<code>load_additional_images</code> =ED=95=A8=EC=88=98 =EB=82=B4=EC=97=90=
=EC=84=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=B6=88=EB=9F=AC=EC=98=A8 =
=ED=9B=84, <code>resize</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=
=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=81=AC=EA=B8=B0=EB=A5=BC 66x102=EB=A1=9C =
=EC=A1=B0=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=8B=A4=EB=A5=B8 =
=EC=BD=94=EB=93=9C=EB=8A=94 =EB=B3=80=EA=B2=BD=ED=95=98=EC=A7=80 =EC=95=8A=
=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=
=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center ju=
stify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:abso=
lute md:border md:border-token-border-light md:hidden"><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounde=
d-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span=
 class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L=
6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 =
3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.09=
38 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.=
9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.26=
55 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.=
00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 =
6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.99=
96 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C=
21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.=
6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.999=
6 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 2=
0.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.099=
47C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 =
14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.=
5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113=
 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.=
85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg>=
</span></button></span><span class=3D"" data-state=3D"closed"><button class=
=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-second=
ary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0=
 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0=
 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 =
1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd">=
</path></svg></span></button></span><div class=3D"flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary h=
over:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px]=
 items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21=
.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.959=
58 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.=
37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29=
589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.661=
4 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 2=
1.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273=
 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13=
.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.0113=
1 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13=
.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 1=
4.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18=
.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H=
17.0045Z" fill=3D"currentColor"></path></svg></span></button></span></div><=
span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:=
r272:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"=
 class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px]=
 hover:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-=
0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md=
 h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"=
24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M1=
9.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241=
.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836=
 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.2=
69-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.5=
06-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.=
001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2=
.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.37=
3 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754=
-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.3=
25 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.=
5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3=
.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.50=
3-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 =
2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span =
class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; widt=
h: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" he=
ight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token=
-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5=
.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6=
 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path><=
/svg></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></=
div></div></div></div></div></div><div class=3D"w-full text-token-text-prim=
ary" dir=3D"auto" data-testid=3D"conversation-turn-80" data-scroll-anchor=
=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto=
 md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base=
 juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"=
aaa2c304-4c27-455e-a36c-76622265ab21" dir=3D"auto" class=3D"min-h-[20px] te=
xt-message flex flex-col items-start whitespace-pre-wrap break-words [.text=
-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><d=
iv class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:ite=
ms-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 =
py-2.5 dark:bg-token-main-surface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def load_additional_images(self):
        left_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=A2=8C.png").resize((66, 102), Image.Resampling.LANCZOS)
        right_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=9A=B0.png").resize((66, 93), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D"=
#FFFFFF")
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D230, y=3D22)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D"#FFFFFF")
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D469, y=3D23)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=ED=95=A0=EB=95=8C pw=EC=97=90 =EC=95=
=84=EB=AC=B4=EA=B2=83=EB=8F=84 =EC=A0=81=EC=A7=80 =EC=95=8A=EC=9C=BC=EB=A9=
=B4 =EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=EB=A0=A5=ED=95=
=B4=EB=8B=AC=EB=9D=BC=EB=8A=94 =EB=A9=94=EC=84=B8=EC=A7=80 =EC=B6=9C=EB=A0=
=A5=ED=95=98=EA=B3=A0 =ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=ED=95=A0=EC=88=
=98 =EC=97=86=EA=B2=8C =ED=95=B4=EC=A4=98<div class=3D"absolute bottom-0 ri=
ght-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 item=
s-center justify-center rounded-full text-token-text-secondary transition h=
over:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.=
293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.=
736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.3=
86 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.=
586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rul=
e=3D"evenodd"></path></svg></button></span></div></div></div></div></div></=
div></div></div></div></div><div class=3D"w-full text-token-text-primary" d=
ir=3D"auto" data-testid=3D"conversation-turn-81" data-scroll-anchor=3D"fals=
e"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5=
 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:g=
ap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div cl=
ass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"p=
t-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center =
justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"e8ec0e85-1477-424b-8a49-463601729233" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=ED=95=A0 =EB=95=8C =EB=
=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=EB=A0=A5=ED=95=98=EC=
=A7=80 =EC=95=8A=EC=9C=BC=EB=A9=B4 =EA=B2=BD=EA=B3=A0 =EB=A9=94=EC=8B=9C=EC=
=A7=80=EB=A5=BC =EC=B6=9C=EB=A0=A5=ED=95=98=EA=B3=A0 =ED=9A=8C=EC=9B=90=EA=
=B0=80=EC=9E=85=EC=9D=84 =EC=A7=84=ED=96=89=ED=95=98=EC=A7=80 =EC=95=8A=EB=
=8F=84=EB=A1=9D =EA=B8=B0=EB=8A=A5=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=9C =EC=
=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-g=
ray-950 rounded-md border-[0.5px] border-token-border-medium"><div class=3D=
"flex items-center relative text-token-text-secondary bg-token-main-surface=
-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>=
python</span><div class=3D"flex items-center"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://=
www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 =
0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 =
3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1=
V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 =
0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=
=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overf=
low-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-=
pre hljs language-python"><span class=3D"hljs-keyword">import</span> import=
lib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C =
<code>SignUp</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90 =EB=B9=84=EB=B0=80=
=EB=B2=88=ED=98=B8 =EC=9E=85=EB=A0=A5 =EC=97=AC=EB=B6=80=EB=A5=BC =ED=99=95=
=EC=9D=B8=ED=95=98=EB=8A=94 =EB=A1=9C=EC=A7=81=EC=9D=84 =EC=B6=94=EA=B0=80=
=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=
=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=9D=80 =EA=B2=BD=
=EC=9A=B0 =EA=B2=BD=EA=B3=A0 =EB=A9=94=EC=8B=9C=EC=A7=80=EB=A5=BC =ED=91=9C=
=EC=8B=9C=ED=95=98=EA=B3=A0, =ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=84 =
=EC=A7=84=ED=96=89=ED=95=98=EC=A7=80 =EC=95=8A=EB=8F=84=EB=A1=9D =ED=96=88=
=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 =
flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-sta=
rt rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:b=
order md:border-token-border-light md:hidden"><div class=3D"flex items-cent=
er"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text=
-token-text-secondary hover:bg-token-main-surface-secondary"><span class=3D=
"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7=
.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776=
 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6757=
2 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.8=
1069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.414=
2 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7=
.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C2=
0.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.104=
2 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 1=
7.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9=
638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458=
 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.=
35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.015=
6 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 1=
7.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5=
455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 =
12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.=
3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></=
button></span><span class=3D"" data-state=3D"closed"><button class=3D"round=
ed-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><spa=
n class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg></span></button></span><div class=3D"flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg=
-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-=
center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C1=
1.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6=
271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 1=
2.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H1=
8.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18=
.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961Z=
M14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.473=
8C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9=
.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.37=
82C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 1=
3.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 =
4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4=
 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045=
Z" fill=3D"currentColor"></path></svg></span></button></span></div><span cl=
ass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r27a:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-82" data-scroll-anchor=3D"fa=
lse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px=
-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice=
:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2f2=
ec-bef5-409d-9c63-cdd4548dff47" dir=3D"auto" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start whitespace-pre-wrap break-words [.text-messa=
ge+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cla=
ss=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-sta=
rt"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5=
 dark:bg-token-main-surface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def load_additional_images(self):
        left_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=A2=8C.png").resize((66, 102), Image.Resampling.LANCZOS)
        right_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=9A=B0.png").resize((66, 93), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D"=
#FFFFFF")
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D230, y=3D22)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D"#FFFFFF")
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D469, y=3D23)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            if len(password) =3D=3D 0:
                messagebox.showinfo("=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =
=EB=AF=B8=EA=B8=B0=EC=9E=85", "=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=
=BC =EC=9E=85=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=99=84=EB=A3=8C =EB=A9=94=EC=84=B8=
=EC=A7=80=EA=B0=80 =EB=82=98=EC=98=A8=EB=92=A4 =EB=8B=A4=EC=8B=9C =EC=9E=90=
=EB=8F=99=EC=9C=BC=EB=A1=9C =EB=A1=9C=EA=B7=B8=EC=9D=B8=ED=8E=98=EC=9D=B4=
=EC=A7=80=EB=A1=9C =EC=9D=B4=EB=8F=99=ED=95=98=EA=B2=8C =EC=BD=94=EB=93=9C=
=EC=A7=9C=EC=A4=98<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 =
hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data=
-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-center=
 rounded-full text-token-text-secondary transition hover:bg-token-main-surf=
ace-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6=
.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1=
.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838=
 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 =
6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></=
svg></button></span></div></div></div></div></div></div></div></div></div><=
/div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=
=3D"conversation-turn-83" data-scroll-anchor=3D"false"><div class=3D"py-2 j=
uice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div =
class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:=
max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 fl=
ex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div =
class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow=
-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounde=
d-sm flex items-center justify-center bg-token-main-surface-primary text-to=
ken-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41=
 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" r=
ole=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324=
 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37=
.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C=
30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94=
125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1=
708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4466=
6 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0=
087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7216=
98 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2=
.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3=
138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 =
37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.=
6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.832=
1 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 3=
3.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.775=
2 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38=
.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2=
733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 3=
1.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.55=
63 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 2=
1.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.388=
9C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37=
.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49=
804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C=
13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408=
 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.=
7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.749=
7C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 3=
2.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1=
9885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351=
 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.=
84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.515=
5 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23=
.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.306=
24 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C=
25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.=
4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606=
 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.=
8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.664=
1C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32=
.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556Z=
M35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.=
2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948=
 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11=
.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.17=
19 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 =
31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.=
8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.87=
52 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 =
10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.=
9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2186=
9 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.=
85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.702=
5 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 1=
4.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9=
975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor">=
</path></svg></div></div></div></div></div><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-=
col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div =
data-message-author-role=3D"assistant" data-message-id=3D"0425b7e6-4922-4ed=
c-8e42-1a9196eabdd6" dir=3D"auto" class=3D"min-h-[20px] text-message flex f=
lex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:m=
t-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex =
w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=
=3D"markdown prose w-full break-words dark:prose-invert light"><p>=ED=9A=8C=
=EC=9B=90=EA=B0=80=EC=9E=85 =EC=99=84=EB=A3=8C =EB=A9=94=EC=8B=9C=EC=A7=80=
=EA=B0=80 =EB=82=98=EC=98=A8 =ED=9B=84 =EC=9E=90=EB=8F=99=EC=9C=BC=EB=A1=9C=
 =EB=A1=9C=EA=B7=B8=EC=9D=B8 =ED=8E=98=EC=9D=B4=EC=A7=80=EB=A1=9C =EC=9D=B4=
=EB=8F=99=ED=95=98=EB=8F=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=
=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>messagebox.showinfo</c=
ode>=EC=9D=98 =ED=9B=84=EC=86=8D =EC=9E=91=EC=97=85=EC=9C=BC=EB=A1=9C =EB=
=A1=9C=EA=B7=B8=EC=9D=B8 =ED=8E=98=EC=9D=B4=EC=A7=80=EB=A1=9C =EC=9D=B4=EB=
=8F=99=ED=95=98=EB=8A=94 =EA=B8=B0=EB=8A=A5=EC=9D=84 =EC=B6=94=EA=B0=80=ED=
=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 r=
ounded-md border-[0.5px] border-token-border-medium"><div class=3D"flex ite=
ms-center relative text-token-text-secondary bg-token-main-surface-secondar=
y px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</s=
pan><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"=
><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/=
2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cl=
ass=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5=
a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0=
 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 =
0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-=
9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=
=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-=
4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs lang=
uage-python"><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D tk.Entry(bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>messagebox.showinfo</code> =EC=9D=B4=ED=9B=84=EC=97=90 <cod=
e>self.SwitchToLoginPage()</code>=EB=A5=BC =ED=98=B8=EC=B6=9C=ED=95=98=EC=
=97=AC =ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5 =EB=A9=94=EC=
=8B=9C=EC=A7=80=EA=B0=80 =ED=91=9C=EC=8B=9C=EB=90=9C =ED=9B=84 =EC=9E=90=EB=
=8F=99=EC=9C=BC=EB=A1=9C =EB=A1=9C=EA=B7=B8=EC=9D=B8 =ED=8E=98=EC=9D=B4=EC=
=A7=80=EB=A1=9C =EC=9D=B4=EB=8F=99=ED=95=98=EA=B2=8C =ED=96=88=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 e=
mpty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-x=
l p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:bor=
der-token-border-light md:hidden"><div class=3D"flex items-center"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-=
secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30p=
x] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.4912=
9 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V1=
5C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10=
.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701=
C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.8=
1069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.343=
15 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.093=
13 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12=
.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.86=
95 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C=
20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.9=
8627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.79=
94 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18=
.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.56=
04C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 =
14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4=
996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218=
 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></spa=
n><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-t=
oken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"f=
lex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1=
-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 =
1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1=
 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span><=
/button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify=
-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466=
 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19=
.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 =
9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614=
 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.00=
45C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2=
9589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.7=
46 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C=
9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5=
002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376=
 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V=
5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.447=
72 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"cur=
rentColor"></path></svg></span></button></span></div><span class=3D"" data-=
state=3D"closed"><button type=3D"button" id=3D"radix-:r27i:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-84" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa2ea68-c9d5-4876-98=
1d-31b1a0c05c4a" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.load_additional_images()

        self.NicknameEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0)
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#000716", h=
ighlightthickness=3D0)
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D tk.Entry(bd=3D0, bg=3D"#CCCCCC", fg=3D"#0007=
16", highlightthickness=3D0, show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def load_additional_images(self):
        left_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=A2=8C.png").resize((66, 102), Image.Resampling.LANCZOS)
        right_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=9A=B0.png").resize((66, 93), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D"=
#FFFFFF")
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D230, y=3D22)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D"#FFFFFF")
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D469, y=3D23)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            if len(password) =3D=3D 0:
                messagebox.showinfo("=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =
=EB=AF=B8=EA=B8=B0=EC=9E=85", "=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=
=BC =EC=9E=85=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            self.SwitchToLoginPage()

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C =EC=A2=80 =EB=B0=94=EA=BF=80=EB=A7=8C=
=ED=95=9C =EC=9D=B4=EC=81=9C =EB=94=94=EC=9E=90=EC=9D=B8 =EC=97=86=EC=96=B4=
?<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 =
group-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"=
><button class=3D"flex h-9 w-9 items-center justify-center rounded-full tex=
t-token-text-secondary transition hover:bg-token-main-surface-tertiary"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7=
.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5=
 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355=
 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536=
 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></sp=
an></div></div></div></div></div></div></div></div></div></div><div class=
=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversatio=
n-turn-85" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] =
px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-aut=
o flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:ma=
x-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col rel=
ative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-=
bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden rounded=
-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items=
-center justify-center bg-token-main-surface-primary text-token-text-primar=
y h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><te=
xt x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.980=
8 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 3=
6.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941=
 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3=
6341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14=
.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4781=
5C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.=
0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94=
4492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 =
2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.=
1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789=
 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21=
.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.57=
72C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 =
32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.845=
8 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 3=
7.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.=
1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 =
31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5=
549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 =
21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.37=
5 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 3=
7.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5=
5718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408=
 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.724=
8L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24=
.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.74=
16 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 =
31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.=
19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2533=
4 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L1=
8.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.51=
73C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 2=
2.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29=
707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872=
 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12=
.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.319=
4 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35=
.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.59=
47 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 3=
2.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.012=
8C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.=
1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.796=
3 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 1=
1.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4=
053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077=
 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12=
.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8=
576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254=
 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12=
.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.994=
64 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4=
.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.53=
66 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L=
14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.=
4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></=
div></div></div></div></div><div class=3D"group/conversation-turn relative =
flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:ga=
p-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-au=
thor-role=3D"assistant" data-message-id=3D"b5242802-31d3-4dfd-ae2d-28028a31=
b9c6" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-s=
tart whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-ful=
l juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col=
 gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown pros=
e w-full break-words dark:prose-invert light"><p>=EC=9E=85=EB=A0=A5 =ED=95=
=84=EB=93=9C=EC=9D=98 =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EB=8D=94 =EC=84=
=B8=EB=A0=A8=EB=90=98=EA=B3=A0 =ED=98=84=EB=8C=80=EC=A0=81=EC=9C=BC=EB=A1=
=9C =EB=A7=8C=EB=93=A4=EA=B8=B0 =EC=9C=84=ED=95=B4 =EB=AA=87 =EA=B0=80=EC=
=A7=80 =EB=B3=80=ED=99=94=EB=A5=BC =EC=A0=81=EC=9A=A9=ED=95=A0 =EC=88=98 =
=EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4=
 <code>ttk.Entry</code> =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=
=95=98=EA=B3=A0, =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=B6=94=EA=B0=80=ED=
=95=98=EC=97=AC =EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A7=95=ED=
=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=97=AC=EA=B8=B0=
=EC=97=90 =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EC=99=80 =EB=8D=94=
 =EB=82=98=EC=9D=80 =EC=83=89 =EC=A1=B0=ED=95=A9=EC=9D=84 =EC=A0=9C=EA=B3=
=B5=ED=95=98=EB=8A=94 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=81=EC=9A=
=A9=ED=95=A0 =EC=88=98 =EC=9E=88=EB=8A=94 =EC=98=88=EC=A0=9C=EB=A5=BC =EC=
=B6=94=EA=B0=80=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><=
pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-b=
order-medium"><div class=3D"flex items-center relative text-token-text-seco=
ndary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-b=
etween rounded-t-md"><span>python</span><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentCo=
lor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 =
0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 =
0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1=
 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"=
></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></=
div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><cod=
e class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keywor=
d">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.style =3D ttk.Style()
        self.style.configure(<span class=3D"hljs-string">"TEntry"</span>, p=
adding=3D<span class=3D"hljs-number">10</span>, relief=3D<span class=3D"hlj=
s-string">"flat"</span>, background=3D<span class=3D"hljs-string">"#CCCCCC"=
</span>, foreground=3D<span class=3D"hljs-string">"#000716"</span>)

        self.load_additional_images()

        self.NicknameEntry =3D ttk.Entry(style=3D<span class=3D"hljs-string=
">"TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D ttk.Entry(style=3D<span class=3D"hljs-string">"TEn=
try"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D ttk.Entry(style=3D<span class=3D"hljs-string=
">"TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=97=AC=EA=B8=B0=EC=84=9C <code>ttk.Entry</co=
de>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=8D=94 =ED=98=84=EB=8C=
=80=EC=A0=81=EC=9D=B8 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EB=A7=
=8C=EB=93=A4=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>self.style.configur=
e</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=
=EC=97=AC =ED=8C=A8=EB=94=A9=EA=B3=BC =EB=B0=B0=EA=B2=BD=EC=83=89, =EC=A0=
=84=EA=B2=BD=EC=83=89=EC=9D=84 =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. =EC=9D=B4 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EB=AA=A8=EB=
=93=A0 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EC=97=90 =EC=A0=81=EC=9A=A9=ED=
=95=98=EC=97=AC =EB=8D=94 =EC=9D=BC=EA=B4=80=EB=90=9C =EB=94=94=EC=9E=90=EC=
=9D=B8=EC=9D=84 =EC=A0=9C=EA=B3=B5=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4 =
=EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EB=8D=94 =EC=BB=A4=EC=8A=A4=ED=84=B0=
=EB=A7=88=EC=9D=B4=EC=A6=88=ED=95=A0 =EC=88=98=EB=8F=84 =EC=9E=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-=
3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounde=
d-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:=
border-token-border-light md:hidden"><div class=3D"flex items-center"><span=
 class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-te=
xt-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[=
30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.=
49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.000=
05V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.262=
9L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.0=
6701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403=
 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2=
.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6=
.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.999=
6 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 2=
0.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1=
962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064=
 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM1=
5.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.1859=
3 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 1=
5.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4=
632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C=
16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.2=
3218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button><=
/span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r27q:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-86" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa297d8-f288-42=
10-8aee-2d5112f8f2c1" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">ttk entry=EC=9D=98 style=EC=9D=80 =EC=96=B4=EB=
=96=A4=EA=B2=83=EB=93=A4=EC=9D=B4 =EC=9E=88=EA=B3=A0 =EC=96=B4=EB=96=A4=EB=
=94=94=EC=9E=90=EC=9D=B8=EC=9D=B8=EC=A7=80 =EC=84=A4=EB=AA=85=ED=95=B4=EB=
=B4=90<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 =
pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-ful=
l text-token-text-secondary transition hover:bg-token-main-surface-tertiary=
"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-=
1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.=
736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 =
3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a=
2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button=
></span></div></div></div></div></div></div></div></div></div></div><div cl=
ass=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversa=
tion-turn-87" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18p=
x] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-=
auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col =
relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"giz=
mo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden roun=
ded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex it=
ems-center justify-center bg-token-main-surface-primary text-token-text-pri=
mary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img">=
<text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.=
9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9107=
6 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62=
941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 =
1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044=
 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4=
7815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 =
11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0=
.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.90=
26 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 =
34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9=
789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144=
 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38=
.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.81=
67 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.=
8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.454=
4 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 =
36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.10=
03 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 2=
6.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.96=
56 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32=
.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.497=
8 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C=
5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8=
408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.=
7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556=
C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34=
.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.392=
27 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327=
C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2=
5334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.940=
4L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28=
.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3213=
5 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4=
.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4=
872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111=
 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.=
3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432=
 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30=
.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.732=
8 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.=
0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 =
10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.=
7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.083=
7 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C2=
5.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78=
077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826=
 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C1=
0.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9=
254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696=
C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.=
99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.042=
7 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14=
.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.71=
75L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L=
20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg=
></div></div></div></div></div><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md=
:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message=
-author-role=3D"assistant" data-message-id=3D"01634e2a-35d2-4d08-abe8-6920a=
a74cc0b" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col item=
s-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-=
full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-=
col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown p=
rose w-full break-words dark:prose-invert light"><p><code>ttk.Entry</code> =
=EC=9C=84=EC=A0=AF=EC=9D=98 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=80 <code>ttk.=
Style</code> =ED=81=B4=EB=9E=98=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=
=98=EC=97=AC =EA=B5=AC=EC=84=B1=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. <code>ttk.Style</code>=EC=9D=80 =EB=8B=A4=EC=96=91=ED=95=9C =
=EC=8A=A4=ED=83=80=EC=9D=BC =EC=98=B5=EC=85=98=EC=9D=84 =EC=A0=9C=EA=B3=B5=
=ED=95=98=EB=A9=B0, =EC=9D=B4=EB=A5=BC =ED=86=B5=ED=95=B4 =EC=9E=85=EB=A0=
=A5 =ED=95=84=EB=93=9C=EC=9D=98 =EB=AA=A8=EC=96=91=EA=B3=BC =EB=8A=90=EB=82=
=8C=EC=9D=84 =EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A6=88=ED=95=
=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=97=AC=EA=B8=B0 =EB=
=AA=87 =EA=B0=80=EC=A7=80 =EC=A3=BC=EC=9A=94 =EC=8A=A4=ED=83=80=EC=9D=BC =
=EC=98=B5=EC=85=98=EA=B3=BC =EA=B7=B8 =EC=84=A4=EB=AA=85=EC=9D=84 =EC=98=88=
=EC=8B=9C=EC=99=80 =ED=95=A8=EA=BB=98 =EC=84=A4=EB=AA=85=ED=95=A9=EB=8B=88=
=EB=8B=A4:</p><h3>1. Background (<code>background</code>)</h3><ul><li><stro=
ng>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EC=9D=
=98 =EB=B0=B0=EA=B2=BD =EC=83=89=EC=83=81=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=
=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=88=EC=8B=9C</strong>:<pre><di=
v class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-m=
edium"><div class=3D"flex items-center relative text-token-text-secondary b=
g-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between =
rounded-t-md"><span>python</span><div class=3D"flex items-center"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3=
h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3=
v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 =
1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path=
></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><di=
v class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python">style.configure(<span class=3D"hl=
js-string">'TEntry'</span>, background=3D<span class=3D"hljs-string">'#CCCC=
CC'</span>)
</code></div></div></pre></li></ul><h3>2. Foreground (<code>foreground</cod=
e>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =ED=
=95=84=EB=93=9C =EB=82=B4 =ED=85=8D=EC=8A=A4=ED=8A=B8=EC=9D=98 =EC=83=89=EC=
=83=81=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><str=
ong>=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark bg-gray-950 rounded=
-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-cen=
ter relative text-token-text-secondary bg-token-main-surface-secondary px-4=
 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span><d=
iv class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0=
 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3=
v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h=
-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 =
0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=
=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text=
-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-p=
ython">style.configure(<span class=3D"hljs-string">'TEntry'</span>, foregro=
und=3D<span class=3D"hljs-string">'#000000'</span>)
</code></div></div></pre></li></ul><h3>3. Padding (<code>padding</code>)</h=
3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =ED=95=84=
=EB=93=9C =EB=82=B4=EB=B6=80=EC=99=80 =ED=85=8D=EC=8A=A4=ED=8A=B8 =EC=82=AC=
=EC=9D=B4=EC=9D=98 =EC=97=AC=EB=B0=B1=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=
=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=88=EC=8B=9C</strong>:<pre><div c=
lass=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medi=
um"><div class=3D"flex items-center relative text-token-text-secondary bg-t=
oken-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rou=
nded-t-md"><span>python</span><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-=
2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5=
h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 =
0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path><=
/svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div =
class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python">style.configure(<span class=3D"hl=
js-string">'TEntry'</span>, padding=3D<span class=3D"hljs-number">5</span>)
</code></div></div></pre></li></ul><h3>4. Border Width (<code>borderwidth</=
code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =
=ED=95=84=EB=93=9C=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=
=EB=A5=BC =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=
=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark bg-gray-950 rounded-md =
border-[0.5px] border-token-border-medium"><div class=3D"flex items-center =
relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-=
2 text-xs font-sans justify-between rounded-t-md"><span>python</span><div c=
lass=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" =
width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ico=
n-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1=
 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a=
3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1=
 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 =
0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=
=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-le=
ft undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-pyth=
on">style.configure(<span class=3D"hljs-string">'TEntry'</span>, borderwidt=
h=3D<span class=3D"hljs-number">2</span>)
</code></div></div></pre></li></ul><h3>5. Relief (<code>relief</code>)</h3>=
<ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =ED=95=84=
=EB=93=9C=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC =EC=8A=A4=ED=83=80=EC=9D=BC=
=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4. =EA=B0=80=EB=8A=A5=
=ED=95=9C =EA=B0=92=EC=9D=80 <code>flat</code>, <code>raised</code>, <code>=
sunken</code>, <code>solid</code>, <code>ridge</code>, <code>groove</code>=
=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=88=
=EC=8B=9C</strong>:<pre><div class=3D"dark bg-gray-950 rounded-md border-[0=
.5px] border-token-border-medium"><div class=3D"flex items-center relative =
text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs=
 font-sans justify-between rounded-t-md"><span>python</span><div class=3D"f=
lex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"f=
lex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 =
3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1=
 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-=
1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" c=
lip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</bu=
tton></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefin=
ed" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python">style.=
configure(<span class=3D"hljs-string">'TEntry'</span>, relief=3D<span class=
=3D"hljs-string">'flat'</span>)
</code></div></div></pre></li></ul><h3>6. Font (<code>font</code>)</h3><ul>=
<li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=
=9C =EB=82=B4 =ED=85=8D=EC=8A=A4=ED=8A=B8=EC=9D=98 =ED=8F=B0=ED=8A=B8 =EC=
=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=
=8B=A4.</li><li><strong>=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark=
 bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div cla=
ss=3D"flex items-center relative text-token-text-secondary bg-token-main-su=
rface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><=
span>python</span><div class=3D"flex items-center"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1=
-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 =
1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1=
 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=
=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"ov=
erflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespa=
ce-pre hljs language-python">style.configure(<span class=3D"hljs-string">'T=
Entry'</span>, font=3D(<span class=3D"hljs-string">'Helvetica'</span>, <spa=
n class=3D"hljs-number">12</span>))
</code></div></div></pre></li></ul><h3>7. Field Background (<code>fieldback=
ground</code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=
=EB=A0=A5 =ED=95=84=EB=93=9C=EC=9D=98 =ED=99=9C=EC=84=B1=ED=99=94=EB=90=9C =
=EC=98=81=EC=97=AD =EB=B0=B0=EA=B2=BD =EC=83=89=EC=83=81=EC=9D=84 =EC=A7=80=
=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=88=EC=8B=9C</s=
trong>:<pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border=
-token-border-medium"><div class=3D"flex items-center relative text-token-t=
ext-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans j=
ustify-between rounded-t-md"><span>python</span><div class=3D"flex items-ce=
nter"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 it=
ems-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D=
"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 =
3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 =
2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1=
 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=
=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></s=
pan></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python">style.configu=
re(<span class=3D"hljs-string">'TEntry'</span>, fieldbackground=3D<span cla=
ss=3D"hljs-string">'#FFFFFF'</span>)
</code></div></div></pre></li></ul><h3>8. Insert Background (<code>insertba=
ckground</code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=
=EB=A0=A5 =ED=95=84=EB=93=9C=EC=9D=98 =EC=BB=A4=EC=84=9C =EC=83=89=EC=83=81=
=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=
=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark bg-gray-950 rounded-md =
border-[0.5px] border-token-border-medium"><div class=3D"flex items-center =
relative text-token-text-secondary bg-token-main-surface-secondary px-4 py-=
2 text-xs font-sans justify-between rounded-t-md"><span>python</span><div c=
lass=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" =
width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ico=
n-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1=
 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a=
3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1=
 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 =
0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=
=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-le=
ft undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-pyth=
on">style.configure(<span class=3D"hljs-string">'TEntry'</span>, insertback=
ground=3D<span class=3D"hljs-string">'#000000'</span>)
</code></div></div></pre></li></ul><h3>9. Insert Width (<code>insertwidth</=
code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =EC=9E=85=EB=A0=A5 =
=ED=95=84=EB=93=9C=EC=9D=98 =EC=BB=A4=EC=84=9C =EB=84=88=EB=B9=84=EB=A5=BC =
=EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EC=98=88=EC=
=8B=9C</strong>:<pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5p=
x] border-token-border-medium"><div class=3D"flex items-center relative tex=
t-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs fo=
nt-sans justify-between rounded-t-md"><span>python</span><div class=3D"flex=
 items-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0=
 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-=
3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1=
zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip=
-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</butto=
n></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined"=
 dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python">style.con=
figure(<span class=3D"hljs-string">'TEntry'</span>, insertwidth=3D<span cla=
ss=3D"hljs-number">2</span>)
</code></div></div></pre></li></ul><h3>10. Select Background (<code>selectb=
ackground</code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =ED=85=
=8D=EC=8A=A4=ED=8A=B8 =EC=84=A0=ED=83=9D =EC=8B=9C =EB=B0=B0=EA=B2=BD =EC=
=83=89=EC=83=81=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</li=
><li><strong>=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark bg-gray-95=
0 rounded-md border-[0.5px] border-token-border-medium"><div class=3D"flex =
items-center relative text-token-text-secondary bg-token-main-surface-secon=
dary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python=
</span><div class=3D"flex items-center"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 =
0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0=
 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-=
1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =
=EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto=
 p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs l=
anguage-python">style.configure(<span class=3D"hljs-string">'TEntry'</span>=
, selectbackground=3D<span class=3D"hljs-string">'#3399FF'</span>)
</code></div></div></pre></li></ul><h3>11. Select Foreground (<code>selectf=
oreground</code>)</h3><ul><li><strong>=EC=84=A4=EB=AA=85</strong>: =ED=85=
=8D=EC=8A=A4=ED=8A=B8 =EC=84=A0=ED=83=9D =EC=8B=9C =ED=85=8D=EC=8A=A4=ED=8A=
=B8 =EC=83=89=EC=83=81=EC=9D=84 =EC=A7=80=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=
=A4.</li><li><strong>=EC=98=88=EC=8B=9C</strong>:<pre><div class=3D"dark bg=
-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div class=
=3D"flex items-center relative text-token-text-secondary bg-token-main-surf=
ace-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><sp=
an>python</span><div class=3D"flex items-center"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0=
 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3=
 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-=
1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1=
 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=
=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overf=
low-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-=
pre hljs language-python">style.configure(<span class=3D"hljs-string">'TEnt=
ry'</span>, selectforeground=3D<span class=3D"hljs-string">'#FFFFFF'</span>=
)
</code></div></div></pre></li></ul><h2>=EC=A0=84=EC=B2=B4 =EC=98=88=EC=8B=
=9C</h2><p>=EC=9D=B4=EC=A0=9C =EC=9C=84=EC=9D=98 =EC=8A=A4=ED=83=80=EC=9D=
=BC =EC=98=B5=EC=85=98=EB=93=A4=EC=9D=84 =EC=A1=B0=ED=95=A9=ED=95=98=EC=97=
=AC, <code>ttk.Entry</code> =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=84=A4=
=EC=A0=95=ED=95=98=EB=8A=94 =EC=98=88=EC=8B=9C =EC=BD=94=EB=93=9C=EB=A5=BC =
=EB=B3=B4=EC=97=AC=EB=93=9C=EB=A6=AC=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4:</=
p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-toke=
n-border-medium"><div class=3D"flex items-center relative text-token-text-s=
econdary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justif=
y-between rounded-t-md"><span>python</span><div class=3D"flex items-center"=
><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-c=
enter"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curren=
tColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3=
 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3=
 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 =
0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"eveno=
dd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div=
></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><=
code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-key=
word">import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>StyledEntryExample</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.title(<span class=3D"hljs-string">"Styled Entry Example"</span=
>)
        self.geometry(<span class=3D"hljs-string">"300x150"</span>)

        style =3D ttk.Style()
        style.configure(
            <span class=3D"hljs-string">'Custom.TEntry'</span>,
            background=3D<span class=3D"hljs-string">'#CCCCCC'</span>,
            foreground=3D<span class=3D"hljs-string">'#000000'</span>,
            padding=3D<span class=3D"hljs-number">10</span>,
            borderwidth=3D<span class=3D"hljs-number">2</span>,
            relief=3D<span class=3D"hljs-string">'flat'</span>,
            font=3D(<span class=3D"hljs-string">'Helvetica'</span>, <span c=
lass=3D"hljs-number">12</span>),
            fieldbackground=3D<span class=3D"hljs-string">'#FFFFFF'</span>,
            insertbackground=3D<span class=3D"hljs-string">'#000000'</span>=
,
            insertwidth=3D<span class=3D"hljs-number">2</span>,
            selectbackground=3D<span class=3D"hljs-string">'#3399FF'</span>=
,
            selectforeground=3D<span class=3D"hljs-string">'#FFFFFF'</span>
        )

        entry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string">'Cust=
om.TEntry'</span>)
        entry.pack(padx=3D<span class=3D"hljs-number">20</span>, pady=3D<sp=
an class=3D"hljs-number">20</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D StyledEntryExample()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EB=8A=94 <code>Cus=
tom.TEntry</code> =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=
=ED=95=98=EA=B3=A0 =EC=9D=B4=EB=A5=BC <code>ttk.Entry</code>=EC=97=90 =EC=
=A0=81=EC=9A=A9=ED=95=98=EC=97=AC =EB=8D=94 =EC=84=B8=EB=A0=A8=EB=90=9C =EB=
=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EC=A0=9C=EA=B3=B5=ED=95=A9=EB=8B=88=EB=
=8B=A4. =EC=8A=A4=ED=83=80=EC=9D=BC =EC=98=B5=EC=85=98=EC=9D=84 =EC=A1=B0=
=EC=A0=95=ED=95=98=EC=97=AC =ED=95=84=EC=9A=94=EC=97=90 =EB=94=B0=EB=9D=BC =
=EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A6=88=ED=95=A0 =EC=88=98 =
=EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=
=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center ju=
stify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:abso=
lute md:border md:border-token-border-light md:hidden"><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounde=
d-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span=
 class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L=
6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 =
3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.09=
38 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.=
9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.26=
55 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.=
00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 =
6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.99=
96 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C=
21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.=
6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.999=
6 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 2=
0.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.099=
47C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 =
14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.=
5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113=
 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.=
85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg>=
</span></button></span><span class=3D"" data-state=3D"closed"><button class=
=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-second=
ary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentCol=
or" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0=
 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0=
 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 =
1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd">=
</path></svg></span></button></span><div class=3D"flex"><span class=3D"" da=
ta-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary h=
over:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px]=
 items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21=
.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.959=
58 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.=
37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29=
589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.661=
4 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 2=
1.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273=
 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13=
.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.0113=
1 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13=
.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 1=
4.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18=
.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H=
17.0045Z" fill=3D"currentColor"></path></svg></span></button></span></div><=
span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:=
r28d:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed"=
 class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px]=
 hover:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-=
0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md=
 h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"=
24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M1=
9.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241=
.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836=
 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.2=
69-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.5=
06-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.=
001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2=
.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.37=
3 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754=
-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.3=
25 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.=
5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3=
.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.50=
3-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 =
2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span =
class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; widt=
h: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" he=
ight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token=
-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5=
.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6=
 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path><=
/svg></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></=
div></div></div></div></div></div><div class=3D"w-full text-token-text-prim=
ary" dir=3D"auto" data-testid=3D"conversation-turn-88" data-scroll-anchor=
=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto=
 md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base=
 juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"=
aaa2eb36-86fe-4658-ab7c-86f4622ed221" dir=3D"auto" class=3D"min-h-[20px] te=
xt-message flex flex-col items-start whitespace-pre-wrap break-words [.text=
-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><d=
iv class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:ite=
ms-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 =
py-2.5 dark:bg-token-main-surface-secondary">style =3D "Tentry" =EC=9D=B4=
=EA=B1=B0 =EC=97=90=EC=84=9C tentry=EB=A7=90=EA=B3=A0 =EB=98=90 =EB=AD=90 =
=EC=9E=88=EC=96=B4?<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5=
 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-cente=
r rounded-full text-token-text-secondary transition hover:bg-token-main-sur=
face-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 =
1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.1=
5-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.=
838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.4=
14 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></div></div></div></div></div></div></di=
v></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-tes=
tid=3D"conversation-turn-89" data-scroll-anchor=3D"false"><div class=3D"py-=
2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><d=
iv class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 =
md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0=
 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><d=
iv class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overf=
low-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rou=
nded-sm flex items-center justify-center bg-token-main-surface-primary text=
-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0=
 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md=
" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5=
324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744=
 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.49=
85C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1=
.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C1=
6.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4=
4666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 1=
0.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7=
21698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.475=
9 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 3=
2.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.89=
07 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C=
19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.=
8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.502=
7 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.=
7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517=
 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 3=
7.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.900=
4 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26=
.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.954=
1 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.=
3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838=
 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5=
.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.72=
48C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8=
408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 =
24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.=
7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3878=
5 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 =
8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19=
351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267=
 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.=
5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046=
 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.=
30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.49=
81C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 =
12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6=
606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 =
36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.=
6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586=
 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.05=
56ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 =
10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9=
948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753=
 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24=
.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.315=
89 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 =
10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10=
.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.94=
41 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 =
11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2=
1869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034=
 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.=
7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.487=
7 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 1=
7.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColo=
r"></path></svg></div></div></div></div></div><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"ad137e2b-4502-=
438c-a55f-07894dcc2343" dir=3D"auto" class=3D"min-h-[20px] text-message fle=
x flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;=
]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"fl=
ex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div clas=
s=3D"markdown prose w-full break-words dark:prose-invert light"><p><code>tt=
k</code> =EC=9C=84=EC=A0=AF =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=
=EC=9D=98=ED=95=A0 =EB=95=8C, <code>TEntry</code> =EC=99=B8=EC=97=90=EB=8F=
=84 =EB=8B=A4=EB=A5=B8 =EB=A7=8E=EC=9D=80 <code>ttk</code> =EC=9C=84=EC=A0=
=AF=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EA=B0=81 =EC=9C=84=EC=
=A0=AF=EC=97=90=EB=8A=94 =EA=B8=B0=EB=B3=B8 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=
=9D=B4 =EC=9E=88=EC=9C=BC=EB=A9=B0, =ED=95=84=EC=9A=94=EC=97=90 =EB=94=B0=
=EB=9D=BC =EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A6=88=ED=95=A0 =
=EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=95=84=EB=9E=98=EB=8A=94=
 <code>ttk</code>=EC=97=90=EC=84=9C =EC=82=AC=EC=9A=A9=ED=95=A0 =EC=88=98 =
=EC=9E=88=EB=8A=94 =EC=A3=BC=EC=9A=94 =EC=9C=84=EC=A0=AF=EA=B3=BC =EA=B7=B8=
 =EA=B8=B0=EB=B3=B8 =EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84=EC=9E=85=
=EB=8B=88=EB=8B=A4:</p><ol><li><p><strong>TButton</strong>: =EB=B2=84=ED=8A=
=BC =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=
=A6=84: <code>"TButton"</code></li></ul></li><li><p><strong>TLabel</strong>=
: =EB=A0=88=EC=9D=B4=EB=B8=94 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=
=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TLabel"</code></li></ul></li><li><p=
><strong>TEntry</strong>: =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C =EC=9C=84=
=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>=
"TEntry"</code></li></ul></li><li><p><strong>TCombobox</strong>: =EC=BD=A4=
=EB=B3=B4=EB=B0=95=EC=8A=A4 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=
=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TCombobox"</code></li></ul></li><li=
><p><strong>TCheckbutton</strong>: =EC=B2=B4=ED=81=AC =EB=B2=84=ED=8A=BC =
=EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=
=84: <code>"TCheckbutton"</code></li></ul></li><li><p><strong>TRadiobutton<=
/strong>: =EB=9D=BC=EB=94=94=EC=98=A4 =EB=B2=84=ED=8A=BC =EC=9C=84=EC=A0=AF=
</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TRadiobu=
tton"</code></li></ul></li><li><p><strong>TFrame</strong>: =ED=94=84=EB=A0=
=88=EC=9E=84 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=
=9D=B4=EB=A6=84: <code>"TFrame"</code></li></ul></li><li><p><strong>TNotebo=
ok</strong>: =EB=85=B8=ED=8A=B8=EB=B6=81 =EC=9C=84=EC=A0=AF (=ED=83=AD =EC=
=BB=A8=ED=8A=B8=EB=A1=A4)</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=
=EB=A6=84: <code>"TNotebook"</code></li></ul></li><li><p><strong>TNotebook.=
Tab</strong>: =EB=85=B8=ED=8A=B8=EB=B6=81 =ED=83=AD</p><ul><li>=EC=8A=A4=ED=
=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TNotebook.Tab"</code></li></ul><=
/li><li><p><strong>TProgressbar</strong>: =EC=A7=84=ED=96=89 =ED=91=9C=EC=
=8B=9C=EC=A4=84 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =
=EC=9D=B4=EB=A6=84: <code>"TProgressbar"</code></li></ul></li><li><p><stron=
g>TScrollbar</strong>: =EC=8A=A4=ED=81=AC=EB=A1=A4=EB=B0=94 =EC=9C=84=EC=A0=
=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TScro=
llbar"</code></li></ul></li><li><p><strong>TSeparator</strong>: =EA=B5=AC=
=EB=B6=84=EC=84=A0 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=
=BC =EC=9D=B4=EB=A6=84: <code>"TSeparator"</code></li></ul></li><li><p><str=
ong>TSizegrip</strong>: =ED=81=AC=EA=B8=B0 =EC=A1=B0=EC=A0=88 =EA=B7=B8=EB=
=A6=BD</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TS=
izegrip"</code></li></ul></li><li><p><strong>Treeview</strong>: =ED=8A=B8=
=EB=A6=AC =EB=B7=B0 =EC=9C=84=EC=A0=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=
=BC =EC=9D=B4=EB=A6=84: <code>"Treeview"</code></li></ul></li><li><p><stron=
g>TSpinbox</strong>: =EC=8A=A4=ED=95=80=EB=B0=95=EC=8A=A4 =EC=9C=84=EC=A0=
=AF</p><ul><li>=EC=8A=A4=ED=83=80=EC=9D=BC =EC=9D=B4=EB=A6=84: <code>"TSpin=
box"</code></li></ul></li></ol><p>=EA=B0=81 <code>ttk</code> =EC=9C=84=EC=
=A0=AF=EC=9D=80 =EA=B8=B0=EB=B3=B8 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EA=
=B0=96=EA=B3=A0 =EC=9E=88=EC=9C=BC=EB=A9=B0, =EC=9D=B4=EB=A5=BC =EC=BB=A4=
=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A6=88=ED=95=98=EC=97=AC =EB=8B=A4=
=EC=96=91=ED=95=9C =EB=AA=A8=EC=96=91=EA=B3=BC =EA=B8=B0=EB=8A=A5=EC=9D=84 =
=EA=B5=AC=ED=98=84=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.=
 =EC=98=88=EB=A5=BC =EB=93=A4=EC=96=B4, =EA=B8=B0=EB=B3=B8 =EC=8A=A4=ED=83=
=80=EC=9D=BC =EC=9D=B4=EB=A6=84=EC=9D=B4 <code>TButton</code>=EC=9D=B8 =EB=
=B2=84=ED=8A=BC =EC=9C=84=EC=A0=AF=EC=9D=98 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=
=9D=84 =EB=B3=80=EA=B2=BD=ED=95=98=EB=A0=A4=EB=A9=B4, <code>TButton</code> =
=EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=88=98=EC=A0=95=ED=95=98=EB=A9=B4 =
=EB=90=A9=EB=8B=88=EB=8B=A4.</p><h3>=EC=A0=84=EC=B2=B4 =EC=98=88=EC=8B=9C</=
h3><p>=EC=95=84=EB=9E=98=EB=8A=94 =EB=8B=A4=EC=96=91=ED=95=9C <code>ttk</co=
de> =EC=9C=84=EC=A0=AF =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=
=98=ED=95=98=EA=B3=A0 =EC=82=AC=EC=9A=A9=ED=95=98=EB=8A=94 =EC=98=88=EC=8B=
=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 roun=
ded-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-=
center relative text-token-text-secondary bg-token-main-surface-secondary p=
x-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span=
><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/200=
0/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 =
3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-=
3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1=
-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1=
 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=
=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 t=
ext-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs languag=
e-python"><span class=3D"hljs-keyword">import</span> tkinter <span class=3D=
"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>StyledWidgetsExample</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.title(<span class=3D"hljs-string">"Styled Widgets Example"</sp=
an>)
        self.geometry(<span class=3D"hljs-string">"400x300"</span>)

        style =3D ttk.Style()
       =20
        <span class=3D"hljs-comment"># TButton =EC=8A=A4=ED=83=80=EC=9D=BC =
=EC=A0=95=EC=9D=98</span>
        style.configure(<span class=3D"hljs-string">'Custom.TButton'</span>=
, background=3D<span class=3D"hljs-string">'#4CAF50'</span>, foreground=3D<=
span class=3D"hljs-string">'#FFFFFF'</span>, padding=3D<span class=3D"hljs-=
number">10</span>, font=3D(<span class=3D"hljs-string">'Helvetica'</span>, =
<span class=3D"hljs-number">12</span>))

        <span class=3D"hljs-comment"># TLabel =EC=8A=A4=ED=83=80=EC=9D=BC =
=EC=A0=95=EC=9D=98</span>
        style.configure(<span class=3D"hljs-string">'Custom.TLabel'</span>,=
 background=3D<span class=3D"hljs-string">'#FFFFFF'</span>, foreground=3D<s=
pan class=3D"hljs-string">'#333333'</span>, font=3D(<span class=3D"hljs-str=
ing">'Helvetica'</span>, <span class=3D"hljs-number">14</span>))

        <span class=3D"hljs-comment"># TEntry =EC=8A=A4=ED=83=80=EC=9D=BC =
=EC=A0=95=EC=9D=98</span>
        style.configure(<span class=3D"hljs-string">'Custom.TEntry'</span>,=
 background=3D<span class=3D"hljs-string">'#CCCCCC'</span>, foreground=3D<s=
pan class=3D"hljs-string">'#000000'</span>, padding=3D<span class=3D"hljs-n=
umber">10</span>, font=3D(<span class=3D"hljs-string">'Helvetica'</span>, <=
span class=3D"hljs-number">12</span>))

        <span class=3D"hljs-comment"># TCombobox =EC=8A=A4=ED=83=80=EC=9D=
=BC =EC=A0=95=EC=9D=98</span>
        style.configure(<span class=3D"hljs-string">'Custom.TCombobox'</spa=
n>, padding=3D<span class=3D"hljs-number">10</span>, font=3D(<span class=3D=
"hljs-string">'Helvetica'</span>, <span class=3D"hljs-number">12</span>))

        <span class=3D"hljs-comment"># TCheckbutton =EC=8A=A4=ED=83=80=EC=
=9D=BC =EC=A0=95=EC=9D=98</span>
        style.configure(<span class=3D"hljs-string">'Custom.TCheckbutton'</=
span>, background=3D<span class=3D"hljs-string">'#FFFFFF'</span>, foregroun=
d=3D<span class=3D"hljs-string">'#333333'</span>, font=3D(<span class=3D"hl=
js-string">'Helvetica'</span>, <span class=3D"hljs-number">12</span>))

        <span class=3D"hljs-comment"># =EC=9C=84=EC=A0=AF =EB=B0=B0=EC=B9=
=98</span>
        ttk.Label(self, text=3D<span class=3D"hljs-string">"Styled Label"</=
span>, style=3D<span class=3D"hljs-string">'Custom.TLabel'</span>).pack(pad=
y=3D<span class=3D"hljs-number">10</span>)
        ttk.Entry(self, style=3D<span class=3D"hljs-string">'Custom.TEntry'=
</span>).pack(pady=3D<span class=3D"hljs-number">10</span>)
        ttk.Button(self, text=3D<span class=3D"hljs-string">"Styled Button"=
</span>, style=3D<span class=3D"hljs-string">'Custom.TButton'</span>).pack(=
pady=3D<span class=3D"hljs-number">10</span>)
        ttk.Combobox(self, values=3D[<span class=3D"hljs-string">"Option 1"=
</span>, <span class=3D"hljs-string">"Option 2"</span>], style=3D<span clas=
s=3D"hljs-string">'Custom.TCombobox'</span>).pack(pady=3D<span class=3D"hlj=
s-number">10</span>)
        ttk.Checkbutton(self, text=3D<span class=3D"hljs-string">"Styled Ch=
eckbutton"</span>, style=3D<span class=3D"hljs-string">'Custom.TCheckbutton=
'</span>).pack(pady=3D<span class=3D"hljs-number">10</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D StyledWidgetsExample()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EB=8A=94 =EB=8B=A4=
=EC=96=91=ED=95=9C <code>ttk</code> =EC=9C=84=EC=A0=AF=EC=9D=98 =EC=8A=A4=
=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=ED=95=98=EA=B3=A0 =EC=9D=B4=
=EB=A5=BC =EC=9C=84=EC=A0=AF=EC=97=90 =EC=A0=81=EC=9A=A9=ED=95=98=EB=8A=94 =
=EB=B0=A9=EB=B2=95=EC=9D=84 =EB=B3=B4=EC=97=AC=EC=A4=8D=EB=8B=88=EB=8B=A4. =
=EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=ED=95=A0 =EB=95=8C =
<code>ttk.Style().configure()</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =
=EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=8A=A4=ED=83=80=EC=9D=BC =EC=86=8D=
=EC=84=B1=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-=
3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounde=
d-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:=
border-token-border-light md:hidden"><div class=3D"flex items-center"><span=
 class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-te=
xt-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[=
30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.=
49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.000=
05V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.262=
9L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.0=
6701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403=
 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2=
.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6=
.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.999=
6 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 2=
0.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1=
962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064=
 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM1=
5.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.1859=
3 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 1=
5.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4=
632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C=
16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.2=
3218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button><=
/span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r28l:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-90" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa2f1c6-30cd-4c=
dc-b31b-d1edc41192d4" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=97=94=ED=8A=B8=EB=A6=AC=EB=93=A4 =ED=85=8C=
=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98 =EC=A7=84=ED=95=98=EA=B2=8C =ED=95=98=
=EA=B3=A0=EC=8B=B6=EC=9D=80=EB=8D=B0 =EC=88=98=EC=A0=95=ED=95=A0=EA=B2=83=
=EB=A7=8C<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr=
-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D=
"closed"><button class=3D"flex h-9 w-9 items-center justify-center rounded-=
full text-token-text-secondary transition hover:bg-token-main-surface-terti=
ary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.41=
4l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789=
-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.=
56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.2=
93a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></but=
ton></span></div></div></div></div></div></div></div></div></div></div><div=
 class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conve=
rsation-turn-91" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[=
18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"=
mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"=
gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex=
 items-center justify-center bg-token-main-surface-primary text-token-text-=
primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"e1e4ecfd-1d20-427d-a3a0-23=
6bf2d2fd0c" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p><code>ttk</code> =EC=
=9C=84=EC=A0=AF=EC=97=90=EC=84=9C <code>Entry</code>=EC=9D=98 =ED=85=8C=EB=
=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EC=A7=84=ED=95=98=EA=B2=8C =ED=
=95=98=EB=A0=A4=EB=A9=B4 <code>ttk.Style</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=
=ED=95=98=EC=97=AC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=
=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>TEntry</cod=
e>=EC=9D=98 <code>borderwidth</code> =EC=86=8D=EC=84=B1=EC=9D=84 =EC=84=A4=
=EC=A0=95=ED=95=98=EC=97=AC =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=
=EB=A5=BC =EB=B3=80=EA=B2=BD=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4.</p><p>=EC=95=84=EB=9E=98=EB=8A=94 <code>TEntry</code> =EC=9C=84=
=EC=A0=AF=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =
=EC=A7=84=ED=95=98=EA=B2=8C =ED=95=98=EB=8A=94 =EC=98=88=EC=8B=9C=EC=9E=85=
=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"Custom.TEntry"</span>,=
 borderwidth=3D<span class=3D"hljs-number">2</span>, relief=3D<span class=
=3D"hljs-string">"solid"</span>)

        self.NicknameEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-=
string">"Custom.TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string=
">"Custom.TEntry"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-=
string">"Custom.TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</spa=
n>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>ttk.Style</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=
=AC <code>Custom.TEntry</code> =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=
=95=EC=9D=98=ED=95=98=EA=B3=A0 <code>borderwidth</code> =EC=86=8D=EC=84=B1=
=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=85=8C=EB=91=90=EB=A6=AC =
=EB=91=90=EA=BB=98=EB=A5=BC =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4. =EC=9D=B4=EB=A5=BC =ED=86=B5=ED=95=B4 <code>Entry</code> =EC=9C=
=84=EC=A0=AF=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EC=A7=84=ED=95=
=98=EA=B2=8C =ED=91=9C=EC=8B=9C=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empt=
y:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p=
-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border=
-token-border-light md:hidden"><div class=3D"flex items-center"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] =
w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129=
 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15=
C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.=
1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C=
10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81=
069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.3431=
5 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.0931=
3 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.=
0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.869=
5 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C2=
0.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98=
627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.799=
4 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.=
4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.560=
4C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 1=
4.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.49=
96 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 =
15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span=
><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-to=
ken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"fl=
ex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-=
3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1=
-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 =
1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></=
button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-sur=
face-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-=
center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 =
11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.=
1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9=
.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 =
2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.004=
5C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29=
589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.74=
6 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9=
.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.50=
02 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 =
13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5=
C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.4477=
2 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curr=
entColor"></path></svg></span></button></span></div><span class=3D"" data-s=
tate=3D"closed"><button type=3D"button" id=3D"radix-:r28t:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-92" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa2ea02-aa13-4992-ba=
16-bc06cb51d4b1" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">=EA=B7=B8=EB=83=A5 =ED=9A=8C=EC=83=89=EA=B9=94 =ED=
=85=8C=EB=91=90=EB=A6=AC=EC=97=90 =EB=82=B4=EB=B6=80=EB=8A=94 =EA=B7=B8=EB=
=83=A5 =ED=9D=B0=EC=83=89=EC=9C=BC=EB=A1=9C =ED=95=B4=EC=A3=BC=EA=B3=A0 =EB=
=AA=A8=EC=84=9C=EB=A6=AC=EB=B6=80=EB=B6=84=EC=9D=80 border radius =EC=A2=80=
 =EA=B9=8D=EC=95=84=EC=A4=98<div class=3D"absolute bottom-0 right-full top-=
0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center just=
ify-center rounded-full text-token-text-secondary transition hover:bg-token=
-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.5=
36 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 =
0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 =
0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.1=
72L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></div></div></div></div></div></d=
iv></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" d=
ata-testid=3D"conversation-turn-93" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-s=
hrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:p=
t-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-cente=
r overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative =
p-1 rounded-sm flex items-center justify-center bg-token-main-surface-prima=
ry text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=
=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full"><div data-message-author-role=3D"assistant" data-message-id=3D"07995=
067-3cb5-4d6a-80f2-b5f10dfce82f" dir=3D"auto" class=3D"text-message flex fl=
ex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt=
-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w=
-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D=
"markdown prose w-full break-words dark:prose-invert light"><p><code>ttk</c=
ode> =EC=9C=84=EC=A0=AF=EC=97=90=EC=84=9C <code>Entry</code>=EC=9D=98 =EC=
=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=
=9D=B4=EC=A7=95=ED=95=98=EC=97=AC =ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=90=EB=
=A6=AC, =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD, =EA=B7=B8=EB=A6=AC=EA=B3=A0 =
=EB=AA=A8=EC=84=9C=EB=A6=AC =EB=B6=80=EB=B6=84=EC=9D=84 =EB=91=A5=EA=B8=80=
=EA=B2=8C =EB=A7=8C=EB=93=A4=EA=B8=B0 =EC=9C=84=ED=95=B4=EC=84=9C=EB=8A=94 =
<code>ttk.Style</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=8A=
=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=ED=95=B4=EC=95=BC =ED=95=
=A9=EB=8B=88=EB=8B=A4. =ED=95=98=EC=A7=80=EB=A7=8C =EA=B8=B0=EB=B3=B8=EC=A0=
=81=EC=9C=BC=EB=A1=9C <code>tkinter</code>=EB=A7=8C=EC=9C=BC=EB=A1=9C=EB=8A=
=94 <code>border-radius</code>=EB=A5=BC =EC=A7=81=EC=A0=91=EC=A0=81=EC=9C=
=BC=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=A0 =EC=88=98 =EC=97=86=EA=B8=B0 =EB=
=95=8C=EB=AC=B8=EC=97=90 <code>ttk</code>=EC=99=80 =ED=95=A8=EA=BB=98 <code=
>Canvas</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=BB=A4=EC=
=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A6=88=EB=90=9C <code>Entry</code>=EB=
=A5=BC =EA=B5=AC=ED=98=84=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=
=8B=A4.</p><p>=EC=95=84=EB=9E=98=EB=8A=94 =EC=9D=B4=EB=A5=BC =EA=B5=AC=ED=
=98=84=ED=95=9C =EC=98=88=EC=8B=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div=
 class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-me=
dium"><div class=3D"flex items-center relative text-token-text-secondary bg=
-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between r=
ounded-t-md"><span>python</span><div class=3D"flex items-center"><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div=
 class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">impo=
rt</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk, ImageDraw

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>RoundedEntry</span>(ttk.Entry):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, **kwargs</s=
pan>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, **kwa=
rgs)
        self.parent =3D parent
        self.radius =3D <span class=3D"hljs-number">15</span>
        self.configure(borderwidth=3D<span class=3D"hljs-number">0</span>, =
relief=3D<span class=3D"hljs-string">"flat"</span>)

        self.canvas =3D Canvas(self.parent, width=3Dself.winfo_reqwidth(), =
height=3Dself.winfo_reqheight(), bg=3Dself[<span class=3D"hljs-string">'bg'=
</span>], highlightthickness=3D<span class=3D"hljs-number">0</span>)
        self.canvas.place(x=3Dself.winfo_x(), y=3Dself.winfo_y())
        self.canvas.bind(<span class=3D"hljs-string">"&lt;Configure&gt;"</s=
pan>, self.update_canvas)
        self.canvas.create_window((<span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-number">0</span>), window=3Dself, anchor=3D<span class=3D=
"hljs-string">"nw"</span>)

        self.update_canvas()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_canvas</span>(<span class=3D"hljs-params">self, event=3D<span =
class=3D"hljs-literal">None</span></span>):
        self.canvas.delete(<span class=3D"hljs-string">"all"</span>)
        self.canvas.create_oval((<span class=3D"hljs-number">0</span>, <spa=
n class=3D"hljs-number">0</span>, self.radius * <span class=3D"hljs-number"=
>2</span>, self.radius * <span class=3D"hljs-number">2</span>), fill=3D<spa=
n class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hljs-strin=
g">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)
        self.canvas.create_oval((self.winfo_width() - self.radius * <span c=
lass=3D"hljs-number">2</span>, <span class=3D"hljs-number">0</span>, self.w=
info_width(), self.radius * <span class=3D"hljs-number">2</span>), fill=3D<=
span class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hljs-st=
ring">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)
        self.canvas.create_oval((<span class=3D"hljs-number">0</span>, self=
.winfo_height() - self.radius * <span class=3D"hljs-number">2</span>, self.=
radius * <span class=3D"hljs-number">2</span>, self.winfo_height()), fill=
=3D<span class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hlj=
s-string">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)
        self.canvas.create_oval((self.winfo_width() - self.radius * <span c=
lass=3D"hljs-number">2</span>, self.winfo_height() - self.radius * <span cl=
ass=3D"hljs-number">2</span>, self.winfo_width(), self.winfo_height()), fil=
l=3D<span class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hl=
js-string">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)
        self.canvas.create_rectangle((self.radius, <span class=3D"hljs-numb=
er">0</span>, self.winfo_width() - self.radius, self.winfo_height()), fill=
=3D<span class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hlj=
s-string">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)
        self.canvas.create_rectangle((<span class=3D"hljs-number">0</span>,=
 self.radius, self.winfo_width(), self.winfo_height() - self.radius), fill=
=3D<span class=3D"hljs-string">"white"</span>, outline=3D<span class=3D"hlj=
s-string">"gray"</span>, width=3D<span class=3D"hljs-number">2</span>)

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D RoundedEntry(self, bg=3D<span class=3D"hljs-=
string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-string">"#000716"</span>=
)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D RoundedEntry(self, bg=3D<span class=3D"hljs-string=
">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-string">"#000716"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D RoundedEntry(self, bg=3D<span class=3D"hljs-=
string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-string">"#000716"</span>=
, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C =
<code>RoundedEntry</code> =ED=81=B4=EB=9E=98=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=
=9A=A9=ED=95=98=EC=97=AC =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EC=
=99=80 =ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=90=EB=A6=AC, =ED=9D=B0=EC=83=89 =
=EB=B0=B0=EA=B2=BD=EC=9D=84 =EA=B0=80=EC=A7=84 =EC=BB=A4=EC=8A=A4=ED=84=B0=
=EB=A7=88=EC=9D=B4=EC=A6=88=EB=90=9C <code>Entry</code> =EC=9C=84=EC=A0=AF=
=EC=9D=84 =EB=A7=8C=EB=93=A4=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=
=EB=A5=BC =ED=86=B5=ED=95=B4 <code>Entry</code> =EC=9C=84=EC=A0=AF=EC=9D=84=
 =EC=9B=90=ED=95=98=EB=8A=94 =EC=8A=A4=ED=83=80=EC=9D=BC=EB=A1=9C =EC=A0=81=
=EC=9A=A9=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div=
></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3">=
<div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token=
-main-surface-primary md:absolute md:border md:border-token-border-light md=
:hidden"><div class=3D"flex items-center"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-=
main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center =
justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10=
.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.0000=
5 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4=
 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19=
.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73=
463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H=
4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.6=
1102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.672=
5 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22=
.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.54=
75C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 =
13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.=
6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688=
 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12=
.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.51=
58 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C1=
6.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0=
526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=
=3D"currentColor"></path></svg></span></button></span><span class=3D"" data=
-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hov=
er:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] i=
tems-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-=
heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 =
1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9=
a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a=
1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0=
 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><div cla=
ss=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounded=
-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><span =
class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.880=
5 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7=
.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753=
C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0=
045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15=
.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 =
4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 1=
3H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536=
 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.=
4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.190=
2V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.94=
44 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045=
 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg=
></span></button></span></div><span class=3D"" data-state=3D"closed"><butto=
n type=3D"button" id=3D"radix-:r295:" aria-haspopup=3D"menu" aria-expanded=
=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 te=
xt-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><di=
v class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h=
-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><pa=
th fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44=
 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119=
 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038=
.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.=
055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path=
 fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 =
4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747=
.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1=
.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2=
.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179=
-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 =
2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87=
 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1=
.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2=
.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opa=
city: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.29=
3-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414=
" clip-rule=3D"evenodd"></path></svg></div></button></span></div></div></di=
v><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div clas=
s=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversati=
on-turn-94" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px]=
 px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-au=
to flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-rol=
e=3D"user" data-message-id=3D"aaa28e78-7511-4277-9786-f1734086a5eb" dir=3D"=
auto" class=3D"min-h-[20px] text-message flex flex-col items-start whitespa=
ce-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items=
-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:=
empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] =
rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=
raceback (most recent call last):
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 203, in &lt;module&gt;
    app =3D SignUpPage()
          ^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 53, in __init__
    self.NicknameEntry =3D RoundedEntry(self, bg=3D"#FFFFFF", fg=3D"#000716=
")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 11, in __init__
    super().__init__(parent, **kwargs)
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\ttk.py", line 639, in __init__
    Widget.__init__(self, master, widget or "ttk::entry", kw)
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\ttk.py", line 527, in __init__
    tkinter.Widget.__init__(self, master, widgetname, kw=3Dkw)
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 2648, in __init__
    self.tk.call(
_tkinter.TclError: unknown option "-bg"<div class=3D"absolute bottom-0 righ=
t-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-=
center justify-center rounded-full text-token-text-secondary transition hov=
er:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"i=
con-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.29=
3a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.73=
6.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386=
 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.58=
6 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></div></div></div></d=
iv></div></div></div></div><div class=3D"w-full text-token-text-primary" di=
r=3D"auto" data-testid=3D"conversation-turn-95" data-scroll-anchor=3D"false=
"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 =
lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:ga=
p-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div cla=
ss=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt=
-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center j=
ustify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"ca1d4d8f-48c4-43b6-873a-b903d9cb1980" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p><code>ttk.Entry</code> =EC=9C=84=EC=A0=AF=EC=9D=80 <code>tk.E=
ntry</code>=EC=99=80 =EB=8B=A4=EB=A5=B4=EA=B2=8C <code>-bg</code> =EC=98=B5=
=EC=85=98=EC=9D=84 =EC=A7=81=EC=A0=91=EC=A0=81=EC=9C=BC=EB=A1=9C =EC=A7=80=
=EC=9B=90=ED=95=98=EC=A7=80 =EC=95=8A=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=8C=80=
=EC=8B=A0, <code>ttk.Style</code>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=95=EC=9D=98=ED=95=B4=EC=
=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EB=98=90=ED=95=9C, <code>ttk.Entry</co=
de> =EC=9C=84=EC=A0=AF=EC=9D=80 <code>Canvas</code>=EC=99=80 =EA=B2=B0=ED=
=95=A9=ED=95=98=EC=97=AC =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC =ED=
=9A=A8=EA=B3=BC=EB=A5=BC =EB=A7=8C=EB=93=A4=EB=A0=A4=EB=A9=B4 =EC=A1=B0=EA=
=B8=88 =EB=8D=94 =EB=B3=B5=EC=9E=A1=ED=95=9C =EC=9E=91=EC=97=85=EC=9D=B4 =
=ED=95=84=EC=9A=94=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=95=84=EB=9E=98=EB=8A=94 =
=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EB=A1=9C, <code>ttk.Style</c=
ode>=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=8A=A4=ED=83=80=EC=9D=
=BC=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=EA=B3=A0, <code>Canvas</code>=EC=
=99=80 <code>ttk.Entry</code>=EB=A5=BC =EA=B2=B0=ED=95=A9=ED=95=98=EC=97=AC=
 =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EC=99=80 =ED=9A=8C=EC=83=89=
 =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EC=A0=81=EC=9A=A9=ED=95=9C =EC=98=88=
=EC=A0=9C=EC=9E=85=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-95=
0 rounded-md border-[0.5px] border-token-border-medium"><div class=3D"flex =
items-center relative text-token-text-secondary bg-token-main-surface-secon=
dary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python=
</span><div class=3D"flex items-center"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 =
0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0=
 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-=
1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =
=EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto=
 p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs l=
anguage-python"><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox, ttk
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk, ImageDraw

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>RoundedEntry</span>(tk.Frame):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, **kwargs</s=
pan>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, bg=3D=
<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(self, bg=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=
=3D<span class=3D"hljs-number">0</span>)
        self.canvas.pack(fill=3Dtk.BOTH, expand=3D<span class=3D"hljs-liter=
al">True</span>)
        self.entry =3D ttk.Entry(self, **kwargs)
        self.entry.pack(padx=3D<span class=3D"hljs-number">10</span>, pady=
=3D<span class=3D"hljs-number">5</span>, fill=3Dtk.BOTH, expand=3D<span cla=
ss=3D"hljs-literal">True</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> self.entry.get()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">place</span>(<span class=3D"hljs-params">self, **kwargs</span>):
        <span class=3D"hljs-built_in">super</span>().place(**kwargs)
        self.canvas.config(width=3Dself.winfo_reqwidth(), height=3Dself.win=
fo_reqheight())

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.style =3D ttk.Style()
        self.style.configure(<span class=3D"hljs-string">"TEntry"</span>, b=
ordercolor=3D<span class=3D"hljs-string">"gray"</span>, borderwidth=3D<span=
 class=3D"hljs-number">2</span>, relief=3D<span class=3D"hljs-string">"soli=
d"</span>, background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, foreg=
round=3D<span class=3D"hljs-string">"#000716"</span>)

        self.load_additional_images()

        self.NicknameEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D RoundedEntry(self, style=3D<span class=3D"hljs-str=
ing">"TEntry"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">520</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>RoundedEntry</code>=EB=9D=BC=EB=8A=94 =EC=BB=A4=EC=8A=A4=ED=
=85=80 =ED=81=B4=EB=9E=98=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC <code>ttk.Entry</code>=EB=A5=BC =EA=B0=90=EC=8B=B8=EA=B3=A0 <code>Ca=
nvas</code>=EB=A5=BC =EC=82=AC=EC=9A=A9</p></div></div></div></div><div cla=
ss=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center =
justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:ab=
solute md:border md:border-token-border-light md:hidden"><div class=3D"flex=
 items-center"><span class=3D"" data-state=3D"closed"><button class=3D"roun=
ded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><sp=
an class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.541=
32L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.000=
05 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16=
.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902=
V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21=
.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15=
V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.31=
66 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22=
.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.13=
02C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 =
16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.=
9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.6201=
7 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.=
09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.10=
94 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C=
15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9=
113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687=
 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></s=
vg></span></button></span><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg></span></button></span><div class=3D"flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8=
727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355=
C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476=
 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 =
2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 =
19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.=
8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5=
.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62=
036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L=
9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3=
721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.55=
68 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0=
045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.00=
45 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></span><=
/div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"r=
adix-:r29d:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed" class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-=
[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items-cent=
er pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full i=
con-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=
=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503=
-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.5=
04.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.5=
16 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-=
.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=
=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.3=
66 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.=
467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.1=
05-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c=
2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0=
 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888=
 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1=
.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.2=
35-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></di=
v><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0=
px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm =
text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.41=
4 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd=
"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 l=
g:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-96" data-scrol=
l-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-=
4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 t=
ext-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-=
[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-g=
row flex-col max-w-full"><div data-message-author-role=3D"user" data-messag=
e-id=3D"aaa29e31-d694-4f44-92a5-ab899b01ebc0" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end=
 rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f=
4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=88=98=EC=A0=95=EB=
=B3=B8=EC=97=90=EC=84=9C border =EC=A1=B0=EA=B8=88=EB=A7=8C =EB=8D=94 =EA=
=B9=8D=EC=95=84=EC=A3=BC=EA=B3=A0 =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=
=BB=98=EC=A2=80 =EC=A1=B0=EA=B8=88=EB=A7=8C =EB=8D=94 =EC=A7=84=ED=95=98=EA=
=B2=8C =EA=B7=B8=EB=A6=AC=EA=B3=A0 =EC=84=B8=EB=A1=9C=EB=A1=9C =EA=B8=B8=EC=
=9D=B4 =EC=A1=B0=EA=B8=88=EB=A7=8C =ED=81=AC=EA=B2=8C=ED=95=B4=EB=B4=90 =EC=
=88=98=EC=A0=95=ED=95=A0 =EA=B3=B3 =EC=BD=94=EB=93=9C=EB=A7=8C =EB=B3=B4=EB=
=82=B4=EC=A3=BC=EA=B3=A0<div class=3D"absolute bottom-0 right-full top-0 -m=
r-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"=
" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-=
center rounded-full text-token-text-secondary transition hover:bg-token-mai=
n-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" =
height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0=
 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-=
1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 =
0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L1=
4.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></p=
ath></svg></button></span></div></div></div></div></div></div></div></div><=
/div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-=
testid=3D"conversation-turn-97" data-scroll-anchor=3D"false"><div class=3D"=
py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"=
><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap=
-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrin=
k-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"=
><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center ov=
erflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 =
rounded-sm flex items-center justify-center bg-token-main-surface-primary t=
ext-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"=
0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M3=
7.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2=
744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4=
.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.721=
9 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.50019=
7C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 =
5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.6885=
4 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 =
0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.=
4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.1243=
7 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12=
.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.63=
66C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 =
39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.=
5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 =
38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4=
517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.045=
9 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.=
9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386=
 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.=
9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V=
30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4=
838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.710=
7 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30=
.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 3=
0.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.03=
76 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 =
33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3=
8785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.93=
64 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8=
.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8=
267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 =
28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04=
046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858=
 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12=
.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.69=
28 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 3=
6.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.68=
78 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 =
30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9=
586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20=
.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.10=
45 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 2=
5.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0=
753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949=
L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.=
31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.83=
34 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419=
L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19=
.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.788=
48 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 =
3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1=
034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C=
14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.=
4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.732=
5 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentC=
olor"></path></svg></div></div></div></div></div><div class=3D"group/conver=
sation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"assistant" data-message-id=3D"1e74c508-68=
4e-4b23-9788-49b832647eee" dir=3D"auto" class=3D"min-h-[20px] text-message =
flex flex-col items-start whitespace-pre-wrap break-words [.text-message+&a=
mp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D=
"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div c=
lass=3D"markdown prose w-full break-words dark:prose-invert light"><pre><di=
v class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-m=
edium"><div class=3D"flex items-center relative text-token-text-secondary b=
g-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between =
rounded-t-md"><span>python</span><div class=3D"flex items-center"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3=
h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3=
v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 =
1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path=
></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><di=
v class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=
=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">clas=
s</span> <span class=3D"hljs-title class_">RoundedEntry</span>(tk.Frame):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, **kwargs</s=
pan>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, bg=3D=
<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(self, bg=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=
=3D<span class=3D"hljs-number">0</span>)
        self.canvas.pack(fill=3Dtk.BOTH, expand=3D<span class=3D"hljs-liter=
al">True</span>)
        self.entry =3D ttk.Entry(self, **kwargs)
        self.entry.pack(padx=3D<span class=3D"hljs-number">10</span>, pady=
=3D<span class=3D"hljs-number">5</span>, fill=3Dtk.BOTH, expand=3D<span cla=
ss=3D"hljs-literal">True</span>)
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> self.entry.get()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">place</span>(<span class=3D"hljs-params">self, **kwargs</span>):
        <span class=3D"hljs-built_in">super</span>().place(**kwargs)
        self.canvas.config(width=3Dself.winfo_reqwidth(), height=3Dself.win=
fo_reqheight())

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.style =3D ttk.Style()
        self.style.configure(<span class=3D"hljs-string">"TEntry"</span>, b=
ordercolor=3D<span class=3D"hljs-string">"gray"</span>, borderwidth=3D<span=
 class=3D"hljs-number">3</span>, relief=3D<span class=3D"hljs-string">"soli=
d"</span>, background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, foreg=
round=3D<span class=3D"hljs-string">"#000716"</span>)

        self.load_additional_images()

        self.NicknameEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">40</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D RoundedEntry(self, style=3D<span class=3D"hljs-str=
ing">"TEntry"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">40</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">40</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r29l:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-98" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"=
><div data-message-author-role=3D"user" data-message-id=3D"aaa260e8-98ab-44=
e9-a3eb-bea38c5cedb8" dir=3D"auto" class=3D"min-h-[20px] text-message flex =
flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex=
 w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div c=
lass=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-t=
oken-main-surface-secondary">=EC=95=84=EB=8B=88 =EC=9E=85=EB=A0=A5=EC=B0=BD=
 =EC=84=B8=EB=A1=9C=EB=A1=9C =EA=B8=B8=EA=B2=8C =EC=A2=80 =ED=95=B4=EB=8B=
=AC=EB=9D=BC=EB=8B=88=EA=B9=90? =EC=96=B4=EB=94=94 =EC=88=98=EC=A0=95=ED=96=
=88=EB=8A=94=EC=A7=80=EC=A2=80 =EC=95=8C=EB=A0=A4=EC=A3=BC=EA=B3=A0<div cla=
ss=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hov=
er/conversation-turn:block"><span class=3D"" data-state=3D"closed"><button =
class=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-t=
ext-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.=
094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 =
1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-=
.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 =
0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-99=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avata=
r flex h-6 w-6 items-center justify-center overflow-hidden rounded-full jui=
ce:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center j=
ustify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8=
"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"0dc1a280-2b1a-4935-8b76-0985b098535e" dir=
=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whit=
espace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:i=
tems-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 ju=
ice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full =
break-words dark:prose-invert light"><p>=EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=
=84 =EC=84=B8=EB=A1=9C=EB=A1=9C =EB=8D=94 =EA=B8=B8=EA=B2=8C =EB=A7=8C=EB=
=93=A4=EA=B8=B0 =EC=9C=84=ED=95=B4=EC=84=9C=EB=8A=94 <code>RoundedEntry</co=
de> =ED=81=B4=EB=9E=98=EC=8A=A4=EC=9D=98 <code>self.entry.pack</code> =EB=
=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C <code>pady</code> =EA=B0=92=EC=
=9D=84 =EC=A6=9D=EA=B0=80=EC=8B=9C=ED=82=A4=EA=B3=A0, <code>place</code> =
=EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C <code>height</code> =EA=B0=92=
=EC=9D=84 =EC=A6=9D=EA=B0=80=EC=8B=9C=EC=BC=9C=EC=95=BC =ED=95=A9=EB=8B=88=
=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px]=
 border-token-border-medium"><div class=3D"flex items-center relative text-=
token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font=
-sans justify-between rounded-t-md"><span>python</span><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex g=
ap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" h=
eight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fi=
ll=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0=
 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h=
2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM=
5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-r=
ule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button>=
</span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" d=
ir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_">RoundedEnt=
ry</span>(tk.Frame):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, **kwargs</s=
pan>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, bg=3D=
<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(self, bg=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=
=3D<span class=3D"hljs-number">0</span>)
        self.canvas.pack(fill=3Dtk.BOTH, expand=3D<span class=3D"hljs-liter=
al">True</span>)
        self.entry =3D ttk.Entry(self, **kwargs)
        self.entry.pack(padx=3D<span class=3D"hljs-number">10</span>, pady=
=3D<span class=3D"hljs-number">10</span>, fill=3Dtk.BOTH, expand=3D<span cl=
ass=3D"hljs-literal">True</span>)  <span class=3D"hljs-comment"># Increase =
pady value</span>
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> self.entry.get()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">place</span>(<span class=3D"hljs-params">self, **kwargs</span>):
        <span class=3D"hljs-built_in">super</span>().place(**kwargs)
        self.canvas.config(width=3Dself.winfo_reqwidth(), height=3Dself.win=
fo_reqheight())

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.style =3D ttk.Style()
        self.style.configure(<span class=3D"hljs-string">"TEntry"</span>, b=
ordercolor=3D<span class=3D"hljs-string">"gray"</span>, borderwidth=3D<span=
 class=3D"hljs-number">3</span>, relief=3D<span class=3D"hljs-string">"soli=
d"</span>, background=3D<span class=3D"hljs-string">"#FFFFFF"</span>, foreg=
round=3D<span class=3D"hljs-string">"#000716"</span>)

        self.load_additional_images()

        self.NicknameEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">50</span>)  <sp=
an class=3D"hljs-comment"># Increase height value</span>

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D RoundedEntry(self, style=3D<span class=3D"hljs-str=
ing">"TEntry"</span>)
        self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=
=3D<span class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-nu=
mber">522</span>, height=3D<span class=3D"hljs-number">50</span>)  <span cl=
ass=3D"hljs-comment"># Increase height value</span>
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D RoundedEntry(self, style=3D<span class=3D"hl=
js-string">"TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</span>)
        self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">50</span>)  <sp=
an class=3D"hljs-comment"># Increase height value</span>

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r29t:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-100" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa20e4b-6fcd=
-4f93-b2b8-bd57e19808e6" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">entry=EB=93=A4=EC=9D=98 border width=EB=A5=
=BC =EC=A2=80 =EB=91=90=EA=BB=8D=EA=BB=98=ED=95=B4=EC=A4=98<div class=3D"ab=
solute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conve=
rsation-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D=
"flex h-9 w-9 items-center justify-center rounded-full text-token-text-seco=
ndary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http:/=
/www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0=
 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 =
0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.=
713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 =
0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.58=
6 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></=
div></div></div></div></div></div></div></div><div class=3D"w-full text-tok=
en-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-101" data-sc=
roll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:=
px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-=
3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max=
-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><=
div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-=
6 w-6 items-center justify-center overflow-hidden rounded-full juice:h-8 ju=
ice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-ce=
nter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg wi=
dth=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=
=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.136=
3 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35=
.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259=
 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7=
85575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12=
.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7628=
6 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.=
312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8=
3612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C=
2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6=
322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208=
 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22=
.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.32=
23 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 =
31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.302=
3 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM=
22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.=
117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 =
31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0=
542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 2=
1.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.279=
1 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 =
31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6=
6048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 =
14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103=
V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24=
.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.00=
97 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707=
 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.=
19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3682=
3 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L1=
5.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.51=
91 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 2=
1.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.=
955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805=
 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17=
.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.604=
7 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35=
.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.47=
33 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C3=
2.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.976=
5 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.=
0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.072=
6 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 1=
1.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8=
158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508=
C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13=
.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8=
423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058=
V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13=
.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.176=
7C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.=
94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.42=
15 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419Z=
M16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.=
071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div>=
</div></div><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"9947f2c0-806a-4b69-a553-5c7be9117e7d" dir=3D"au=
to" class=3D"min-h-[20px] text-message flex flex-col items-start whitespace=
-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-e=
nd overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:em=
pty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-=
words dark:prose-invert light"><p>=EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=98 =ED=
=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EC=A1=B0=EC=A0=88=ED=
=95=98=EB=A0=A4=EB=A9=B4 <code>RoundedEntry</code> =ED=81=B4=EB=9E=98=EC=8A=
=A4=EC=9D=98 <code>Canvas</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=
=AC =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EC=A7=81=EC=A0=91 =EA=B7=B8=EB=A0=
=A4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EC=95=84=EB=9E=98=EB=8A=94 =ED=
=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EB=91=90=EA=BB=8D=EA=
=B2=8C =EC=A1=B0=EC=A0=95=ED=95=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=
=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] bo=
rder-token-border-medium"><div class=3D"flex items-center relative text-tok=
en-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sa=
ns justify-between rounded-t-md"><span>python</span><div class=3D"flex item=
s-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-=
1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1=
 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2z=
m2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 =
9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rul=
e=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></=
span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>RoundedEntry</span>(tk.Frame):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, border_widt=
h=3D<span class=3D"hljs-number">2</span>, **kwargs</span>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, bg=3D=
<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.border_width =3D border_width
        self.canvas =3D Canvas(self, bg=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=
=3D<span class=3D"hljs-number">0</span>)
        self.canvas.pack(fill=3Dtk.BOTH, expand=3D<span class=3D"hljs-liter=
al">True</span>)
        self.entry =3D ttk.Entry(self, **kwargs)
        self.entry.pack(padx=3D<span class=3D"hljs-number">10</span>, pady=
=3D<span class=3D"hljs-number">10</span>, fill=3Dtk.BOTH, expand=3D<span cl=
ass=3D"hljs-literal">True</span>)
        self.bind(<span class=3D"hljs-string">"&lt;Configure&gt;"</span>, s=
elf.draw_rounded_border)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">draw_</span>
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2a5:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-102" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2086e-adf8=
-43bc-9aad-63baca51f5be" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">=EA=B3=A0=EC=B9=A0=EB=B6=80=EB=B6=84=EB=A7=
=8C =EA=B7=B8=EB=A6=AC=EA=B3=A0 =ED=81=B4=EB=9E=98=EC=8A=A4 =EC=95=88=EC=93=
=B0=EA=B3=A0 =EB=AA=BB=ED=95=B4?<div class=3D"absolute bottom-0 right-full =
top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center =
justify-center rounded-full text-token-text-secondary transition hover:bg-t=
oken-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536=
 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 =
1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a=
3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5=
 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"even=
odd"></path></svg></button></span></div></div></div></div></div></div></div=
></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"aut=
o" data-testid=3D"conversation-turn-103" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"f=
lex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 ju=
ice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-=
center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"rela=
tive p-1 rounded-sm flex items-center justify-center bg-token-main-surface-=
primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" vi=
ewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><pat=
h d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.=
8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 =
32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.78=
93 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.305=
8 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624=
 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.175=
05C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905=
 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.=
81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.08=
92 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 3=
7.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3=
747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054=
 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33=
.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728=
 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.=
8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.88=
74 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36=
.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.496=
4 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21=
.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867=
 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.=
0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.197=
42 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L=
13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 =
14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7=
283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012=
L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33=
.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55=
279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071=
V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6=
4893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089=
 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.=
5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.0386=
2 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L2=
5.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4=
769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 =
18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3=
617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717=
 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.=
6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 =
31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8=
717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 =
10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.=
9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.120=
7 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C2=
9.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53=
945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.242=
4 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C1=
0.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2=
173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264=
C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9=
3941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024=
 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14=
.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.49=
78L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D=
"currentColor"></path></svg></div></div></div></div></div><div class=3D"gro=
up/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div=
 class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col ma=
x-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"9f=
98ea07-27d6-478b-be57-6194c896c618" dir=3D"auto" class=3D"min-h-[20px] text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>=ED=81=B4=EB=9E=98=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=A7=
=80 =EC=95=8A=EA=B3=A0 <code>ttk.Entry</code>=EC=9D=98 =EC=8A=A4=ED=83=80=
=EC=9D=BC=EC=9D=84 =EC=A7=81=EC=A0=91 =EC=A1=B0=EC=A0=95=ED=95=98=EC=97=AC =
=ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EB=91=90=EA=BB=8D=EA=B2=8C =EB=A7=8C=
=EB=93=A4=EA=B3=A0, =EB=82=B4=EB=B6=80=EB=A5=BC =ED=9D=B0=EC=83=89=EC=9C=BC=
=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=98=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =
=EC=86=8C=EA=B0=9C=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=95=84=EB=9E=98=EB=8A=94 =
=ED=95=84=EC=9A=94=ED=95=9C =EB=B6=80=EB=B6=84=EB=A7=8C =EC=88=98=EC=A0=95=
=ED=95=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">import</spa=
n> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas, messagebox, ttk
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )
       =20
        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"RoundedEntry.TEntry"</=
span>,
                        fieldbackground=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>,
                        background=3D<span class=3D"hljs-string">"#FFFFFF"<=
/span>,
                        foreground=3D<span class=3D"hljs-string">"#000716"<=
/span>,
                        borderwidth=3D<span class=3D"hljs-number">2</span>,
                        relief=3D<span class=3D"hljs-string">"solid"</span>=
)
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">"RoundedEntry.TEntry"</span>,
                  background=3D[(<span class=3D"hljs-string">'active'</span=
>, <span class=3D"hljs-string">'#FFFFFF'</span>)],
                  fieldbackground=3D[(<span class=3D"hljs-string">'active'<=
/span>, <span class=3D"hljs-string">'#FFFFFF'</span>)])

        self.load_additional_images()

        self.NicknameEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-=
string">"RoundedEntry.TEntry"</span>)
        self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</spa=
n>, y=3D<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hl=
js-number">522</span>, height=3D<span class=3D"hljs-number">34</span>)

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string=
">"RoundedEntry
</span></code></div></div></pre></div></div></div></div><div class=3D"mt-1 =
flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-sta=
rt rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:b=
order md:border-token-border-light md:hidden"><div class=3D"flex items-cent=
er"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text=
-token-text-secondary hover:bg-token-main-surface-secondary"><span class=3D=
"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7=
.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776=
 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6757=
2 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.8=
1069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.414=
2 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7=
.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C2=
0.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.104=
2 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 1=
7.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9=
638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458=
 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.=
35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.015=
6 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 1=
7.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5=
455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 =
12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.=
3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></=
button></span><span class=3D"" data-state=3D"closed"><button class=3D"round=
ed-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><spa=
n class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fil=
l-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h=
-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v=
5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1=
 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path>=
</svg></span></button></span><div class=3D"flex"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg=
-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-=
center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C1=
1.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6=
271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 1=
2.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H1=
8.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18=
.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961Z=
M14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.473=
8C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9=
.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.37=
82C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 1=
3.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 =
4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4=
 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045=
Z" fill=3D"currentColor"></path></svg></span></button></span></div><span cl=
ass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2ad:" =
aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-104" data-scroll-anchor=3D"f=
alse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:p=
x-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juic=
e:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col =
max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa26=
434-6428-4b96-9c52-2899525e15c8" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-st=
art"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.=
5 dark:bg-token-main-surface-secondary">=EC=95=84=EB=8B=88 =EC=88=98=EC=A0=
=95=EB=90=9C =EB=B6=80=EB=B6=84=EB=A7=8C =EB=B3=B4=EB=82=B4=EB=8B=AC=EB=9D=
=BC=EB=8B=88=EA=B9=90 =EC=A0=84=EC=B2=B4 =EC=BD=94=EB=93=9C=EB=A7=90=EA=B3=
=A0<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-=
1 group-hover/conversation-turn:block"><span class=3D"" data-state=3D"close=
d"><button class=3D"flex h-9 w-9 items-center justify-center rounded-full t=
ext-token-text-secondary transition hover:bg-token-main-surface-tertiary"><=
svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D=
"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" =
fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1=
-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736=
a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.3=
55 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.5=
36 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></=
span></div></div></div></div></div></div></div></div></div></div><div class=
=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversatio=
n-turn-105" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px]=
 px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-au=
to flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col re=
lative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo=
-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden rounde=
d-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex item=
s-center justify-center bg-token-main-surface-primary text-token-text-prima=
ry h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><t=
ext x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.98=
08 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 =
36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.6294=
1 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.=
36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 1=
4.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.478=
15C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11=
.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.9=
44492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026=
 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34=
.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.978=
9 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 2=
1.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5=
772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167=
 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.84=
58 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 =
37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36=
.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003=
 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.=
5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656=
 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.3=
75 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 =
37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.=
55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.840=
8 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.72=
48L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C2=
4.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7=
416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227=
 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8=
.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.253=
34 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L=
18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5=
173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 =
22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.2=
9707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.487=
2 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 1=
2.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.31=
94 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 3=
5.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5=
947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 =
32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.01=
28C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10=
.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.79=
63 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 =
11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.=
4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.7807=
7 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 1=
2.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.=
8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.925=
4 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C1=
2.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99=
464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 =
4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5=
366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175=
L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20=
.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg><=
/div></div></div></div></div><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:g=
ap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-a=
uthor-role=3D"assistant" data-message-id=3D"3eb9d1fa-b27a-4f71-a506-e4ecc81=
b4be4" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-=
start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-fu=
ll juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-co=
l gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown pro=
se w-full break-words dark:prose-invert light"><p>=EC=88=98=EC=A0=95=EB=90=
=9C =EB=B6=80=EB=B6=84=EB=A7=8C =EB=8B=A4=EC=8B=9C =EB=B3=B4=EB=82=B4=EB=93=
=9C=EB=A6=AC=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dar=
k bg-gray-950 rounded-md border-[0.5px] border-token-border-medium"><div cl=
ass=3D"flex items-center relative text-token-text-secondary bg-token-main-s=
urface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">=
<span>python</span><div class=3D"flex items-center"><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"htt=
p://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 =
0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0=
 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h=
9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=
=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D=
"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!white=
space-pre hljs language-python"><span class=3D"hljs-comment"># =EC=8A=A4=ED=
=83=80=EC=9D=BC =EC=84=A4=EC=A0=95 =EB=B6=80=EB=B6=84</span>
style =3D ttk.Style()
style.configure(<span class=3D"hljs-string">"RoundedEntry.TEntry"</span>,
                fieldbackground=3D<span class=3D"hljs-string">"#FFFFFF"</sp=
an>,
                background=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
                foreground=3D<span class=3D"hljs-string">"#000716"</span>,
                borderwidth=3D<span class=3D"hljs-number">3</span>,  <span =
class=3D"hljs-comment"># =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=
=A5=BC =EB=91=90=EA=BB=8D=EA=B2=8C =EC=84=A4=EC=A0=95</span>
                relief=3D<span class=3D"hljs-string">"solid"</span>)
style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-string">=
"RoundedEntry.TEntry"</span>,
          background=3D[(<span class=3D"hljs-string">'active'</span>, <span=
 class=3D"hljs-string">'#FFFFFF'</span>)],
          fieldbackground=3D[(<span class=3D"hljs-string">'active'</span>, =
<span class=3D"hljs-string">'#FFFFFF'</span>)])

<span class=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=EC=84=B1 =
=EB=B6=80=EB=B6=84</span>
self.NicknameEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string">=
"RoundedEntry.TEntry"</span>)
self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hljs-numbe=
r">522</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

self.IDEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string">"Round=
edEntry.TEntry"</span>)
self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D<span =
class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-number">522=
</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=3D"hl=
js-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=
=B2=8C =EC=84=A4=EC=A0=95</span>

self.PasswordEntry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string">=
"RoundedEntry.TEntry"</span>, show=3D<span class=3D"hljs-string">'*'</span>=
)
self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hljs-numbe=
r">520</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2al:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-106" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa23d41-575d=
-42ef-b4dd-a3796730fbb4" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">=ED=85=8C=EB=91=90=EB=A6=AC=EA=B0=80 =EB=91=
=90=EA=BB=8D=EA=B2=8C =EC=95=88=EB=B3=80=ED=95=B4<div class=3D"absolute bot=
tom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-tu=
rn:block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 =
w-9 items-center justify-center rounded-full text-token-text-secondary tran=
sition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.or=
g/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" =
class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M1=
3.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20=
.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.=
414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-=
.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" =
clip-rule=3D"evenodd"></path></svg></button></span></div></div></div></div>=
</div></div></div></div></div></div><div class=3D"w-full text-token-text-pr=
imary" dir=3D"auto" data-testid=3D"conversation-turn-107" data-scroll-ancho=
r=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-aut=
o md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-bas=
e juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]=
"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div c=
lass=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 item=
s-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><=
div class=3D"relative p-1 rounded-sm flex items-center justify-center bg-to=
ken-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41"=
 height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">C=
hatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37=
.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.8340=
4 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.8=
5078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.724=
9 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.4221=
4C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.=
3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464=
 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449=
 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7=
256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 =
36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.=
0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.499=
8C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 3=
5.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.11=
5 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40=
.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8=
849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 =
36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.38=
13 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 =
20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.984=
2 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35=
.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51=
397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818=
 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.9=
02C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.=
7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.089=
3 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 3=
4.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.1=
7156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.522=
8 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.=
48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.497=
9C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 2=
8.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.552=
89 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L=
22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.=
4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.996=
7 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.=
4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.308=
6 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 3=
0.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.334=
8 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14=
.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504=
 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11=
.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.10=
48 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 =
28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.4=
0939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.305=
5 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 =
10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.=
8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.4265=
9 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.=
35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.866=
8 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C1=
4.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9=
991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V=
17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div>=
<div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col=
 agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full"><div data-message-author-role=3D"assistant" data=
-message-id=3D"a4dc55b2-8e58-41cf-be50-c8c37cf6bd4a" dir=3D"auto" class=3D"=
min-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap bre=
ak-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x=
-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden ju=
ice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:pr=
ose-invert light"><p>=ED=85=8C=EB=91=90=EB=A6=AC=EA=B0=80 =EB=91=90=EA=BB=
=8D=EA=B2=8C =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =ED=95=98=EB=A0=A4=EB=A9=
=B4, <code>ttk.Entry</code> =EB=8C=80=EC=8B=A0 <code>tk.Entry</code>=EB=A5=
=BC =EC=82=AC=EC=9A=A9=ED=95=B4=EC=95=BC =ED=95=A0 =EC=88=98 =EC=9E=88=EC=
=8A=B5=EB=8B=88=EB=8B=A4. <code>ttk.Entry</code>=EB=8A=94 =ED=85=8C=EB=A7=
=88=EB=A5=BC =EC=A7=80=EC=9B=90=ED=95=98=EB=8A=94 =EB=8C=80=EC=8B=A0 =ED=85=
=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98 =EB=93=B1=EC=9D=98 =EC=BB=A4=EC=8A=
=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A7=95=EC=97=90 =EC=A0=9C=ED=95=9C=EC=9D=
=B4 =EC=9E=88=EC=9D=84 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=
=94=B0=EB=9D=BC=EC=84=9C <code>tk.Entry</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=
=ED=95=98=EA=B3=A0 =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A7=81=EC=A0=91 =
=EC=84=A4=EC=A0=95=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</=
p><p>=EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84=EB=A7=8C =EB=B3=B4=EB=
=82=B4=EB=93=9C=EB=A6=BD=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-g=
ray-950 rounded-md border-[0.5px] border-token-border-medium"><div class=3D=
"flex items-center relative text-token-text-secondary bg-token-main-surface=
-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>=
python</span><div class=3D"flex items-center"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://=
www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 =
0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 =
3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1=
V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 =
0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=
=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overf=
low-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-=
pre hljs language-python"><span class=3D"hljs-comment"># Entry =EC=9C=84=EC=
=A0=AF =EC=83=9D=EC=84=B1 =EB=B6=80=EB=B6=84</span>
self.NicknameEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</s=
pan>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">2</span>, relief=3D<span class=3D"hljs-string">"solid"</span>)
self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hljs-numbe=
r">522</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

self.IDEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</span>, =
bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs=
-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-number"=
>2</span>, relief=3D<span class=3D"hljs-string">"solid"</span>)
self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D<span =
class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-number">522=
</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=3D"hl=
js-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=
=B2=8C =EC=84=A4=EC=A0=95</span>

self.PasswordEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</s=
pan>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">2</span>, relief=3D<span class=3D"hljs-string">"solid"</span>, sho=
w=3D<span class=3D"hljs-string">'*'</span>)
self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hljs-numbe=
r">520</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
</code></div></div></pre><p>=EC=97=AC=EA=B8=B0=EC=84=9C <code>bd=3D3</code>=
=EC=9D=80 =ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EC=84=A4=
=EC=A0=95=ED=95=98=EA=B3=A0, <code>highlightthickness=3D2</code>=EB=8A=94 =
=EC=84=A0=ED=83=9D=EB=90=9C =EC=83=81=ED=83=9C=EC=97=90=EC=84=9C=EC=9D=98 =
=ED=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EC=84=A4=EC=A0=95=
=ED=95=A9=EB=8B=88=EB=8B=A4. <code>relief=3D"solid"</code>=EB=8A=94 =ED=85=
=8C=EB=91=90=EB=A6=AC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=84=A4=EC=A0=
=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt=
-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-=
start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute m=
d:border md:border-token-border-light md:hidden"><div class=3D"flex items-c=
enter"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6757=
2 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44=
776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.6=
7572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM=
8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.=
4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C=
1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3566=
5C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.=
1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.474=
4 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 1=
9.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4=
458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166=
 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.=
0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.537=
2 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 1=
5.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.49=
96 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 =
15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span=
></button></span><span class=3D"" data-state=3D"closed"><button class=3D"ro=
unded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><=
span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmln=
s=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" v=
iewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3=
h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3=
v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 =
1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path=
></svg></span></button></span><div class=3D"flex"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:b=
g-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items=
-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C=
11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.=
6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 =
12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H=
18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 1=
8.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961=
ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.47=
38C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 =
9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3=
782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 =
13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045=
 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 =
4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.004=
5Z" fill=3D"currentColor"></path></svg></span></button></span></div><span c=
lass=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2at:"=
 aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=
=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover=
:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5 ju=
ice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w=
-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.=
855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.=
306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241=
.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.83=
9 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.51=
6-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.=
5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6=
.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.37=
4-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-=
6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.7=
79-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.7=
25 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5=
-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.21=
5-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.=
081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=
=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0p=
x;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-tex=
t-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293=
 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1=
 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg=
></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div>=
</div></div></div></div></div><div class=3D"w-full text-token-text-primary"=
 dir=3D"auto" data-testid=3D"conversation-turn-108" data-scroll-anchor=3D"f=
alse"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:p=
x-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juic=
e:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col =
max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa29=
484-a808-45e7-aa37-a3c272336a29" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-st=
art"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.=
5 dark:bg-token-main-surface-secondary">=EA=B2=80=EC=A0=95=EB=A7=90=EA=B3=
=A0 =ED=9A=8C=EC=83=89=EC=9C=BC=EB=A1=9C<div class=3D"absolute bottom-0 rig=
ht-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"=
><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items=
-center justify-center rounded-full text-token-text-secondary transition ho=
ver:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.2=
93a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.7=
36.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.38=
6 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.5=
86 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></div></div></div></d=
iv></div></div></div></div><div class=3D"w-full text-token-text-primary" di=
r=3D"auto" data-testid=3D"conversation-turn-109" data-scroll-anchor=3D"fals=
e"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5=
 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:g=
ap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div cl=
ass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"p=
t-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center =
justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"37d87923-52a3-4919-a217-9ce3207503fc" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=90=EB=A6=AC=EC=99=80 =ED=
=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD=EC=9D=84 =EA=B0=80=EC=A7=84 =EC=9E=85=EB=
=A0=A5=EC=B0=BD=EC=9D=84 =EC=83=9D=EC=84=B1=ED=95=98=EB=A0=A4=EB=A9=B4, <co=
de>highlightbackground</code>=EC=99=80 <code>highlightcolor</code> =EC=98=
=B5=EC=85=98=EC=9D=84 =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC =EC=84=A4=EC=A0=
=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=95=84=EB=
=9E=98=EC=99=80 =EA=B0=99=EC=9D=B4 =EC=88=98=EC=A0=95=ED=95=98=EC=8B=9C=EB=
=A9=B4 =EB=90=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=88=98=EC=A0=95=EB=90=9C =EB=
=B6=80=EB=B6=84=EB=A7=8C =EB=B3=B4=EB=82=B4=EB=93=9C=EB=A6=BD=EB=8B=88=EB=
=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] bo=
rder-token-border-medium"><div class=3D"flex items-center relative text-tok=
en-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sa=
ns justify-between rounded-t-md"><span>python</span><div class=3D"flex item=
s-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-=
1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1=
 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2z=
m2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 =
9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rul=
e=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></=
span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=EC=84=B1 =EB=B6=80=
=EB=B6=84</span>
self.NicknameEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</s=
pan>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">2</span>, highlightbackground=3D<span class=3D"hljs-string">"#CCCC=
CC"</span>, highlightcolor=3D<span class=3D"hljs-string">"#CCCCCC"</span>, =
relief=3D<span class=3D"hljs-string">"solid"</span>)
self.NicknameEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">177.0</span>, width=3D<span class=3D"hljs-numbe=
r">522</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

self.IDEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</span>, =
bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs=
-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-number"=
>2</span>, highlightbackground=3D<span class=3D"hljs-string">"#CCCCCC"</spa=
n>, highlightcolor=3D<span class=3D"hljs-string">"#CCCCCC"</span>, relief=
=3D<span class=3D"hljs-string">"solid"</span>)
self.IDEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D<span =
class=3D"hljs-number">240.0</span>, width=3D<span class=3D"hljs-number">522=
</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=3D"hl=
js-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=
=B2=8C =EC=84=A4=EC=A0=95</span>

self.PasswordEntry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">3</s=
pan>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">2</span>, highlightbackground=3D<span class=3D"hljs-string">"#CCCC=
CC"</span>, highlightcolor=3D<span class=3D"hljs-string">"#CCCCCC"</span>, =
relief=3D<span class=3D"hljs-string">"solid"</span>, show=3D<span class=3D"=
hljs-string">'*'</span>)
self.PasswordEntry.place(x=3D<span class=3D"hljs-number">122.0</span>, y=3D=
<span class=3D"hljs-number">303.0</span>, width=3D<span class=3D"hljs-numbe=
r">520</span>, height=3D<span class=3D"hljs-number">34</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EB=8B=A4=
=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=80 =EC=84=A4=EC=A0=95=EC=9D=84 =EC=A0=81=
=EC=9A=A9=ED=95=A9=EB=8B=88=EB=8B=A4:</p><ul><li><code>bd=3D3</code>: =ED=
=85=8C=EB=91=90=EB=A6=AC =EB=91=90=EA=BB=98=EB=A5=BC =EC=84=A4=EC=A0=95</li=
><li><code>highlightthickness=3D2</code>: =EC=84=A0=ED=83=9D=EB=90=9C =EC=
=83=81=ED=83=9C=EC=97=90=EC=84=9C=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC =EB=
=91=90=EA=BB=98=EB=A5=BC =EC=84=A4=EC=A0=95</li><li><code>highlightbackgrou=
nd=3D"#CCCCCC"</code>: =EC=84=A0=ED=83=9D=EB=90=98=EC=A7=80 =EC=95=8A=EC=9D=
=80 =EC=83=81=ED=83=9C=EC=97=90=EC=84=9C=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=
=AC =EC=83=89=EC=83=81 (=ED=9A=8C=EC=83=89)</li><li><code>highlightcolor=3D=
"#CCCCCC"</code>: =EC=84=A0=ED=83=9D=EB=90=9C =EC=83=81=ED=83=9C=EC=97=90=
=EC=84=9C=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC =EC=83=89=EC=83=81 (=ED=9A=
=8C=EC=83=89)</li><li><code>relief=3D"solid"</code>: =ED=85=8C=EB=91=90=EB=
=A6=AC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=84=A4=EC=A0=95</li></ul><p>=
=EC=9D=B4=EB=A0=87=EA=B2=8C =ED=95=98=EB=A9=B4 =EC=9E=85=EB=A0=A5=EC=B0=BD=
=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC=EA=B0=80 =ED=9A=8C=EC=83=89=EC=9C=BC=
=EB=A1=9C =EC=84=A4=EC=A0=95=EB=90=98=EA=B3=A0 =ED=85=8C=EB=91=90=EB=A6=AC =
=EB=91=90=EA=BB=98=EA=B0=80 =EC=A1=B0=EC=A0=88=EB=90=A9=EB=8B=88=EB=8B=A4.<=
/p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice=
:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 =
bg-token-main-surface-primary md:absolute md:border md:border-token-border-=
light md:hidden"><div class=3D"flex items-center"><span class=3D"" data-sta=
te=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:b=
g-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items=
-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.4=
7485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019=
 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.447=
72 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.=
4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 =
13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61=
102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00=
005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296=
 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.=
8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.381=
1 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 2=
0.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71=
262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241=
 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.=
4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.022=
2 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14=
.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.16=
53 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z=
" fill=3D"currentColor"></path></svg></span></button></span><span class=3D"=
" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-seconda=
ry hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[3=
0px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg"=
 width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ic=
on-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 =
3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-=
3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1=
-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1=
 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><d=
iv class=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"r=
ounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary">=
<span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" c=
lip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 =
10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.=
7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4=
.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.3431=
5 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5=
054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.=
60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.9=
3226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 1=
0.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.65=
96 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 =
13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937=
 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C1=
9.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path=
></svg></span></button></span></div><span class=3D"" data-state=3D"closed">=
<button type=3D"button" id=3D"radix-:r2b5:" aria-haspopup=3D"menu" aria-exp=
anded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px=
-1 text-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary=
"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_s=
vg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.06=
4-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.04=
7.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-=
1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.79=
7c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path>=
<path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1=
.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-=
2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 =
0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.=
147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 =
2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 =
3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.87=
1-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.=
566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.=
192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=
=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.5=
86l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 =
0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></span></div></d=
iv></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><d=
iv class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"con=
versation-turn-110" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:p=
y-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:g=
ap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-a=
uthor-role=3D"user" data-message-id=3D"aaa213db-3233-4da0-8f58-363509c14a7b=
" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full ju=
ice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap=
-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-se=
condary">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from tkinter import ttk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        style =3D ttk.Style()
        style.configure("RoundedEntry.TEntry",
                        fieldbackground=3D"#FFFFFF",
                        background=3D"#FFFFFF",
                        foreground=3D"#000716",
                        borderwidth=3D10,  # =ED=85=8C=EB=91=90=EB=A6=AC =
=EB=91=90=EA=BB=98=EB=A5=BC =EB=91=90=EA=BB=8D=EA=B2=8C =EC=84=A4=EC=A0=95
                        relief=3D"solid")
        style.map("RoundedEntry.TEntry",
                background=3D[('active', '#FFFFFF')],
                fieldbackground=3D[('active', '#FFFFFF')])
        self.load_additional_images()

       # Entry =EC=9C=84=EC=A0=AF =EC=83=9D=EC=84=B1 =EB=B6=80=EB=B6=84
        self.NicknameEntry =3D tk.Entry(self, bd=3D2, bg=3D"#FFFFFF", fg=3D=
"#000716", highlightthickness=3D1, relief=3D"solid")
        self.NicknameEntry.place(x=3D122.0, y=3D177.0, width=3D522, height=
=3D34)  # =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=B2=
=8C =EC=84=A4=EC=A0=95

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D tk.Entry(self, bd=3D2, bg=3D"#FFFFFF", fg=3D"#0007=
16", highlightthickness=3D2, relief=3D"solid")
        self.IDEntry.place(x=3D122.0, y=3D240.0, width=3D522, height=3D34) =
 # =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=B2=8C =EC=
=84=A4=EC=A0=95
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D tk.Entry(self, bd=3D2, bg=3D"#FFFFFF", fg=3D=
"#000716", highlightthickness=3D2, relief=3D"solid", show=3D'*')
        self.PasswordEntry.place(x=3D122.0, y=3D303.0, width=3D520, height=
=3D34)  # =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=B2=
=8C =EC=84=A4=EC=A0=95

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def load_additional_images(self):
        left_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=A2=8C.png").resize((66, 102), Image.Resampling.LANCZOS)
        right_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=9A=B0.png").resize((66, 93), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D"=
#FFFFFF")
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D230, y=3D22)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D"#FFFFFF")
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D469, y=3D23)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            if len(password) =3D=3D 0:
                messagebox.showinfo("=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =
=EB=AF=B8=EA=B8=B0=EC=9E=85", "=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=
=BC =EC=9E=85=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            self.SwitchToLoginPage()

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=EA=B7=B8 =EA=B8=B0=EC=A1=B5=EC=97=90 =EC=9E=85=EB=A0=A5=EC=B0=BD =EB=A7=90=
=EA=B3=A0 =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =ED=9A=8C=EC=83=89 =ED=85=8C=
=EB=91=90=EB=A6=AC=EC=97=90 =ED=9D=B0=EC=83=89 =EB=B0=94=ED=83=95=EC=9C=BC=
=EB=A1=9C =ED=95=98=EA=B3=A0 =EA=B7=B8=EA=B2=83=EC=9D=98 border radius=EB=
=A5=BC =EC=A2=80 =EA=B9=8E=EC=95=84=EC=A4=98 =EC=98=A4=EB=A5=98 =EC=95=88=
=EC=83=9D=EA=B8=B0=EA=B2=8C =EB=94=94=EC=9E=90=EC=9D=B8=EB=A7=8C =EC=A1=B0=
=EC=A0=95=ED=95=98=EA=B3=A0 ttk=EB=A1=9C =ED=95=98=EC=A7=80=EB=A7=88<div cl=
ass=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-ho=
ver/conversation-turn:block"><span class=3D"" data-state=3D"closed"><button=
 class=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-=
text-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.=
094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 =
1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-=
.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 =
0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></di=
v></div></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-11=
1" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 tex=
t-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex f=
lex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40r=
em] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative it=
ems-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avat=
ar flex h-6 w-6 items-center justify-center overflow-hidden rounded-full ju=
ice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center =
justify-center bg-token-main-surface-primary text-token-text-primary h-8 w-=
8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"=
-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.524=
1 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.=
68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098=
 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.=
1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.=
16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.3008=
5 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.0=
2839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.=
5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 =
28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8=
123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492=
C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40=
.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.17=
04 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 =
35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.837=
1 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 1=
6.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.=
7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 =
26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2=
825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C=
29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.194=
6 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM=
6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.=
0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233=
 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731=
 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29=
.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.86=
43 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064Z=
M4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10=
.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.263=
8 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 2=
6.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.13=
07 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4=
.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6=
194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333=
 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33=
.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.424=
4 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28=
.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.60=
47 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 2=
0.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.246=
4 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.=
6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.271=
2L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C1=
6.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53=
903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044=
 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35=
.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9=
893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098=
 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.=
38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.26=
49 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 2=
2.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.863=
56 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 =
21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.=
4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></di=
v></div></div></div><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><di=
v class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-rol=
e=3D"assistant" data-message-id=3D"8385e806-5518-47f7-a180-5c781be67b93" di=
r=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whi=
tespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:=
items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 j=
uice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full=
 break-words dark:prose-invert light"><p>=ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=
=90=EB=A6=AC=EC=97=90 =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD=EC=9D=84 =EA=B0=
=80=EC=A7=80=EB=A9=B0, =EB=AA=A8=EC=84=9C=EB=A6=AC=EA=B0=80 =EB=91=A5=EA=B7=
=BC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EB=A7=8C=EB=93=A4=EA=B8=B0 =EC=9C=
=84=ED=95=B4 <code>canvas</code>=EB=A5=BC =EC=9D=B4=EC=9A=A9=ED=95=B4 =EC=
=A7=81=EC=A0=91 =EA=B7=B8=EB=A6=AC=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EC=
=82=AC=EC=9A=A9=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =
=EC=95=84=EB=9E=98=EB=8A=94 =EC=88=98=EC=A0=95=EB=90=9C =EB=B6=80=EB=B6=84=
=EC=9E=85=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded=
-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-cen=
ter relative text-token-text-secondary bg-token-main-surface-secondary px-4=
 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span><d=
iv class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0=
 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3=
v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h=
-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 =
0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=
=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text=
-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-p=
ython"><span class=3D"hljs-comment"># =EC=9E=85=EB=A0=A5=EC=B0=BD =EC=83=9D=
=EC=84=B1 =EB=B6=80=EB=B6=84=EC=97=90=EC=84=9C Canvas=EB=A5=BC =EC=9D=B4=EC=
=9A=A9=ED=95=B4 =EC=A7=81=EC=A0=91 =EA=B7=B8=EB=A6=AC=EA=B8=B0</span>
<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, width=
, height</span>):
    entry_canvas =3D tk.Canvas(self, width=3Dwidth, height=3Dheight, bg=3D<=
span class=3D"hljs-string">'#FFFFFF'</span>, highlightthickness=3D<span cla=
ss=3D"hljs-number">0</span>)
    entry_canvas.create_rectangle(<span class=3D"hljs-number">10</span>, <s=
pan class=3D"hljs-number">10</span>, width-<span class=3D"hljs-number">10</=
span>, height-<span class=3D"hljs-number">10</span>, outline=3D<span class=
=3D"hljs-string">"#CCCCCC"</span>, fill=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, width=3D<span class=3D"hljs-number">2</span>)
    entry_canvas.create_arc(<span class=3D"hljs-number">0</span>, <span cla=
ss=3D"hljs-number">0</span>, <span class=3D"hljs-number">20</span>, <span c=
lass=3D"hljs-number">20</span>, start=3D<span class=3D"hljs-number">90</spa=
n>, extent=3D<span class=3D"hljs-number">90</span>, outline=3D<span class=
=3D"hljs-string">"#CCCCCC"</span>, fill=3D<span class=3D"hljs-string">"#FFF=
FFF"</span>, width=3D<span class=3D"hljs-number">2</span>)
    entry_canvas.create_arc(width-<span class=3D"hljs-number">20</span>, <s=
pan class=3D"hljs-number">0</span>, width, <span class=3D"hljs-number">20</=
span>, start=3D<span class=3D"hljs-number">0</span>, extent=3D<span class=
=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-string">"#CCCCCC"=
</span>, fill=3D<span class=3D"hljs-string">"#FFFFFF"</span>, width=3D<span=
 class=3D"hljs-number">2</span>)
    entry_canvas.create_arc(<span class=3D"hljs-number">0</span>, height-<s=
pan class=3D"hljs-number">20</span>, <span class=3D"hljs-number">20</span>,=
 height, start=3D<span class=3D"hljs-number">180</span>, extent=3D<span cla=
ss=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-string">"#CCCCC=
C"</span>, fill=3D<span class=3D"hljs-string">"#FFFFFF"</span>, width=3D<sp=
an class=3D"hljs-number">2</span>)
    entry_canvas.create_arc(width-<span class=3D"hljs-number">20</span>, he=
ight-<span class=3D"hljs-number">20</span>, width, height, start=3D<span cl=
ass=3D"hljs-number">270</span>, extent=3D<span class=3D"hljs-number">90</sp=
an>, outline=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fill=3D<span c=
lass=3D"hljs-string">"#FFFFFF"</span>, width=3D<span class=3D"hljs-number">=
2</span>)

    entry_canvas.place(x=3Dx, y=3Dy)

    entry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">0</span>, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-s=
tring">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-number">0=
</span>)
    entry_window =3D entry_canvas.create_window(width/<span class=3D"hljs-n=
umber">2</span>, height/<span class=3D"hljs-number">2</span>, anchor=3D<spa=
n class=3D"hljs-string">'center'</span>, window=3Dentry, width=3Dwidth-<spa=
n class=3D"hljs-number">20</span>, height=3Dheight-<span class=3D"hljs-numb=
er">20</span>)

    <span class=3D"hljs-keyword">return</span> entry

self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hljs-number=
">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span class=3D"hl=
js-number">522</span>, <span class=3D"hljs-number">40</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-number">122.=
0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"hljs-num=
ber">522</span>, <span class=3D"hljs-number">40</span>)  <span class=3D"hlj=
s-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=
=B2=8C =EC=84=A4=EC=A0=95</span>

self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hljs-number=
">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span class=3D"hl=
js-number">522</span>, <span class=3D"hljs-number">40</span>)  <span class=
=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
</code></div></div></pre><p>=EC=9D=B4 =EB=B0=A9=EB=B2=95=EC=9D=80 Canvas=EB=
=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=85=8C=EB=91=90=EB=A6=AC=EC=
=99=80 =EB=AA=A8=EC=84=9C=EB=A6=AC=EB=A5=BC =EC=A7=81=EC=A0=91 =EA=B7=B8=EB=
=A6=B0 =EB=8B=A4=EC=9D=8C, Entry=EB=A5=BC Canvas =EC=9C=84=EC=97=90 =EB=B0=
=B0=EC=B9=98=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A1=9C =EC=9D=B8=ED=95=
=B4 =EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC=EC=99=
=80 =EB=AA=A8=EC=84=9C=EB=A6=AC=EA=B0=80 =EB=91=A5=EA=B7=BC =ED=98=95=ED=83=
=9C=EB=A1=9C =EB=82=98=ED=83=80=EB=82=A9=EB=8B=88=EB=8B=A4.</p></div></div>=
</div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div cl=
ass=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-s=
urface-primary md:absolute md:border md:border-token-border-light md:hidden=
"><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify=
-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.=
24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00=
005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.=
25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11=
 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4=
.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.3431=
5 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.8=
1069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.7583=
3C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15=
.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.89=
27 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 =
20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.2=
2726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679=
 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18=
.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.15=
11 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 1=
3.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6=
004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"curre=
ntColor"></path></svg></span></button></span><span class=3D"" data-state=3D=
"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-tok=
en-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-cent=
er justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" h=
eight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3=
 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 =
1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0=
-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" =
clip-rule=3D"evenodd"></path></svg></span></button></span><div class=3D"fle=
x"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-=
token-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"=
flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" heigh=
t=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"eve=
nodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922=
L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15=
H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 =
3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C=
21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.=
3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6=
.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451=
C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 =
9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9=
153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.00=
45 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.3127=
8 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 =
18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span><=
/button></span></div><span class=3D"" data-state=3D"closed"><button type=3D=
"button" id=3D"radix-:r2bd:" aria-haspopup=3D"menu" aria-expanded=3D"false"=
 data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-t=
ext-secondary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D=
"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&am=
p;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" w=
idth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D=
"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.94=
3 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436=
 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792=
.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1=
.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"c=
urrentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 =
6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 =
1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-=
.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0=
 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504=
-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.=
861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.5=
5 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069=
-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></p=
ath></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; p=
adding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/200=
0/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 =
1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rul=
e=3D"evenodd"></path></svg></div></button></span></div></div></div><div cla=
ss=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-11=
2" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 tex=
t-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex f=
lex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40r=
em] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w=
-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"us=
er" data-message-id=3D"aaa23e75-239d-4071-b4aa-e5b3e8bb3cb6" dir=3D"auto" c=
lass=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-=
wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end ov=
erflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:h=
idden items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded=
-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=88=
=98=EC=A0=95=EC=82=AC=ED=95=AD =EC=A0=81=EC=9A=A9=ED=95=9C =EC=A0=84=EC=B2=
=B4 =EB=B3=B4=EC=97=AC=EC=A4=98<div class=3D"absolute bottom-0 right-full t=
op-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center j=
ustify-center rounded-full text-token-text-secondary transition hover:bg-to=
ken-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536=
 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 =
1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a=
3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5=
 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"even=
odd"></path></svg></button></span></div></div></div></div></div></div></div=
></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"aut=
o" data-testid=3D"conversation-turn-113" data-scroll-anchor=3D"false"><div =
class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1=
 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 jui=
ce:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"f=
lex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 ju=
ice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-=
center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"rela=
tive p-1 rounded-sm flex items-center justify-center bg-token-main-surface-=
primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" vi=
ewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><pat=
h d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.=
8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 =
32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.78=
93 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.305=
8 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624=
 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.175=
05C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905=
 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.=
81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.08=
92 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 3=
7.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3=
747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054=
 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33=
.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728=
 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.=
8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.88=
74 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36=
.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.496=
4 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21=
.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867=
 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.=
0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.197=
42 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L=
13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 =
14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7=
283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012=
L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33=
.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55=
279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071=
V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6=
4893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089=
 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.=
5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.0386=
2 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L2=
5.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4=
769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 =
18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3=
617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717=
 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.=
6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 =
31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8=
717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 =
10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.=
9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.120=
7 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C2=
9.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53=
945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.242=
4 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C1=
0.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2=
173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264=
C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9=
3941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024=
 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14=
.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.49=
78L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D=
"currentColor"></path></svg></div></div></div></div></div><div class=3D"gro=
up/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div=
 class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col ma=
x-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"4e=
c22e81-bc83-4b5f-a406-57e7254e47c9" dir=3D"auto" class=3D"min-h-[20px] text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>=EC=95=84=EB=9E=98=EB=8A=94 =EC=88=98=EC=A0=95 =EC=82=AC=ED=95=AD=EC=9D=
=B4 =EC=A0=81=EC=9A=A9=EB=90=9C =EC=A0=84=EC=B2=B4 =EC=BD=94=EB=93=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md bo=
rder-[0.5px] border-token-border-medium"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>python</span><div cla=
ss=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-=
sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3=
-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 =
3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1=
 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-=
1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        <span class=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=
=EC=84=B1 =EB=B6=80=EB=B6=84</span>
        self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <spa=
n class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =
=ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-numb=
er">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"=
hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <span clas=
s=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <spa=
n class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =
=ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, w=
idth, height</span>):
        entry_canvas =3D tk.Canvas(self, width=3Dwidth, height=3Dheight, bg=
=3D<span class=3D"hljs-string">'#FFFFFF'</span>, highlightthickness=3D<span=
 class=3D"hljs-number">0</span>)
        entry_canvas.create_rectangle(<span class=3D"hljs-number">10</span>=
, <span class=3D"hljs-number">10</span>, width-<span class=3D"hljs-number">=
10</span>, height-<span class=3D"hljs-number">10</span>, outline=3D<span cl=
ass=3D"hljs-string">"#CCCCCC"</span>, fill=3D<span class=3D"hljs-string">"#=
FFFFFF"</span>, width=3D<span class=3D"hljs-number">2</span>)
        entry_canvas.create_arc(<span class=3D"hljs-number">0</span>, <span=
 class=3D"hljs-number">0</span>, <span class=3D"hljs-number">20</span>, <sp=
an class=3D"hljs-number">20</span>, start=3D<span class=3D"hljs-number">90<=
/span>, extent=3D<span class=3D"hljs-number">90</span>, outline=3D<span cla=
ss=3D"hljs-string">"#CCCCCC"</span>, fill=3D<span class=3D"hljs-string">"#F=
FFFFF"</span>, width=3D<span class=3D"hljs-number">2</span>)
        entry_canvas.create_arc(width-<span class=3D"hljs-number">20</span>=
, <span class=3D"hljs-number">0</span>, width, <span class=3D"hljs-number">=
20</span>, start=3D<span class=3D"hljs-number">0</span>, extent=3D<span cla=
ss=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-string">"#CCCCC=
C"</span>, fill=3D<span class=3D"hljs-string">"#FFFFFF"</span>, width=3D<sp=
an class=3D"hljs-number">2</span>)
        entry_canvas.create_arc(<span class=3D"hljs-number">0</span>, heigh=
t-<span class=3D"hljs-number">20</span>, <span class=3D"hljs-number">20</sp=
an>, height, start=3D<span class=3D"hljs-number">180</span>, extent=3D<span=
 class=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-string">"#C=
CCCCC"</span>, fill=3D<span class=3D"hljs-string">"#FFFFFF"</span>, width=
=3D<span class=3D"hljs-number">2</span>)
        entry_canvas.create_arc(width-<span class=3D"hljs-number">20</span>=
, height-<span class=3D"hljs-number">20</span>, width, height, start=3D<spa=
n class=3D"hljs-number">270</span>, extent=3D<span class=3D"hljs-number">90=
</span>, outline=3D<span class=3D"hljs-string">"#CCCCCC"</span>, fill=3D<sp=
an class=3D"hljs-string">"#FFFFFF"</span>, width=3D<span class=3D"hljs-numb=
er">2</span>)

        entry_canvas.place(x=3Dx, y=3Dy)

        entry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">0</span>,=
 bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hlj=
s-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-number=
">0</span>)
        entry_window =3D entry_canvas.create_window(width/<span class=3D"hl=
js-number">2</span>, height/<span class=3D"hljs-number">2</span>, anchor=3D=
<span class=3D"hljs-string">'center'</span>, window=3Dentry, width=3Dwidth-=
<span class=3D"hljs-number">20</span>, height=3Dheight-<span class=3D"hljs-=
number">20</span>)

        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EA=B0=81=
 =EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=84 <code>Canvas</code>=EB=A5=BC =EC=9D=
=B4=EC=9A=A9=ED=95=B4 =ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=90=EB=A6=AC=EC=99=
=80 =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD, =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=
=84=9C=EB=A6=AC=EB=A1=9C =EC=83=9D=EC=84=B1=ED=95=98=EA=B3=A0 =EC=9E=88=EC=
=8A=B5=EB=8B=88=EB=8B=A4. `create_rounded</p></div></div></div></div><div c=
lass=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-cente=
r justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:=
absolute md:border md:border-token-border-light md:hidden"><div class=3D"fl=
ex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"ro=
unded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><=
span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cl=
ip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54=
132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00=
005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 1=
6.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.090=
2V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 2=
1.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 1=
5V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3=
166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 2=
2.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1=
302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059=
 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20=
.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.620=
17 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8=
.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1=
094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483=
C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.=
9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.268=
7 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></=
svg></span></button></span><span class=3D"" data-state=3D"closed"><button c=
lass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-se=
condary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"=
><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg></span></button></span><div class=3D"flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8=
727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355=
C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476=
 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 =
2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 =
19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.=
8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5=
.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62=
036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L=
9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3=
721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.55=
68 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0=
045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.00=
45 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></span><=
/div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"r=
adix-:r2bl:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed" class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-=
[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items-cent=
er pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full i=
con-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=
=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503=
-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.5=
04.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.5=
16 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-=
.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=
=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.3=
66 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.=
467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.1=
05-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c=
2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0=
 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888=
 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1=
.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.2=
35-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></di=
v><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0=
px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm =
text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.41=
4 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd=
"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 l=
g:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-114" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa25151-a12f-4380-bbe5-864d32fcfff4" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"flex w-[70%] flex-row items-center justify=
-end gap-1"><div class=3D"overflow-hidden rounded-lg w-full h-full max-w-96=
 max-h-64"><div class=3D"relative flex h-auto w-full max-w-lg items-center =
justify-center overflow-hidden bg-token-main-surface-secondary text-token-t=
ext-tertiary"><button type=3D"button" aria-haspopup=3D"dialog" aria-expande=
d=3D"false" aria-controls=3D"radix-:r2gn:" data-state=3D"closed" class=3D"o=
verflow-hidden rounded-lg w-full h-full max-w-96 max-h-64"><img alt=3D"=EC=
=97=85=EB=A1=9C=EB=93=9C=ED=95=9C =EC=9D=B4=EB=AF=B8=EC=A7=80" loading=3D"l=
azy" width=3D"1372" height=3D"396" decoding=3D"async" data-nimg=3D"1" class=
=3D"max-w-full object-cover object-center overflow-hidden rounded-lg w-full=
 h-full max-w-96 max-h-64 transition-opacity duration-300 opacity-100" src=
=3D"https://files.oaiusercontent.com/file-tSKzWy6Ks2MzsuvLkF0gAusl?se=3D202=
4-05-28T03%3A10%3A45Z&amp;sp=3Dr&amp;sv=3D2023-11-03&amp;sr=3Db&amp;rscc=3D=
max-age%3D299%2C%20immutable&amp;rscd=3Dattachment%3B%20filename%3Dimage.pn=
g&amp;sig=3D0StmC6QaeyKnLzjVrMbDc3bdnMV%2BwcqR9AO4t/pBVSo%3D" style=3D"colo=
r: transparent;"></button></div></div></div><div class=3D"relative max-w-[7=
0%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-seconda=
ry rounded-tr-lg">=EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=B4 =EC=9D=B4=EB=A0=87=
=EA=B2=8C =EB=90=98=EB=8A=94=EB=8D=B0?</div></div></div></div></div></div><=
/div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto"=
 data-testid=3D"conversation-turn-115" data-scroll-anchor=3D"false"><div cl=
ass=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 x=
l:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice=
:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"fle=
x-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juic=
e:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-ce=
nter overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relati=
ve p-1 rounded-sm flex items-center justify-center bg-token-main-surface-pr=
imary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" view=
Box=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path=
 d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8=
409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 3=
2.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.789=
3 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058=
 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 =
9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.1750=
5C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 =
16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.8=
1966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.089=
2 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37=
.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.37=
47 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 =
26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.=
5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 =
29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8=
556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.887=
4 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.=
0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964=
 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.=
0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 =
21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0=
892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.1974=
2 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L1=
3.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 1=
4.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.72=
83 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L=
16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.=
9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.552=
79 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V=
19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64=
893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 =
15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5=
082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862=
 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25=
.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.47=
69 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 1=
8.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.36=
17 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 =
32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6=
066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 3=
1.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.87=
17L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 1=
0.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9=
783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207=
 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29=
.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.539=
45 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424=
 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10=
.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.21=
73 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C=
16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93=
941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 =
9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.=
2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.497=
8L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"=
currentColor"></path></svg></div></div></div></div></div><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max=
-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"0a2=
3793f-c757-4955-8a8f-9b6371115923" dir=3D"auto" class=3D"min-h-[20px] text-=
message flex flex-col items-start whitespace-pre-wrap break-words [.text-me=
ssage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div =
class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]=
"><div class=3D"markdown prose w-full break-words dark:prose-invert light">=
<p>=EC=9E=85=EB=A0=A5=EC=B0=BD =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=B4 =EC=98=
=88=EC=83=81=ED=95=9C =EA=B2=83=EA=B3=BC =EB=8B=A4=EB=A5=B4=EA=B2=8C =EC=B6=
=9C=EB=A0=A5=EB=90=98=EB=8A=94 =EB=AC=B8=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=
=B0=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=
=98 =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EC=A1=B0=EC=A0=95=ED=95=B4=EB=B3=
=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=95=84=EB=9E=98=EB=8A=94 =EC=88=
=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pr=
e><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-bor=
der-medium"><div class=3D"flex items-center relative text-token-text-second=
ary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-bet=
ween rounded-t-md"><span>python</span><div class=3D"flex items-center"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center=
"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 =
1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 =
1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1=
v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"><=
/path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></di=
v><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code =
class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword"=
>import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        <span class=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=
=EC=84=B1 =EB=B6=80=EB=B6=84</span>
        self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <spa=
n class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =
=ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-numb=
er">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"=
hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <span clas=
s=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=
=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>)  <spa=
n class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =EB=8D=94 =
=ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, w=
idth, height</span>):
        entry_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string">"#C=
CCCCC"</span>, bd=3D<span class=3D"hljs-number">2</span>, relief=3D<span cl=
ass=3D"hljs-string">"solid"</span>)
        entry_frame.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)
        entry =3D tk.Entry(entry_frame, bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>)
        entry.place(x=3D<span class=3D"hljs-number">10</span>, y=3D<span cl=
ass=3D"hljs-number">5</span>, width=3Dwidth-<span class=3D"hljs-number">20<=
/span>, height=3Dheight-<span class=3D"hljs-number">10</span>)
        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C =
<code>create_rounded_entry</code> =ED=95=A8=EC=88=98=EB=A5=BC =EC=88=98=EC=
=A0=95=ED=95=98=EC=97=AC =EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=84 <code>Frame</=
code>=EC=9C=BC=EB=A1=9C =EA=B0=90=EC=8B=B8=EA=B3=A0, =EA=B7=B8 =EC=95=88=EC=
=97=90 <code>Entry</code>=EB=A5=BC =EB=B0=B0=EC=B9=98=ED=95=98=EC=97=AC =ED=
=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EB=91=90=EA=BB=8D=EA=B2=8C =ED=95=98=EA=
=B3=A0 =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EB=A5=BC =EA=B5=AC=ED=
=98=84=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4 =EB=B0=A9=EC=8B=9D=EC=
=9C=BC=EB=A1=9C =ED=85=8C=EB=91=90=EB=A6=AC=EC=99=80 =EB=AA=A8=EC=84=9C=EB=
=A6=AC=EB=A5=BC =EC=A1=B0=EC=A0=88=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 e=
mpty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-x=
l p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:bor=
der-token-border-light md:hidden"><div class=3D"flex items-center"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-=
secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30p=
x] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.4912=
9 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V1=
5C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10=
.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701=
C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.8=
1069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.343=
15 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.093=
13 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12=
.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.86=
95 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C=
20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.9=
8627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.79=
94 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18=
.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.56=
04C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 =
14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4=
996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218=
 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></spa=
n><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-t=
oken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"f=
lex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1=
-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 =
1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1=
 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span><=
/button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify=
-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466=
 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19=
.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 =
9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614=
 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.00=
45C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2=
9589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.7=
46 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C=
9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5=
002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376=
 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V=
5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.447=
72 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"cur=
rentColor"></path></svg></span></button></span></div><span class=3D"" data-=
state=3D"closed"><button type=3D"button" id=3D"radix-:r2bs:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-116" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa2c150-1fdb-4c10-9c=
88-1090c14138e0" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"flex w-[70%] flex-row items-center justify-end gap-1"><div class=3D"ove=
rflow-hidden rounded-lg w-full h-full max-w-96 max-h-64"><div class=3D"rela=
tive flex h-auto w-full max-w-lg items-center justify-center overflow-hidde=
n bg-token-main-surface-secondary text-token-text-tertiary"><button type=3D=
"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-controls=3D"=
radix-:r2gq:" data-state=3D"closed" class=3D"overflow-hidden rounded-lg w-f=
ull h-full max-w-96 max-h-64"><img alt=3D"=EC=97=85=EB=A1=9C=EB=93=9C=ED=95=
=9C =EC=9D=B4=EB=AF=B8=EC=A7=80" loading=3D"lazy" width=3D"440" height=3D"3=
70" decoding=3D"async" data-nimg=3D"1" class=3D"max-w-full object-cover obj=
ect-center overflow-hidden rounded-lg w-full h-full max-w-96 max-h-64 trans=
ition-opacity duration-300 opacity-100" src=3D"https://files.oaiusercontent=
.com/file-DhfF4bWA5W5QSp6Pd8EGqlpi?se=3D2024-05-28T03%3A10%3A45Z&amp;sp=3Dr=
&amp;sv=3D2023-11-03&amp;sr=3Db&amp;rscc=3Dmax-age%3D299%2C%20immutable&amp=
;rscd=3Dattachment%3B%20filename%3Dimage.png&amp;sig=3D3Q3lec0ZNn3k0ebYk5Yz=
%2Bi6YyDJKysFyweIGpv7ENqc%3D" style=3D"color: transparent;"></button></div>=
</div></div><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-=
5 py-2.5 dark:bg-token-main-surface-secondary rounded-tr-lg">=EB=94=94=EC=
=9E=90=EC=9D=B8=EC=9D=84 =EC=97=AC=EA=B8=B0 =EB=B3=B4=EC=9D=B4=EB=8A=94 =EC=
=9E=85=EB=A0=A5=EC=B0=BD=EB=93=A4 =EC=B2=98=EB=9F=BC =ED=95=B4=EB=8B=AC=EB=
=9D=BC=EA=B3=A0</div></div></div></div></div></div></div></div></div><div c=
lass=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"convers=
ation-turn-117" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[1=
8px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"m=
x-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl =
lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-co=
l relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"g=
izmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex =
items-center justify-center bg-token-main-surface-primary text-token-text-p=
rimary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"ee677a62-9896-42bd-84cf-61=
31837b0158" dir=3D"auto" class=3D"text-message flex flex-col items-start wh=
itespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice=
:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 =
juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-ful=
l break-words dark:prose-invert light"><p>=EC=9E=85=EB=A0=A5=EC=B0=BD=EC=9D=
=84 =EC=B2=A8=EB=B6=80=ED=95=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=B2=98=EB=9F=
=BC =EB=94=94=EC=9E=90=EC=9D=B8=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4 =EB=8B=
=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=
=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><ol><li>=EB=
=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EC=9D=98 =ED=94=84=EB=A0=88=EC=
=9E=84=EC=9D=84 =EB=A7=8C=EB=93=A4=EC=96=B4 <code>Entry</code> =EC=9C=84=EC=
=A0=AF=EC=9D=84 =EA=B0=90=EC=8B=B8=EA=B3=A0</li><li>=ED=85=8C=EB=91=90=EB=
=A6=AC =EC=83=89=EC=83=81=EC=9D=84 =ED=9A=8C=EC=83=89=EC=9C=BC=EB=A1=9C =EC=
=84=A4=EC=A0=95</li><li><code>Entry</code> =EB=82=B4=EB=B6=80=EB=A5=BC =ED=
=9D=B0=EC=83=89=EC=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95</li><li>=EB=86=92=EC=
=9D=B4=EB=A5=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80 =EC=9C=A0=EC=82=AC=ED=
=95=98=EA=B2=8C =EC=A1=B0=EC=A0=95</li></ol><p>=EC=95=84=EB=9E=98=EB=8A=94 =
=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4:<=
/p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-tok=
en-border-medium"><div class=3D"flex items-center relative text-token-text-=
secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>python</span><div class=3D"flex items-center=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-=
center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></di=
v></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr">=
<code class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-ke=
yword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        <span class=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=
=EC=84=B1 =EB=B6=80=EB=B6=84</span>
        self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span=
 class=3D"hljs-string">"=EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=A0=A5"</sp=
an>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =
=EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-numb=
er">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"=
hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span class=
=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =EC=9E=85=EB=A0=A5"<=
/span>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=
=80 =EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span=
 class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=A0=A5"</sp=
an>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =
=EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, w=
idth, height, placeholder</span>):
        entry_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string">"#C=
CCCCC"</span>, bd=3D<span class=3D"hljs-number">2</span>, relief=3D<span cl=
ass=3D"hljs-string">"solid"</span>)
        entry_frame.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)
       =20
        entry_canvas =3D Canvas(entry_frame, bg=3D<span class=3D"hljs-strin=
g">"#FFFFFF"</span>, highlightthickness=3D<span class=3D"hljs-number">0</sp=
an>)
        entry_canvas.create_rectangle(<span class=3D"hljs-number">10</span>=
, <span class=3D"hljs-number">10</span>, width-<span class=3D"hljs-number">=
10</span>, height-<span class=3D"hljs-number">10</span>, outline=3D<span cl=
ass=3D"hljs-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2=
</span>, fill=3D<span class=3D"hljs-string">"#FFFFFF"</span>, smooth=3D<spa=
n class=3D"hljs-literal">True</span>, splinesteps=3D<span class=3D"hljs-num=
ber">36</span>)
        entry_canvas.pack(fill=3D<span class=3D"hljs-string">"both"</span>,=
 expand=3D<span class=3D"hljs-literal">True</span>)
       =20
        entry =3D tk.Entry(entry_frame, bd=3D<span class=3D"hljs-number">0<=
/span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=
=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs=
-number">0</span>, relief=3D<span class=3D"hljs-string">"flat"</span>)
        entry.insert(<span class=3D"hljs-number">0</span>, placeholder)
        entry.place(x=3D<span class=3D"hljs-number">10</span>, y=3D<span cl=
ass=3D"hljs-number">5</span>, width=3Dwidth-<span class=3D"hljs-number">20<=
/span>, height=3Dheight-<span class=3D"hljs-number">10</span>)
        entry.bind(<span class=3D"hljs-string">"&lt;FocusIn&gt;"</span>, <s=
pan class=3D"hljs-keyword">lambda</span> event: self.clear_placeholder(even=
t, entry, placeholder))
        entry.bind(<span class=3D"hljs-string">"&lt;FocusOut&gt;"</span>, <=
span class=3D"hljs-keyword">lambda</span> event: self.set_placeholder(event=
, entry, placeholder))
       =20
        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">clear_placeholder</span>(<span class=3D"hljs-params">self, event, ent=
ry, placeholder</span>):
        <span class=3D"hljs-keyword">if</span> entry.get() =3D=3D placehold=
er:
            entry.delete(<span class=3D"hljs-number">0</span>, tk.END)
            entry.config(fg=3D<span class=3D"hljs-string">"#000000"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">set_placeholder</span>(<span class=3D"hljs-params">self, event, entry=
, placeholder</span>):
        <span class=3D"hljs-keyword">if</span> entry.get() =3D=3D <span cla=
ss=3D"hljs-string">""</span>:
            entry.insert(<span class=3D"hljs-number">0</span>, placeholder)
            entry.config(fg=3D<span class=3D"hljs-string">"#CCCCCC"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EA=B0=81 Entry =EC=9C=84=EC=A0=AF=EC=9D=84 =EA=B0=90=EC=8B=B8=EB=
=8A=94 =ED=94=84=EB=A0=88=EC=9E=84=EC=9D=84 =EB=A7=8C=EB=93=A4=EC=96=B4 =EB=
=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EB=A5=BC =EA=B0=96=EB=8F=84=EB=
=A1=9D =ED=96=88=EA=B3=A0, =ED=85=8C=EB=91=90=EB=A6=AC =EC=83=89=EC=83=81=
=EC=9D=84 =ED=9A=8C=EC=83=89=EC=9C=BC=EB=A1=9C, =EB=82=B4=EB=B6=80=EB=A5=BC=
 =ED=9D=B0=EC=83=89=EC=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4. Placeholder =EA=B8=B0=EB=8A=A5=EB=8F=84 =EC=B6=94=EA=B0=
=80=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div cl=
ass=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center=
 justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:a=
bsolute md:border md:border-token-border-light md:hidden"><div class=3D"fle=
x items-center"><span class=3D"" data-state=3D"closed"><button class=3D"rou=
nded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><s=
pan class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.541=
32L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.000=
05 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16=
.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902=
V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21=
.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15=
V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.31=
66 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22=
.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.13=
02C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 =
16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.=
9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.6201=
7 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.=
09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.10=
94 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C=
15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9=
113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687=
 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></s=
vg></span></button></span><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg></span></button></span><div class=3D"flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8=
727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355=
C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476=
 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 =
2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 =
19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.=
8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5=
.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62=
036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L=
9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3=
721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.55=
68 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0=
045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.00=
45 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></span><=
/div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"r=
adix-:r2c3:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed" class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-=
[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items-cent=
er pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full i=
con-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=
=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503=
-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.5=
04.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.5=
16 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-=
.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=
=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.3=
66 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.=
467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.1=
05-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c=
2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0=
 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888=
 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1=
.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.2=
35-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></di=
v><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0=
px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm =
text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.41=
4 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd=
"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 l=
g:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-118" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa2fb5f-7953-4871-bc4d-e57e4197ca37" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4=
f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">Traceback (most recen=
t call last):
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 204, in &lt;module&gt;
    app =3D SignUpPage()
          ^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 31, in __init__
    self.NicknameEntry =3D self.create_rounded_entry(122.0, 177.0, 522, 40,=
 "=EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=A0=A5")  # =EB=86=92=EC=9D=B4=EB=
=A5=BC =EC=A2=80 =EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^=
^^^^^^^^^^^^^
  File "c:\Users\=ED=83=9C=ED=98=84\Downloads\soft\soft1\SignUpPage.py", li=
ne 109, in create_rounded_entry
    entry_canvas.create_rectangle(10, 10, width-10, height-10, outline=3D"#=
CCCCCC", width=3D2, fill=3D"#FFFFFF", smooth=3DTrue, splinesteps=3D36)
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 2880, in create_rectangle
    return self._create('rectangle', args, kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\=ED=83=9C=ED=98=84\AppData\Local\Programs\Python\Python312=
\Lib\tkinter\__init__.py", line 2850, in _create
    return self.tk.getint(self.tk.call(
                          ^^^^^^^^^^^^^
_tkinter.TclError: unknown option "-smooth"<div class=3D"absolute bottom-0 =
right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:blo=
ck"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 it=
ems-center justify-center rounded-full text-token-text-secondary transition=
 hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000=
/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=
=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293=
 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l=
-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-=
6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L=
16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-=
rule=3D"evenodd"></path></svg></button></span></div></div></div></div></div=
></div></div></div></div></div><div class=3D"w-full text-token-text-primary=
" dir=3D"auto" data-testid=3D"conversation-turn-119" data-scroll-anchor=3D"=
false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:=
px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base jui=
ce:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><di=
v class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"08fa63d5-e5a9-49e9-936e-60c10bcaae5c" dir=3D"auto" class=3D"text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>The error indicates that the <code>create_rectangle</code> method in Tk=
inter does not support the <code>smooth</code> option. To achieve rounded c=
orners for your entries, we need a different approach.</p><p>Instead of try=
ing to draw rounded rectangles directly in the canvas, we'll use a differen=
t technique. Below is the corrected code, which uses an alternative method =
to simulate rounded corners for the entries without the <code>smooth</code>=
 option:</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px] b=
order-token-border-medium"><div class=3D"flex items-center relative text-to=
ken-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-s=
ans justify-between rounded-t-md"><span>python</span><div class=3D"flex ite=
ms-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap=
-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1=
 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2z=
m2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 =
9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rul=
e=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></=
span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" dir=
=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk, ImageDraw

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        <span class=3D"hljs-comment"># Entry =EC=9C=84=EC=A0=AF =EC=83=9D=
=EC=84=B1 =EB=B6=80=EB=B6=84</span>
        self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span=
 class=3D"hljs-string">"=EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=A0=A5"</sp=
an>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =
=EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-numb=
er">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"=
hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span class=
=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =EC=9E=85=EB=A0=A5"<=
/span>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=
=80 =EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">40</span>, <span=
 class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=A0=A5"</sp=
an>)  <span class=3D"hljs-comment"># =EB=86=92=EC=9D=B4=EB=A5=BC =EC=A2=80 =
=EB=8D=94 =ED=81=AC=EA=B2=8C =EC=84=A4=EC=A0=95</span>

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, w=
idth, height, placeholder</span>):
        <span class=3D"hljs-comment"># Create a frame with a rounded border=
</span>
        frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string">"#CCCCCC"=
</span>, bd=3D<span class=3D"hljs-number">0</span>)
        frame.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)
       =20
        <span class=3D"hljs-comment"># Create a canvas to draw the rounded =
border</span>
        canvas =3D tk.Canvas(frame, bg=3D<span class=3D"hljs-string">"#FFFF=
FF"</span>, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=
=3D<span class=3D"hljs-number">0</span>)
        canvas.pack(fill=3D<span class=3D"hljs-string">"both"</span>, expan=
d=3D<span class=3D"hljs-literal">True</span>)
       =20
        <span class=3D"hljs-comment"># Draw a rounded rectangle on the canv=
as</span>
        radius =3D <span class=3D"hljs-number">20</span>  <span class=3D"hl=
js-comment"># Radius of the rounded corners</span>
        canvas.create_arc((<span class=3D"hljs-number">0</span>, <span clas=
s=3D"hljs-number">0</span>, radius*<span class=3D"hljs-number">2</span>, ra=
dius*<span class=3D"hljs-number">2</span>), start=3D<span class=3D"hljs-num=
ber">90</span>, extent=3D<span class=3D"hljs-number">90</span>, outline=3D<=
span class=3D"hljs-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-nu=
mber">2</span>)
        canvas.create_arc((width-radius*<span class=3D"hljs-number">2</span=
>, <span class=3D"hljs-number">0</span>, width, radius*<span class=3D"hljs-=
number">2</span>), start=3D<span class=3D"hljs-number">0</span>, extent=3D<=
span class=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-string"=
>"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_arc((<span class=3D"hljs-number">0</span>, height-rad=
ius*<span class=3D"hljs-number">2</span>, radius*<span class=3D"hljs-number=
">2</span>, height), start=3D<span class=3D"hljs-number">180</span>, extent=
=3D<span class=3D"hljs-number">90</span>, outline=3D<span class=3D"hljs-str=
ing">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_arc((width-radius*<span class=3D"hljs-number">2</span=
>, height-radius*<span class=3D"hljs-number">2</span>, width, height), star=
t=3D<span class=3D"hljs-number">270</span>, extent=3D<span class=3D"hljs-nu=
mber">90</span>, outline=3D<span class=3D"hljs-string">"#CCCCCC"</span>, wi=
dth=3D<span class=3D"hljs-number">2</span>)
        canvas.create_line(radius, <span class=3D"hljs-number">0</span>, wi=
dth-radius, <span class=3D"hljs-number">0</span>, fill=3D<span class=3D"hlj=
s-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_line(radius, height, width-radius, height, fill=3D<sp=
an class=3D"hljs-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-numb=
er">2</span>)
        canvas.create_line(<span class=3D"hljs-number">0</span>, radius, <s=
pan class=3D"hljs-number">0</span>, height-radius, fill=3D<span class=3D"hl=
js-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_line(width, radius, width, height-radius, fill=3D<spa=
n class=3D"hljs-string">"#CCCCCC"</span>, width=3D<span class=3D"hljs-numbe=
r">2</span>)
       =20
        <span class=3D"hljs-comment"># Create the entry widget inside the f=
rame</span>
        entry =3D tk.Entry(frame, bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">0</span>, relief=3D<span class=3D"hljs-string">"flat"</span>)
        entry.insert(<span class=3D"hljs-number">0</span>, placeholder)
        entry.pack(fill=3D<span class=3D"hljs-string">"both"</span>, expand=
=3D<span class=3D"hljs-literal">True</span>, padx=3D(radius, radius), pady=
=3D(radius//<span class=3D"hljs-number">2</span>, radius//<span class=3D"hl=
js-number">2</span>))
        entry.bind(<span class=3D"hljs-string">"&lt;FocusIn&gt;"</span>, <s=
pan class=3D"hljs-keyword">lambda</span> event: self.clear_placeholder(even=
t, entry, placeholder))
        entry.bind(<span class=3D"hljs-string">"&lt;FocusOut&gt;"</span>, <=
span class=3D"hljs-keyword">lambda</span> event: self.set_placeholder(event=
, entry, placeholder))
       =20
        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">clear_placeholder</span>(<span class=3D"hljs-params">self, event, ent=
ry, placeholder</span>):
        <span class=3D"hljs-keyword">if</span> entry.get() =3D=3D placehold=
er:
            entry.delete(<span class=3D"hljs-number">0</span>, tk.END)
            entry.config(fg=3D<span class=3D"hljs-string">"#000000"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">set_placeholder</span>(<span class=3D"hljs-params">self, event, entry=
, placeholder</span>):
        <span class=3D"hljs-keyword">if</span> entry.get() =3D=3D <span cla=
ss=3D"hljs-string">""</span>:
            entry.insert(<span class=3D"hljs-number">0</span>, placeholder)
            entry.config(fg=3D<span class=3D"hljs-string">"#CCCCCC"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>create_rounded_entry</code> =EB=A9=94=EC=86=8C=EB=93=9C=EB=
=A5=BC =EC=82=AC=EC=9A=A9=ED=95=B4 =EA=B0=81 =EC=97=94=ED=8A=B8=EB=A6=AC =
=EC=9C=84=EC=A0=AF=EC=9D=84 =EA=B0=90=EC=8B=B8=EB=8A=94 =ED=94=84=EB=A0=88=
=EC=9E=84=EC=9D=84 =EB=A7=8C=EB=93=A4=EA=B3=A0, =EC=BA=94=EB=B2=84=EC=8A=A4=
=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=B4 =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=
=EB=A6=AC=EB=A5=BC =EA=B7=B8=EB=A6=B0 =ED=9B=84, =EC=97=94=ED=8A=B8=EB=A6=
=AC =EC=9C=84=EC=A0=AF=EC=9D=84 =ED=94=84=EB=A0=88=EC=9E=84 =EC=95=88=EC=97=
=90 =EB=B0=B0=EC=B9=98=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A0=87=EA=B2=
=8C =ED=95=98=EB=A9=B4 =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=B4 =EC=A2=80 =EB=
=8D=94 =EA=B9=94=EB=81=94=ED=95=B4=EC=A7=80=EA=B3=A0, =EC=98=A4=EB=A5=98 =
=EC=97=86=EC=9D=B4 =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=EB=A6=AC=EB=A5=BC =
=EA=B5=AC=ED=98=84=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.=
</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juic=
e:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1=
 bg-token-main-surface-primary md:absolute md:border md:border-token-border=
-light md:hidden"><div class=3D"flex items-center"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:=
bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] item=
s-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-hea=
vy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.=
47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.2501=
9 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44=
772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10=
.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714=
 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.6=
1102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.0=
0005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.2729=
6 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13=
.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.38=
11 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 =
20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.7=
1262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.24=
1 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18=
.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.02=
22 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 1=
4.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1=
653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049=
Z" fill=3D"currentColor"></path></svg></span></button></span><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg=
" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"i=
con-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3=
 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1=
-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-=
1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a=
1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><=
div class=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"=
rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"=
><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423=
 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16=
.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 =
4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.343=
15 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.=
5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6=
.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.=
93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 =
10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6=
596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045=
 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.6493=
7 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C=
19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></pat=
h></svg></span></button></span></div><span class=3D"" data-state=3D"closed"=
><button type=3D"button" id=3D"radix-:r2cb:" aria-haspopup=3D"menu" aria-ex=
panded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md p=
x-1 text-token-text-secondary h-[30px] hover:bg-token-main-surface-secondar=
y"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_=
svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3=
.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 2=
4"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.0=
64-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.0=
47.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09=
-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.7=
97c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path=
><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 =
1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c=
-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0=
 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6=
.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34=
 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184=
 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.8=
71-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1=
.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3=
.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=
=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"curr=
entColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.5=
86l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 =
0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></span></div></d=
iv></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><d=
iv class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"con=
versation-turn-120" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:p=
y-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:g=
ap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-a=
uthor-role=3D"user" data-message-id=3D"aaa2d663-29dd-4dc6-9318-81b57a25a85e=
" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full ju=
ice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap=
-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"flex w-[70%]=
 flex-row items-center justify-end gap-1"><div class=3D"overflow-hidden rou=
nded-lg w-full h-full max-w-96 max-h-64"><div class=3D"relative flex h-auto=
 w-full max-w-lg items-center justify-center overflow-hidden bg-token-main-=
surface-secondary text-token-text-tertiary"><button type=3D"button" aria-ha=
spopup=3D"dialog" aria-expanded=3D"false" aria-controls=3D"radix-:r2gt:" da=
ta-state=3D"closed" class=3D"overflow-hidden rounded-lg w-full h-full max-w=
-96 max-h-64"><img alt=3D"=EC=97=85=EB=A1=9C=EB=93=9C=ED=95=9C =EC=9D=B4=EB=
=AF=B8=EC=A7=80" loading=3D"lazy" width=3D"1388" height=3D"392" decoding=3D=
"async" data-nimg=3D"1" class=3D"max-w-full object-cover object-center over=
flow-hidden rounded-lg w-full h-full max-w-96 max-h-64 transition-opacity d=
uration-300 opacity-100" src=3D"https://files.oaiusercontent.com/file-ROOdx=
PuqBQ3kBjCZKO27383M?se=3D2024-05-28T03%3A10%3A45Z&amp;sp=3Dr&amp;sv=3D2023-=
11-03&amp;sr=3Db&amp;rscc=3Dmax-age%3D299%2C%20immutable&amp;rscd=3Dattachm=
ent%3B%20filename%3Dimage.png&amp;sig=3DhRUrAekrs7u9nmCVmVQt5iaq9OA2O/JVc87=
NKTbAyzc%3D" style=3D"color: transparent;"></button></div></div></div><div =
class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-=
token-main-surface-secondary rounded-tr-lg">=EB=94=94=EC=9E=90=EC=9D=B8=EC=
=9D=B4 =EC=9D=B4=EB=A0=87=EA=B2=8C =EB=90=98=EC=96=B4=EB=B2=84=EB=A6=AC=EA=
=B3=A0 =EC=9E=85=EB=A0=A5=ED=95=84=EB=93=9C=EA=B0=80 =EC=95=84=EB=8B=88=EA=
=B2=8C=EB=90=A8</div></div></div></div></div></div></div></div></div><div c=
lass=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"convers=
ation-turn-121" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[1=
8px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"m=
x-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl =
lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-co=
l relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"g=
izmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex =
items-center justify-center bg-token-main-surface-primary text-token-text-p=
rimary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"im=
g"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C=
37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9=
1076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3=
.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.42=
57 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495=
044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 =
7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.730=
73 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.422=
8C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26=
.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.187=
91 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 1=
4.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2=
144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418=
 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34=
.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C=
39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.=
4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.69=
94 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26=
.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.512=
4 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29=
.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842=
 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.=
4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.98=
32C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 3=
0.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 =
30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0=
556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096=
 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.=
39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3=
327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 =
8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.=
9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505=
 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3=
2135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.341=
3 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 1=
2.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7=
111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C=
37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0=
432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047=
 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.=
7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 =
15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.9=
06 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 =
25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.=
0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2502=
5C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6=
.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3=
826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.998=
1C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 1=
9.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58=
696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524=
 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.=
0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878=
 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10=
.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.99=
85L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></=
svg></div></div></div></div></div><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1=
 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"7777fbfe-bac8-462b-9ca9-75=
ae7aaddf1f" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice=
:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full fl=
ex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"markdow=
n prose w-full break-words dark:prose-invert light"><p>=EC=95=8C=EA=B2=A0=
=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EA=B0=80=
 =EC=A0=9C=EB=8C=80=EB=A1=9C =EC=9E=91=EB=8F=99=ED=95=98=EB=8F=84=EB=A1=9D =
=ED=95=98=EA=B3=A0, =EB=91=A5=EA=B7=BC =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC=
 =EA=B0=96=EC=B6=98 =EB=94=94=EC=9E=90=EC=9D=B8=EC=9D=84 =EC=9C=84=ED=95=B4=
 =EA=B0=84=EB=8B=A8=ED=95=9C =EC=A0=91=EA=B7=BC =EB=B0=A9=EC=8B=9D=EC=9D=84=
 =EC=82=AC=EC=9A=A9=ED=95=98=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=95=84=
=EB=9E=98=EB=8A=94 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=
=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_rounded_entry(<span class=3D"hljs-numb=
er">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"=
hljs-number">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_rounded_entry(<span class=3D"hlj=
s-number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span cla=
ss=3D"hljs-number">522</span>, <span class=3D"hljs-number">34</span>, show=
=3D<span class=3D"hljs-string">'*'</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_entry</span>(<span class=3D"hljs-params">self, x, y, w=
idth, height, show=3D<span class=3D"hljs-literal">None</span></span>):
        frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string">"#FFFFFF"=
</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        frame.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)

        entry =3D tk.Entry(frame, bd=3D<span class=3D"hljs-number">0</span>=
, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hl=
js-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-numbe=
r">1</span>, relief=3D<span class=3D"hljs-string">"solid"</span>, show=3Dsh=
ow)
        entry.place(x=3D<span class=3D"hljs-number">5</span>, y=3D<span cla=
ss=3D"hljs-number">5</span>, width=3Dwidth-<span class=3D"hljs-number">10</=
span>, height=3Dheight-<span class=3D"hljs-number">10</span>)

        canvas =3D tk.Canvas(frame, width=3Dwidth, height=3Dheight, bg=3D<s=
pan class=3D"hljs-string">"#FFFFFF"</span>, bd=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        canvas.create_oval(<span class=3D"hljs-number">0</span>, <span clas=
s=3D"hljs-number">0</span>, height, height, outline=3D<span class=3D"hljs-s=
tring">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_oval(width-height, <span class=3D"hljs-number">0</spa=
n>, width, height, outline=3D<span class=3D"hljs-string">"#CCCCCC"</span>, =
width=3D<span class=3D"hljs-number">2</span>)
        canvas.create_rectangle(height//<span class=3D"hljs-number">2</span=
>, <span class=3D"hljs-number">0</span>, width-height//<span class=3D"hljs-=
number">2</span>, height, outline=3D<span class=3D"hljs-string">"#CCCCCC"</=
span>, width=3D<span class=3D"hljs-number">2</span>)
        canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<span cl=
ass=3D"hljs-number">0</span>)

        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 =EC=9E=85=
=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=
=EB=A6=AC=EB=A1=9C =EB=A7=8C=EB=93=A4=EA=B3=A0, =ED=9A=8C=EC=83=89 =ED=85=
=8C=EB=91=90=EB=A6=AC=EC=99=80 =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD=EC=9D=
=84 =EC=84=A4=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4. <code>create_rounded_ent=
ry</code> =EB=A9=94=EC=86=8C=EB=93=9C=EB=8A=94 =EA=B0=81 =EC=9E=85=EB=A0=A5=
 =ED=95=84=EB=93=9C=EB=A5=BC =EC=83=9D=EC=84=B1=ED=95=98=EB=A9=B0, =EC=9D=
=B4 =ED=95=84=EB=93=9C=EB=A5=BC =EB=91=A5=EA=B7=BC =ED=85=8C=EB=91=90=EB=A6=
=AC=EC=99=80 =ED=95=A8=EA=BB=98 =EB=B3=B4=EC=97=AC=EC=A4=8D=EB=8B=88=EB=8B=
=A4. =EC=9D=B4=EC=A0=9C =EB=91=A5=EA=B7=BC =ED=85=8C=EB=91=90=EB=A6=AC=EC=
=99=80 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EA=B0=80 =EC=A0=9C=EB=8C=80=EB=
=A1=9C =EC=9E=91=EB=8F=99=ED=95=A0 =EA=B2=83=EC=9E=85=EB=8B=88=EB=8B=A4.</p=
></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-=
ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg=
-token-main-surface-primary md:absolute md:border md:border-token-border-li=
ght md:hidden"><div class=3D"flex items-center"><span class=3D"" data-state=
=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-=
token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-c=
enter justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.474=
85 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8=
.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772=
 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.48=
28 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13=
 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.6110=
2 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.0000=
5H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 2=
1.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.85=
07 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 =
17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.=
9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.7126=
2C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7=
.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.49=
96 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 =
16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4=
637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653=
 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" =
fill=3D"currentColor"></path></svg></span></button></span><span class=3D"" =
data-state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary=
 hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30p=
x] items-center justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" w=
idth=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon=
-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 =
0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-=
3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1=
h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1=
 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></button></span><div=
 class=3D"flex"><span class=3D"" data-state=3D"closed"><button class=3D"rou=
nded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><s=
pan class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10=
.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.79=
01L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.9=
4753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 =
21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.505=
4 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60=
367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.932=
26 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.=
0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596=
 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13=
.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 1=
6.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.=
0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path><=
/svg></span></button></span></div><span class=3D"" data-state=3D"closed"><b=
utton type=3D"button" id=3D"radix-:r2ci:" aria-haspopup=3D"menu" aria-expan=
ded=3D"false" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1=
 text-token-text-secondary h-[30px] hover:bg-token-main-surface-secondary">=
<div class=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg=
]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.or=
g/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24">=
<path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-=
.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.=
119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.=
038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c=
-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><p=
ath fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.1=
53 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.=
747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 =
1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.14=
7-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.=
179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.=
21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-=
.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.56=
6-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.19=
2 2.082Z"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"=
opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0=
 24 24" class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5=
.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.=
414" clip-rule=3D"evenodd"></path></svg></div></button></span></div></div><=
/div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div c=
lass=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"convers=
ation-turn-122" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[1=
8px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"m=
x-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl =
lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn re=
lative flex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"user" data-message-id=3D"aaa20b67-b959-4e73-9793-eecfd5579da0" dir=
=3D"auto" class=3D"min-h-[20px] text-message flex flex-col items-start whit=
espace-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:i=
tems-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 ju=
ice:empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[7=
0%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-seconda=
ry">import importlib
from mysql.connector import Error
from tkinter import Canvas
from tkinter import messagebox
import tkinter as tk
from Util import Util
from PIL import Image, ImageTk

class SignUpPage(tk.Tk):
    def __init__(self):
        super().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [0, 0]
        self.title("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85")
        self.geometry("747x531")
        self.configure(bg=3D"#FFFFFF")
        self.canvas =3D Canvas(
            bg=3D"#FFFFFF",
            height=3D531,
            width=3D747,
            bd=3D0,
            highlightthickness=3D0,
            relief=3D"ridge"
        )

        self.canvas.place(x=3D0, y=3D0)

        self.load_additional_images()

        self.NicknameEntry =3D self.create_rounded_entry(122.0, 177.0, 522,=
 34)
        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckNick=
nameExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D650.0, y=3D177.0)

        self.IDEntry =3D self.create_rounded_entry(122.0, 240.0, 522, 34)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            "=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=EC=9D=BC=EB=B0=98.png", "=
=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png", self.CheckIDEx=
istence
        )
        self.CheckIDExistenceBtn.place(x=3D650.0, y=3D240.0)

        self.PasswordEntry =3D self.create_rounded_entry(122.0, 303.0, 522,=
 34, show=3D'*')

        self.canvas.create_text(
            70.0, 194.0,
            text=3D"=EB=8B=89=EB=84=A4=EC=9E=84",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 257.0,
            text=3D"ID",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )

        self.canvas.create_text(
            80.0, 320,
            text=3D"PW",
            font=3D("Arial-BoldMT", int(13.0)), anchor=3D"w"
        )
        self.canvas.create_text(
            305.0,
            72.0,
            anchor=3D"nw",
            text=3D"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85",
            fill=3D"#000000",
            font=3D("Inter", 40 * -1)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D356, y=3D367)

        self.SignUpBtn =3D self.create_image_button(
            "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=EC=9D=
=BC=EB=B0=98.png", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=
=ED=98=B8=EB=B2=84.png", self.SignUp
        )
        self.SignUpBtn.place(x=3D511, y=3D367)
        self.SignUpBtn.config(state=3D"disabled")

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(False, False)

    def create_rounded_entry(self, x, y, width, height, show=3DNone):
        frame =3D tk.Frame(self, bg=3D"#FFFFFF", highlightthickness=3D0)
        frame.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)

        entry =3D tk.Entry(frame, bd=3D0, bg=3D"#FFFFFF", fg=3D"#000716", h=
ighlightthickness=3D1, relief=3D"solid", show=3Dshow)
        entry.place(x=3D5, y=3D5, width=3Dwidth-10, height=3Dheight-10)

        canvas =3D tk.Canvas(frame, width=3Dwidth, height=3Dheight, bg=3D"#=
FFFFFF", bd=3D0, highlightthickness=3D0)
        canvas.create_oval(0, 0, height, height, outline=3D"#CCCCCC", width=
=3D2)
        canvas.create_oval(width-height, 0, width, height, outline=3D"#CCCC=
CC", width=3D2)
        canvas.create_rectangle(height//2, 0, width-height//2, height, outl=
ine=3D"#CCCCCC", width=3D2)
        canvas.place(x=3D0, y=3D0)

        return entry

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and):
        normal_image =3D Image.open(normal_image_path)
        hover_image =3D Image.open(hover_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D"#FFFFFF", bo=
rderwidth=3D0, highlightthickness=3D0, activebackground=3D"#FFFFFF", comman=
d=3Dcommand)
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
photo))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_photo))
        button.image =3D normal_photo  # Keep a reference to the image to a=
void garbage collection
        button.hover_image =3D hover_photo  # Keep a reference to the hover=
 image
        return button

    def load_additional_images(self):
        left_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=A2=8C.png").resize((66, 102), Image.Resampling.LANCZOS)
        right_image =3D Image.open("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=
=9A=B0.png").resize((66, 93), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D"=
#FFFFFF")
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D230, y=3D22)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D"#FFFFFF")
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D469, y=3D23)

    def CheckNicknameExistence(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            if len(nickname) =3D=3D 0:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT nickname FROM user WHERE id=3D%s", (nick=
name,))
            NicknameExistence =3D cursor.fetchall()
            if NicknameExistence:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=
=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EB=8B=89=EB=84=A4=EC=9E=84 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EB=8B=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[0] =3D=3D 0:
                    self.ExistenceValues[0] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def CheckIDExistence(self):
        if self.connection:
            id =3D self.IDEntry.get()
            if len(id) =3D=3D 0:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EB=AF=B8=
=EA=B8=B0=EC=9E=85", "=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=
=A5=EB=90=98=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("SELECT id FROM user WHERE id=3D%s", (id,))
            IDExistence =3D cursor.fetchall()
            if IDExistence:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=A4=91=
=EB=B3=B5", "=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=
=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            else:
                messagebox.showinfo("=EC=95=84=EC=9D=B4=EB=94=94 =EC=83=9D=
=EC=84=B1 =EA=B0=80=EB=8A=A5", "=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=
=9C =EC=95=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4.")
                if self.ExistenceValues[1] =3D=3D 0:
                    self.ExistenceValues[1] +=3D 1
                if sum(self.ExistenceValues) =3D=3D 2:
                    self.SignUpBtn.config(state=3D"active")

    def SignUp(self):
        if self.connection:
            nickname =3D self.NicknameEntry.get()
            id =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            if len(password) =3D=3D 0:
                messagebox.showinfo("=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8 =
=EB=AF=B8=EA=B8=B0=EC=9E=85", "=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=
=BC =EC=9E=85=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94.")
                return
            cursor =3D self.connection.cursor()
            cursor.execute("INSERT INTO user (nickname, id, password) VALUE=
S (%s, %s, %s)", (nickname, id, password,))
            self.connection.commit()  # =EC=BB=A4=EB=B0=8B=EC=9D=84 =EC=88=
=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=BD =EC=82=AC=ED=95=AD=EC=9D=
=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9
            cursor.close()  # =EC=BB=A4=EC=84=9C =EB=8B=AB=EA=B8=B0
            self.connection.close()  # =EC=BB=A4=EB=84=A5=EC=85=98 =EB=8B=
=AB=EA=B8=B0
            messagebox.showinfo("=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85 =EC=
=84=B1=EA=B3=B5", "=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=
=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4.")
            self.SwitchToLoginPage()

    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    app =3D SignUpPage()
    app.mainloop()

=EC=A7=80=EA=B8=88 =EC=84=A4=EC=A0=95=ED=95=9C =EC=9E=85=EB=A0=A5=ED=95=84=
=EB=93=9C=EB=93=A4 =EB=8B=A4 =EC=97=86=EC=95=B4=EB=8B=A4=EA=B0=80 =EB=8B=A4=
=EC=8B=9C =EB=A7=8C=EB=93=A4=EC=96=B4, =EB=8C=80=EC=8B=A0 =EB=A1=9C=EC=A7=
=81=EC=9D=80 =EC=9E=98 =EC=9E=91=EB=8F=99=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=
=B4=EC=95=BC=ED=95=B4<div class=3D"absolute bottom-0 right-full top-0 -mr-3=
.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-cen=
ter rounded-full text-token-text-secondary transition hover:bg-token-main-s=
urface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 =
1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.1=
5-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.=
838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.4=
14 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></div></div></div></div></div></div></di=
v></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-tes=
tid=3D"conversation-turn-123" data-scroll-anchor=3D"false"><div class=3D"py=
-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><=
div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6=
 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-=
0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><=
div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center over=
flow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 ro=
unded-sm flex items-center justify-center bg-token-main-surface-primary tex=
t-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 =
0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.=
5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.274=
4 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4=
985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 =
1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C=
16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.=
44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 =
10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.=
721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.47=
59 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 =
32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8=
907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366=
C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39=
.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.50=
27 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38=
.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.451=
7 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 =
37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.90=
04 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 2=
6.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.95=
41 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30=
.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.483=
8 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 =
5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7=
248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.=
8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376=
 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33=
.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.387=
85 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364=
 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1=
9351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.826=
7 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28=
.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.0404=
6 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3=
.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4=
981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928=
 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.=
6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878=
 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30=
.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.958=
6 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0=
556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045=
 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.=
9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.075=
3 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L2=
4.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31=
589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334=
 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L1=
0.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9=
441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848=
 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.=
21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.103=
4 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14=
.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.48=
77 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 =
17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentCol=
or"></path></svg></div></div></div></div></div><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"f=
lex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><=
div data-message-author-role=3D"assistant" data-message-id=3D"0e1fc0b4-1b37=
-491a-a5c4-17950b330c90" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div cla=
ss=3D"markdown prose w-full break-words dark:prose-invert light"><p>=EC=95=
=84=EB=9E=98=EB=8A=94 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C =EC=84=A4=EC=A0=
=95=EC=9D=84 =EB=8B=A4=EC=8B=9C =EB=A7=8C=EB=93=A4=EC=96=B4 =EB=A1=9C=EC=A7=
=81=EC=9D=B4 =EC=9E=98 =EC=9E=91=EB=8F=99=ED=95=98=EB=8F=84=EB=A1=9D =ED=95=
=98=EB=8A=94 =EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=
=88=EB=8B=A4. =EA=B8=B0=EC=A1=B4 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=
=A5=BC =EC=A0=9C=EA=B1=B0=ED=95=98=EA=B3=A0 =EC=83=88=EB=A1=9C=EC=9A=B4 =EC=
=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EB=
=8A=94 =EB=B0=A9=EC=8B=9D=EC=9C=BC=EB=A1=9C =EA=B5=AC=EC=84=B1=ED=96=88=EC=
=8A=B5=EB=8B=88=EB=8B=A4. =EC=83=88=EB=A1=9C=EC=9A=B4 =EC=9E=85=EB=A0=A5 =
=ED=95=84=EB=93=9C=EB=8A=94 =EB=8B=A8=EC=88=9C=ED=95=9C =ED=85=8C=EB=91=90=
=EB=A6=AC =EC=8A=A4=ED=83=80=EC=9D=BC=EC=9D=84 =EC=A0=81=EC=9A=A9=ED=96=88=
=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded=
-md border-[0.5px] border-token-border-medium"><div class=3D"flex items-cen=
ter relative text-token-text-secondary bg-token-main-surface-secondary px-4=
 py-2 text-xs font-sans justify-between rounded-t-md"><span>python</span><d=
iv class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><butt=
on class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0=
 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3=
v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h=
-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 =
0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=
=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text=
-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-p=
ython"><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )

        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D self.create_entry(<span class=3D"hljs-number=
">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span class=3D"hl=
js-number">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_entry(<span class=3D"hljs-number">122.=
0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"hljs-num=
ber">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_entry(<span class=3D"hljs-number=
">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span class=3D"hl=
js-number">522</span>, <span class=3D"hljs-number">34</span>, show=3D<span =
class=3D"hljs-string">'*'</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_entry</span>(<span class=3D"hljs-params">self, x, y, width, he=
ight, show=3D<span class=3D"hljs-literal">None</span></span>):
        entry =3D tk.Entry(self, bd=3D<span class=3D"hljs-number">2</span>,=
 bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hlj=
s-string">"#000716"</span>, highlightthickness=3D<span class=3D"hljs-number=
">2</span>, relief=3D<span class=3D"hljs-string">"solid"</span>, show=3Dsho=
w)
        entry.place(x=3Dx, y=3Dy, width=3Dwidth, height=3Dheight)
        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 <code>cre=
ate_entry</code> =ED=95=A8=EC=88=98=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC =EA=B0=81 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EB=8B=A4=
=EC=8B=9C =EB=A7=8C=EB=93=AD=EB=8B=88=EB=8B=A4. =EC=9D=B4 =ED=95=A8=EC=88=
=98=EB=8A=94 =EB=8B=A8=EC=88=9C=ED=95=9C =ED=9A=8C=EC=83=89 =ED=85=8C=EB=91=
=90=EB=A6=AC=EC=99=80 =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=B2=BD=EC=9D=84 =EA=B0=
=80=EC=A7=84 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EC=83=9D=EC=84=
=B1=ED=95=A9=EB=8B=88=EB=8B=A4. =EB=82=98=EB=A8=B8=EC=A7=80 =EB=A1=9C=EC=A7=
=81=EC=9D=80 =EA=B8=B0=EC=A1=B4=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=B2=
=8C =EC=9C=A0=EC=A7=80=EB=90=98=EC=96=B4 =EC=9E=98 =EC=9E=91=EB=8F=99=ED=95=
=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex g=
ap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start rou=
nded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border =
md:border-token-border-light md:hidden"><div class=3D"flex items-center"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C=
6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.0=
0005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2=
629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3=
.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.4=
03 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319=
 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019=
 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9=
996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185=
 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16=
.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.60=
64 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665Z=
M15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18=
593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385=
 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15=
.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.000=
1C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8=
.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button=
></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg =
text-token-text-secondary hover:bg-token-main-surface-secondary"><span clas=
s=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http=
://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D=
"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
</span></button></span><div class=3D"flex"><span class=3D"" data-state=3D"c=
losed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token=
-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center=
 justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725=
 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.=
36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921=
 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045=
C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 =
15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.00=
45 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65=
574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 =
13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6=
661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258=
 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.=
0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.00=
45 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fil=
l=3D"currentColor"></path></svg></span></button></span></div><span class=3D=
"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2cq:" aria-h=
aspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cur=
sor-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-tok=
en-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-=
0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><sv=
g xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"n=
one" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.=
4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943=
a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.2=
96a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306=
-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-=
1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0=
 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.=
47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229=
 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1=
.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.16=
5 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.9=
98c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 =
1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187=
-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.1=
92-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line=
-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</=
span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" f=
ill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quatern=
ary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 =
1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-=
1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></=
button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></d=
iv></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"a=
uto" data-testid=3D"conversation-turn-124" data-scroll-anchor=3D"false"><di=
v class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px=
-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 j=
uice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D=
"group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2fd5d-3cd9=
-4d23-b2ef-6a5f63c3a5d8" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">ttk.Entry(style=3D"TEntry") =EC=97=AC=EA=B8=
=B0=EC=84=9C TEntry=EC=9D=98 border radius=EC=A1=B0=EC=A0=95=ED=95=98=EB=8A=
=94=EB=B2=95=EC=9D=80 =EC=97=86=EC=96=B4?<div class=3D"absolute bottom-0 ri=
ght-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 item=
s-center justify-center rounded-full text-token-text-secondary transition h=
over:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.=
293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.=
736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.3=
86 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.=
586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rul=
e=3D"evenodd"></path></svg></button></span></div></div></div></div></div></=
div></div></div></div></div><div class=3D"w-full text-token-text-primary" d=
ir=3D"auto" data-testid=3D"conversation-turn-125" data-scroll-anchor=3D"fal=
se"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-=
5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:=
gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div c=
lass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"=
pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center=
 justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div clas=
s=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main=
-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"82504a36-4d57-48a3-877e-8173d05f9dc5" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p><code>ttk.Entry</code> =EC=9C=84=EC=A0=AF =EC=9E=90=EC=B2=B4=
=EC=97=90=EB=8A=94 =EC=A7=81=EC=A0=91=EC=A0=81=EC=9C=BC=EB=A1=9C <code>bord=
er radius</code>=EB=A5=BC =EC=84=A4=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=
=EB=8A=94 =EC=98=B5=EC=85=98=EC=9D=B4 =EC=97=86=EC=8A=B5=EB=8B=88=EB=8B=A4.=
 =EB=8C=80=EC=8B=A0 <code>ttk</code> =EC=9C=84=EC=A0=AF=EC=9D=98 =EC=8A=A4=
=ED=83=80=EC=9D=BC=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=EA=B8=B0 =EC=9C=84=
=ED=95=B4 <code>ttk.Style</code> =ED=81=B4=EB=9E=98=EC=8A=A4=EB=A5=BC =EC=
=82=AC=EC=9A=A9=ED=95=A0 =EC=88=98 =EC=9E=88=EC=A7=80=EB=A7=8C, =EC=9D=B4=
=EB=8A=94 =EC=A3=BC=EB=A1=9C =ED=85=8C=EB=A7=88=EC=99=80 =ED=85=8C=EB=91=90=
=EB=A6=AC =EB=91=90=EA=BB=98, =EC=83=89=EC=83=81 =EB=93=B1=EC=9D=84 =EC=A1=
=B0=EC=A0=95=ED=95=98=EB=8A=94 =EB=8D=B0 =EC=82=AC=EC=9A=A9=EB=90=A9=EB=8B=
=88=EB=8B=A4. <code>border radius</code>=EB=A5=BC =EC=A1=B0=EC=A0=95=ED=95=
=98=EB=A0=A4=EB=A9=B4 <code>Canvas</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=
=98=EC=97=AC =EC=A7=81=EC=A0=91 =EA=B7=B8=EB=A6=AC=EB=8A=94 =EB=B0=A9=EC=8B=
=9D=EC=9D=B4 =ED=95=84=EC=9A=94=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=
=EC=9D=8C=EC=9D=80 <code>ttk.Entry</code>=EB=A5=BC <code>Canvas</code>=EC=
=97=90 =EC=98=AC=EB=A0=A4=EB=86=93=EA=B3=A0, <code>Canvas</code>=EB=A5=BC =
=EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=91=A5=EA=B7=BC =EB=AA=A8=EC=84=9C=
=EB=A6=AC=EB=A5=BC =EA=B0=80=EC=A7=84 =EB=B0=B0=EA=B2=BD=EC=9D=84 =EA=B7=B8=
=EB=A6=AC=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><=
div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border=
-medium"><div class=3D"flex items-center relative text-token-text-secondary=
 bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-betwee=
n rounded-t-md"><span>python</span><div class=3D"flex items-center"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><=
svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D=
"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" =
fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3=
 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3=
 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a=
1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></pa=
th></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><=
div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code cla=
ss=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">im=
port</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>RoundedEntry</span>(tk.Canvas):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, parent, **kwargs</s=
pan>):
        <span class=3D"hljs-built_in">super</span>().__init__(parent, **kwa=
rgs)
        self.configure(bg=3Dparent[<span class=3D"hljs-string">'bg'</span>]=
, bd=3D<span class=3D"hljs-number">0</span>, highlightthickness=3D<span cla=
ss=3D"hljs-number">0</span>)
        self.entry =3D ttk.Entry(self, style=3D<span class=3D"hljs-string">=
"Rounded.TEntry"</span>)
        self.entry_window =3D self.create_window(<span class=3D"hljs-number=
">10</span>, <span class=3D"hljs-number">10</span>, anchor=3D<span class=3D=
"hljs-string">"nw"</span>, window=3Dself.entry)
        self.bind(<span class=3D"hljs-string">"&lt;Configure&gt;"</span>, s=
elf.resize)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">resize</span>(<span class=3D"hljs-params">self, event</span>):
        self.coords(self.entry_window, <span class=3D"hljs-number">10</span=
>, <span class=3D"hljs-number">10</span>)
        self.itemconfig(self.entry_window, width=3Dself.winfo_width()-<span=
 class=3D"hljs-number">20</span>, height=3Dself.winfo_height()-<span class=
=3D"hljs-number">20</span>)
        self.delete(<span class=3D"hljs-string">"round_rect"</span>)
        self.create_rounded_rect(<span class=3D"hljs-number">0</span>, <spa=
n class=3D"hljs-number">0</span>, self.winfo_width(), self.winfo_height(), =
<span class=3D"hljs-number">20</span>, outline=3D<span class=3D"hljs-string=
">"#CCCCCC"</span>, width=3D<span class=3D"hljs-number">2</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_rounded_rect</span>(<span class=3D"hljs-params">self, x1, y1, =
x2, y2, radius, **kwargs</span>):
        points =3D [x1+radius, y1,
                  x1+radius, y1,
                  x2-radius, y1,
                  x2-radius, y1,
                  x2, y1,
                  x2, y1+radius,
                  x2, y1+radius,
                  x2, y2-radius,
                  x2, y2-radius,
                  x2, y2,
                  x2-radius, y2,
                  x2-radius, y2,
                  x1+radius, y2,
                  x1+radius, y2,
                  x1, y2,
                  x1, y2-radius,
                  x1, y2-radius,
                  x1, y1+radius,
                  x1, y1+radius,
                  x1, y1]
        <span class=3D"hljs-keyword">return</span> self.create_polygon(poin=
ts, **kwargs, smooth=3D<span class=3D"hljs-literal">True</span>)

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
       =20
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"Rounded.TEntry"</span>=
, padding=3D<span class=3D"hljs-number">10</span>,
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2d2:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-126" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2788f-c980=
-4680-ae66-9fcb43f9344e" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">=EA=B7=B8=EB=83=A5 =EC=9E=85=EB=A0=A5=ED=95=
=84=EB=93=9C=EB=A1=9C =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=93=B8=EC=88=98=EC=9E=
=88=EC=96=B4? =EC=93=B8=EC=88=98=EC=9E=88=EB=8B=A4=EB=A9=B4 '=EC=9E=85=EB=
=A0=A5=ED=95=84=EB=93=9C.png'=EC=8D=A8=EC=A4=98<div class=3D"absolute botto=
m-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn=
:block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-=
9 items-center justify-center rounded-full text-token-text-secondary transi=
tion hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/=
2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cl=
ass=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.=
293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.1=
97l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.41=
4l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.8=
37L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" cl=
ip-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></=
div></div></div></div></div></div><div class=3D"w-full text-token-text-prim=
ary" dir=3D"auto" data-testid=3D"conversation-turn-127" data-scroll-anchor=
=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto=
 md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base=
 juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div cl=
ass=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items=
-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><d=
iv class=3D"relative p-1 rounded-sm flex items-center justify-center bg-tok=
en-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" =
height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Ch=
atGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.=
9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404=
 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85=
078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249=
 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214=
C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3=
414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 =
14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 =
3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.72=
56 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 3=
6.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0=
786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998=
C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35=
.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115=
 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.=
0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.88=
49C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 3=
6.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.381=
3 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 2=
0.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842=
 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.=
6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.513=
97 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 =
5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.90=
2C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7=
321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893=
 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34=
.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17=
156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228=
 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4=
8312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979=
C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28=
.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.5528=
9 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L2=
2.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4=
787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967=
 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4=
832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086=
 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30=
.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348=
 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.=
9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 =
10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.=
9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.104=
8 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 2=
8.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40=
939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055=
 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 1=
0.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8=
107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659=
 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3=
5876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668=
 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14=
.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.99=
91L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V1=
7.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col =
agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"assistant" data-=
message-id=3D"cd4acd99-3d51-4955-a448-d8db35641163" dir=3D"auto" class=3D"m=
in-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap brea=
k-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-=
auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden jui=
ce:first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:pro=
se-invert light"><p>=EB=84=A4, =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=
=BC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A1=9C =EC=82=AC=EC=9A=A9=ED=95=98=EB=8A=
=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EB=B3=B4=EC=97=AC=EB=93=9C=EB=A6=AC=EA=B2=
=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4 <code=
>tkinter</code>=EC=9D=98 <code>Canvas</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=
=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=B0=B0=EC=B9=98=ED=
=95=98=EA=B3=A0 =EA=B7=B8 =EC=9C=84=EC=97=90 <code>Entry</code> =EC=9C=84=
=EC=A0=AF=EC=9D=84 =EB=B0=B0=EC=B9=98=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4. =EB=8B=A4=EC=9D=8C=EC=9D=80 '=EC=9E=85=EB=A0=A5=ED=95=
=84=EB=93=9C.png'=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9E=85=
=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EB=A7=8C=EB=93=9C=EB=8A=94 =EC=98=88=
=EC=A0=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-95=
0 rounded-md border-[0.5px] border-token-border-medium"><div class=3D"flex =
items-center relative text-token-text-secondary bg-token-main-surface-secon=
dary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>python=
</span><div class=3D"flex items-center"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 =
0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0=
 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-=
1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =
=EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow-y-auto=
 p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs l=
anguage-python"><span class=3D"hljs-keyword">import</span> importlib
<span class=3D"hljs-keyword">from</span> mysql.connector <span class=3D"hlj=
s-keyword">import</span> Error
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> Canvas
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> messagebox
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>SignUpPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.connection =3D Util.ConnectMysql()
        self.ExistenceValues =3D [<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>]
        self.title(<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>)
        self.geometry(<span class=3D"hljs-string">"747x531"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.canvas =3D Canvas(
            bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>,
            height=3D<span class=3D"hljs-number">531</span>,
            width=3D<span class=3D"hljs-number">747</span>,
            bd=3D<span class=3D"hljs-number">0</span>,
            highlightthickness=3D<span class=3D"hljs-number">0</span>,
            relief=3D<span class=3D"hljs-string">"ridge"</span>
        )
        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        self.load_additional_images()

        self.NicknameEntry =3D self.create_image_entry(<span class=3D"hljs-=
number">122.0</span>, <span class=3D"hljs-number">177.0</span>, <span class=
=3D"hljs-number">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckNicknameExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckNickna=
meExistence
        )
        self.CheckNicknameExistenceBtn.place(x=3D<span class=3D"hljs-number=
">650.0</span>, y=3D<span class=3D"hljs-number">177.0</span>)

        self.IDEntry =3D self.create_image_entry(<span class=3D"hljs-number=
">122.0</span>, <span class=3D"hljs-number">240.0</span>, <span class=3D"hl=
js-number">522</span>, <span class=3D"hljs-number">34</span>)
        self.CheckIDExistenceBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=A4=91=EB=B3=B5=ED=99=95=EC=9D=
=B8=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-string">"=EC=A4=91=
=EB=B3=B5=ED=99=95=EC=9D=B8=ED=98=B8=EB=B2=84.png"</span>, self.CheckIDExis=
tence
        )
        self.CheckIDExistenceBtn.place(x=3D<span class=3D"hljs-number">650.=
0</span>, y=3D<span class=3D"hljs-number">240.0</span>)

        self.PasswordEntry =3D self.create_image_entry(<span class=3D"hljs-=
number">122.0</span>, <span class=3D"hljs-number">303.0</span>, <span class=
=3D"hljs-number">522</span>, <span class=3D"hljs-number">34</span>, show=3D=
<span class=3D"hljs-string">'*'</span>)

        self.canvas.create_text(
            <span class=3D"hljs-number">70.0</span>, <span class=3D"hljs-nu=
mber">194.0</span>,
            text=3D<span class=3D"hljs-string">"=EB=8B=89=EB=84=A4=EC=9E=84=
"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">257.0</span>,
            text=3D<span class=3D"hljs-string">"ID"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )

        self.canvas.create_text(
            <span class=3D"hljs-number">80.0</span>, <span class=3D"hljs-nu=
mber">320</span>,
            text=3D<span class=3D"hljs-string">"PW"</span>,
            font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <spa=
n class=3D"hljs-built_in">int</span>(<span class=3D"hljs-number">13.0</span=
>)), anchor=3D<span class=3D"hljs-string">"w"</span>
        )
        self.canvas.create_text(
            <span class=3D"hljs-number">305.0</span>,
            <span class=3D"hljs-number">72.0</span>,
            anchor=3D<span class=3D"hljs-string">"nw"</span>,
            text=3D<span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=
=EC=9E=85"</span>,
            fill=3D<span class=3D"hljs-string">"#000000"</span>,
            font=3D(<span class=3D"hljs-string">"Inter"</span>, <span class=
=3D"hljs-number">40</span> * -<span class=3D"hljs-number">1</span>)
        )

        self.GoPrevPageBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=
=9C=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SwitchToLoginPage
        )
        self.GoPrevPageBtn.place(x=3D<span class=3D"hljs-number">356</span>=
, y=3D<span class=3D"hljs-number">367</span>)

        self.SignUpBtn =3D self.create_image_button(
            <span class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=
=85=EB=B2=84=ED=8A=BC=EC=9D=BC=EB=B0=98.png"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EB=B2=84=ED=8A=BC=ED=98=B8=EB=
=B2=84.png"</span>, self.SignUp
        )
        self.SignUpBtn.place(x=3D<span class=3D"hljs-number">511</span>, y=
=3D<span class=3D"hljs-number">367</span>)
        self.SignUpBtn.config(state=3D<span class=3D"hljs-string">"disabled=
"</span>)

        self.NicknameEntry.tkraise()
        self.IDEntry.tkraise()
        self.PasswordEntry.tkraise()
        self.GoPrevPageBtn.tkraise()
        self.SignUpBtn.tkraise()
        self.CheckIDExistenceBtn.tkraise()
        self.CheckNicknameExistenceBtn.tkraise()
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_entry</span>(<span class=3D"hljs-params">self, x, y, wid=
th, height, show=3D<span class=3D"hljs-literal">None</span></span>):
        entry_canvas =3D tk.Canvas(self, width=3Dwidth, height=3Dheight, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>, bd=3D<span class=3D"hljs-n=
umber">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>)
        entry_canvas.place(x=3Dx, y=3Dy)

        entry_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=EC=9E=85=EB=A0=A5=ED=95=84=EB=93=9C.png"</span>)
        entry_image =3D entry_image.resize((<span class=3D"hljs-built_in">i=
nt</span>(width), <span class=3D"hljs-built_in">int</span>(height)), Image.=
Resampling.LANCZOS)
        entry_photo =3D ImageTk.PhotoImage(entry_image)

        entry_canvas.create_image(<span class=3D"hljs-number">0</span>, <sp=
an class=3D"hljs-number">0</span>, image=3Dentry_photo, anchor=3D<span clas=
s=3D"hljs-string">"nw"</span>)
        entry_canvas.image =3D entry_photo  <span class=3D"hljs-comment"># =
Keep a reference to avoid garbage collection</span>

        entry =3D tk.Entry(entry_canvas, bd=3D<span class=3D"hljs-number">0=
</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</span>, fg=3D<span clas=
s=3D"hljs-string">"#000716"</span>, highlightthickness=3D<span class=3D"hlj=
s-number">0</span>, show=3Dshow)
        entry_window =3D entry_canvas.create_window(<span class=3D"hljs-num=
ber">10</span>, <span class=3D"hljs-number">10</span>, anchor=3D<span class=
=3D"hljs-string">"nw"</span>, window=3Dentry, width=3Dwidth-<span class=3D"=
hljs-number">20</span>, height=3Dheight-<span class=3D"hljs-number">20</spa=
n>)

        <span class=3D"hljs-keyword">return</span> entry

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command</span>):
        normal_image =3D Image.<span class=3D"hljs-built_in">open</span>(no=
rmal_image_path)
        hover_image =3D Image.<span class=3D"hljs-built_in">open</span>(hov=
er_image_path)
        normal_photo =3D ImageTk.PhotoImage(normal_image)
        hover_photo =3D ImageTk.PhotoImage(hover_image)
        button =3D tk.Button(self, image=3Dnormal_photo, bg=3D<span class=
=3D"hljs-string">"#FFFFFF"</span>, borderwidth=3D<span class=3D"hljs-number=
">0</span>, highlightthickness=3D<span class=3D"hljs-number">0</span>, acti=
vebackground=3D<span class=3D"hljs-string">"#FFFFFF"</span>, command=3Dcomm=
and)
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_phot=
o))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_pho=
to))
        button.image =3D normal_photo  <span class=3D"hljs-comment"># Keep =
a reference to the image to avoid garbage collection</span>
        button.hover_image =3D hover_photo  <span class=3D"hljs-comment"># =
Keep a reference to the hover image</span>
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_additional_images</span>(<span class=3D"hljs-params">self</span>=
):
        left_image =3D Image.<span class=3D"hljs-built_in">open</span>(<spa=
n class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=A2=8C.png"=
</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hljs=
-number">102</span>), Image.Resampling.LANCZOS)
        right_image =3D Image.<span class=3D"hljs-built_in">open</span>(<sp=
an class=3D"hljs-string">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9A=B0.png=
"</span>).resize((<span class=3D"hljs-number">66</span>, <span class=3D"hlj=
s-number">93</span>), Image.Resampling.LANCZOS)

        left_photo =3D ImageTk.PhotoImage(left_image)
        right_photo =3D ImageTk.PhotoImage(right_image)

        self.left_image_label =3D tk.Label(self, image=3Dleft_photo, bg=3D<=
span class=3D"hljs-string">"#FFFFFF"</span>)
        self.left_image_label.image =3D left_photo
        self.left_image_label.place(x=3D<span class=3D"hljs-number">230</sp=
an>, y=3D<span class=3D"hljs-number">22</span>)

        self.right_image_label =3D tk.Label(self, image=3Dright_photo, bg=
=3D<span class=3D"hljs-string">"#FFFFFF"</span>)
        self.right_image_label.image =3D right_photo
        self.right_image_label.place(x=3D<span class=3D"hljs-number">469</s=
pan>, y=3D<span class=3D"hljs-number">23</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckNicknameExistence</span>(<span class=3D"hljs-params">self</span>=
):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(nickname) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EB=8B=89=EB=84=A4=EC=9E=84=EC=9D=B4 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT nickname FRO=
M user WHERE id=3D%s"</span>, (nickname,))
            NicknameExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> NicknameExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EB=8B=89=EB=84=A4=
=EC=9E=84=EC=9D=B4 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=8B=89=
=EB=84=A4=EC=9E=84 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EB=8B=
=89=EB=84=A4=EC=9E=84 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">0</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">0</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">CheckIDExistence</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(<span class=3D"hljs-built_in">id</span>) =3D=3D <span clas=
s=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span class=3D"hljs=
-string">"=EC=95=84=EC=9D=B4=EB=94=94=EA=B0=80 =EC=9E=85=EB=A0=A5=EB=90=98=
=EC=A7=80 =EC=95=8A=EC=95=98=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"SELECT id FROM user=
 WHERE id=3D%s"</span>, (<span class=3D"hljs-built_in">id</span>,))
            IDExistence =3D cursor.fetchall()
            <span class=3D"hljs-keyword">if</span> IDExistence:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=A4=91=EB=B3=B5"</span>, <span class=3D"hljs-string">=
"=EC=9D=B4=EB=AF=B8 =EC=A1=B4=EC=9E=AC=ED=95=98=EB=8A=94 =EC=95=84=EC=9D=B4=
=EB=94=94=EA=B0=80 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            <span class=3D"hljs-keyword">else</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EC=95=84=
=EC=9D=B4=EB=94=94 =EC=83=9D=EC=84=B1 =EA=B0=80=EB=8A=A5"</span>, <span cla=
ss=3D"hljs-string">"=EC=82=AC=EC=9A=A9 =EA=B0=80=EB=8A=A5=ED=95=9C =EC=95=
=84=EC=9D=B4=EB=94=94 =EC=9E=85=EB=8B=88=EB=8B=A4."</span>)
                <span class=3D"hljs-keyword">if</span> self.ExistenceValues=
[<span class=3D"hljs-number">1</span>] =3D=3D <span class=3D"hljs-number">0=
</span>:
                    self.ExistenceValues[<span class=3D"hljs-number">1</spa=
n>] +=3D <span class=3D"hljs-number">1</span>
                <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-=
built_in">sum</span>(self.ExistenceValues) =3D=3D <span class=3D"hljs-numbe=
r">2</span>:
                    self.SignUpBtn.config(state=3D<span class=3D"hljs-strin=
g">"active"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SignUp</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.connection:
            nickname =3D self.NicknameEntry.get()
            <span class=3D"hljs-built_in">id</span> =3D self.IDEntry.get()
            password =3D self.PasswordEntry.get()
            <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-buil=
t_in">len</span>(password) =3D=3D <span class=3D"hljs-number">0</span>:
                messagebox.showinfo(<span class=3D"hljs-string">"=EB=B9=84=
=EB=B0=80=EB=B2=88=ED=98=B8 =EB=AF=B8=EA=B8=B0=EC=9E=85"</span>, <span clas=
s=3D"hljs-string">"=EB=B9=84=EB=B0=80=EB=B2=88=ED=98=B8=EB=A5=BC =EC=9E=85=
=EB=A0=A5=ED=95=B4 =EC=A3=BC=EC=84=B8=EC=9A=94."</span>)
                <span class=3D"hljs-keyword">return</span>
            cursor =3D self.connection.cursor()
            cursor.execute(<span class=3D"hljs-string">"INSERT INTO user (n=
ickname, id, password) VALUES (%s, %s, %s)"</span>, (nickname, <span class=
=3D"hljs-built_in">id</span>, password,))
            self.connection.commit()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=B0=8B=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EC=97=AC =EB=B3=80=EA=B2=
=BD =EC=82=AC=ED=95=AD=EC=9D=84 DB=EC=97=90 =EC=A0=81=EC=9A=A9</span>
            cursor.close()  <span class=3D"hljs-comment"># =EC=BB=A4=EC=84=
=9C =EB=8B=AB=EA=B8=B0</span>
            self.connection.close()  <span class=3D"hljs-comment"># =EC=BB=
=A4=EB=84=A5=EC=85=98 =EB=8B=AB=EA=B8=B0</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=ED=9A=8C=EC=
=9B=90=EA=B0=80=EC=9E=85 =EC=84=B1=EA=B3=B5"</span>, <span class=3D"hljs-st=
ring">"=ED=9A=8C=EC=9B=90=EA=B0=80=EC=9E=85=EC=9D=B4 =EC=99=84=EB=A3=8C=EB=
=90=98=EC=97=88=EC=8A=B5=EB=8B=88=EB=8B=A4."</span>)
            self.SwitchToLoginPage()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D SignUpPage()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 '=EC=9E=
=85=EB=A0=A5=ED=95=84=EB=93=9C.png'=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EC=83=9D=EC=84=B1=ED=
=95=A9=EB=8B=88=EB=8B=A4. <code>create_image_entry</code> =EB=A9=94=EC=84=
=9C=EB=93=9C=EB=8A=94 <code>Canvas</code>=EC=97=90 =EC=9D=B4=EB=AF=B8=EC=A7=
=80=EB=A5=BC =EB=B0=B0=EC=B9=98=ED=95=98=EA=B3=A0 =EA=B7=B8 =EC=9C=84=EC=97=
=90 <code>Entry</code> =EC=9C=84=EC=A0=AF=EC=9D=84 =EB=B0=B0=EC=B9=98=ED=95=
=A9=EB=8B=88=EB=8B=A4. <code>Entry</code> =EC=9C=84=EC=A0=AF=EC=9D=80 <code=
>Canvas</code>=EC=9D=98 =EA=B0=80=EC=9A=B4=EB=8D=B0=EC=97=90 =EC=9C=84=EC=
=B9=98=ED=95=98=EA=B2=8C =EB=90=98=EC=96=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=
=A5=BC =EB=B0=B0=EA=B2=BD=EC=9C=BC=EB=A1=9C =EC=82=AC=EC=9A=A9=ED=95=A9=EB=
=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 e=
mpty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-x=
l p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:bor=
der-token-border-light md:hidden"><div class=3D"flex items-center"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-=
secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30p=
x] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.4912=
9 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V1=
5C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10=
.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701=
C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.8=
1069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.343=
15 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.093=
13 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12=
.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.86=
95 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C=
20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.9=
8627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.79=
94 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18=
.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.56=
04C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 =
14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4=
996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218=
 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></spa=
n><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-t=
oken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"f=
lex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1=
-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 =
1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1=
 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span><=
/button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify=
-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466=
 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19=
.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 =
9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614=
 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.00=
45C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2=
9589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.7=
46 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C=
9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5=
002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376=
 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V=
5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.447=
72 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"cur=
rentColor"></path></svg></span></button></span></div><span class=3D"" data-=
state=3D"closed"><button type=3D"button" id=3D"radix-:r2da:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-128" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa2a501-b512-4ccb-b8=
8f-7835b521ec44" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">import mysql.connector
import tkinter as tk
from tkinter import ttk
from tkinter import font as tkFont
from PIL import Image, ImageTk
import sys
import os

class UserMainPage(tk.Tk):
    def __init__(self, userID):
        super().__init__()

        self.title("=EC=9C=A0=EC=A0=80 =EB=A9=94=EC=9D=B8 =ED=8E=98=EC=9D=
=B4=EC=A7=80")
        self.geometry("800x600")
        self.userID =3D userID
        self.configure(bg=3D"#023F94")  # =EB=82=A8=EC=83=89 =EB=B0=B0=EA=
=B2=BD
        self.resizable(False, False)
       =20
        # =EC=A0=84=EC=97=AD =ED=8F=B0=ED=8A=B8 =EC=84=A4=EC=A0=95
        self.set_global_font()

        # =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C
        self.background_image =3D Image.open("=EC=88=98=EB=AD=89=EC=9D=B4=
=EB=B0=B0=EA=B2=BD.jpg")
        self.background_image =3D self.background_image.resize((800, 500), =
Image.Resampling.LANCZOS)
        self.bg_image =3D ImageTk.PhotoImage(self.background_image)

        # =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=9D=BC=EB=B2=A8=
 =EC=83=9D=EC=84=B1
        self.bg_label =3D tk.Label(self, image=3Dself.bg_image)
        self.bg_label.place(x=3D-2, y=3D50, anchor=3D"nw")

        # =EC=82=AC=EC=9A=A9=EC=9E=90 =EC=82=AC=EC=A7=84 =EB=A1=9C=EB=93=9C
        self.user_image =3D Image.open("=EC=82=AC=EC=9A=A9=EC=9E=90=EC=82=
=AC=EC=A7=84.png")
        self.user_photo =3D ImageTk.PhotoImage(self.user_image)
        self.user_image_label =3D tk.Label(self, image=3Dself.user_photo, b=
g=3D"#023F94")
        self.user_image_label.place(x=3D500, y=3D6)

        # =EB=8B=89=EB=84=A4=EC=9E=84 =ED=91=9C=EC=8B=9C
        self.nickname =3D self.get_user_nickname()
        self.nickname_font =3D tkFont.Font(family=3D"=EB=A9=94=EC=9D=B4=ED=
=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC", size=3D14)
        self.nickname_label =3D tk.Label(self, text=3Dself.nickname, bg=3D"=
#023F94", fg=3D"#FFFFFF", font=3Dself.nickname_font)
        self.nickname_label.place(x=3D550, y=3D12)

        # ttk =EC=8A=A4=ED=83=80=EC=9D=BC =EC=84=A4=EC=A0=95
        style =3D ttk.Style()
        style.configure("TButton", background=3D"#FFFFFF", foreground=3D"#0=
00000", font=3D("=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC", 1=
0), padding=3D10)
        style.configure("Logout.TButton", background=3D"#000080", foregroun=
d=3D"#000000", font=3D("=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=
=AC", 8), padding=3D5)
        style.map("TButton", background=3D[("active", "#f0f0f0")], foregrou=
nd=3D[("active", "#000000")])
        style.map("Logout.TButton", background=3D[("active", "#000080")], f=
oreground=3D[("active", "#FFFFFF")])

        # Progress bars
        self.progress1 =3D ttk.Progressbar(self, orient=3D"horizontal", len=
gth=3D300, mode=3D"determinate")
        self.progress1.place(x=3D280, y=3D174)

        self.progress2 =3D ttk.Progressbar(self, orient=3D"horizontal", len=
gth=3D300, mode=3D"determinate")
        self.progress2.place(x=3D280, y=3D224)

        # Labels
        self.label_font =3D tkFont.Font(family=3D"=EB=A9=94=EC=9D=B4=ED=94=
=8C=EC=8A=A4=ED=86=A0=EB=A6=AC", size=3D14)
        self.label1 =3D tk.Label(self, text=3D"=EC=9D=BC=EB=B3=84 =ED=95=99=
=EC=8A=B5=EB=A5=A0", bg=3D"#FFFFFF", fg=3D"#000000", font=3Dself.label_font=
)
        self.label1.place(x=3D180, y=3D170)

        self.level =3D self.get_user_level()  # Level =EA=B0=92 =EA=B0=80=
=EC=A0=B8=EC=98=A4=EA=B8=B0
        self.label2 =3D tk.Label(self, text=3Df"Level {self.level // 100}",=
 bg=3D"#FFFFFF", fg=3D"#000000", font=3Dself.label_font)
        self.label2.place(x=3D200, y=3D220)

        # Buttons
        self.button1 =3D ttk.Button(self, text=3D"=EC=9D=BC=EC=9E=90=EB=B3=
=84 =ED=95=99=EC=8A=B5", width=3D12, style=3D"TButton", command=3Dself.Swit=
chToDayStudy)
        self.button1.place(x=3D160, y=3D300)

        self.button2 =3D ttk.Button(self, text=3D"=EC=9D=BC=EC=9E=90=EB=B3=
=84 =EC=8B=9C=ED=97=98", width=3D12, style=3D"TButton", command=3Dself.Swit=
chToDayExam)
        self.button2.place(x=3D340, y=3D300)

        self.button3 =3D ttk.Button(self, text=3D"=EC=88=98=EB=AD=89=EC=9D=
=B4 =EA=B2=8C=EC=9E=84", width=3D12, style=3D"TButton", command=3Dself.Swit=
chToGamePage)
        self.button3.place(x=3D520, y=3D300)

        self.button4 =3D ttk.Button(self, text=3D"=EC=88=98=EC=A4=80=EB=B3=
=84 =ED=95=99=EC=8A=B5", width=3D12, style=3D"TButton", command=3Dself.Swit=
chToLevelStudy)
        self.button4.place(x=3D160, y=3D400)

        self.button5 =3D ttk.Button(self, text=3D"=EC=88=98=EC=A4=80=EB=B3=
=84 =EC=8B=9C=ED=97=98", width=3D12, style=3D"TButton", command=3Dself.Swit=
chToLevelExam)
        self.button5.place(x=3D340, y=3D400)

        # Logout Button with transparent background
        self.logout_button =3D ttk.Button(self, text=3D"=EB=A1=9C=EA=B7=B8=
=EC=95=84=EC=9B=83", width=3D7, style=3D"Logout.TButton", command=3Dself.Sw=
itchToLoginPage)
        self.logout_button.place(x=3D725, y=3D10)

        # Update progress bars with data from the database
        self.update_progress1_bars()
        self.update_progress2_bars()

    def set_global_font(self):
        # Maplestory Light =ED=8F=B0=ED=8A=B8 =EC=84=A4=EC=A0=95
        font_path =3D "Maplestory Light.ttf"
       =20
        if "=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC" not in =
tkFont.families():
            print("Font '=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=
=A6=AC' not found. Attempting to load from local file.")
            if os.path.exists(font_path):
                # Load the font using tkFont
                maplestory_font =3D tkFont.Font(family=3D"=EB=A9=94=EC=9D=
=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC", size=3D12)
               =20
                # Register the font
                self.option_add("*TButton.Font", maplestory_font)
                self.option_add("*Font", maplestory_font)
            else:
                print(f"Font file '{font_path}' not found.")
        else:
            maplestory_font =3D tkFont.Font(family=3D"=EB=A9=94=EC=9D=B4=ED=
=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC", size=3D12)
            # Register the font
            self.option_add("*TButton.Font", maplestory_font)
            self.option_add("*Font", maplestory_font)

    def get_user_nickname(self):
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=
=EA=B2=B0
        conn =3D mysql.connector.connect(
            host=3D'ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com',
            user=3D'admin',
            password=3D'seat0323',
            database=3D'wordbook'
        )
        cursor =3D conn.cursor()

        # =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=89
        cursor.execute("SELECT nickname FROM user WHERE id =3D %s", (self.u=
serID,))
        nickname =3D cursor.fetchone()[0]

        # =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=8C
        conn.close()

        return nickname
   =20
    def get_user_level(self):
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=
=EA=B2=B0
        conn =3D mysql.connector.connect(
            host=3D'ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com',
            user=3D'admin',
            password=3D'seat0323',
            database=3D'wordbook'
        )
        cursor =3D conn.cursor()

        # =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=89
        cursor.execute("SELECT level FROM user WHERE id =3D %s", (self.user=
ID,))
        level =3D cursor.fetchone()[0]

        # =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=8C
        conn.close()

        return level

    def get_progress1_data(self):
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=
=EA=B2=B0
        conn =3D mysql.connector.connect(
            host=3D'ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com',
            user=3D'admin',
            password=3D'seat0323',
            database=3D'wordbook'
        )
        cursor =3D conn.cursor()

        # =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=89
        cursor.execute("SELECT wordday FROM user WHERE id =3D %s", (self.us=
erID,))
        wordday =3D cursor.fetchone()[0]

        cursor.execute("SELECT MAX(Day) FROM toeicword")
        total_day =3D cursor.fetchone()[0]

        # =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=8C
        conn.close()

        # =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=84=EC=82=B0
        progress1_value =3D (wordday / total_day) * 100
        return progress1_value

    def get_progress2_data(self):
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4 =EC=97=B0=
=EA=B2=B0
        conn =3D mysql.connector.connect(
            host=3D'ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com',
            user=3D'admin',
            password=3D'seat0323',
            database=3D'wordbook'
        )
        cursor =3D conn.cursor()

        # =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=89
        cursor.execute("SELECT level FROM user WHERE id =3D %s", (self.user=
ID,))
        level =3D cursor.fetchone()[0]

        # =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=8C
        conn.close()

        # =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=84=EC=82=B0
        progress2_value =3D (level % 100)
        return progress2_value

    def update_progress1_bars(self):
        progress1_value =3D self.get_progress1_data()
        self.progress1['value'] =3D progress1_value

    def update_progress2_bars(self):
        progress2_value =3D self.get_progress2_data()
        self.progress2['value'] =3D progress2_value

    def SwitchToDayStudy(self):
        from UserStudyDayPage import DayStudy
        self.destroy()
        app =3D DayStudy(self.userID)
        app.mainloop()
       =20
    def SwitchToDayExam(self):
        from UserExamDayPage import DayExam
        self.destroy()
        app =3D DayExam(self.userID)
        app.mainloop()
       =20
    def SwitchToLevelExam(self):
        from UserExamLevelPage import LevelExam
        self.destroy()
        app =3D LevelExam(self.userID)
        app.mainloop()
       =20
    def SwitchToLevelStudy(self):
        from UserStudyLevelPage import LevelStudy
        self.destroy()
        app =3D LevelStudy(self.userID)
        app.mainloop()
   =20
    def SwitchToGamePage(self):
        from game import GameApp
        self.destroy()
        app =3D GameApp(self.userID)
        app.mainloop()
           =20
    def SwitchToLoginPage(self):
        from LoginPage import LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

if __name__ =3D=3D "__main__":
    userID =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user'
    app =3D UserMainPage(userID)
    app.mainloop()

=EB=82=B4 =EC=9C=A0=EC=A0=80=EB=A9=94=EC=9D=B8=ED=8E=98=EC=9D=B4=EC=A7=80=
=EC=9D=B8=EB=8D=B0, =EC=A2=8C=EC=B8=A1 =EB=A7=A8=EC=9C=84=EC=97=90 50x40 =
=ED=81=AC=EA=B8=B0=EB=A1=9C '=EB=A1=9C=EA=B3=A0=EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A7=8C.png'=EB=A5=BC =EB=84=A3=EA=B3=A0 =EA=B7=B8 =EC=98=A4=EB=A5=B8=EC=
=AA=BD=EC=97=90  290x40 =ED=81=AC=EA=B8=B0=EB=A1=9C '=EB=A1=9C=EA=B3=A0=EA=
=B8=80=EC=9E=90=EB=A7=8C.png'=EB=A5=BC =EB=84=A3=EC=96=B4=EC=A4=98<div clas=
s=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hove=
r/conversation-turn:block"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-te=
xt-secondary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D=
"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewB=
ox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094=
A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1=
.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56=
a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0=
 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div><=
/div></div></div></div></div></div></div></div></div><div class=3D"w-full t=
ext-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-129" =
data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-b=
ase md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex=
-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem]=
 xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items=
-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar =
flex h-6 w-6 items-center justify-center overflow-hidden rounded-full juice=
:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center jus=
tify-center bg-token-main-surface-primary text-token-text-primary h-8 w-8">=
<svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-=
9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241=
 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.6=
8622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 =
3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1=
295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.1=
6803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085=
 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02=
839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5=
467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 2=
8.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.81=
23 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C=
15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.=
5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.170=
4 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 3=
5.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371=
 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16=
.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7=
601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 2=
6.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.28=
25V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C2=
9.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946=
 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6=
.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0=
187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 =
30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 =
25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.=
0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.864=
3 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM=
4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.=
4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638=
 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26=
.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.130=
7 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.=
06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.61=
94ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 =
12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.=
7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244=
 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.=
1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.604=
7 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20=
.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464=
 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6=
803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712=
L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16=
.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.539=
03 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 =
7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.=
5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.98=
93 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 =
19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.3=
8544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.264=
9 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22=
.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.8635=
6 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 2=
1.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4=
983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div=
></div></div></div><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div=
 class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"7607a88e-4964-4b6f-b0e0-8610bfae58b2" dir=
=3D"auto" class=3D"text-message flex flex-col items-start whitespace-pre-wr=
ap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end over=
flow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hid=
den juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-words d=
ark:prose-invert light"><p>=EB=A1=9C=EA=B3=A0 =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =EC=A2=8C=EC=B8=A1 =EB=A7=A8 =EC=9C=84=EC=97=90 =EC=B6=94=EA=B0=
=80=ED=95=98=EA=B3=A0, =EA=B7=B8 =EC=98=A4=EB=A5=B8=EC=AA=BD=EC=97=90 =EB=
=A1=9C=EA=B3=A0 =ED=85=8D=EC=8A=A4=ED=8A=B8 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=
=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EB=8F=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=
=A5=BC =EC=88=98=EC=A0=95=ED=95=B4 =EB=93=9C=EB=A6=AC=EA=B2=A0=EC=8A=B5=EB=
=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[=
0.5px] border-token-border-medium"><div class=3D"flex items-center relative=
 text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>python</span><div class=3D"=
flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3=
 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 =
1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0=
-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" =
clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</b=
utton></span></div></div><div class=3D"overflow-y-auto p-4 text-left undefi=
ned" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span=
 class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> font <span class=3D"hljs-keyword">as</span> tkFont
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">import</span> os

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>UserMainPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, userID</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()

        self.title(<span class=3D"hljs-string">"=EC=9C=A0=EC=A0=80 =EB=A9=
=94=EC=9D=B8 =ED=8E=98=EC=9D=B4=EC=A7=80"</span>)
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.userID =3D userID
        self.configure(bg=3D<span class=3D"hljs-string">"#023F94"</span>)  =
<span class=3D"hljs-comment"># =EB=82=A8=EC=83=89 =EB=B0=B0=EA=B2=BD</span>
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)
       =20
        <span class=3D"hljs-comment"># =EC=A0=84=EC=97=AD =ED=8F=B0=ED=8A=
=B8 =EC=84=A4=EC=A0=95</span>
        self.set_global_font()

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C</span>
        self.background_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=EB=B0=B0=EA=
=B2=BD.jpg"</span>)
        self.background_image =3D self.background_image.resize((<span class=
=3D"hljs-number">800</span>, <span class=3D"hljs-number">500</span>), Image=
.Resampling.LANCZOS)
        self.bg_image =3D ImageTk.PhotoImage(self.background_image)

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1</span>
        self.bg_label =3D tk.Label(self, image=3Dself.bg_image)
        self.bg_label.place(x=3D-<span class=3D"hljs-number">2</span>, y=3D=
<span class=3D"hljs-number">50</span>, anchor=3D<span class=3D"hljs-string"=
>"nw"</span>)

        <span class=3D"hljs-comment"># =EB=A1=9C=EA=B3=A0 =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C</span>
        self.logo_image =3D Image.<span class=3D"hljs-built_in">open</span>=
(<span class=3D"hljs-string">"=EB=A1=9C=EA=B3=A0=EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A7=8C.png"</span>)
        self.logo_image =3D self.logo_image.resize((<span class=3D"hljs-num=
ber">50</span>, <span class=3D"hljs-number">40</span>), Image.Resampling.LA=
NCZOS)
        self.logo_photo =3D ImageTk.PhotoImage(self.logo_image)
        self.logo_label =3D tk.Label(self, image=3Dself.logo_photo, bg=3D<s=
pan class=3D"hljs-string">"#023F94"</span>)
        self.logo_label.place(x=3D<span class=3D"hljs-number">0</span>, y=
=3D<span class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EB=A1=9C=EA=B3=A0 =ED=85=8D=EC=8A=
=A4=ED=8A=B8 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C</span>
        self.logo_text_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(<span class=3D"hljs-string">"=EB=A1=9C=EA=B3=A0=EA=B8=80=EC=9E=90=EB=
=A7=8C.png"</span>)
        self.logo_text_image =3D self.logo_text_image.resize((<span class=
=3D"hljs-number">290</span>, <span class=3D"hljs-number">40</span>), Image.=
Resampling.LANCZOS)
        self.logo_text_photo =3D ImageTk.PhotoImage(self.logo_text_image)
        self.logo_text_label =3D tk.Label(self, image=3Dself.logo_text_phot=
o, bg=3D<span class=3D"hljs-string">"#023F94"</span>)
        self.logo_text_label.place(x=3D<span class=3D"hljs-number">60</span=
>, y=3D<span class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EC=82=AC=EC=9A=A9=EC=9E=90 =EC=82=
=AC=EC=A7=84 =EB=A1=9C=EB=93=9C</span>
        self.user_image =3D Image.<span class=3D"hljs-built_in">open</span>=
(<span class=3D"hljs-string">"=EC=82=AC=EC=9A=A9=EC=9E=90=EC=82=AC=EC=A7=84=
.png"</span>)
        self.user_photo =3D ImageTk.PhotoImage(self.user_image)
        self.user_image_label =3D tk.Label(self, image=3Dself.user_photo, b=
g=3D<span class=3D"hljs-string">"#023F94"</span>)
        self.user_image_label.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">6</span>)

        <span class=3D"hljs-comment"># =EB=8B=89=EB=84=A4=EC=9E=84 =ED=91=
=9C=EC=8B=9C</span>
        self.nickname =3D self.get_user_nickname()
        self.nickname_font =3D tkFont.Font(family=3D<span class=3D"hljs-str=
ing">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=
=3D<span class=3D"hljs-number">14</span>)
        self.nickname_label =3D tk.Label(self, text=3Dself.nickname, bg=3D<=
span class=3D"hljs-string">"#023F94"</span>, fg=3D<span class=3D"hljs-strin=
g">"#FFFFFF"</span>, font=3Dself.nickname_font)
        self.nickname_label.place(x=3D<span class=3D"hljs-number">550</span=
>, y=3D<span class=3D"hljs-number">12</span>)

        <span class=3D"hljs-comment"># ttk =EC=8A=A4=ED=83=80=EC=9D=BC =EC=
=84=A4=EC=A0=95</span>
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"TButton"</span>, backg=
round=3D<span class=3D"hljs-string">"#FFFFFF"</span>, foreground=3D<span cl=
ass=3D"hljs-string">"#000000"</span>, font=3D(<span class=3D"hljs-string">"=
=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, <span class=
=3D"hljs-number">10</span>), padding=3D<span class=3D"hljs-number">10</span=
>)
        style.configure(<span class=3D"hljs-string">"Logout.TButton"</span>=
, background=3D<span class=3D"hljs-string">"#000080"</span>, foreground=3D<=
span class=3D"hljs-string">"#000000"</span>, font=3D(<span class=3D"hljs-st=
ring">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, <spa=
n class=3D"hljs-number">8</span>), padding=3D<span class=3D"hljs-number">5<=
/span>)
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">"TButton"</span>, background=3D[(<span class=3D"hljs-string">"activ=
e"</span>, <span class=3D"hljs-string">"#f0f0f0"</span>)], foreground=3D[(<=
span class=3D"hljs-string">"active"</span>, <span class=3D"hljs-string">"#0=
00000"</span>)])
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">"Logout.TButton"</span>, background=3D[(<span class=3D"hljs-string"=
>"active"</span>, <span class=3D"hljs-string">"#000080"</span>)], foregroun=
d=3D[(<span class=3D"hljs-string">"active"</span>, <span class=3D"hljs-stri=
ng">"#FFFFFF"</span>)])

        <span class=3D"hljs-comment"># Progress bars</span>
        self.progress1 =3D ttk.Progressbar(self, orient=3D<span class=3D"hl=
js-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300</s=
pan>, mode=3D<span class=3D"hljs-string">"determinate"</span>)
        self.progress1.place(x=3D<span class=3D"hljs-number">280</span>, y=
=3D<span class=3D"hljs-number">174</span>)

        self.progress2 =3D ttk.Progressbar(self, orient=3D<span class=3D"hl=
js-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300</s=
pan>, mode=3D<span class=3D"hljs-string">"determinate"</span>)
        self.progress2.place(x=3D<span class=3D"hljs-number">280</span>, y=
=3D<span class=3D"hljs-number">224</span>)

        <span class=3D"hljs-comment"># Labels</span>
        self.label_font =3D tkFont.Font(family=3D<span class=3D"hljs-string=
">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=3D<=
span class=3D"hljs-number">14</span>)
        self.label1 =3D tk.Label(self, text=3D<span class=3D"hljs-string">"=
=EC=9D=BC=EB=B3=84 =ED=95=99=EC=8A=B5=EB=A5=A0"</span>, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-string">"#000000"<=
/span>, font=3Dself.label_font)
        self.label1.place(x=3D<span class=3D"hljs-number">180</span>, y=3D<=
span class=3D"hljs-number">170</span>)

        self.level =3D self.get_user_level()  <span class=3D"hljs-comment">=
# Level =EA=B0=92 =EA=B0=80=EC=A0=B8=EC=98=A4=EA=B8=B0</span>
        self.label2 =3D tk.Label(self, text=3D<span class=3D"hljs-string">f=
"Level <span class=3D"hljs-subst">{self.level // <span class=3D"hljs-number=
">100</span>}</span>"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</s=
pan>, fg=3D<span class=3D"hljs-string">"#000000"</span>, font=3Dself.label_=
font)
        self.label2.place(x=3D<span class=3D"hljs-number">200</span>, y=3D<=
span class=3D"hljs-number">220</span>)

        <span class=3D"hljs-comment"># Buttons</span>
        self.button1 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToDayStudy)
        self.button1.place(x=3D<span class=3D"hljs-number">160</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button2 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=9D=BC=EC=9E=90=EB=B3=84 =EC=8B=9C=ED=97=98"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToDayExam)
        self.button2.place(x=3D<span class=3D"hljs-number">340</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button3 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4 =EA=B2=8C=EC=9E=84"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToGamePage)
        self.button3.place(x=3D<span class=3D"hljs-number">520</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button4 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToLevelStudy)
        self.button4.place(x=3D<span class=3D"hljs-number">160</span>, y=3D=
<span class=3D"hljs-number">400</span>)

        self.button5 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToLevelExam)
        self.button5.place(x=3D<span class=3D"hljs-number">340</span>, y=3D=
<span class=3D"hljs-number">400</span>)

        <span class=3D"hljs-comment"># Logout Button with transparent backg=
round</span>
        self.logout_button =3D ttk.Button(self, text=3D<span class=3D"hljs-=
string">"=EB=A1=9C=EA=B7=B8=EC=95=84=EC=9B=83"</span>, width=3D<span class=
=3D"hljs-number">7</span>, style=3D<span class=3D"hljs-string">"Logout.TBut=
ton"</span>, command=3Dself.SwitchToLoginPage)
        self.logout_button.place(x=3D<span class=3D"hljs-number">725</span>=
, y=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># Update progress bars with data from =
the database</span>
        self.update_progress1_bars()
        self.update_progress2_bars()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">set_global_font</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># Maplestory Light =ED=8F=B0=ED=8A=B8 =
=EC=84=A4=EC=A0=95</span>
        font_path =3D <span class=3D"hljs-string">"Maplestory Light.ttf"</s=
pan>
       =20
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-string">=
"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span> <span class=
=3D"hljs-keyword">not</span> <span class=3D"hljs-keyword">in</span> tkFont.=
families():
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">"Font '=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC' not =
found. Attempting to load from local file."</span>)
            <span class=3D"hljs-keyword">if</span> os.path.exists(font_path=
):
                <span class=3D"hljs-comment"># Load the font using tkFont</=
span>
                maplestory_font =3D tkFont.Font(family=3D<span class=3D"hlj=
s-string">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, =
size=3D<span class=3D"hljs-number">12</span>)
               =20
                <span class=3D"hljs-comment"># Register the font</span>
                self.option_add(<span class=3D"hljs-string">"*TButton.Font"=
</span>, maplestory_font)
                self.option_add(<span class=3D"hljs-string">"*Font"</span>,=
 maplestory_font)
            <span class=3D"hljs-keyword">else</span>:
                <span class=3D"hljs-built_in">print</span>(<span class=3D"h=
ljs-string">f"Font file '<span class=3D"hljs-subst">{font_path}</span>' not=
 found."</span>)
        <span class=3D"hljs-keyword">else</span>:
            maplestory_font =3D tkFont.Font(family=3D<span class=3D"hljs-st=
ring">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=
=3D<span class=3D"hljs-number">12</span>)
            <span class=3D"hljs-comment"># Register the font</span>
            self.option_add(<span class=3D"hljs-string">"*TButton.Font"</sp=
an>, maplestory_font)
            self.option_add(<span class=3D"hljs-string">"*Font"</span>, map=
lestory_font)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_nickname</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT nickname FROM us=
er WHERE id =3D %s"</span>, (self.userID,))
        nickname =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>=
]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-keyword">return</span> nickname
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT level FROM user =
WHERE id =3D %s"</span>, (self.userID,))
        level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-keyword">return</span> level

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_progress1_data</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT wordday FROM use=
r WHERE id =3D %s"</span>, (self.userID,))
        wordday =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        cursor.execute(<span class=3D"hljs-string">"SELECT MAX(Day) FROM to=
eicword"</span>)
        total_day =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-comment"># =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=
=84=EC=82=B0</span>
        progress1_value =3D (wordday / total_day) * <span class=3D"hljs-num=
ber">100</span>
        <span class=3D"hljs-keyword">return</span> progress1_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_progress2_data</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT level FROM user =
WHERE id =3D %s"</span>, (self.userID,))
        level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-comment"># =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=
=84=EC=82=B0</span>
        progress2_value =3D (level % <span class=3D"hljs-number">100</span>=
)
        <span class=3D"hljs-keyword">return</span> progress2_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress1_bars</span>(<span class=3D"hljs-params">self</span>)=
:
        progress1_value =3D self.get_progress1_data()
        self.progress1[<span class=3D"hljs-string">'value'</span>] =3D prog=
ress1_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress2_bars</span>(<span class=3D"hljs-params">self</span>)=
:
        progress2_value =3D self.get_progress2_data()
        self.progress2[<span class=3D"hljs-string">'value'</span>] =3D prog=
ress2_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToDayStudy</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserStudyDayPage <span cla=
ss=3D"hljs-keyword">import</span> DayStudy
        self.destroy()
        app =3D DayStudy(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToDayExam</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserExamDayPage <span clas=
s=3D"hljs-keyword">import</span> DayExam
        self.destroy()
        app =3D DayExam(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLevelExam</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserExamLevelPage <span cl=
ass=3D"hljs-keyword">import</span> LevelExam
        self.destroy()
        app =3D LevelExam(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLevelStudy</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserStudyLevelPage <span c=
lass=3D"hljs-keyword">import</span> LevelStudy
        self.destroy()
        app =3D LevelStudy(self.userID)
        app.mainloop()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToGamePage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> game <span class=3D"hljs-k=
eyword">import</span> GameApp
        self.destroy()
        app =3D GameApp(self.userID)
        app.mainloop()
           =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    userID =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D UserMainPage(userID)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C =
'=EB=A1=9C=EA=B3=A0=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A7=8C.png'=EC=99=80 '=EB=
=A1=9C=EA=B3=A0=EA=B8=80=EC=9E=90=EB=A7=8C.png' =ED=8C=8C=EC=9D=BC=EC=9D=84=
 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =
=EC=B6=94=EA=B0=80=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=A1=9C=EA=B3=A0 =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=8A=94 =EC=A2=8C=EC=B8=A1 =EB=A7=A8 =EC=9C=84=
=EC=97=90 50x40 =ED=81=AC=EA=B8=B0=EB=A1=9C =EB=B0=B0=EC=B9=98=ED=95=98=EA=
=B3=A0, =EB=A1=9C=EA=B3=A0 =ED=85=8D=EC=8A=A4=ED=8A=B8 =EC=9D=B4=EB=AF=B8=
=EC=A7=80=EB=8A=94 =EA=B7=B8 =EC=98=A4=EB=A5=B8=EC=AA=BD=EC=97=90 290x40 =
=ED=81=AC=EA=B8=B0=EB=A1=9C =EB=B0=B0=EC=B9=98=ED=95=98=EC=98=80=EC=8A=B5=
=EB=8B=88=EB=8B=A4. =EC=9D=B4 =EC=BD=94=EB=93=9C=EA=B0=80 =EC=98=AC=EB=B0=
=94=EB=A5=B4=EA=B2=8C =EC=9E=91=EB=8F=99=ED=95=98=EB=A0=A4=EB=A9=B4 =ED=95=
=B4=EB=8B=B9 =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8C=8C=EC=9D=BC=EB=93=A4=EC=9D=
=B4 =EC=8A=A4=ED=81=AC=EB=A6=BD=ED=8A=B8=EA=B0=80 =EC=8B=A4=ED=96=89=EB=90=
=98=EB=8A=94 =EB=94=94=EB=A0=89=ED=86=A0=EB=A6=AC=EC=97=90 =EC=9E=88=EC=96=
=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div c=
lass=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-cente=
r justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:=
absolute md:border md:border-token-border-light md:hidden"><div class=3D"fl=
ex items-center"><span class=3D"" data-state=3D"closed"><button class=3D"ro=
unded-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><=
span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cl=
ip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54=
132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00=
005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 1=
6.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.090=
2V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 2=
1.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 1=
5V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3=
166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 2=
2.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1=
302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059=
 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20=
.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.620=
17 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8=
.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1=
094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483=
C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.=
9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.268=
7 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></=
svg></span></button></span><span class=3D"" data-state=3D"closed"><button c=
lass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-se=
condary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"=
><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg></span></button></span><div class=3D"flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8=
727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355=
C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476=
 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 =
2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 =
19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.=
8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5=
.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62=
036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L=
9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3=
721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.55=
68 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0=
045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.00=
45 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></span><=
/div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"r=
adix-:r2di:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed" class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-=
[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items-cent=
er pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full i=
con-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=
=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503=
-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.5=
04.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.5=
16 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-=
.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=
=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.3=
66 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.=
467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.1=
05-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c=
2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0=
 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888=
 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1=
.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.2=
35-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></di=
v><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0=
px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm =
text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.41=
4 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd=
"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 l=
g:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-130" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa2318d-db67-46f4-a7e1-5316aed93ae2" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4=
f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EB=A1=9C=EA=B3=A0=EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A7=8C.png=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=83=89=
=EC=9D=84 #023F94 =EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=B4=EC=A3=BC=EB=8A=94 =
=EC=88=98=EC=A0=95=EB=B0=A9=EB=B2=95=EC=A2=80<div class=3D"absolute bottom-=
0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:b=
lock"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 =
items-center justify-center rounded-full text-token-text-secondary transiti=
on hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/20=
00/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" clas=
s=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.29=
3 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197=
l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l=
-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837=
L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip=
-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></di=
v></div></div></div></div></div><div class=3D"w-full text-token-text-primar=
y" dir=3D"auto" data-testid=3D"conversation-turn-131" data-scroll-anchor=3D=
"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md=
:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base ju=
ice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div =
class=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-=
main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col age=
nt-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-gro=
w flex-col max-w-full"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"0107d84a-afbe-4e8f-b501-4202fdeb37aa" dir=3D"auto" class=3D"text=
-message flex flex-col items-start whitespace-pre-wrap break-words [.text-m=
essage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div=
 class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px=
]"><div class=3D"markdown prose w-full break-words dark:prose-invert light"=
><p>=EB=A1=9C=EA=B3=A0 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9D=98 =EB=B0=B0=EA=B2=
=BD=EC=83=89=EC=9D=84 #023F94=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=98=EB=A0=A4=
=EB=A9=B4, PIL(Pillow) =EB=9D=BC=EC=9D=B4=EB=B8=8C=EB=9F=AC=EB=A6=AC=EB=A5=
=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=
=BC =EC=88=98=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=
=A4. =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=B6=88=EB=9F=AC=EC=99=80=EC=84=
=9C =EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=9C =ED=9B=
=84, =EC=88=98=EC=A0=95=EB=90=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC UI=EC=
=97=90 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8F=84=EB=A1=9D =EB=B3=80=EA=B2=BD=ED=
=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EC=97=AC=EA=B8=
=B0=EC=84=9C=EB=8A=94 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=B6=88=EB=9F=
=AC=EC=99=80=EC=84=9C =EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 =EC=A0=81=EC=9A=
=A9=ED=95=98=EA=B3=A0, =EC=9D=B4=EB=A5=BC =EB=8B=A4=EC=8B=9C =EC=A0=80=EC=
=9E=A5=ED=95=9C =ED=9B=84 UI=EC=97=90 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =
=EB=B0=A9=EC=8B=9D=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EA=B2=A0=EC=8A=B5=
=EB=8B=88=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> font <span class=3D"hljs-keyword">as</span> tkFont
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk, ImageDraw
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">import</span> os

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>UserMainPage</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, userID</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()

        self.title(<span class=3D"hljs-string">"=EC=9C=A0=EC=A0=80 =EB=A9=
=94=EC=9D=B8 =ED=8E=98=EC=9D=B4=EC=A7=80"</span>)
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)
        self.userID =3D userID
        self.configure(bg=3D<span class=3D"hljs-string">"#023F94"</span>)  =
<span class=3D"hljs-comment"># =EB=82=A8=EC=83=89 =EB=B0=B0=EA=B2=BD</span>
        self.resizable(<span class=3D"hljs-literal">False</span>, <span cla=
ss=3D"hljs-literal">False</span>)
       =20
        <span class=3D"hljs-comment"># =EC=A0=84=EC=97=AD =ED=8F=B0=ED=8A=
=B8 =EC=84=A4=EC=A0=95</span>
        self.set_global_font()

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C</span>
        self.background_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=EB=B0=B0=EA=
=B2=BD.jpg"</span>)
        self.background_image =3D self.background_image.resize((<span class=
=3D"hljs-number">800</span>, <span class=3D"hljs-number">500</span>), Image=
.Resampling.LANCZOS)
        self.bg_image =3D ImageTk.PhotoImage(self.background_image)

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1</span>
        self.bg_label =3D tk.Label(self, image=3Dself.bg_image)
        self.bg_label.place(x=3D-<span class=3D"hljs-number">2</span>, y=3D=
<span class=3D"hljs-number">50</span>, anchor=3D<span class=3D"hljs-string"=
>"nw"</span>)

        <span class=3D"hljs-comment"># =EB=A1=9C=EA=B3=A0 =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EB=B0=8F =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=
=84=A4=EC=A0=95</span>
        self.logo_image =3D Image.<span class=3D"hljs-built_in">open</span>=
(<span class=3D"hljs-string">"=EB=A1=9C=EA=B3=A0=EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A7=8C.png"</span>).convert(<span class=3D"hljs-string">"RGBA"</span>)
        self.logo_image =3D self.set_background_color(self.logo_image, <spa=
n class=3D"hljs-string">"#023F94"</span>)
        self.logo_image =3D self.logo_image.resize((<span class=3D"hljs-num=
ber">50</span>, <span class=3D"hljs-number">40</span>), Image.Resampling.LA=
NCZOS)
        self.logo_photo =3D ImageTk.PhotoImage(self.logo_image)
        self.logo_label =3D tk.Label(self, image=3Dself.logo_photo, bg=3D<s=
pan class=3D"hljs-string">"#023F94"</span>)
        self.logo_label.place(x=3D<span class=3D"hljs-number">0</span>, y=
=3D<span class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EB=A1=9C=EA=B3=A0 =ED=85=8D=EC=8A=
=A4=ED=8A=B8 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C</span>
        self.logo_text_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(<span class=3D"hljs-string">"=EB=A1=9C=EA=B3=A0=EA=B8=80=EC=9E=90=EB=
=A7=8C.png"</span>)
        self.logo_text_image =3D self.logo_text_image.resize((<span class=
=3D"hljs-number">290</span>, <span class=3D"hljs-number">40</span>), Image.=
Resampling.LANCZOS)
        self.logo_text_photo =3D ImageTk.PhotoImage(self.logo_text_image)
        self.logo_text_label =3D tk.Label(self, image=3Dself.logo_text_phot=
o, bg=3D<span class=3D"hljs-string">"#023F94"</span>)
        self.logo_text_label.place(x=3D<span class=3D"hljs-number">60</span=
>, y=3D<span class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EC=82=AC=EC=9A=A9=EC=9E=90 =EC=82=
=AC=EC=A7=84 =EB=A1=9C=EB=93=9C</span>
        self.user_image =3D Image.<span class=3D"hljs-built_in">open</span>=
(<span class=3D"hljs-string">"=EC=82=AC=EC=9A=A9=EC=9E=90=EC=82=AC=EC=A7=84=
.png"</span>)
        self.user_photo =3D ImageTk.PhotoImage(self.user_image)
        self.user_image_label =3D tk.Label(self, image=3Dself.user_photo, b=
g=3D<span class=3D"hljs-string">"#023F94"</span>)
        self.user_image_label.place(x=3D<span class=3D"hljs-number">500</sp=
an>, y=3D<span class=3D"hljs-number">6</span>)

        <span class=3D"hljs-comment"># =EB=8B=89=EB=84=A4=EC=9E=84 =ED=91=
=9C=EC=8B=9C</span>
        self.nickname =3D self.get_user_nickname()
        self.nickname_font =3D tkFont.Font(family=3D<span class=3D"hljs-str=
ing">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=
=3D<span class=3D"hljs-number">14</span>)
        self.nickname_label =3D tk.Label(self, text=3Dself.nickname, bg=3D<=
span class=3D"hljs-string">"#023F94"</span>, fg=3D<span class=3D"hljs-strin=
g">"#FFFFFF"</span>, font=3Dself.nickname_font)
        self.nickname_label.place(x=3D<span class=3D"hljs-number">550</span=
>, y=3D<span class=3D"hljs-number">12</span>)

        <span class=3D"hljs-comment"># ttk =EC=8A=A4=ED=83=80=EC=9D=BC =EC=
=84=A4=EC=A0=95</span>
        style =3D ttk.Style()
        style.configure(<span class=3D"hljs-string">"TButton"</span>, backg=
round=3D<span class=3D"hljs-string">"#FFFFFF"</span>, foreground=3D<span cl=
ass=3D"hljs-string">"#000000"</span>, font=3D(<span class=3D"hljs-string">"=
=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, <span class=
=3D"hljs-number">10</span>), padding=3D<span class=3D"hljs-number">10</span=
>)
        style.configure(<span class=3D"hljs-string">"Logout.TButton"</span>=
, background=3D<span class=3D"hljs-string">"#000080"</span>, foreground=3D<=
span class=3D"hljs-string">"#000000"</span>, font=3D(<span class=3D"hljs-st=
ring">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, <spa=
n class=3D"hljs-number">8</span>), padding=3D<span class=3D"hljs-number">5<=
/span>)
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">"TButton"</span>, background=3D[(<span class=3D"hljs-string">"activ=
e"</span>, <span class=3D"hljs-string">"#f0f0f0"</span>)], foreground=3D[(<=
span class=3D"hljs-string">"active"</span>, <span class=3D"hljs-string">"#0=
00000"</span>)])
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">"Logout.TButton"</span>, background=3D[(<span class=3D"hljs-string"=
>"active"</span>, <span class=3D"hljs-string">"#000080"</span>)], foregroun=
d=3D[(<span class=3D"hljs-string">"active"</span>, <span class=3D"hljs-stri=
ng">"#FFFFFF"</span>)])

        <span class=3D"hljs-comment"># Progress bars</span>
        self.progress1 =3D ttk.Progressbar(self, orient=3D<span class=3D"hl=
js-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300</s=
pan>, mode=3D<span class=3D"hljs-string">"determinate"</span>)
        self.progress1.place(x=3D<span class=3D"hljs-number">280</span>, y=
=3D<span class=3D"hljs-number">174</span>)

        self.progress2 =3D ttk.Progressbar(self, orient=3D<span class=3D"hl=
js-string">"horizontal"</span>, length=3D<span class=3D"hljs-number">300</s=
pan>, mode=3D<span class=3D"hljs-string">"determinate"</span>)
        self.progress2.place(x=3D<span class=3D"hljs-number">280</span>, y=
=3D<span class=3D"hljs-number">224</span>)

        <span class=3D"hljs-comment"># Labels</span>
        self.label_font =3D tkFont.Font(family=3D<span class=3D"hljs-string=
">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=3D<=
span class=3D"hljs-number">14</span>)
        self.label1 =3D tk.Label(self, text=3D<span class=3D"hljs-string">"=
=EC=9D=BC=EB=B3=84 =ED=95=99=EC=8A=B5=EB=A5=A0"</span>, bg=3D<span class=3D=
"hljs-string">"#FFFFFF"</span>, fg=3D<span class=3D"hljs-string">"#000000"<=
/span>, font=3Dself.label_font)
        self.label1.place(x=3D<span class=3D"hljs-number">180</span>, y=3D<=
span class=3D"hljs-number">170</span>)

        self.level =3D self.get_user_level()  <span class=3D"hljs-comment">=
# Level =EA=B0=92 =EA=B0=80=EC=A0=B8=EC=98=A4=EA=B8=B0</span>
        self.label2 =3D tk.Label(self, text=3D<span class=3D"hljs-string">f=
"Level <span class=3D"hljs-subst">{self.level // <span class=3D"hljs-number=
">100</span>}</span>"</span>, bg=3D<span class=3D"hljs-string">"#FFFFFF"</s=
pan>, fg=3D<span class=3D"hljs-string">"#000000"</span>, font=3Dself.label_=
font)
        self.label2.place(x=3D<span class=3D"hljs-number">200</span>, y=3D<=
span class=3D"hljs-number">220</span>)

        <span class=3D"hljs-comment"># Buttons</span>
        self.button1 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=9D=BC=EC=9E=90=EB=B3=84 =ED=95=99=EC=8A=B5"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToDayStudy)
        self.button1.place(x=3D<span class=3D"hljs-number">160</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button2 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=9D=BC=EC=9E=90=EB=B3=84 =EC=8B=9C=ED=97=98"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToDayExam)
        self.button2.place(x=3D<span class=3D"hljs-number">340</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button3 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4 =EA=B2=8C=EC=9E=84"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToGamePage)
        self.button3.place(x=3D<span class=3D"hljs-number">520</span>, y=3D=
<span class=3D"hljs-number">300</span>)

        self.button4 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EC=A4=80=EB=B3=84 =ED=95=99=EC=8A=B5"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToLevelStudy)
        self.button4.place(x=3D<span class=3D"hljs-number">160</span>, y=3D=
<span class=3D"hljs-number">400</span>)

        self.button5 =3D ttk.Button(self, text=3D<span class=3D"hljs-string=
">"=EC=88=98=EC=A4=80=EB=B3=84 =EC=8B=9C=ED=97=98"</span>, width=3D<span cl=
ass=3D"hljs-number">12</span>, style=3D<span class=3D"hljs-string">"TButton=
"</span>, command=3Dself.SwitchToLevelExam)
        self.button5.place(x=3D<span class=3D"hljs-number">340</span>, y=3D=
<span class=3D"hljs-number">400</span>)

        <span class=3D"hljs-comment"># Logout Button with transparent backg=
round</span>
        self.logout_button =3D ttk.Button(self, text=3D<span class=3D"hljs-=
string">"=EB=A1=9C=EA=B7=B8=EC=95=84=EC=9B=83"</span>, width=3D<span class=
=3D"hljs-number">7</span>, style=3D<span class=3D"hljs-string">"Logout.TBut=
ton"</span>, command=3Dself.SwitchToLoginPage)
        self.logout_button.place(x=3D<span class=3D"hljs-number">725</span>=
, y=3D<span class=3D"hljs-number">10</span>)

        <span class=3D"hljs-comment"># Update progress bars with data from =
the database</span>
        self.update_progress1_bars()
        self.update_progress2_bars()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">set_global_font</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># Maplestory Light =ED=8F=B0=ED=8A=B8 =
=EC=84=A4=EC=A0=95</span>
        font_path =3D <span class=3D"hljs-string">"Maplestory Light.ttf"</s=
pan>
       =20
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-string">=
"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span> <span class=
=3D"hljs-keyword">not</span> <span class=3D"hljs-keyword">in</span> tkFont.=
families():
            <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-=
string">"Font '=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC' not =
found. Attempting to load from local file."</span>)
            <span class=3D"hljs-keyword">if</span> os.path.exists(font_path=
):
                <span class=3D"hljs-comment"># Load the font using tkFont</=
span>
                maplestory_font =3D tkFont.Font(family=3D<span class=3D"hlj=
s-string">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, =
size=3D<span class=3D"hljs-number">12</span>)
               =20
                <span class=3D"hljs-comment"># Register the font</span>
                self.option_add(<span class=3D"hljs-string">"*TButton.Font"=
</span>, maplestory_font)
                self.option_add(<span class=3D"hljs-string">"*Font"</span>,=
 maplestory_font)
            <span class=3D"hljs-keyword">else</span>:
                <span class=3D"hljs-built_in">print</span>(<span class=3D"h=
ljs-string">f"Font file '<span class=3D"hljs-subst">{font_path}</span>' not=
 found."</span>)
        <span class=3D"hljs-keyword">else</span>:
            maplestory_font =3D tkFont.Font(family=3D<span class=3D"hljs-st=
ring">"=EB=A9=94=EC=9D=B4=ED=94=8C=EC=8A=A4=ED=86=A0=EB=A6=AC"</span>, size=
=3D<span class=3D"hljs-number">12</span>)
            <span class=3D"hljs-comment"># Register the font</span>
            self.option_add(<span class=3D"hljs-string">"*TButton.Font"</sp=
an>, maplestory_font)
            self.option_add(<span class=3D"hljs-string">"*Font"</span>, map=
lestory_font)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">set_background_color</span>(<span class=3D"hljs-params">self, image, =
background_color</span>):
        background =3D Image.new(<span class=3D"hljs-string">'RGBA'</span>,=
 image.size, background_color)
        background.paste(image, (<span class=3D"hljs-number">0</span>, <spa=
n class=3D"hljs-number">0</span>), image)
        <span class=3D"hljs-keyword">return</span> background

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_nickname</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT nickname FROM us=
er WHERE id =3D %s"</span>, (self.userID,))
        nickname =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>=
]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-keyword">return</span> nickname
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_user_level</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT level FROM user =
WHERE id =3D %s"</span>, (self.userID,))
        level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-keyword">return</span> level

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_progress1_data</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT wordday FROM use=
r WHERE id =3D %s"</span>, (self.userID,))
        wordday =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        cursor.execute(<span class=3D"hljs-string">"SELECT MAX(Day) FROM to=
eicword"</span>)
        total_day =3D cursor.fetchone()[<span class=3D"hljs-number">0</span=
>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-comment"># =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=
=84=EC=82=B0</span>
        progress1_value =3D (wordday / total_day) * <span class=3D"hljs-num=
ber">100</span>
        <span class=3D"hljs-keyword">return</span> progress1_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">get_progress2_data</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4 =EC=97=B0=EA=B2=B0</span>
        conn =3D mysql.connector.connect(
            host=3D<span class=3D"hljs-string">'ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com'</span>,
            user=3D<span class=3D"hljs-string">'admin'</span>,
            password=3D<span class=3D"hljs-string">'seat0323'</span>,
            database=3D<span class=3D"hljs-string">'wordbook'</span>
        )
        cursor =3D conn.cursor()

        <span class=3D"hljs-comment"># =EC=BF=BC=EB=A6=AC =EC=8B=A4=ED=96=
=89</span>
        cursor.execute(<span class=3D"hljs-string">"SELECT level FROM user =
WHERE id =3D %s"</span>, (self.userID,))
        level =3D cursor.fetchone()[<span class=3D"hljs-number">0</span>]

        <span class=3D"hljs-comment"># =EC=97=B0=EA=B2=B0 =EC=A2=85=EB=A3=
=8C</span>
        conn.close()

        <span class=3D"hljs-comment"># =EC=A7=84=ED=96=89=EB=8F=84 =EA=B3=
=84=EC=82=B0</span>
        progress2_value =3D (level % <span class=3D"hljs-number">100</span>=
)
        <span class=3D"hljs-keyword">return</span> progress2_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress1_bars</span>(<span class=3D"hljs-params">self</span>)=
:
        progress1_value =3D self.get_progress1_data()
        self.progress1[<span class=3D"hljs-string">'value'</span>] =3D prog=
ress1_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_progress2_bars</span>(<span class=3D"hljs-params">self</span>)=
:
        progress2_value =3D self.get_progress2_data()
        self.progress2[<span class=3D"hljs-string">'value'</span>] =3D prog=
ress2_value

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToDayStudy</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserStudyDayPage <span cla=
ss=3D"hljs-keyword">import</span> DayStudy
        self.destroy()
        app =3D DayStudy(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToDayExam</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserExamDayPage <span clas=
s=3D"hljs-keyword">import</span> DayExam
        self.destroy()
        app =3D DayExam(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLevelExam</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserExamLevelPage <span cl=
ass=3D"hljs-keyword">import</span> LevelExam
        self.destroy()
        app =3D LevelExam(self.userID)
        app.mainloop()
       =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLevelStudy</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> UserStudyLevelPage <span c=
lass=3D"hljs-keyword">import</span> LevelStudy
        self.destroy()
        app =3D LevelStudy(self.userID)
        app.mainloop()
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToGamePage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> game <span class=3D"hljs-k=
eyword">import</span> GameApp
        self.destroy()
        app =3D GameApp(self.userID)
        app.mainloop()
           =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">SwitchToLoginPage</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">from</span> LoginPage <span class=3D"h=
ljs-keyword">import</span> LoginPage
        self.destroy()
        app =3D LoginPage()
        app.mainloop()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    userID =3D sys.argv[<span class=3D"hljs-number">1</span>] <span class=
=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sys.ar=
gv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keyword">=
else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D UserMainPage(userID)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EB=8A=94 <code>=EB=
=A1=9C=EA=B3=A0=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A7=8C.png</code>=EC=9D=98 =EB=
=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 #023F94=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=
=98=EC=97=AC =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EC=BD=94=EB=93=9C=EC=9E=
=85=EB=8B=88=EB=8B=A4. <code>set_background_color</code> =ED=95=A8=EC=88=98=
=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=
=EA=B3=A0 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. <code>=EB=A1=9C=EA=B3=A0=EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A7=8C.png</code>=EC=99=80 <code>=EB=A1=9C=EA=B3=
=A0=EA=B8=80=EC=9E=90=EB=A7=8C.png</code> =ED=8C=8C=EC=9D=BC=EC=9D=B4 =EB=
=8F=99=EC=9D=BC =EB=94=94=EB=A0=89=ED=86=A0=EB=A6=AC=EC=97=90 =EC=9E=88=EC=
=96=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.</p></div></div></div></div><di=
v class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-ce=
nter justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary =
md:absolute md:border md:border-token-border-light md:hidden"><div class=3D=
"flex items-center"><span class=3D"" data-state=3D"closed"><button class=3D=
"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary=
"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4=
.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8=
.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.4912=
9 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.=
0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C1=
3 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 =
1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM2=
0.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.317=
6 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 1=
7.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7=
059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001=
C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.=
62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.199=
5 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 1=
8.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8=
483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 =
12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.=
2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path=
></svg></span></button></span><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"cur=
rentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a=
3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a=
3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0=
 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"ev=
enodd"></path></svg></span></button></span><div class=3D"flex"><span class=
=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-sec=
ondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] =
w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.=
9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.2=
9476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49=
209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6=
569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644=
L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.473=
76L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 =
9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2=
941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 =
14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 1=
4.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H=
18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 1=
8.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></sp=
an></div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=
=3D"radix-:r2dq:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-seconda=
ry h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items=
-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-f=
ull icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24"=
 height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentCol=
or" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.50=
3.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.=
512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.5=
15-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2=
.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor=
" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 =
1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123=
 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-=
1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.9=
87c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 =
0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.=
888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.0=
5-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 =
1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg><=
/div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left=
: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
 text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.4=
14 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenod=
d"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 =
lg:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-toke=
n-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-132" data-scr=
oll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:p=
x-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3=
 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-=
w-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w=
-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex=
-grow flex-col max-w-full"><div data-message-author-role=3D"user" data-mess=
age-id=3D"aaa251b7-8715-4ae4-8099-5ecbab2fbf7c" dir=3D"auto" class=3D"min-h=
-[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wo=
rds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto=
 gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-e=
nd rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f=
4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">import tkinter as tk
from tkinter import ttk, messagebox
from tkinter import PhotoImage, Label
import mysql.connector
import random
import time
import sys
from PIL import Image, ImageTk
from Util import Util

class GameApp(tk.Tk):
    def __init__(self, current_user):
        super().__init__()
        self.geometry("750x530")
        self.title("=EC=88=98=EB=AD=89=EC=9D=B4 =ED=82=A4=EC=9A=B0=EA=B8=B0=
 =EA=B2=8C=EC=9E=84")
        self.configure(bg=3D'#ffffff')  # =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=
=84=A4=EC=A0=95

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D 4
        self.setup_game_variables()
        #self.setup_button_style()
        self.setup_ui()

    def connect_database(self):
        return mysql.connector.connect(
            host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com",
            user=3D"admin",
            password=3D"seat0323",
            database=3D"wordbook"
        )

    def setup_game_variables(self):
        self.current_score =3D 0
        self.level =3D 1
        self.start_time =3D time.time()
        self.game_active =3D False
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image("=EC=88=98=EB=AD=89=EC=9D=B4=
=EC=A0=95=EB=8B=B5=EC=9A=A9.png", (50, 50))
        self.incorrect_image =3D self.load_image("=EC=88=98=EB=AD=89=EC=9D=
=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png", (50, 50))
        self.info_image =3D self.load_image("=EA=B2=8C=EC=9E=84=EC=A0=95=EB=
=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png", (275, 181))  # =EA=B2=8C=EC=9E=84 =
=EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B6=94=EA=B0=80

    def setup_entry_style(self):
        style =3D ttk.Style()
        style.theme_use('default')  # =EA=B8=B0=EB=B3=B8 =ED=85=8C=EB=A7=88=
 =EC=82=AC=EC=9A=A9
        style.configure('Rounded.TEntry', padding=3D6, relief=3D'flat', bac=
kground=3D"#ffffff")

    def setup_button_style(self):
        style =3D ttk.Style()
        style.theme_use('clam')=20
        style.configure('My.TButton', font=3D('Arial-BoldMT', 14), borderwi=
dth=3D'4', foreground=3D'white', background=3D'#0096c7')
        style.map('My.TButton',
                  foreground=3D[('active', 'white')],
                  background=3D[('active', '#005f73')])

    def setup_ui(self):
        self.back_button =3D self.create_image_button("=EC=9D=B4=EC=A0=84=
=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=
=A1=9C=ED=98=B8=EB=B2=84.png", lambda: Util.SwitchPage(self, "UserMainPage"=
, self.current_user), 50, 30)
        self.back_button.place(x=3D10, y=3D10)
       =20
        # =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=84 =EB=9D=BC=EB=B2=A8=
=EA=B3=BC =ED=94=84=EB=A0=88=EC=9E=84 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.leaderboard_label =3D tk.Label(self, text=3D"=ED=98=84=EC=9E=
=AC =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=84", font=3D("Arial-BoldMT"=
, 16, "bold"), bg=3D'#ffffff')
        self.leaderboard_label.place(x=3D375, y=3D370, anchor=3D"center")
        self.leaderboard_frame =3D tk.Frame(self, bg=3D'#ffffff')
        self.leaderboard_frame.place(x=3D375, y=3D425, anchor=3D"center")
        self.display_leaderboard()
       =20
        # =EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=
=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.image_label =3D Label(self, image=3Dself.images[self.level], b=
g=3D'#ffffff')
        self.image_label.pack(pady=3D5)
       =20
        # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC =EC=9C=
=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.button_start =3D self.create_image_button("=EA=B2=8C=EC=9E=84=
=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=
=9E=91=ED=98=B8=EB=B2=84.png", self.start_game, 90, 40)
        self.button_start.place(x=3D325, y=3D280)
       =20
        # =EB=AC=B8=EC=A0=9C =EB=9D=BC=EB=B2=A8=EC=9D=84 word_frame =EC=99=
=B8=EB=B6=80=EB=A1=9C =EC=9D=B4=EB=8F=99
        self.label_word =3D tk.Label(self, text=3D"", font=3D("Arial-BoldMT=
", 20), bg=3D'#ffffff')
        self.label_word.pack(pady=3D5)
       =20
        # =EB=AC=B8=EC=A0=9C=EC=99=80 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=
=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =ED=94=84=EB=A0=88=EC=9E=84 =
=EC=83=9D=EC=84=B1
        self.word_frame =3D tk.Frame(self, bg=3D'#ffffff')
        self.word_frame.place_forget()  # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=
=9E=91 =EC=A0=84=EC=97=90=EB=8A=94 =EC=88=A8=EA=B9=80

        # =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C
        self.entry_answer =3D ttk.Entry(self.word_frame, font=3D("Arial-Bol=
dMT", 20), style=3D'Rounded.TEntry')
        self.entry_answer.pack(pady=3D10)
        self.entry_answer.bind("&lt;Return&gt;", self.check_answer)
       =20
        self.label_status =3D tk.Label(self, text=3D"", font=3D("Arial-Bold=
MT", 16, "bold"), bg=3D'#ffffff')
        self.label_status.place_forget()

        self.label_timer =3D tk.Label(self, text=3D"", font=3D("Arial-BoldM=
T", 16, "bold"), bg=3D'#ffffff')
        self.label_timer.place_forget()
       =20
        # =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=
 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1
        self.label_info_image =3D Label(self, image=3Dself.info_image, bg=
=3D'#ffffff')
        self.label_info_image.place_forget()  # =EC=B4=88=EA=B8=B0=EC=97=90=
=EB=8A=94 =EC=88=A8=EA=B9=80

    def load_images(self):
        image_paths =3D {
            1: "=EC=88=98=EB=AD=89=EC=9D=B41.png",
            2: "=EC=88=98=EB=AD=89=EC=9D=B42.png",
            3: "=EC=88=98=EB=AD=89=EC=9D=B43.png",
            4: "=EC=88=98=EB=AD=89=EC=9D=B44.png",
            5: "=EC=88=98=EB=AD=89=EC=9D=B45.png"
        }
        return {level: self.load_image(path, (180, 180)) for level, path in=
 image_paths.items()}

    def load_image(self, path, size):
        image =3D Image.open(path)
        return ImageTk.PhotoImage(image.resize(size, Image.Resampling.LANCZ=
OS))

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, width, height):
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EB=B0=8F =EB=A6=
=AC=EC=82=AC=EC=9D=B4=EC=A7=95
        normal_image =3D ImageTk.PhotoImage(Image.open(normal_image_path).r=
esize((width, height), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(Image.open(hover_image_path).res=
ize((width, height), Image.Resampling.LANCZOS))
        # =EB=B2=84=ED=8A=BC =EC=83=9D=EC=84=B1
        button =3D tk.Button(self, image=3Dnormal_image, command=3Dcommand,=
 borderwidth=3D0, bg=3D'#ffffff')
        button.image =3D normal_image  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B0=
=B8=EC=A1=B0 =EB=B3=B4=EA=B4=80
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        return button

    def fetch_word(self):
        self.cursor.execute("SELECT Spell, Mean FROM toeicword ORDER BY RAN=
D() LIMIT 1")
        return self.cursor.fetchone()

    def check_answer(self, event=3DNone):
        if not self.game_active:
            return
        answer =3D self.entry_answer.get().lower().strip()
        if answer =3D=3D self.current_word:
            self.show_transparent_popup("=EC=A0=95=EB=8B=B5=EC=9E=85=EB=8B=
=88=EB=8B=A4!", "green", self.correct_image)
            self.current_score +=3D 10
            self.level_up()
        else:
            self.show_transparent_popup("=EC=98=A4=EB=8B=B5=EC=9E=85=EB=8B=
=88=EB=8B=A4!", "red", self.incorrect_image)
        self.entry_answer.delete(0, tk.END)
        self.next_word()

    def start_game(self):
        self.game_active =3D True
        self.current_score =3D 0
        self.level =3D 1
        self.start_time =3D time.time()
        self.next_word()
        self.entry_answer.focus_set()
       =20
        # =EC=A0=90=EC=88=98=EC=99=80 =EB=A0=88=EB=B2=A8=EC=9D=84 =ED=91=9C=
=EC=8B=9C=ED=95=98=EB=8A=94 =EB=9D=BC=EB=B2=A8=EC=9D=98 =ED=85=8D=EC=8A=A4=
=ED=8A=B8=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=98=EA=B3=A0 =
=ED=99=94=EB=A9=B4=EC=97=90 =ED=91=9C=EC=8B=9C
        self.label_status.config(text=3Df"=EB=A0=88=EB=B2=A8: {self.level},=
 =EC=A0=90=EC=88=98: {self.current_score}")
        self.label_status.place(x=3D295, y=3D375)  # =EC=9C=84=EC=B9=98 =EC=
=A1=B0=EC=A0=95
       =20
        # =EC=88=A8=EA=B2=A8=EC=A7=84 =EC=9A=94=EC=86=8C=EB=93=A4 =EB=B3=B4=
=EC=9D=B4=EA=B8=B0
        self.word_frame.place(relx=3D0.5, rely=3D0.6, anchor=3D"center")  #=
 =EC=A4=91=EC=95=99=EC=97=90 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.label_word.pack(pady=3D5)
        self.label_timer.place(x=3D300, y=3D400)  # =EC=83=81=ED=83=9C =EC=
=A0=95=EB=B3=B4=EB=A5=BC =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.label_info_image.place(x=3D280, y=3D360)  # =EA=B2=8C=EC=9E=84=
 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=B9=98 =EC=A1=
=B0=EC=A0=95

        # =EB=A0=88=EB=B2=A8=EA=B3=BC =ED=83=80=EC=9D=B4=EB=A8=B8=EB=A5=BC =
info image =EC=9C=84=EB=A1=9C =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =EC=84=
=A4=EC=A0=95
        self.label_status.tkraise()
        self.label_timer.tkraise()

        # =EC=8B=9C=EC=9E=91 =EC=8B=9C =EC=88=A8=EA=B9=80 =EC=B2=98=EB=A6=
=AC=EB=90=98=EC=97=88=EB=8D=98 =EC=9A=94=EC=86=8C=EB=93=A4 =EB=B3=B4=EC=9D=
=B4=EA=B8=B0
        self.button_start.place_forget()
        self.leaderboard_label.place_forget()
        self.leaderboard_frame.place_forget()
       =20
        self.update_timer()  # =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=85=EB=8D=
=B0=EC=9D=B4=ED=8A=B8 =EC=8B=9C=EC=9E=91

    def next_word(self):
        self.current_word, self.current_meaning =3D self.fetch_word()
        self.label_word.config(text=3Dself.current_meaning)

    def display_leaderboard(self):
        """=EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=EB=A5=BC =EA=B0=B1=EC=8B=A0=
=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =ED=94=84=EB=A0=88=EC=9E=84 =
=EB=82=B4=EC=9D=98 =EB=AA=A8=EB=93=A0 =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=A0=9C=
=EA=B1=B0
        for widget in self.leaderboard_frame.winfo_children():
            widget.destroy()
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=
=EC=84=9C =EC=83=81=EC=9C=84 3=EB=AA=85=EC=9D=98 =EC=82=AC=EC=9A=A9=EC=9E=
=90 =EC=A0=95=EB=B3=B4=EB=A5=BC =EB=8B=A4=EC=8B=9C =EC=A1=B0=ED=9A=8C
        self.cursor.execute("SELECT id, highscore FROM user ORDER BY highsc=
ore DESC LIMIT 3")
        rows =3D self.cursor.fetchall()
        for idx, (user_id, score) in enumerate(rows, start=3D1):
            tk.Label(self.leaderboard_frame, text=3Df"{idx}=EB=93=B1: {user=
_id} - {score}=EC=A0=90", font=3D("Arial-BoldMT", 14), bg=3D'#ffffff').pack=
()

    def show_transparent_popup(self, message, color, image):
        popup =3D tk.Toplevel(self)
        popup.overrideredirect(True)  # =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=85=
=8C=EB=91=90=EB=A6=AC=EC=99=80 =EC=A0=9C=EB=AA=A9 =ED=91=9C=EC=8B=9C=EC=A4=
=84 =EC=A0=9C=EA=B1=B0
        popup.geometry("200x80+{}+{}".format(self.winfo_x() + 280, self.win=
fo_y() + 100))
        popup.attributes('-alpha', 0.7)  # =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=
=88=AC=EB=AA=85=EB=8F=84 =EC=84=A4=EC=A0=95 (70%)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80 =ED=85=8D=EC=8A=A4=ED=8A=B8=
=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =EB=A0=88=EC=9D=B4=EB=B8=94 =
=EC=83=9D=EC=84=B1
        if image:
            label_image =3D tk.Label(popup, image=3Dimage, bg=3D'#ffffff')
            label_image.pack(side=3D'top')
       =20
        popup_label =3D tk.Label(popup, text=3Dmessage, font=3D("Arial-Bold=
MT", 16), fg=3Dcolor, bg=3D"white")
        popup_label.pack(expand=3DTrue, fill=3D'both')
        # =ED=8C=9D=EC=97=85=EC=9D=84 700ms =ED=9B=84=EC=97=90 =EC=9E=90=EB=
=8F=99=EC=9C=BC=EB=A1=9C =EB=8B=AB=EA=B8=B0
        popup.after(700, popup.destroy)

    def level_up(self):
        if self.level &lt;=3D 4 and self.current_score % 10 =3D=3D 0:
            self.level +=3D 1
        self.label_status.config(text=3Df"=EB=A0=88=EB=B2=A8: {self.level},=
 =EC=A0=90=EC=88=98: {self.current_score}")
        self.image_label.config(image=3Dself.images[self.level])
   =20
    # =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=
=8A=B8
    def update_high_score(self):
        """=EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =EC=B5=9C=EA=B3=A0 =EC=A0=
=90=EC=88=98=EB=A5=BC =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=
=A4=EC=97=90 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=98=EB=8A=94 =EB=A9=
=94=EC=84=9C=EB=93=9C"""
        query =3D "UPDATE user SET highscore =3D %s WHERE id =3D %s AND hig=
hscore &lt; %s"
        try:
            self.cursor.execute(query, (self.current_score, self.current_us=
er, self.current_score))
            self.db.commit()
        except mysql.connector.Error as err:
            self.db.rollback()

    def update_timer(self):
        if not self.game_active:
            return  # =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=B9=84=ED=99=9C=EC=84=
=B1=ED=99=94 =EC=83=81=ED=83=9C=EB=A9=B4 =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=
=85=EB=8D=B0=EC=9D=B4=ED=8A=B8 =EC=A4=91=EB=8B=A8
        elapsed_time =3D int(time.time() - self.start_time)
        remaining_time =3D self.game_duration - elapsed_time
        self.label_timer.config(text=3Df"=EB=82=A8=EC=9D=80 =EC=8B=9C=EA=B0=
=84: {remaining_time}=EC=B4=88")
        if remaining_time &gt; 0:
            self.after(1000, self.update_timer)  # 1=EC=B4=88 =ED=9B=84 =EB=
=8B=A4=EC=8B=9C =EC=9D=B4 =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =ED=98=B8=EC=
=B6=9C
        else:
            messagebox.showinfo("=EA=B2=8C=EC=9E=84 =EC=A2=85=EB=A3=8C", "=
=EA=B2=8C=EC=9E=84=EC=9D=B4 =EC=A2=85=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4")
            self.update_high_score()
            messagebox.showinfo("=EA=B2=8C=EC=9E=84 =EC=A2=85=EB=A3=8C", f"=
=EC=B5=9C=EC=A2=85 =EC=A0=90=EC=88=98: {self.current_score}")
            self.reset_game()

    def reset_game(self):
        """=EA=B2=8C=EC=9E=84=EC=9D=84 =EB=A6=AC=EC=85=8B=ED=95=98=EA=B3=A0=
 =EC=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=9D=84 =EC=A4=80=EB=B9=84=ED=95=98=
=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""
        self.game_active =3D False
        self.update_high_score()  # =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=81=9D=
=EB=82=98=EB=A9=B4 =EC=A0=90=EC=88=98 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8
        self.display_leaderboard()  # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EA=B0=B1=EC=8B=A0=EB=90=9C =EC=88=9C=
=EC=9C=84=EB=A1=9C =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =EA=B0=B1=EC=8B=A0
        self.current_score =3D 0
        self.level =3D 1
        self.label_word.config(text=3D"=EB=8B=A4=EC=8B=9C =EC=8B=9C=EC=9E=
=91=ED=95=98=EB=A0=A4=EB=A9=B4 =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91=EC=9D=
=84 =EB=88=84=EB=A5=B4=EC=84=B8=EC=9A=94")
        self.label_word.pack(pady=3D5)  # =EB=8B=A4=EC=8B=9C =ED=99=94=EB=
=A9=B4=EC=97=90 =ED=91=9C=EC=8B=9C
        self.label_status.place_forget()
        self.label_timer.config(text=3D"")
        self.entry_answer.delete(0, tk.END)
        self.word_frame.place_forget()  # =EC=B4=88=EA=B8=B0 =ED=99=94=EB=
=A9=B4=EC=97=90=EC=84=9C=EB=8A=94 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=
=A5=BC =EC=88=A8=EA=B9=80
        self.label_info_image.place_forget()  # =EA=B2=8C=EC=9E=84 =EC=A0=
=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=88=A8=EA=B9=80
        # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC=EC=9D=84=
 =EB=8B=A4=EC=8B=9C =ED=91=9C=EC=8B=9C
        self.button_start.place(x=3D325, y=3D280)
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =ED=94=84=EB=A0=88=EC=9E=84=
=EA=B3=BC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EB=8B=A4=EC=8B=9C =EB=B0=B0=EC=B9=98
        self.leaderboard_label.place(x=3D375, y=3D370, anchor=3D"center")
        self.leaderboard_frame.place(x=3D375, y=3D425, anchor=3D"center")
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =EB=82=B4=EC=9A=A9=EC=9D=84 =
=EA=B0=B1=EC=8B=A0
        self.display_leaderboard()
        self.image_label.config(image=3Dself.images[self.level])

if __name__ =3D=3D "__main__":
    current_user =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user=
'
    app =3D GameApp(current_user)
    app.mainloop()

=EA=B2=8C=EC=9E=84 =ED=8E=98=EC=9D=B4=EC=A7=80=EC=9D=B8=EB=8D=B0 =EB=AA=A8=
=EB=93=A0 =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=98 =EC=A0=9C=EC=9D=BC =EB=92=A4=
=EB=A1=9C =EB=B0=B0=EA=B2=BD=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =ED=95=98=
=EB=82=98 =EB=91=90=EA=B3=A0 =EC=8B=B6=EC=96=B4, =EA=B2=8C=EC=9E=84=EB=B0=
=B0=EA=B2=BD.jpg=EB=A5=BC =ED=99=94=EB=A9=B4 =ED=81=AC=EA=B8=B0=EC=97=90 =
=EB=A7=9E=EC=B6=B0=EC=84=9C =EB=B3=B4=EC=9D=B4=EA=B2=8C =ED=95=B4=EC=A4=98<=
div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 gr=
oup-hover/conversation-turn:block"><span class=3D"" data-state=3D"closed"><=
button class=3D"flex h-9 w-9 items-center justify-center rounded-full text-=
token-text-secondary transition hover:bg-token-main-surface-tertiary"><svg =
xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"non=
e" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill=
-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.0=
94 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5=
 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3=
.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2=
.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span=
></div></div></div></div></div></div></div></div></div></div><div class=3D"=
w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tu=
rn-133" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-=
3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto f=
lex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w=
-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relati=
ve items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot=
-avatar flex h-6 w-6 items-center justify-center overflow-hidden rounded-fu=
ll juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-ce=
nter justify-center bg-token-main-surface-primary text-token-text-primary h=
-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text =
x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 1=
5.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.6=
76 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27=
.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3634=
1C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.08=
93 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7=
.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.078=
2 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94449=
2 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.8=
1182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.165=
9 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37=
.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.07=
55 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C=
30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.=
6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 2=
6.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5=
324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.150=
1C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.=
3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549=
 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.=
0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 2=
9.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8=
849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5571=
8 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14=
.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L2=
4.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.71=
15 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 =
12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.=
0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.198=
85 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 2=
0.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5=
723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C=
15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8=
601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707=
 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25=
.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.48=
79L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 2=
1.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.97=
43 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 =
32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4=
332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C3=
5.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.155=
4 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 1=
0.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9=
405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053=
 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32=
.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.16=
67 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576=
 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10=
.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.74=
66 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 =
19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88=
379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 =
9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.=
2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.401=
8 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div=
></div></div></div></div><div class=3D"group/conversation-turn relative fle=
x w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-autho=
r-role=3D"assistant" data-message-id=3D"d83fd3be-2a4b-49d3-aac7-33402dc297e=
e" dir=3D"auto" class=3D"text-message flex flex-col items-start whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-en=
d overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:emp=
ty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-w=
ords dark:prose-invert light"><p>=EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=
=A7=80=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EB=A0=A4=EB=A9=B4 <code>setup_u=
i</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90=EC=84=9C =EA=B0=80=EC=9E=A5 =
=EB=A8=BC=EC=A0=80 =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =
=EC=84=A4=EC=A0=95=ED=95=98=EA=B3=A0, =EB=8B=A4=EB=A5=B8 =EB=AA=A8=EB=93=A0=
 =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=84 =EA=B7=B8 =EC=9C=84=EC=97=90 =EB=B0=
=B0=EC=B9=98=ED=95=98=EB=A9=B4 =EB=90=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=
=BC =EC=9C=84=ED=95=B4 <code>setup_ui</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=
=9D=98 =EB=82=B4=EC=9A=A9=EC=9D=84 =EC=95=BD=EA=B0=84 =EC=88=98=EC=A0=95=ED=
=95=98=EC=97=AC =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=
=B6=94=EA=B0=80=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><=
p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =EC=88=98=EC=A0=95=EB=90=9C <code>setup_ui</c=
ode> =EB=A9=94=EC=84=9C=EB=93=9C=EC=99=80 =EC=B6=94=EA=B0=80=EB=90=9C <code=
>load_background_image</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=9E=85=EB=8B=88=
=EB=8B=A4.</p><pre><div class=3D"dark bg-gray-950 rounded-md border-[0.5px]=
 border-token-border-medium"><div class=3D"flex items-center relative text-=
token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font=
-sans justify-between rounded-t-md"><span>python</span><div class=3D"flex i=
tems-center"><span class=3D"" data-state=3D"closed"><button class=3D"flex g=
ap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" h=
eight=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fi=
ll=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0=
 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h=
2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM=
5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-r=
ule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button>=
</span></div></div><div class=3D"overflow-y-auto p-4 text-left undefined" d=
ir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"><span class=
=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyword">as</sp=
an> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk, messagebox
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> PhotoImage, Label
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> random
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, current_user</span>=
):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"750x530"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=
 =ED=82=A4=EC=9A=B0=EA=B8=B0 =EA=B2=8C=EC=9E=84"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">'#ffffff'</span>)  =
<span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=84=A4=EC=A0=
=95</span>

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D <span class=3D"hljs-number">4</span>
        self.setup_game_variables()
        <span class=3D"hljs-comment">#self.setup_button_style()</span>
        self.setup_ui()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> mysql.connector.connect(
            host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com"</span>,
            user=3D<span class=3D"hljs-string">"admin"</span>,
            password=3D<span class=3D"hljs-string">"seat0323"</span>,
            database=3D<span class=3D"hljs-string">"wordbook"</span>
        )

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_game_variables</span>(<span class=3D"hljs-params">self</span>):
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image(<span class=3D"hljs-string">=
"=EC=88=98=EB=AD=89=EC=9D=B4=EC=A0=95=EB=8B=B5=EC=9A=A9.png"</span>, (<span=
 class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.incorrect_image =3D self.load_image(<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png"</span>, (<sp=
an class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.info_image =3D self.load_image(<span class=3D"hljs-string">"=
=EA=B2=8C=EC=9E=84=EC=A0=95=EB=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png"</span>=
, (<span class=3D"hljs-number">275</span>, <span class=3D"hljs-number">181<=
/span>))  <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=
=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B6=94=EA=B0=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_entry_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'default'</span>)  <spa=
n class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =ED=85=8C=EB=A7=88 =EC=82=AC=
=EC=9A=A9</span>
        style.configure(<span class=3D"hljs-string">'Rounded.TEntry'</span>=
, padding=3D<span class=3D"hljs-number">6</span>, relief=3D<span class=3D"h=
ljs-string">'flat'</span>, background=3D<span class=3D"hljs-string">"#fffff=
f"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_button_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'clam'</span>)=20
        style.configure(<span class=3D"hljs-string">'My.TButton'</span>, fo=
nt=3D(<span class=3D"hljs-string">'Arial-BoldMT'</span>, <span class=3D"hlj=
s-number">14</span>), borderwidth=3D<span class=3D"hljs-string">'4'</span>,=
 foreground=3D<span class=3D"hljs-string">'white'</span>, background=3D<spa=
n class=3D"hljs-string">'#0096c7'</span>)
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">'My.TButton'</span>,
                  foreground=3D[(<span class=3D"hljs-string">'active'</span=
>, <span class=3D"hljs-string">'white'</span>)],
                  background=3D[(<span class=3D"hljs-string">'active'</span=
>, <span class=3D"hljs-string">'#005f73'</span>)])

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_ui</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EB=B0=8F =EC=84=A4=EC=A0=95</span>
        self.background_image =3D self.load_background_image(<span class=3D=
"hljs-string">"=EA=B2=8C=EC=9E=84=EB=B0=B0=EA=B2=BD.jpg"</span>, (<span cla=
ss=3D"hljs-number">750</span>, <span class=3D"hljs-number">530</span>))
        self.bg_label =3D Label(self, image=3Dself.background_image)
        self.bg_label.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<=
span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs-number"=
>1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        self.back_button =3D self.create_image_button(<span class=3D"hljs-s=
tring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,=
 <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=
=EB=B2=84.png"</span>, <span class=3D"hljs-keyword">lambda</span>: Util.Swi=
tchPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.curre=
nt_user), <span class=3D"hljs-number">50</span>, <span class=3D"hljs-number=
">30</span>)
        self.back_button.place(x=3D<span class=3D"hljs-number">10</span>, y=
=3D<span class=3D"hljs-number">10</span>)
       =20
        <span class=3D"hljs-comment"># =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=
=9C=EC=9C=84 =EB=9D=BC=EB=B2=A8=EA=B3=BC =ED=94=84=EB=A0=88=EC=9E=84 =EC=9C=
=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.leaderboard_label =3D tk.Label(self, text=3D<span class=3D"hlj=
s-string">"=ED=98=84=EC=9E=AC =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=
=84"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</spa=
n>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-=
string">'#ffffff'</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.display_leaderboard()
       =20
        <span class=3D"hljs-comment"># =EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.image_label =3D Label(self, image=3Dself.images[self.level], b=
g=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.image_label.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=
=91 =EB=B2=84=ED=8A=BC =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.button_start =3D self.create_image_button(<span class=3D"hljs-=
string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png"</span>=
, <span class=3D"hljs-string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=ED=98=
=B8=EB=B2=84.png"</span>, self.start_game, <span class=3D"hljs-number">90</=
span>, <span class=3D"hljs-number">40</span>)
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
       =20
        <span class=3D"hljs-comment"># =EB=AC=B8=EC=A0=9C =EB=9D=BC=EB=B2=
=A8=EC=9D=84 word_frame =EC=99=B8=EB=B6=80=EB=A1=9C =EC=9D=B4=EB=8F=99</spa=
n>
        self.label_word =3D tk.Label(self, text=3D<span class=3D"hljs-strin=
g">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <s=
pan class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string">'#ff=
ffff'</span>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        <span class=3D"hljs-comment"># =EB=AC=B8=EC=A0=9C=EC=99=80 =EC=9E=
=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=
=94 =ED=94=84=EB=A0=88=EC=9E=84 =EC=83=9D=EC=84=B1</span>
        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>'#ffffff'</span>)
        self.word_frame.place_forget()  <span class=3D"hljs-comment"># =EA=
=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EC=A0=84=EC=97=90=EB=8A=94 =EC=88=A8=EA=
=B9=80</span>

        <span class=3D"hljs-comment"># =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=
=9C</span>
        self.entry_answer =3D ttk.Entry(self.word_frame, font=3D(<span clas=
s=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">20</sp=
an>), style=3D<span class=3D"hljs-string">'Rounded.TEntry'</span>)
        self.entry_answer.pack(pady=3D<span class=3D"hljs-number">10</span>=
)
        self.entry_answer.bind(<span class=3D"hljs-string">"&lt;Return&gt;"=
</span>, self.check_answer)
       =20
        self.label_status =3D tk.Label(self, text=3D<span class=3D"hljs-str=
ing">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, =
<span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</=
span>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_status.place_forget()

        self.label_timer =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <=
span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</s=
pan>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_timer.place_forget()
       =20
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=
=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1</span=
>
        self.label_info_image =3D Label(self, image=3Dself.info_image, bg=
=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_info_image.place_forget()  <span class=3D"hljs-comment">=
# =EC=B4=88=EA=B8=B0=EC=97=90=EB=8A=94 =EC=88=A8=EA=B9=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        image_paths =3D {
            <span class=3D"hljs-number">1</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B41.png"</span>,
            <span class=3D"hljs-number">2</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B42.png"</span>,
            <span class=3D"hljs-number">3</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B43.png"</span>,
            <span class=3D"hljs-number">4</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B44.png"</span>,
            <span class=3D"hljs-number">5</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B45.png"</span>
        }
        <span class=3D"hljs-keyword">return</span> {level: self.load_image(=
path, (<span class=3D"hljs-number">180</span>, <span class=3D"hljs-number">=
180</span>)) <span class=3D"hljs-keyword">for</span> level, path <span clas=
s=3D"hljs-keyword">in</span> image_paths.items()}

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, path, size</span>=
):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(path)
        <span class=3D"hljs-keyword">return</span> ImageTk.PhotoImage(image=
.resize(size, Image.Resampling.LANCZOS))

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_background_image</span>(<span class=3D"hljs-params">self, path, =
size</span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(path)
        <span class=3D"hljs-keyword">return</span> ImageTk.PhotoImage(image=
.resize(size, Image.Resampling.LANCZOS))

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, width, height</span>):
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=
=9C=EB=93=9C =EB=B0=8F =EB=A6=AC=EC=82=AC=EC=9D=B4=EC=A7=95</span>
        normal_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built=
_in">open</span>(normal_image_path).resize((width, height), Image.Resamplin=
g.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built_=
in">open</span>(hover_image_path).resize((width, height), Image.Resampling.=
LANCZOS))
        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =EC=83=9D=EC=84=
=B1</span>
        button =3D tk.Button(self, image=3Dnormal_image, command=3Dcommand,=
 borderwidth=3D<span class=3D"hljs-number">0</span>, bg=3D<span class=3D"hl=
js-string">'#ffffff'</span>)
        button.image =3D normal_image  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EC=B0=B8=EC=A1=B0 =EB=B3=B4=EA=B4=80</span>
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">fetch_word</span>(<span class=3D"hljs-params">self</span>):
        self.cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean=
 FROM toeicword ORDER BY RAND() LIMIT 1"</span>)
        <span class=3D"hljs-keyword">return</span> self.cursor.fetchone()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">check_answer</span>(<span class=3D"hljs-params">self, event=3D<span c=
lass=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>
        answer =3D self.entry_answer.get().lower().strip()
        <span class=3D"hljs-keyword">if</span> answer =3D=3D self.current_w=
ord:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=A0=
=95=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"green"</span>, self.correct_image)
            self.current_score +=3D <span class=3D"hljs-number">10</span>
            self.level_up()
        <span class=3D"hljs-keyword">else</span>:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=98=
=A4=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"red"</span>, self.incorrect_image)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.next_word()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_game</span>(<span class=3D"hljs-params">self</span>):
        self.game_active =3D <span class=3D"hljs-literal">True</span>
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.next_word()
        self.entry_answer.focus_set()
       =20
        <span class=3D"hljs-comment"># =EC=A0=90=EC=88=98=EC=99=80 =EB=A0=
=88=EB=B2=A8=EC=9D=84 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EB=9D=BC=EB=B2=
=A8=EC=9D=98 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=
=B4=ED=8A=B8=ED=95=98=EA=B3=A0 =ED=99=94=EB=A9=B4=EC=97=90 =ED=91=9C=EC=8B=
=9C</span>
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.label_status.place(x=3D<span class=3D"hljs-number">295</span>,=
 y=3D<span class=3D"hljs-number">375</span>)  <span class=3D"hljs-comment">=
# =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=88=A8=EA=B2=A8=EC=A7=84 =EC=9A=
=94=EC=86=8C=EB=93=A4 =EB=B3=B4=EC=9D=B4=EA=B8=B0</span>
        self.word_frame.place(relx=3D<span class=3D"hljs-number">0.5</span>=
, rely=3D<span class=3D"hljs-number">0.6</span>, anchor=3D<span class=3D"hl=
js-string">"center"</span>)  <span class=3D"hljs-comment"># =EC=A4=91=EC=95=
=99=EC=97=90 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
        self.label_timer.place(x=3D<span class=3D"hljs-number">300</span>, =
y=3D<span class=3D"hljs-number">400</span>)  <span class=3D"hljs-comment">#=
 =EC=83=81=ED=83=9C =EC=A0=95=EB=B3=B4=EB=A5=BC =EC=9C=84=EC=B9=98 =EC=A1=
=B0=EC=A0=95</span>
        self.label_info_image.place(x=3D<span class=3D"hljs-number">280</sp=
an>, y=3D<span class=3D"hljs-number">360</span>)  <span class=3D"hljs-comme=
nt"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=
=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>

        <span class=3D"hljs-comment"># =EB=A0=88=EB=B2=A8=EA=B3=BC =ED=83=
=80=EC=9D=B4=EB=A8=B8=EB=A5=BC info image =EC=9C=84=EB=A1=9C =EB=B3=B4=EC=
=9D=B4=EB=8F=84=EB=A1=9D =EC=84=A4=EC=A0=95</span>
        self.label_status.tkraise()
        self.label_timer.tkraise()

        <span class=3D"hljs-comment"># =EC=8B=9C=EC=9E=91 =EC=8B=9C =EC=88=
=A8=EA=B9=80 =EC=B2=98=EB=A6=AC=EB=90=98=EC=97=88=EB=8D=98 =EC=9A=94=EC=86=
=8C=EB=93=A4 =EB=B3=B4=EC=9D=B4=EA=B8=B0</span>
        self.button_start.place_forget()
        self.leaderboard_label.place_forget()
        self.leaderboard_frame.place_forget()
       =20
        self.update_timer()  <span class=3D"hljs-comment"># =ED=83=80=EC=9D=
=B4=EB=A8=B8 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8 =EC=8B=9C=EC=9E=91</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_word</span>(<span class=3D"hljs-params">self</span>):
        self.current_word, self.current_meaning =3D self.fetch_word()
        self.label_word.config(text=3Dself.current_meaning)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_leaderboard</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
=EB=A5=BC =EA=B0=B1=EC=8B=A0=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"=
""</span>
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =ED=94=84=EB=A0=88=EC=9E=84 =EB=82=B4=EC=9D=98 =EB=AA=A8=EB=93=A0 =EC=9C=
=84=EC=A0=AF=EC=9D=84 =EC=A0=9C=EA=B1=B0</span>
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.leaderboard_frame.winfo_children():
            widget.destroy()
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EC=83=81=EC=9C=84 3=EB=AA=85=EC=9D=98=
 =EC=82=AC=EC=9A=A9=EC=9E=90 =EC=A0=95=EB=B3=B4=EB=A5=BC =EB=8B=A4=EC=8B=9C=
 =EC=A1=B0=ED=9A=8C</span>
        self.cursor.execute(<span class=3D"hljs-string">"SELECT id, highsco=
re FROM user ORDER BY highscore DESC LIMIT 3"</span>)
        rows =3D self.cursor.fetchall()
        <span class=3D"hljs-keyword">for</span> idx, (user_id, score) <span=
 class=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</=
span>(rows, start=3D<span class=3D"hljs-number">1</span>):
            tk.Label(self.leaderboard_frame, text=3D<span class=3D"hljs-str=
ing">f"<span class=3D"hljs-subst">{idx}</span>=EB=93=B1: <span class=3D"hlj=
s-subst">{user_id}</span> - <span class=3D"hljs-subst">{score}</span>=EC=A0=
=90"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">14</span>), bg=3D<span class=3D"hljs-string">'#fff=
fff'</span>).pack()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">show_transparent_popup</span>(<span class=3D"hljs-params">self, messa=
ge, color, image</span>):
        popup =3D tk.Toplevel(self)
        popup.overrideredirect(<span class=3D"hljs-literal">True</span>)  <=
span class=3D"hljs-comment"># =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=85=8C=EB=91=
=90=EB=A6=AC=EC=99=80 =EC=A0=9C=EB=AA=A9 =ED=91=9C=EC=8B=9C=EC=A4=84 =EC=A0=
=9C=EA=B1=B0</span>
        popup.geometry(<span class=3D"hljs-string">"200x80+{}+{}"</span>.<s=
pan class=3D"hljs-built_in">format</span>(self.winfo_x() + <span class=3D"h=
ljs-number">280</span>, self.winfo_y() + <span class=3D"hljs-number">100</s=
pan>))
        popup.attributes(<span class=3D"hljs-string">'-alpha'</span>, <span=
 class=3D"hljs-number">0.7</span>)  <span class=3D"hljs-comment"># =EC=9C=
=88=EB=8F=84=EC=9A=B0 =ED=88=AC=EB=AA=85=EB=8F=84 =EC=84=A4=EC=A0=95 (70%)<=
/span>

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80=
 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=83=9D=EC=84=B1</span>
        <span class=3D"hljs-keyword">if</span> image:
            label_image =3D tk.Label(popup, image=3Dimage, bg=3D<span class=
=3D"hljs-string">'#ffffff'</span>)
            label_image.pack(side=3D<span class=3D"hljs-string">'top'</span=
>)
       =20
        popup_label =3D tk.Label(popup, text=3Dmessage, font=3D(<span class=
=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">16</spa=
n>), fg=3Dcolor, bg=3D<span class=3D"hljs-string">"white"</span>)
        popup_label.pack(expand=3D<span class=3D"hljs-literal">True</span>,=
 fill=3D<span class=3D"hljs-string">'both'</span>)
        <span class=3D"hljs-comment"># =ED=8C=9D=EC=97=85=EC=9D=84 700ms =
=ED=9B=84=EC=97=90 =EC=9E=90=EB=8F=99=EC=9C=BC=EB=A1=9C =EB=8B=AB=EA=B8=B0<=
/span>
        popup.after(<span class=3D"hljs-number">700</span>, popup.destroy)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">level_up</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.level &lt;=3D <span cla=
ss=3D"hljs-number">4</span> <span class=3D"hljs-keyword">and</span> self.cu=
rrent_score % <span class=3D"hljs-number">10</span> =3D=3D <span class=3D"h=
ljs-number">0</span>:
            self.level +=3D <span class=3D"hljs-number">1</span>
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.image_label.config(image=3Dself.images[self.level])
   =20
    <span class=3D"hljs-comment"># =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98 =
=EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_high_score</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98=
 =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98=EB=A5=BC =EB=8D=B0=EC=9D=B4=ED=84=B0=
=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=
=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""</span>
        query =3D <span class=3D"hljs-string">"UPDATE user SET highscore =
=3D %s WHERE id =3D %s AND highscore &lt; %s"</span>
        <span class=3D"hljs-keyword">try</span>:
            self.cursor.execute(query, (self.current_score, self.current_us=
er, self.current_score))
            self.db.commit()
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            self.db.rollback()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>  <span class=3D"hljs=
-comment"># =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=B9=84=ED=99=9C=EC=84=B1=ED=99=
=94 =EC=83=81=ED=83=9C=EB=A9=B4 =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=85=EB=8D=
=B0=EC=9D=B4=ED=8A=B8 =EC=A4=91=EB=8B=A8</span>
        elapsed_time =3D <span class=3D"hljs-built_in">int</span>(time.time=
() - self.start_time)
        remaining_time =3D self.game_duration - elapsed_time
        self.label_timer.config(text=3D<span class=3D"hljs-string">f"=EB=82=
=A8=EC=9D=80 =EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{remaining_time=
}</span>=EC=B4=88"</span>)
        <span class=3D"hljs-keyword">if</span> remaining_time &gt; <span cl=
ass=3D"hljs-number">0</span>:
            self.after(<span class=3D"hljs-number">1000</span>, self.update=
_timer)  <span class=3D"hljs-comment"># 1=EC=B4=88 =ED=9B=84 =EB=8B=A4=EC=
=8B=9C =EC=9D=B4 =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =ED=98=B8=EC=B6=9C</s=
pan>
        <span class=3D"hljs-keyword">else</span>:
            messagebox.showinfo(<span class=3D"hljs-string">"=EA=B2=8C=EC=
=9E=84 =EC=A2=85=EB=A3=8C"</span>, <span class=3D"hljs-string">"=EA=B2=8C=
=EC=9E=84=EC=9D=B4 =EC=A2=85=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4"</span>)
            self.update_high_score()
            messagebox.showinfo(<span class=3D"hljs-string">"=EA=B2=8C=EC=
=9E=84 =EC=A2=85=EB=A3=8C"</span>, <span class=3D"hljs-string">f"=EC=B5=9C=
=EC=A2=85 =EC=A0=90=EC=88=98: <span class=3D"hljs-subst">{self.current_scor=
e}</span>"</span>)
            self.reset_game()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_game</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EA=B2=8C=EC=9E=84=EC=9D=84 =EB=A6=
=AC=EC=85=8B=ED=95=98=EA=B3=A0 =EC=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=9D=
=84 =EC=A4=80=EB=B9=84=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""</sp=
an>
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.update_high_score()  <span class=3D"hljs-comment"># =EA=B2=8C=
=EC=9E=84=EC=9D=B4 =EB=81=9D=EB=82=98=EB=A9=B4 =EC=A0=90=EC=88=98 =EC=97=85=
=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>
        self.display_leaderboard()  <span class=3D"hljs-comment"># =EB=8D=
=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EA=B0=
=B1=EC=8B=A0=EB=90=9C =EC=88=9C=EC=9C=84=EB=A1=9C =EB=A6=AC=EB=8D=94=EB=B3=
=B4=EB=93=9C =EA=B0=B1=EC=8B=A0</span>
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.label_word.config(text=3D<span class=3D"hljs-string">"=EB=8B=
=A4=EC=8B=9C =EC=8B=9C=EC=9E=91=ED=95=98=EB=A0=A4=EB=A9=B4 =EA=B2=8C=EC=9E=
=84 =EC=8B=9C=EC=9E=91=EC=9D=84 =EB=88=84=EB=A5=B4=EC=84=B8=EC=9A=94"</span=
>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)  =
<span class=3D"hljs-comment"># =EB=8B=A4=EC=8B=9C =ED=99=94=EB=A9=B4=EC=97=
=90 =ED=91=9C=EC=8B=9C</span>
        self.label_status.place_forget()
        self.label_timer.config(text=3D<span class=3D"hljs-string">""</span=
>)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.word_frame.place_forget()  <span class=3D"hljs-comment"># =EC=
=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=97=90=EC=84=9C=EB=8A=94 =EC=9E=85=EB=
=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EC=88=A8=EA=B9=80</span>
        self.label_info_image.place_forget()  <span class=3D"hljs-comment">=
# =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=88=
=A8=EA=B9=80</span>
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=
=91 =EB=B2=84=ED=8A=BC=EC=9D=84 =EB=8B=A4=EC=8B=9C =ED=91=9C=EC=8B=9C</span=
>
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =ED=94=84=EB=A0=88=EC=9E=84=EA=B3=BC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EB=8B=A4=
=EC=8B=9C =EB=B0=B0=EC=B9=98</span>
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =EB=82=B4=EC=9A=A9=EC=9D=84 =EA=B0=B1=EC=8B=A0</span>
        self.display_leaderboard()
        self.image_label.config(image=3Dself.images[self.level])

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    current_user =3D sys.argv[<span class=3D"hljs-number">1</span>] <span c=
lass=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sy=
s.argv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keywo=
rd">else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D GameApp(current_user)
    app.mainloop()
</code></div></div></pre><p>=EC=9C=84 =EC=BD=94=EB=93=9C=EB=8A=94 <code>set=
up_ui</code> =EB=A9=94=EC=84=9C=EB=93=9C=EC=97=90 =EB=B0=B0=EA=B2=BD =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=B6=94=EA=B0=80=ED=95=98=EC=97=AC =EB=AA=
=A8=EB=93=A0 UI =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=
=9C=BC=EB=A1=9C =EC=84=A4=EC=A0=95=ED=95=98=EC=98=80=EC=8A=B5=EB=8B=88=EB=
=8B=A4. =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=
=EB=93=9C=ED=95=98=EA=B3=A0 =EC=9C=88=EB=8F=84=EC=9A=B0=EC=9D=98 =ED=81=AC=
=EA=B8=B0=EC=97=90 =EB=A7=9E=EA=B2=8C =EC=A1=B0=EC=A0=95=ED=95=9C =ED=9B=84=
 <code>Label</code>=EB=A1=9C =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC =ED=91=9C=EC=8B=9C=ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=ED=9B=84=
 =EB=8B=A4=EB=A5=B8 UI =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=84 =EA=B7=B8 =EC=
=9C=84=EC=97=90 =EB=B0=B0=EC=B9=98=ED=95=98=EC=97=AC =EB=B0=B0=EA=B2=BD =EC=
=9D=B4=EB=AF=B8=EC=A7=80=EA=B0=80 =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =ED=
=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D=
"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center justi=
fy-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolut=
e md:border md:border-token-border-light md:hidden"><div class=3D"flex item=
s-center"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-l=
g text-token-text-secondary hover:bg-token-main-surface-secondary"><span cl=
ass=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.6=
7572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8=
.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 =
6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.909=
9ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 =
10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.000=
05C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.3=
5665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 =
10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.=
4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.684=
6 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 1=
0.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3=
166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C=
18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.=
5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.592=
1 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16=
.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.859=
05 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></s=
pan></button></span><span class=3D"" data-state=3D"closed"><button class=3D=
"rounded-lg text-token-text-secondary hover:bg-token-main-surface-secondary=
"><span class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor"=
 fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-=
3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 =
3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9=
a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></p=
ath></svg></span></button></span><div class=3D"flex"><span class=3D"" data-=
state=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hove=
r:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] it=
ems-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.49=
61C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 =
21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.379=
23 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589=
 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 1=
5 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4=
961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10=
.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.15=
06 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 1=
7.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.95=
23 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0=
045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.55=
68 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.=
0045Z" fill=3D"currentColor"></path></svg></span></button></span></div><spa=
n class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2e=
2:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" cl=
ass=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-[30px] ho=
ver:bg-token-main-surface-secondary"><div class=3D"flex items-center pb-0.5=
 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-=
4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24"=
 fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.8=
98.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82=
-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.=
241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-=
.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-=
.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001=
 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.22=
3 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1=
.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.=
47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 =
4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM=
6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.07=
6.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2=
.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3=
-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span cla=
ss=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: =
0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heigh=
t=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-te=
xt-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.29=
3 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a=
1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></sv=
g></div></button></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div=
></div></div></div></div></div><div class=3D"w-full text-token-text-primary=
" dir=3D"auto" data-testid=3D"conversation-turn-134" data-scroll-anchor=3D"=
false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:=
px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base jui=
ce:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><di=
v class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><=
div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col=
 max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2=
59ed-4d0c-45ce-b682-f6eba338b3cd" dir=3D"auto" class=3D"min-h-[20px] text-m=
essage flex flex-col items-start whitespace-pre-wrap break-words [.text-mes=
sage+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div c=
lass=3D"flex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2=
.5 dark:bg-token-main-surface-secondary">=EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=
=85=ED=95=98=EA=B2=8C =EB=AA=BB=ED=95=B4?<div class=3D"absolute bottom-0 ri=
ght-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block=
"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 item=
s-center justify-center rounded-full text-token-text-secondary transition h=
over:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D=
"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.=
293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.=
736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.3=
86 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.=
586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rul=
e=3D"evenodd"></path></svg></button></span></div></div></div></div></div></=
div></div></div></div></div><div class=3D"w-full text-token-text-primary" d=
ir=3D"auto" data-testid=3D"conversation-turn-135" data-scroll-anchor=3D"fal=
se"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-=
5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:=
gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div c=
lass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"=
pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center=
 justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div clas=
s=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main=
-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"a0303677-7094-4c6c-8401-3d9cdd838b37" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9D=
=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =ED=95=
=98=EB=A0=A4=EB=A9=B4, =EB=A8=BC=EC=A0=80 =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=
=8C=8C=EC=9D=BC =EC=9E=90=EC=B2=B4=EC=97=90=EC=84=9C =EB=B0=B0=EA=B2=BD=EC=
=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =EB=A7=8C=EB=93=A4=EC=96=B4=EC=
=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4=
=EC=84=9C=EB=8A=94 =EC=9D=B4=EB=AF=B8=EC=A7=80 =ED=8E=B8=EC=A7=91 =EC=86=8C=
=ED=94=84=ED=8A=B8=EC=9B=A8=EC=96=B4(=EC=98=88: Photoshop, GIMP)=EC=97=90=
=EC=84=9C =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =
=EC=84=A4=EC=A0=95=ED=95=9C =ED=9B=84 PNG =ED=98=95=EC=8B=9D=EC=9C=BC=EB=A1=
=9C =EC=A0=80=EC=9E=A5=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EA=
=B7=B8=EB=9F=B0 =EB=8B=A4=EC=9D=8C, =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=
=EA=B2=BD=EC=9D=84 =EA=B0=80=EC=A7=84 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =
<code>PIL</code> =EB=9D=BC=EC=9D=B4=EB=B8=8C=EB=9F=AC=EB=A6=AC=EB=A5=BC =EC=
=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=A1=9C=EB=93=9C=ED=95=98=EA=B3=A0, =EC=
=9D=B4=EB=A5=BC <code>Tkinter</code>=EC=97=90 =ED=91=9C=EC=8B=9C=ED=95=A0 =
=EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=EC=9D=B4=EB=AF=B8=EC=
=A7=80=EA=B0=80 =EC=9D=B4=EB=AF=B8 =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=
=B2=BD=EC=9D=84 =EA=B0=80=EC=A7=80=EA=B3=A0 =EC=9E=88=EB=8B=A4=EA=B3=A0 =EA=
=B0=80=EC=A0=95=ED=95=98=EA=B3=A0, =EB=8B=A4=EC=9D=8C =EC=BD=94=EB=93=9C=EB=
=8A=94 =EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC <co=
de>Tkinter</code>=EC=97=90 =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=B2=BD=
=EC=9C=BC=EB=A1=9C =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EB=B0=A9=EB=B2=95=
=EC=9D=84 =EB=B3=B4=EC=97=AC=EC=A4=8D=EB=8B=88=EB=8B=A4:</p><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">import</spa=
n> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk, messagebox
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> PhotoImage, Label
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> random
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, current_user</span>=
):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"750x530"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=
 =ED=82=A4=EC=9A=B0=EA=B8=B0 =EA=B2=8C=EC=9E=84"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">'#ffffff'</span>)  =
<span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=84=A4=EC=A0=
=95</span>

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D <span class=3D"hljs-number">4</span>
        self.setup_game_variables()
        <span class=3D"hljs-comment">#self.setup_button_style()</span>
        self.setup_ui()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> mysql.connector.connect(
            host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com"</span>,
            user=3D<span class=3D"hljs-string">"admin"</span>,
            password=3D<span class=3D"hljs-string">"seat0323"</span>,
            database=3D<span class=3D"hljs-string">"wordbook"</span>
        )

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_game_variables</span>(<span class=3D"hljs-params">self</span>):
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image(<span class=3D"hljs-string">=
"=EC=88=98=EB=AD=89=EC=9D=B4=EC=A0=95=EB=8B=B5=EC=9A=A9.png"</span>, (<span=
 class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.incorrect_image =3D self.load_image(<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png"</span>, (<sp=
an class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.info_image =3D self.load_image(<span class=3D"hljs-string">"=
=EA=B2=8C=EC=9E=84=EC=A0=95=EB=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png"</span>=
, (<span class=3D"hljs-number">275</span>, <span class=3D"hljs-number">181<=
/span>))  <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=
=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B6=94=EA=B0=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_entry_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'default'</span>)  <spa=
n class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =ED=85=8C=EB=A7=88 =EC=82=AC=
=EC=9A=A9</span>
        style.configure(<span class=3D"hljs-string">'Rounded.TEntry'</span>=
, padding=3D<span class=3D"hljs-number">6</span>, relief=3D<span class=3D"h=
ljs-string">'flat'</span>, background=3D<span class=3D"hljs-string">"#fffff=
f"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_button_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'clam'</span>)=20
        style.configure(<span class=3D"hljs-string">'My.TButton'</span>, fo=
nt=3D(<span class=3D"hljs-string">'Arial-BoldMT'</span>, <span class=3D"hlj=
s-number">14</span>),
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2ea:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-136" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa23fae-8e78=
-4bd3-ac0d-ceebaccd573b" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">=EC=88=98=EC=A0=95=ED=95=A0 =EB=B6=80=EB=B6=
=84=EB=A7=8C<div class=3D"absolute bottom-0 right-full top-0 -mr-3.5 hidden=
 pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" data-state=
=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-center round=
ed-full text-token-text-secondary transition hover:bg-token-main-surface-te=
rtiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24=
" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6=
.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.=
789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628=
l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293=
-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></=
button></span></div></div></div></div></div></div></div></div></div></div><=
div class=3D"w-full text-token-text-primary" dir=3D"auto" data-testid=3D"co=
nversation-turn-137" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:=
py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=
=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-0 flex fl=
ex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><div class=
=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center overflow-hidd=
en rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 rounded-sm =
flex items-center justify-center bg-token-main-surface-primary text-token-t=
ext-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"group/conversation-tu=
rn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"flex-col=
 gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div dat=
a-message-author-role=3D"assistant" data-message-id=3D"750771a9-6186-479d-9=
3e1-b85a768db291" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex=
-col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5=
 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-f=
ull flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div class=3D"m=
arkdown prose w-full break-words dark:prose-invert light"><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">def</span> =
<span class=3D"hljs-title function_">load_images</span>(<span class=3D"hljs=
-params">self</span>):
    image_paths =3D {
        <span class=3D"hljs-number">1</span>: <span class=3D"hljs-string">"=
=EC=88=98=EB=AD=89=EC=9D=B41.png"</span>,
        <span class=3D"hljs-number">2</span>: <span class=3D"hljs-string">"=
=EC=88=98=EB=AD=89=EC=9D=B42.png"</span>,
        <span class=3D"hljs-number">3</span>: <span class=3D"hljs-string">"=
=EC=88=98=EB=AD=89=EC=9D=B43.png"</span>,
        <span class=3D"hljs-number">4</span>: <span class=3D"hljs-string">"=
=EC=88=98=EB=AD=89=EC=9D=B44.png"</span>,
        <span class=3D"hljs-number">5</span>: <span class=3D"hljs-string">"=
=EC=88=98=EB=AD=89=EC=9D=B45.png"</span>
    }
    <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=
=93=9C =EC=8B=9C =EC=95=8C=ED=8C=8C =EC=B1=84=EB=84=90=EC=9D=84 =EC=82=AC=
=EC=9A=A9=ED=95=98=EC=97=AC =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=B2=BD=
=EC=9D=84 =EC=B2=98=EB=A6=AC</span>
    <span class=3D"hljs-keyword">return</span> {level: self.load_image(path=
, (<span class=3D"hljs-number">180</span>, <span class=3D"hljs-number">180<=
/span>), alpha=3D<span class=3D"hljs-literal">True</span>) <span class=3D"h=
ljs-keyword">for</span> level, path <span class=3D"hljs-keyword">in</span> =
image_paths.items()}

<span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title function_=
">load_image</span>(<span class=3D"hljs-params">self, path, size, alpha=3D<=
span class=3D"hljs-literal">False</span></span>):
    image =3D Image.<span class=3D"hljs-built_in">open</span>(path)
    <span class=3D"hljs-keyword">if</span> alpha:
        image =3D image.convert(<span class=3D"hljs-string">"RGBA"</span>) =
 <span class=3D"hljs-comment"># =EC=95=8C=ED=8C=8C =EC=B1=84=EB=84=90=EC=9D=
=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=
=B0=EA=B2=BD =EC=B2=98=EB=A6=AC</span>
    <span class=3D"hljs-keyword">return</span> ImageTk.PhotoImage(image.res=
ize(size, Image.Resampling.LANCZOS))
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2ei:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-138" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2f5f6-80c0=
-46a1-a433-d24b2d1e5dc8" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"flex w-[70%] flex-row items-center justify-end gap-1"><div class=
=3D"overflow-hidden rounded-lg w-full h-full max-w-96 max-h-64"><div class=
=3D"relative flex h-auto w-full max-w-lg items-center justify-center overfl=
ow-hidden bg-token-main-surface-secondary text-token-text-tertiary"><button=
 type=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-cont=
rols=3D"radix-:r2h0:" data-state=3D"closed" class=3D"overflow-hidden rounde=
d-lg w-full h-full max-w-96 max-h-64"><img alt=3D"=EC=97=85=EB=A1=9C=EB=93=
=9C=ED=95=9C =EC=9D=B4=EB=AF=B8=EC=A7=80" loading=3D"lazy" width=3D"1492" h=
eight=3D"1050" decoding=3D"async" data-nimg=3D"1" class=3D"max-w-full objec=
t-cover object-center overflow-hidden rounded-lg w-full h-full max-w-96 max=
-h-64 transition-opacity duration-300 opacity-100" src=3D"https://files.oai=
usercontent.com/file-T8A0HDSwTW3VgmOeE5ozAUrp?se=3D2024-05-28T03%3A10%3A45Z=
&amp;sp=3Dr&amp;sv=3D2023-11-03&amp;sr=3Db&amp;rscc=3Dmax-age%3D299%2C%20im=
mutable&amp;rscd=3Dattachment%3B%20filename%3Dimage.png&amp;sig=3DmpMs9DQr7=
tS8CcdOWU4sx3/%2B3mxa1dIYh/35rBHtjWA%3D" style=3D"color: transparent;"></bu=
tton></div></div></div><div class=3D"relative max-w-[70%] rounded-3xl bg-[#=
f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary rounded-tr-lg">=EB=
=B0=B0=EA=B2=BD =EC=8D=BC=EC=9D=84=EB=95=8C =EB=AD=90=EA=B0=80 =EB=AC=B8=EC=
=A0=9C=EC=9D=B8=EC=A7=80 =EB=B3=B4=EC=9D=B4=EC=A7=80? =EC=9D=B4=EB=AF=B8=EC=
=A7=80 =EB=88=84=EB=81=BC=EB=A5=BC =EB=94=B0=EC=84=9C =EB=B0=B0=EA=B2=BD=EC=
=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =ED=95=B4=EB=86=A8=EB=8A=94=EB=
=8D=B0=EB=8F=84 =EB=84=A3=EC=9C=BC=EB=A9=B4 =ED=9D=B0=EC=83=89 =EB=B0=B0=EA=
=B2=BD=EC=9D=B4 =EB=B3=B4=EC=9D=B4=EB=84=A4</div></div></div></div></div></=
div></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"=
auto" data-testid=3D"conversation-turn-139" data-scroll-anchor=3D"false"><d=
iv class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:p=
x-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 =
juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=
=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0=
.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D=
"relative p-1 rounded-sm flex items-center justify-center bg-token-main-sur=
face-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"4=
1" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text=
><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.685=
9C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.=
3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796=
 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 1=
8.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.=
67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 =
9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.4=
98905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.12=
93C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 =
31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7=
141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587=
 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40=
.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.11=
19 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38=
.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.574=
8C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 =
37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.9=
36 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C2=
6.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.93=
89 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29=
.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.387=
2 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 =
5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.=
1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30=
.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177=
 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29=
.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.025=
06 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998=
 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10=
.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.661=
9 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28=
.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.092=
4 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3=
.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4=
411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729=
 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.=
0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684=
C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30=
.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.18=
8C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.=
1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069=
 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.=
2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.071=
5 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 1=
6.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25=
482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842=
 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM1=
4.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9=
602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295=
 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.=
82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.008=
9 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14=
.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.26=
16 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 =
15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fi=
ll=3D"currentColor"></path></svg></div></div></div></div></div><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-tur=
n"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"assistant" data-message-i=
d=3D"bfeaa129-4500-4c4c-9082-0c298fa5aa29" dir=3D"auto" class=3D"text-messa=
ge flex flex-col items-start whitespace-pre-wrap break-words [.text-message=
+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=
=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><di=
v class=3D"markdown prose w-full break-words dark:prose-invert light"><p>=
=EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9D=98 =ED=88=AC=EB=AA=85=EB=8F=84=EB=A5=BC =
=EC=9C=A0=EC=A7=80=ED=95=98=EA=B8=B0 =EC=9C=84=ED=95=B4=EC=84=9C=EB=8A=94 P=
IL =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9D=98 =EC=95=8C=ED=8C=8C =EC=B1=84=EB=84=
=90=EC=9D=84 =EC=9C=A0=EC=A7=80=ED=95=9C =EC=83=81=ED=83=9C=EB=A1=9C =EC=9D=
=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=98=EA=B3=A0, Tkinte=
r=EC=97=90=EC=84=9C =EC=A0=81=EC=A0=88=ED=9E=88 =EC=84=A4=EC=A0=95=ED=95=B4=
=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC=
 <code>Label</code> =EC=9C=84=EC=A0=AF=EC=97=90 =EB=B0=B0=EC=B9=98=ED=95=A0=
 =EB=95=8C =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=B2=BD=EC=9D=84 =EC=B2=
=98=EB=A6=AC=ED=95=98=EB=8F=84=EB=A1=9D =EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=
=98=EC=A0=95=ED=95=A9=EB=8B=88=EB=8B=A4.</p><p>=EC=95=84=EB=9E=98=EB=8A=94 =
=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EC=9E=85=EB=8B=88=EB=8B=A4. =
=EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC <code>Label</code> =EC=9C=84=EC=A0=AF=
=EC=97=90 =EB=B0=B0=EC=B9=98=ED=95=A0 =EB=95=8C =EC=95=8C=ED=8C=8C =EC=B1=
=84=EB=84=90=EC=9D=84 =EC=9C=A0=EC=A7=80=ED=95=98=EB=8F=84=EB=A1=9D =EB=B3=
=80=EA=B2=BD=ED=95=A9=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray=
-950 rounded-md border-[0.5px] border-token-border-medium"><div class=3D"fl=
ex items-center relative text-token-text-secondary bg-token-main-surface-se=
condary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>pyt=
hon</span><div class=3D"flex items-center"><span class=3D"" data-state=3D"c=
losed"><button class=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w=
3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 =
24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=
=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5=
a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a=
1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0=
 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=
=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=3D"overflow=
-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!whitespace-pre=
 hljs language-python"><span class=3D"hljs-keyword">import</span> mysql.con=
nector
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> font <span class=3D"hljs-keyword">as</span> tkFont
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">import</span> os

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, current_user</span>=
):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"750x530"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=
 =ED=82=A4=EC=9A=B0=EA=B8=B0 =EA=B2=8C=EC=9E=84"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">'#ffffff'</span>)  =
<span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=84=A4=EC=A0=
=95</span>

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D <span class=3D"hljs-number">4</span>
        self.setup_game_variables()
        self.setup_ui()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> mysql.connector.connect(
            host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com"</span>,
            user=3D<span class=3D"hljs-string">"admin"</span>,
            password=3D<span class=3D"hljs-string">"seat0323"</span>,
            database=3D<span class=3D"hljs-string">"wordbook"</span>
        )

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_game_variables</span>(<span class=3D"hljs-params">self</span>):
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image(<span class=3D"hljs-string">=
"=EC=88=98=EB=AD=89=EC=9D=B4=EC=A0=95=EB=8B=B5=EC=9A=A9.png"</span>, (<span=
 class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>), a=
lpha=3D<span class=3D"hljs-literal">True</span>)
        self.incorrect_image =3D self.load_image(<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png"</span>, (<sp=
an class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>),=
 alpha=3D<span class=3D"hljs-literal">True</span>)
        self.info_image =3D self.load_image(<span class=3D"hljs-string">"=
=EA=B2=8C=EC=9E=84=EC=A0=95=EB=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png"</span>=
, (<span class=3D"hljs-number">275</span>, <span class=3D"hljs-number">181<=
/span>), alpha=3D<span class=3D"hljs-literal">True</span>)  <span class=3D"=
hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=
=A7=80 =EC=B6=94=EA=B0=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_ui</span>(<span class=3D"hljs-params">self</span>):
        self.background_image =3D self.load_image(<span class=3D"hljs-strin=
g">"=EA=B2=8C=EC=9E=84=EB=B0=B0=EA=B2=BD.jpg"</span>, (<span class=3D"hljs-=
number">750</span>, <span class=3D"hljs-number">530</span>))
        self.background_label =3D tk.Label(self, image=3Dself.background_im=
age)
        self.background_label.place(x=3D<span class=3D"hljs-number">0</span=
>, y=3D<span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs=
-number">1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        self.back_button =3D self.create_image_button(<span class=3D"hljs-s=
tring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,=
 <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=
=EB=B2=84.png"</span>, <span class=3D"hljs-keyword">lambda</span>: Util.Swi=
tchPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.curre=
nt_user), <span class=3D"hljs-number">50</span>, <span class=3D"hljs-number=
">30</span>)
        self.back_button.place(x=3D<span class=3D"hljs-number">10</span>, y=
=3D<span class=3D"hljs-number">10</span>)
       =20
        self.leaderboard_label =3D tk.Label(self, text=3D<span class=3D"hlj=
s-string">"=ED=98=84=EC=9E=AC =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=
=84"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</spa=
n>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-=
string">'#ffffff'</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.display_leaderboard()
       =20
        self.image_label =3D Label(self, image=3Dself.images[self.level], b=
g=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.image_label.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        self.button_start =3D self.create_image_button(<span class=3D"hljs-=
string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png"</span>=
, <span class=3D"hljs-string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=ED=98=
=B8=EB=B2=84.png"</span>, self.start_game, <span class=3D"hljs-number">90</=
span>, <span class=3D"hljs-number">40</span>)
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
       =20
        self.label_word =3D tk.Label(self, text=3D<span class=3D"hljs-strin=
g">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <s=
pan class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string">'#ff=
ffff'</span>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>'#ffffff'</span>)
        self.word_frame.place_forget()

        self.entry_answer =3D ttk.Entry(self.word_frame, font=3D(<span clas=
s=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">20</sp=
an>))
        self.entry_answer.pack(pady=3D<span class=3D"hljs-number">10</span>=
)
        self.entry_answer.bind(<span class=3D"hljs-string">"&lt;Return&gt;"=
</span>, self.check_answer)
       =20
        self.label_status =3D tk.Label(self, text=3D<span class=3D"hljs-str=
ing">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, =
<span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</=
span>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_status.place_forget()

        self.label_timer =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <=
span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</s=
pan>), bg=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_timer.place_forget()
       =20
        self.label_info_image =3D Label(self, image=3Dself.info_image, bg=
=3D<span class=3D"hljs-string">'#ffffff'</span>)
        self.label_info_image.place_forget()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        image_paths =3D {
            <span class=3D"hljs-number">1</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B41.png"</span>,
            <span class=3D"hljs-number">2</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B42.png"</span>,
            <span class=3D"hljs-number">3</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B43.png"</span>,
            <span class=3D"hljs-number">4</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B44.png"</span>,
            <span class=3D"hljs-number">5</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B45.png"</span>
        }
        <span class=3D"hljs-keyword">return</span> {level: self.load_image(=
path, (<span class=3D"hljs-number">180</span>, <span class=3D"hljs-number">=
180</span>), alpha=3D<span class=3D"hljs-literal">True</span>) <span class=
=3D"hljs-keyword">for</span> level, path <span class=3D"hljs-keyword">in</s=
pan> image_paths.items()}

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, path, size, alpha=
=3D<span class=3D"hljs-literal">False</span></span>):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(path)
        <span class=3D"hljs-keyword">if</span> alpha:
            image =3D image.convert(<span class=3D"hljs-string">"RGBA"</spa=
n>)  <span class=3D"hljs-comment"># =EC=95=8C=ED=8C=8C =EC=B1=84=EB=84=90=
=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=88=AC=EB=AA=85=ED=95=9C =
=EB=B0=B0=EA=B2=BD =EC=B2=98=EB=A6=AC</span>
        <span class=3D"hljs-keyword">return</span> ImageTk.PhotoImage(image=
.resize(size, Image.Resampling.LANCZOS))

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, width, height</span>):
        normal_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built=
_in">open</span>(normal_image_path).resize((width, height), Image.Resamplin=
g.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built_=
in">open</span>(hover_image_path).resize((width, height), Image.Resampling.=
LANCZOS))
        button =3D tk.Button(self, image=3Dnormal_image, command=3Dcommand,=
 borderwidth=3D<span class=3D"hljs-number">0</span>, bg=3D<span class=3D"hl=
js-string">'#ffffff'</span>)
        button.image =3D normal_image  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EC=B0=B8=EC=A1=B0 =EB=B3=B4=EA=B4=80</span>
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">fetch_word</span>(<span class=3D"hljs-params">self</span>):
        self.cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean=
 FROM toeicword ORDER BY RAND() LIMIT 1"</span>)
        <span class=3D"hljs-keyword">return</span> self.cursor.fetchone()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">check_answer</span>(<span class=3D"hljs-params">self, event=3D<span c=
lass=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>
        answer =3D self.entry_answer.get().lower().strip()
        <span class=3D"hljs-keyword">if</span> answer =3D=3D self.current_w=
ord:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=A0=
=95=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"green"</span>, self.correct_image)
            self.current_score +=3D <span class=3D"hljs-number">10</span>
            self.level_up()
        <span class=3D"hljs-keyword">else</span>:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=98=
=A4=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"red"</span>, self.incorrect_image)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.next_word()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_game</span>(<span class=3D"hljs-params">self</span>):
        self.game_active =3D <span class=3D"hljs-literal">True</span>
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.next_word()
        self.entry_answer.focus_set()
       =20
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.label_status.place(x=3D<span class=3D"hljs-number">295</span>,=
 y=3D<span class=3D"hljs-number">375</span>)
       =20
        self.word_frame.place(relx=3D<span class=3D"hljs-number">0.5</span>=
, rely=3D<span class=3D"hljs-number">0.6</span>, anchor=3D<span class=3D"hl=
js-string">"center"</span>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
        self.label_timer.place(x=3D<span class=3D"hljs-number">300</span>, =
y=3D<span class=3D"hljs-number">400</span>)
        self.label_info_image.place(x=3D<span class=3D"hljs-number">280</sp=
an>, y=3D<span class=3D"hljs-number">360</span>)

        self.label_status.tkraise()
        self.label_timer.tkraise()

        self.button_start.place_forget()
        self.leaderboard_label.place_forget()
        self.leaderboard_frame.place_forget()
       =20
        self.update_timer()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_word</span>(<span class=3D"hljs-params">self</span>):
        self.current_word, self.current_meaning =3D self.fetch_word()
        self.label_word.config(text=3Dself.current_meaning)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_leaderboard</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.leaderboard_frame.winfo_children():
            widget.destroy()
        self.cursor.execute(<span class=3D"hljs-string">"SELECT id, highsco=
re FROM user ORDER BY highscore DESC LIMIT 3"</span>)
        rows =3D self.cursor.fetchall()
        <span class=3D"hljs-keyword">for</span> idx, (user_id, score) <span=
 class=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</=
span>(rows, start=3D<span class=3D"hljs-number">1</span>):
            tk.Label(self.leaderboard_frame, text=3D<span class=3D"hljs-str=
ing">f"<span class=3D"hljs-subst">{idx}</span>=EB=93=B1: <span class=3D"hlj=
s-subst">{user_id}</span> - <span class=3D"hljs-subst">{score}</span>=EC=A0=
=90"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">14</span>), bg=3D<span class=3D"hljs-string">'#fff=
fff'</span>).pack()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">show_transparent_popup</span>(<span class=3D"hljs-params">self, messa=
ge, color, image</span>):
        popup =3D tk.Toplevel(self)
        popup.overrideredirect(<span class=3D"hljs-literal">True</span>)
        popup.geometry(<span class=3D"hljs-string">"200x80+{}+{}"</span>.<s=
pan class=3D"hljs-built_in">format</span>(self.winfo_x() + <span class=3D"h=
ljs-number">280</span>, self.winfo_y() + <span class=3D"hljs-number">100</s=
pan>))
        popup.attributes(<span class=3D"hljs-string">'-alpha'</span>, <span=
 class=3D"hljs-number">0.7</span>)

        <span class=3D"hljs-keyword">if</span> image:
            label_image =3D tk.Label(popup, image=3Dimage, bg=3D<span class=
=3D"hljs-string">'#ffffff'</span>)
            label_image.pack(side=3D<span class=3D"hljs-string">'top'</span=
>)
       =20
        popup_label =3D tk.Label(popup, text=3Dmessage, font=3D(<span class=
=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">16</spa=
n>), fg=3Dcolor, bg=3D<span class=3D"hljs-string">"white"</span>)
        popup_label.pack(expand=3D<span class=3D"hljs-literal">True</span>,=
 fill=3D<span class=3D"hljs-string">'both'</span>)
        popup.after(<span class=3D"hljs-number">700</span>, popup.destroy)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">level_up</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.level &lt;=3D <span cla=
ss=3D"hljs-number">4</span> <span class=3D"hljs-keyword">and</span> self.cu=
rrent_score % <span class=3D"hljs-number">10</span> =3D=3D <span class=3D"h=
ljs-number">0</span>:
            self.level +=3D <span class=3D"hljs-number">1</span>
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.image_label.config(image=3Dself.images[self.level])
   =20
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_high_score</span>(<span class=3D"hljs-params">self</span>):
        query =3D <span class=3D"hljs-string">"UPDATE user SET highscore =
=3D %s WHERE id =3D %s AND highscore &lt; %s"</span>
        <span class=3D"hljs-keyword">try</span>:
            self.cursor.execute(query, (self.current_score, self.current_us=
er, self.current_score))
            self.db.commit()
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            self.db.rollback()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>
        elapsed_time =3D <span class=3D"hljs-built_in">int</span>(time.time=
() - self.start_time)
        remaining_time =3D self.game_duration - elapsed_time
        self.label_timer.config(text=3D<span class=3D"hljs-string">f"=EB=82=
=A8=EC=9D=80 =EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{remaining_time=
}</span>=EC=B4=88"</span>)
        <span class=3D"hljs-keyword">if</span> remaining_time &gt; <span cl=
ass=3D"hljs-number">0</span>:
            self.after(<span class=3D"hljs-number">1000</span>, self.update=
_timer)
        <span class=3D"hljs-keyword">else</span>:
            self.game_active =3D <span class=3D"hljs-literal">False</span>
            messagebox.showinfo(<span class=3D"hljs-string">"=EA=B2=8C=EC=
=9E=84 =EC=A2=85=EB=A3=8C"</span>, <span class=3D"hljs-string">f"=EC=B5=9C=
=EC=A2=85 =EC=A0=90=EC=88=98: <span class=3D"hljs-subst">{self.current_scor=
e}</span>"</span>)
            self.update_high_score()
            self.reset_game()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_game</span>(<span class=3D"hljs-params">self</span>):
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.update_high_score()
        self.display_leaderboard()
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.label_word.config(text=3D<span class=3D"hljs-string">"=EB=8B=
=A4=EC=8B=9C =EC=8B=9C=EC=9E=91=ED=95=98=EB=A0=A4=EB=A9=B4 =EA=B2=8C=EC=9E=
=84 =EC=8B=9C=EC=9E=91=EC=9D=84 =EB=88=84=EB=A5=B4=EC=84=B8=EC=9A=94"</span=
>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
        self.label_status.place_forget()
        self.label_timer.config(text=3D<span class=3D"hljs-string">""</span=
>)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.word_frame.place_forget()
        self.label_info_image.place_forget()
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.display_leaderboard()
        self.image_label.config(image=3Dself.images[self.level])

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    current_user =3D sys.argv[<span class=3D"hljs-number">1</span>] <span c=
lass=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sy=
s.argv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keywo=
rd">else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D GameApp(current_user)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>load_image</code> =ED=95=A8=EC=88=98=EC=97=90=EC=84=9C <cod=
e>alpha</code> =EB=A7=A4=EA=B0=9C=EB=B3=80=EC=88=98=EB=A5=BC =EC=B6=94=EA=
=B0=80=ED=95=98=EC=97=AC =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EC=
=8B=9C =EC=95=8C=ED=8C=8C =EC=B1=84=EB=84=90=EC=9D=84 =ED=8F=AC=ED=95=A8=ED=
=95=98=EB=8F=84=EB=A1=9D =ED=95=A9=EB=8B=88=EB=8B=A4. <code>self.images</co=
de>, <code>self.correct_image</code>, <code>self.incorrect_image</code>, <c=
ode>self.info_image</code>=EB=A5=BC =EB=A1=9C=EB=93=9C=ED=95=A0 =EB=95=8C =
=ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=B2=BD=EC=9D=B4 =EC=A0=81=EC=9A=A9=
=EB=90=98=EB=8F=84=EB=A1=9D =EC=88=98=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4. =EC=9D=B4=EC=A0=9C <code>=EC=88=98=EB=AD=89=EC=9D=B4</code> =EC=
=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=9C =EC=9D=B4=EB=
=AF=B8=EC=A7=80=EB=93=A4=EC=9D=B4 =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=
=B2=BD=EC=9C=BC=EB=A1=9C =ED=91=9C=EC=8B=9C=EB=90=A0 =EA=B2=83=EC=9E=85=EB=
=8B=88=EB=8B=A4.</p></div></div></div></div><div class=3D"mt-1 flex gap-3 e=
mpty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-x=
l p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:bor=
der-token-border-light md:hidden"><div class=3D"flex items-center"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-=
secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30p=
x] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.4912=
9 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V1=
5C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10=
.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701=
C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.8=
1069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.343=
15 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.093=
13 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12=
.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.86=
95 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C=
20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.9=
8627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.79=
94 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18=
.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.56=
04C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 =
14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4=
996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218=
 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></spa=
n><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-t=
oken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"f=
lex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www=
.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 2=
4 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"even=
odd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1=
-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 =
1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1=
 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span><=
/button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><=
button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-su=
rface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify=
-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466=
 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19=
.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 =
9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614=
 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.00=
45C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2=
9589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.7=
46 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C=
9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5=
002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376=
 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V=
5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.447=
72 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"cur=
rentColor"></path></svg></span></button></span></div><span class=3D"" data-=
state=3D"closed"><button type=3D"button" id=3D"radix-:r2ep:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-140" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa28876-be36-4d46-8d=
95-cc19f028ee90" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">=EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=
=A7=80=EB=93=A4 =EB=82=98=EC=98=A4=EB=8A=94=EA=B1=B0 #48B8FA =EB=B0=B0=EA=
=B2=BD =EC=9D=B4=EC=83=89=EA=B9=94=EB=A1=9C =ED=95=B4=EC=A4=98<div class=3D=
"absolute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/co=
nversation-turn:block"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex h-9 w-9 items-center justify-center rounded-full text-token-text-s=
econdary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"htt=
p://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5=
 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.3=
96-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3=
 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1=
 3.586 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></d=
iv></div></div></div></div></div></div></div></div><div class=3D"w-full tex=
t-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-141" da=
ta-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-bas=
e md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1=
 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] x=
l:max-w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-e=
nd"><div><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar fl=
ex h-6 w-6 items-center justify-center overflow-hidden rounded-full juice:h=
-8 juice:w-8"><div class=3D"relative p-1 rounded-sm flex items-center justi=
fy-center bg-token-main-surface-primary text-token-text-primary h-8 w-8"><s=
vg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999=
" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.=
1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622=
C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40=
259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 =
0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803=
 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.7=
6286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 =
12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 =
1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.31=
41C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 3=
5.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9=
208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087=
 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37=
.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.96=
59 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.=
3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.870=
7ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 =
36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.26=
63 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V1=
9.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.97=
7 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.=
2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.392=
27 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 =
5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.9=
02 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1=
103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736=
 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35=
.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29=
707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013=
 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.3=
6823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.554=
2L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28=
.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.0671=
6 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM=
31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4=
805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631=
 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.=
6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759=
C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30=
.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.533=
8C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.=
9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 =
10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.=
0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.092=
1 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 2=
6.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59=
508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464=
 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 1=
0.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9=
058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544=
 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.=
1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937=
 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14=
.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.94=
19ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L=
16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></d=
iv></div></div><div class=3D"group/conversation-turn relative flex w-full m=
in-w-0 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"=
assistant" data-message-id=3D"5ed6d282-4e8e-4d96-bf38-5c75fa6646c8" dir=3D"=
auto" class=3D"min-h-[20px] text-message flex flex-col items-start whitespa=
ce-pre-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items=
-end overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:=
empty:hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full brea=
k-words dark:prose-invert light"><p><code>=EC=88=98=EB=AD=89=EC=9D=B4</code=
> =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC</p></div></div></div></div><div clas=
s=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D"items-center j=
ustify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:abs=
olute md:border md:border-token-border-light md:hidden"><div class=3D"flex =
items-center"><span class=3D"" data-state=3D"closed"><button class=3D"round=
ed-lg text-token-text-secondary hover:bg-token-main-surface-secondary"><spa=
n class=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.541=
32L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.000=
05 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16=
.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902=
V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21=
.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15=
V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.31=
66 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22=
.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.13=
02C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 =
16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.=
9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.6201=
7 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.=
09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.10=
94 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C=
15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9=
113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687=
 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColor"></path></s=
vg></span></button></span><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-sec=
ondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-center">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"curre=
ntColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 =
3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 =
3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0=
 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"even=
odd"></path></svg></span></button></span><div class=3D"flex"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8=
727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355=
C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476=
 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 =
2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 =
19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.=
8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5=
.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62=
036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L=
9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3=
721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.55=
68 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0=
045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.00=
45 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button></span><=
/div><span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"r=
adix-:r2f0:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"c=
losed" class=3D"cursor-pointer rounded-md px-1 text-token-text-secondary h-=
[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex items-cent=
er pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full i=
con-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" heig=
ht=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=
=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503=
-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.5=
04.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.5=
16 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-=
.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentColor" d=
=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.3=
66 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.=
467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.1=
05-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c=
2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0=
 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888=
 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1=
.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.2=
35-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></di=
v><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0=
px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm =
text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"evenod=
d" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.41=
4 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd=
"></path></svg></div></button></span></div></div></div><div class=3D"pr-2 l=
g:pr-0"></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-142" data-scro=
ll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px=
-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 =
text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem]"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa2c69b-07ae-4532-b243-8dc778fbd5db" dir=3D"auto" class=3D"min-h-=
[20px] text-message flex flex-col items-start whitespace-pre-wrap break-wor=
ds [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto =
gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4=
f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=9D=B4=EC=A0=84=EC=
=9C=BC=EB=A1=9C =EB=B2=84=ED=8A=BC=EC=9D=B4=EB=9E=91 =EB=8B=A8=EC=96=B4 =EB=
=82=98=EC=98=A4=EB=8A=94=EB=9D=BC=EB=B2=A8=EB=8F=84 =EB=B0=B0=EA=B2=BD #48B=
8FA =EC=9D=B4=EA=B1=B8=EB=A1=9C =EC=84=A4=EC=A0=95<div class=3D"absolute bo=
ttom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-t=
urn:block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9=
 w-9 items-center justify-center rounded-full text-token-text-secondary tra=
nsition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M=
13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 2=
0.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7=
.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628=
-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z"=
 clip-rule=3D"evenodd"></path></svg></button></span></div></div></div></div=
></div></div></div></div></div></div><div class=3D"w-full text-token-text-p=
rimary" dir=3D"auto" data-testid=3D"conversation-turn-143" data-scroll-anch=
or=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-au=
to md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-ba=
se juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem=
]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div =
class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 ite=
ms-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8">=
<div class=3D"relative p-1 rounded-sm flex items-center justify-center bg-t=
oken-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41=
" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">=
ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 3=
7.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.834=
04 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.=
85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.72=
49 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.422=
14C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8=
.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.95646=
4 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.544=
9 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.=
7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321=
 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17=
.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.49=
98C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 =
35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.1=
15 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 4=
0.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.=
8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666=
 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3=
813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213=
 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.98=
42 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 3=
5.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5=
1397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.081=
8 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.=
902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24=
.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.08=
93 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 =
34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.=
17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.52=
28 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8=
.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.49=
79C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 =
28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55=
289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556=
L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12=
.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.99=
67 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37=
.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.30=
86 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 =
30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.33=
48 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 1=
4.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.450=
4 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V1=
1.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1=
048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376=
 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.=
40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.30=
55 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763=
 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10=
.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.426=
59 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3=
.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.86=
68 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C=
14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.=
9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985=
V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex fle=
x-grow flex-col max-w-full"><div data-message-author-role=3D"assistant" dat=
a-message-id=3D"ee66b94e-337b-4495-85a1-a2234c8dd835" dir=3D"auto" class=3D=
"text-message flex flex-col items-start whitespace-pre-wrap break-words [.t=
ext-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"=
><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt=
-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-invert l=
ight"><p>=EC=88=98=EC=A0=95=EB=90=9C =EC=BD=94=EB=93=9C=EB=A5=BC =EC=A0=81=
=EC=9A=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC=EA=B3=BC =EB=8B=A8=EC=96=B4 =
=EB=9D=BC=EB=B2=A8=EC=9D=98 =EB=B0=B0=EA=B2=BD =EC=83=89=EC=83=81=EC=9D=84 =
=EB=B3=80=EA=B2=BD=ED=95=98=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EB=B3=B4=
=EC=97=AC=EB=93=9C=EB=A6=AC=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><pre><d=
iv class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-=
medium"><div class=3D"flex items-center relative text-token-text-secondary =
bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between=
 rounded-t-md"><span>python</span><div class=3D"flex items-center"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" f=
ill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 =
3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 =
3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1=
 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></pat=
h></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><d=
iv class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code clas=
s=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">imp=
ort</span> mysql.connector
<span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-keyw=
ord">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk, messagebox
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> PhotoImage, Label
<span class=3D"hljs-keyword">import</span> random
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, current_user</span>=
):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"750x530"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=
 =ED=82=A4=EC=9A=B0=EA=B8=B0 =EA=B2=8C=EC=9E=84"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">'#48B8FA'</span>)  =
<span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=84=A4=EC=A0=
=95</span>

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D <span class=3D"hljs-number">4</span>
        self.setup_game_variables()
        <span class=3D"hljs-comment"># self.setup_button_style()</span>
        self.setup_ui()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> mysql.connector.connect(
            host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com"</span>,
            user=3D<span class=3D"hljs-string">"admin"</span>,
            password=3D<span class=3D"hljs-string">"seat0323"</span>,
            database=3D<span class=3D"hljs-string">"wordbook"</span>
        )

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_game_variables</span>(<span class=3D"hljs-params">self</span>):
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image(<span class=3D"hljs-string">=
"=EC=88=98=EB=AD=89=EC=9D=B4=EC=A0=95=EB=8B=B5=EC=9A=A9.png"</span>, (<span=
 class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.incorrect_image =3D self.load_image(<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png"</span>, (<sp=
an class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>))
        self.info_image =3D self.load_image(<span class=3D"hljs-string">"=
=EA=B2=8C=EC=9E=84=EC=A0=95=EB=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png"</span>=
, (<span class=3D"hljs-number">275</span>, <span class=3D"hljs-number">181<=
/span>))  <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=
=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B6=94=EA=B0=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_entry_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'default'</span>)  <spa=
n class=3D"hljs-comment"># =EA=B8=B0=EB=B3=B8 =ED=85=8C=EB=A7=88 =EC=82=AC=
=EC=9A=A9</span>
        style.configure(<span class=3D"hljs-string">'Rounded.TEntry'</span>=
, padding=3D<span class=3D"hljs-number">6</span>, relief=3D<span class=3D"h=
ljs-string">'flat'</span>, background=3D<span class=3D"hljs-string">"#fffff=
f"</span>)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_button_style</span>(<span class=3D"hljs-params">self</span>):
        style =3D ttk.Style()
        style.theme_use(<span class=3D"hljs-string">'clam'</span>)
        style.configure(<span class=3D"hljs-string">'My.TButton'</span>, fo=
nt=3D(<span class=3D"hljs-string">'Arial-BoldMT'</span>, <span class=3D"hlj=
s-number">14</span>), borderwidth=3D<span class=3D"hljs-string">'4'</span>,=
 foreground=3D<span class=3D"hljs-string">'white'</span>, background=3D<spa=
n class=3D"hljs-string">'#0096c7'</span>)
        style.<span class=3D"hljs-built_in">map</span>(<span class=3D"hljs-=
string">'My.TButton'</span>,
                  foreground=3D[(<span class=3D"hljs-string">'active'</span=
>, <span class=3D"hljs-string">'white'</span>)],
                  background=3D[(<span class=3D"hljs-string">'active'</span=
>, <span class=3D"hljs-string">'#005f73'</span>)])

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_ui</span>(<span class=3D"hljs-params">self</span>):
        self.back_button =3D self.create_image_button(<span class=3D"hljs-s=
tring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,=
 <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=
=EB=B2=84.png"</span>, <span class=3D"hljs-keyword">lambda</span>: Util.Swi=
tchPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.curre=
nt_user), <span class=3D"hljs-number">50</span>, <span class=3D"hljs-number=
">30</span>)
        self.back_button.place(x=3D<span class=3D"hljs-number">10</span>, y=
=3D<span class=3D"hljs-number">10</span>)
       =20
        <span class=3D"hljs-comment"># =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=
=9C=EC=9C=84 =EB=9D=BC=EB=B2=A8=EA=B3=BC =ED=94=84=EB=A0=88=EC=9E=84 =EC=9C=
=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.leaderboard_label =3D tk.Label(self, text=3D<span class=3D"hlj=
s-string">"=ED=98=84=EC=9E=AC =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=
=84"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</spa=
n>), bg=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-=
string">'#48B8FA'</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.display_leaderboard()
       =20
        <span class=3D"hljs-comment"># =EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=
=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.image_label =3D Label(self, image=3Dself.images[self.level], b=
g=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.image_label.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=
=91 =EB=B2=84=ED=8A=BC =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.button_start =3D self.create_image_button(<span class=3D"hljs-=
string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png"</span>=
, <span class=3D"hljs-string">"=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91=ED=98=
=B8=EB=B2=84.png"</span>, self.start_game, <span class=3D"hljs-number">90</=
span>, <span class=3D"hljs-number">40</span>)
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
       =20
        <span class=3D"hljs-comment"># =EB=AC=B8=EC=A0=9C =EB=9D=BC=EB=B2=
=A8=EC=9D=84 word_frame =EC=99=B8=EB=B6=80=EB=A1=9C =EC=9D=B4=EB=8F=99</spa=
n>
        self.label_word =3D tk.Label(self, text=3D<span class=3D"hljs-strin=
g">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <s=
pan class=3D"hljs-number">20</span>), bg=3D<span class=3D"hljs-string">'#48=
B8FA'</span>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
       =20
        <span class=3D"hljs-comment"># =EB=AC=B8=EC=A0=9C=EC=99=80 =EC=9E=
=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=
=94 =ED=94=84=EB=A0=88=EC=9E=84 =EC=83=9D=EC=84=B1</span>
        self.word_frame =3D tk.Frame(self, bg=3D<span class=3D"hljs-string"=
>'#48B8FA'</span>)
        self.word_frame.place_forget()  <span class=3D"hljs-comment"># =EA=
=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EC=A0=84=EC=97=90=EB=8A=94 =EC=88=A8=EA=
=B9=80</span>

        <span class=3D"hljs-comment"># =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=
=9C</span>
        self.entry_answer =3D ttk.Entry(self.word_frame, font=3D(<span clas=
s=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">20</sp=
an>), style=3D<span class=3D"hljs-string">'Rounded.TEntry'</span>)
        self.entry_answer.pack(pady=3D<span class=3D"hljs-number">10</span>=
)
        self.entry_answer.bind(<span class=3D"hljs-string">"&lt;Return&gt;"=
</span>, self.check_answer)
       =20
        self.label_status =3D tk.Label(self, text=3D<span class=3D"hljs-str=
ing">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, =
<span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</=
span>), bg=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.label_status.place_forget()

        self.label_timer =3D tk.Label(self, text=3D<span class=3D"hljs-stri=
ng">""</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <=
span class=3D"hljs-number">16</span>, <span class=3D"hljs-string">"bold"</s=
pan>), bg=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.label_timer.place_forget()
       =20
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=
=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1</span=
>
        self.label_info_image =3D Label(self, image=3Dself.info_image, bg=
=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.label_info_image.place_forget()  <span class=3D"hljs-comment">=
# =EC=B4=88=EA=B8=B0=EC=97=90=EB=8A=94 =EC=88=A8=EA=B9=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_images</span>(<span class=3D"hljs-params">self</span>):
        image_paths =3D {
            <span class=3D"hljs-number">1</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B41.png"</span>,
            <span class=3D"hljs-number">2</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B42.png"</span>,
            <span class=3D"hljs-number">3</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B43.png"</span>,
            <span class=3D"hljs-number">4</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B44.png"</span>,
            <span class=3D"hljs-number">5</span>: <span class=3D"hljs-strin=
g">"=EC=88=98=EB=AD=89=EC=9D=B45.png"</span>
        }
        <span class=3D"hljs-keyword">return</span> {level: self.load_image(=
path, (<span class=3D"hljs-number">180</span>, <span class=3D"hljs-number">=
180</span>)) <span class=3D"hljs-keyword">for</span> level, path <span clas=
s=3D"hljs-keyword">in</span> image_paths.items()}

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">load_image</span>(<span class=3D"hljs-params">self, path, size</span>=
):
        image =3D Image.<span class=3D"hljs-built_in">open</span>(path)
        <span class=3D"hljs-keyword">return</span> ImageTk.PhotoImage(image=
.resize(size, Image.Resampling.LANCZOS))

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">create_image_button</span>(<span class=3D"hljs-params">self, normal_i=
mage_path, hover_image_path, command, width, height</span>):
        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=
=9C=EB=93=9C =EB=B0=8F =EB=A6=AC=EC=82=AC=EC=9D=B4=EC=A7=95</span>
        normal_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built=
_in">open</span>(normal_image_path).resize((width, height), Image.Resamplin=
g.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(Image.<span class=3D"hljs-built_=
in">open</span>(hover_image_path).resize((width, height), Image.Resampling.=
LANCZOS))
        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =EC=83=9D=EC=84=
=B1</span>
        button =3D tk.Button(self, image=3Dnormal_image, command=3Dcommand,=
 borderwidth=3D<span class=3D"hljs-number">0</span>, bg=3D<span class=3D"hl=
js-string">'#48B8FA'</span>)
        button.image =3D normal_image  <span class=3D"hljs-comment"># =EC=
=9D=B4=EB=AF=B8=EC=A7=80 =EC=B0=B8=EC=A1=B0 =EB=B3=B4=EA=B4=80</span>
        button.bind(<span class=3D"hljs-string">"&lt;Enter&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dhover_imag=
e))
        button.bind(<span class=3D"hljs-string">"&lt;Leave&gt;"</span>, <sp=
an class=3D"hljs-keyword">lambda</span> e: button.config(image=3Dnormal_ima=
ge))
        <span class=3D"hljs-keyword">return</span> button

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">fetch_word</span>(<span class=3D"hljs-params">self</span>):
        self.cursor.execute(<span class=3D"hljs-string">"SELECT Spell, Mean=
 FROM toeicword ORDER BY RAND() LIMIT 1"</span>)
        <span class=3D"hljs-keyword">return</span> self.cursor.fetchone()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">check_answer</span>(<span class=3D"hljs-params">self, event=3D<span c=
lass=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>
        answer =3D self.entry_answer.get().lower().strip()
        <span class=3D"hljs-keyword">if</span> answer =3D=3D self.current_w=
ord:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=A0=
=95=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"green"</span>, self.correct_image)
            self.current_score +=3D <span class=3D"hljs-number">10</span>
            self.level_up()
        <span class=3D"hljs-keyword">else</span>:
            self.show_transparent_popup(<span class=3D"hljs-string">"=EC=98=
=A4=EB=8B=B5=EC=9E=85=EB=8B=88=EB=8B=A4!"</span>, <span class=3D"hljs-strin=
g">"red"</span>, self.incorrect_image)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.next_word()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">start_game</span>(<span class=3D"hljs-params">self</span>):
        self.game_active =3D <span class=3D"hljs-literal">True</span>
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.next_word()
        self.entry_answer.focus_set()
       =20
        <span class=3D"hljs-comment"># =EC=A0=90=EC=88=98=EC=99=80 =EB=A0=
=88=EB=B2=A8=EC=9D=84 =ED=91=9C=EC=8B=9C=ED=95=98=EB=8A=94 =EB=9D=BC=EB=B2=
=A8=EC=9D=98 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=
=B4=ED=8A=B8=ED=95=98=EA=B3=A0 =ED=99=94=EB=A9=B4=EC=97=90 =ED=91=9C=EC=8B=
=9C</span>
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.label_status.place(x=3D<span class=3D"hljs-number">295</span>,=
 y=3D<span class=3D"hljs-number">375</span>)  <span class=3D"hljs-comment">=
# =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
       =20
        <span class=3D"hljs-comment"># =EC=88=A8=EA=B2=A8=EC=A7=84 =EC=9A=
=94=EC=86=8C=EB=93=A4 =EB=B3=B4=EC=9D=B4=EA=B8=B0</span>
        self.word_frame.place(relx=3D<span class=3D"hljs-number">0.5</span>=
, rely=3D<span class=3D"hljs-number">0.6</span>, anchor=3D<span class=3D"hl=
js-string">"center"</span>)  <span class=3D"hljs-comment"># =EC=A4=91=EC=95=
=99=EC=97=90 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)
        self.label_timer.place(x=3D<span class=3D"hljs-number">300</span>, =
y=3D<span class=3D"hljs-number">400</span>)  <span class=3D"hljs-comment">#=
 =EC=83=81=ED=83=9C =EC=A0=95=EB=B3=B4=EB=A5=BC =EC=9C=84=EC=B9=98 =EC=A1=
=B0=EC=A0=95</span>
        self.label_info_image.place(x=3D<span class=3D"hljs-number">280</sp=
an>, y=3D<span class=3D"hljs-number">360</span>)  <span class=3D"hljs-comme=
nt"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=
=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95</span>

        <span class=3D"hljs-comment"># =EB=A0=88=EB=B2=A8=EA=B3=BC =ED=83=
=80=EC=9D=B4=EB=A8=B8=EB=A5=BC info image =EC=9C=84=EB=A1=9C =EB=B3=B4=EC=
=9D=B4=EB=8F=84=EB=A1=9D =EC=84=A4=EC=A0=95</span>
        self.label_status.tkraise()
        self.label_timer.tkraise()

        <span class=3D"hljs-comment"># =EC=8B=9C=EC=9E=91 =EC=8B=9C =EC=88=
=A8=EA=B9=80 =EC=B2=98=EB=A6=AC=EB=90=98=EC=97=88=EB=8D=98 =EC=9A=94=EC=86=
=8C=EB=93=A4 =EB=B3=B4=EC=9D=B4=EA=B8=B0</span>
        self.button_start.place_forget()
        self.leaderboard_label.place_forget()
        self.leaderboard_frame.place_forget()
       =20
        self.update_timer()  <span class=3D"hljs-comment"># =ED=83=80=EC=9D=
=B4=EB=A8=B8 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8 =EC=8B=9C=EC=9E=91</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">next_word</span>(<span class=3D"hljs-params">self</span>):
        self.current_word, self.current_meaning =3D self.fetch_word()
        self.label_word.config(text=3Dself.current_meaning)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">display_leaderboard</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
=EB=A5=BC =EA=B0=B1=EC=8B=A0=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"=
""</span>
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =ED=94=84=EB=A0=88=EC=9E=84 =EB=82=B4=EC=9D=98 =EB=AA=A8=EB=93=A0 =EC=9C=
=84=EC=A0=AF=EC=9D=84 =EC=A0=9C=EA=B1=B0</span>
        <span class=3D"hljs-keyword">for</span> widget <span class=3D"hljs-=
keyword">in</span> self.leaderboard_frame.winfo_children():
            widget.destroy()
        <span class=3D"hljs-comment"># =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EC=83=81=EC=9C=84 3=EB=AA=85=EC=9D=98=
 =EC=82=AC=EC=9A=A9=EC=9E=90 =EC=A0=95=EB=B3=B4=EB=A5=BC =EB=8B=A4=EC=8B=9C=
 =EC=A1=B0=ED=9A=8C</span>
        self.cursor.execute(<span class=3D"hljs-string">"SELECT id, highsco=
re FROM user ORDER BY highscore DESC LIMIT 3"</span>)
        rows =3D self.cursor.fetchall()
        <span class=3D"hljs-keyword">for</span> idx, (user_id, score) <span=
 class=3D"hljs-keyword">in</span> <span class=3D"hljs-built_in">enumerate</=
span>(rows, start=3D<span class=3D"hljs-number">1</span>):
            tk.Label(self.leaderboard_frame, text=3D<span class=3D"hljs-str=
ing">f"<span class=3D"hljs-subst">{idx}</span>=EB=93=B1: <span class=3D"hlj=
s-subst">{user_id}</span> - <span class=3D"hljs-subst">{score}</span>=EC=A0=
=90"</span>, font=3D(<span class=3D"hljs-string">"Arial-BoldMT"</span>, <sp=
an class=3D"hljs-number">14</span>), bg=3D<span class=3D"hljs-string">'#48B=
8FA'</span>).pack()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">show_transparent_popup</span>(<span class=3D"hljs-params">self, messa=
ge, color, image</span>):
        popup =3D tk.Toplevel(self)
        popup.overrideredirect(<span class=3D"hljs-literal">True</span>)  <=
span class=3D"hljs-comment"># =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=85=8C=EB=91=
=90=EB=A6=AC=EC=99=80 =EC=A0=9C=EB=AA=A9 =ED=91=9C=EC=8B=9C=EC=A4=84 =EC=A0=
=9C=EA=B1=B0</span>
        popup.geometry(<span class=3D"hljs-string">"200x80+{}+{}"</span>.<s=
pan class=3D"hljs-built_in">format</span>(self.winfo_x() + <span class=3D"h=
ljs-number">280</span>, self.winfo_y() + <span class=3D"hljs-number">100</s=
pan>))
        popup.attributes(<span class=3D"hljs-string">'-alpha'</span>, <span=
 class=3D"hljs-number">0.7</span>)  <span class=3D"hljs-comment"># =EC=9C=
=88=EB=8F=84=EC=9A=B0 =ED=88=AC=EB=AA=85=EB=8F=84 =EC=84=A4=EC=A0=95 (70%)<=
/span>

        <span class=3D"hljs-comment"># =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80=
 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =
=EB=A0=88=EC=9D=B4=EB=B8=94 =EC=83=9D=EC=84=B1</span>
        <span class=3D"hljs-keyword">if</span> image:
            label_image =3D tk.Label(popup, image=3Dimage, bg=3D<span class=
=3D"hljs-string">'#48B8FA'</span>)
            label_image.pack(side=3D<span class=3D"hljs-string">'top'</span=
>)
       =20
        popup_label =3D tk.Label(popup, text=3Dmessage, font=3D(<span class=
=3D"hljs-string">"Arial-BoldMT"</span>, <span class=3D"hljs-number">16</spa=
n>), fg=3Dcolor, bg=3D<span class=3D"hljs-string">"white"</span>)
        popup_label.pack(expand=3D<span class=3D"hljs-literal">True</span>,=
 fill=3D<span class=3D"hljs-string">'both'</span>)
        <span class=3D"hljs-comment"># =ED=8C=9D=EC=97=85=EC=9D=84 700ms =
=ED=9B=84=EC=97=90 =EC=9E=90=EB=8F=99=EC=9C=BC=EB=A1=9C =EB=8B=AB=EA=B8=B0<=
/span>
        popup.after(<span class=3D"hljs-number">700</span>, popup.destroy)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">level_up</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> self.level &lt;=3D <span cla=
ss=3D"hljs-number">4</span> <span class=3D"hljs-keyword">and</span> self.cu=
rrent_score % <span class=3D"hljs-number">10</span> =3D=3D <span class=3D"h=
ljs-number">0</span>:
            self.level +=3D <span class=3D"hljs-number">1</span>
        self.label_status.config(text=3D<span class=3D"hljs-string">f"=EB=
=A0=88=EB=B2=A8: <span class=3D"hljs-subst">{self.level}</span>, =EC=A0=90=
=EC=88=98: <span class=3D"hljs-subst">{self.current_score}</span>"</span>)
        self.image_label.config(image=3Dself.images[self.level])
   =20
    <span class=3D"hljs-comment"># =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98 =
=EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_high_score</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98=
 =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98=EB=A5=BC =EB=8D=B0=EC=9D=B4=ED=84=B0=
=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=
=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""</span>
        query =3D <span class=3D"hljs-string">"UPDATE user SET highscore =
=3D %s WHERE id =3D %s AND highscore &lt; %s"</span>
        <span class=3D"hljs-keyword">try</span>:
            self.cursor.execute(query, (self.current_score, self.current_us=
er, self.current_score))
            self.db.commit()
        <span class=3D"hljs-keyword">except</span> mysql.connector.Error <s=
pan class=3D"hljs-keyword">as</span> err:
            self.db.rollback()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">update_timer</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">if</span> <span class=3D"hljs-keyword"=
>not</span> self.game_active:
            <span class=3D"hljs-keyword">return</span>  <span class=3D"hljs=
-comment"># =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=B9=84=ED=99=9C=EC=84=B1=ED=99=
=94 =EC=83=81=ED=83=9C=EB=A9=B4 =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=85=EB=8D=
=B0=EC=9D=B4=ED=8A=B8 =EC=A4=91=EB=8B=A8</span>
        elapsed_time =3D <span class=3D"hljs-built_in">int</span>(time.time=
() - self.start_time)
        remaining_time =3D self.game_duration - elapsed_time
        self.label_timer.config(text=3D<span class=3D"hljs-string">f"=EB=82=
=A8=EC=9D=80 =EC=8B=9C=EA=B0=84: <span class=3D"hljs-subst">{remaining_time=
}</span>=EC=B4=88"</span>)
        <span class=3D"hljs-keyword">if</span> remaining_time &gt; <span cl=
ass=3D"hljs-number">0</span>:
            self.after(<span class=3D"hljs-number">1000</span>, self.update=
_timer)  <span class=3D"hljs-comment"># 1=EC=B4=88 =ED=9B=84 =EB=8B=A4=EC=
=8B=9C =EC=9D=B4 =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =ED=98=B8=EC=B6=9C</s=
pan>
        <span class=3D"hljs-keyword">else</span>:
            messagebox.showinfo(<span class=3D"hljs-string">"=EA=B2=8C=EC=
=9E=84 =EC=A2=85=EB=A3=8C"</span>, <span class=3D"hljs-string">"=EA=B2=8C=
=EC=9E=84=EC=9D=B4 =EC=A2=85=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4"</span>)
            self.update_high_score()
            messagebox.showinfo(<span class=3D"hljs-string">"=EA=B2=8C=EC=
=9E=84 =EC=A2=85=EB=A3=8C"</span>, <span class=3D"hljs-string">f"=EC=B5=9C=
=EC=A2=85 =EC=A0=90=EC=88=98: <span class=3D"hljs-subst">{self.current_scor=
e}</span>"</span>)
            self.reset_game()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">reset_game</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-string">"""=EA=B2=8C=EC=9E=84=EC=9D=84 =EB=A6=
=AC=EC=85=8B=ED=95=98=EA=B3=A0 =EC=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=9D=
=84 =EC=A4=80=EB=B9=84=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""</sp=
an>
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.update_high_score()  <span class=3D"hljs-comment"># =EA=B2=8C=
=EC=9E=84=EC=9D=B4 =EB=81=9D=EB=82=98=EB=A9=B4 =EC=A0=90=EC=88=98 =EC=97=85=
=EB=8D=B0=EC=9D=B4=ED=8A=B8</span>
        self.display_leaderboard()  <span class=3D"hljs-comment"># =EB=8D=
=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EA=B0=
=B1=EC=8B=A0=EB=90=9C =EC=88=9C=EC=9C=84=EB=A1=9C =EB=A6=AC=EB=8D=94=EB=B3=
=B4=EB=93=9C =EA=B0=B1=EC=8B=A0</span>
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.label_word.config(text=3D<span class=3D"hljs-string">"=EB=8B=
=A4=EC=8B=9C =EC=8B=9C=EC=9E=91=ED=95=98=EB=A0=A4=EB=A9=B4 =EA=B2=8C=EC=9E=
=84 =EC=8B=9C=EC=9E=91=EC=9D=84 =EB=88=84=EB=A5=B4=EC=84=B8=EC=9A=94"</span=
>)
        self.label_word.pack(pady=3D<span class=3D"hljs-number">5</span>)  =
<span class=3D"hljs-comment"># =EB=8B=A4=EC=8B=9C =ED=99=94=EB=A9=B4=EC=97=
=90 =ED=91=9C=EC=8B=9C</span>
        self.label_status.place_forget()
        self.label_timer.config(text=3D<span class=3D"hljs-string">""</span=
>)
        self.entry_answer.delete(<span class=3D"hljs-number">0</span>, tk.E=
ND)
        self.word_frame.place_forget()  <span class=3D"hljs-comment"># =EC=
=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=97=90=EC=84=9C=EB=8A=94 =EC=9E=85=EB=
=A0=A5 =ED=95=84=EB=93=9C=EB=A5=BC =EC=88=A8=EA=B9=80</span>
        self.label_info_image.place_forget()  <span class=3D"hljs-comment">=
# =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=88=
=A8=EA=B9=80</span>
        <span class=3D"hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=
=91 =EB=B2=84=ED=8A=BC=EC=9D=84 =EB=8B=A4=EC=8B=9C =ED=91=9C=EC=8B=9C</span=
>
        self.button_start.place(x=3D<span class=3D"hljs-number">325</span>,=
 y=3D<span class=3D"hljs-number">280</span>)
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =ED=94=84=EB=A0=88=EC=9E=84=EA=B3=BC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EB=8B=A4=
=EC=8B=9C =EB=B0=B0=EC=B9=98</span>
        self.leaderboard_label.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">370</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        self.leaderboard_frame.place(x=3D<span class=3D"hljs-number">375</s=
pan>, y=3D<span class=3D"hljs-number">425</span>, anchor=3D<span class=3D"h=
ljs-string">"center"</span>)
        <span class=3D"hljs-comment"># =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=
 =EB=82=B4=EC=9A=A9=EC=9D=84 =EA=B0=B1=EC=8B=A0</span>
        self.display_leaderboard()
        self.image_label.config(image=3Dself.images[self.level])

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    current_user =3D sys.argv[<span class=3D"hljs-number">1</span>] <span c=
lass=3D"hljs-keyword">if</span> <span class=3D"hljs-built_in">len</span>(sy=
s.argv) &gt; <span class=3D"hljs-number">1</span> <span class=3D"hljs-keywo=
rd">else</span> <span class=3D"hljs-string">'default_user'</span>
    app =3D GameApp(current_user)
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=BD=94=EB=93=9C=EC=97=90=EC=84=9C=
=EB=8A=94 <code>self.back_button</code>, <code>self.leaderboard_label</code=
>, <code>self.leaderboard_frame</code>, <code>self.image_label</code>, <cod=
e>self.label_word</code>, <code>self.word_frame</code>, <code>self.label_st=
atus</code>, <code>self.label_timer</code>, <code>self.label_info_image</co=
de>=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 <code>#48B8FA</code>=EB=A1=9C =EC=
=84=A4=EC=A0=95=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=9D=B4 =EC=83=89=EC=
=83=81=EC=9D=80 =EC=9D=B4=EC=A0=84=EA=B3=BC =EB=8F=99=EC=9D=BC=ED=95=98=EA=
=B2=8C =EC=9E=85=EB=A0=A5=EB=90=9C =EB=AA=A8=EB=93=A0 =EC=9A=94=EC=86=8C=EC=
=97=90 =EC=A0=81=EC=9A=A9=EB=90=A9=EB=8B=88=EB=8B=A4.</p></div></div></div>=
</div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div class=3D=
"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-main-surface=
-primary md:absolute md:border md:border-token-border-light md:hidden"><div=
 class=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button=
 class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface-=
secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cente=
r"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D=
"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 =
10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8.00005H4C=
3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6C6.25019 =
16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527 11 19.52=
52 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 13 4.9099V=
19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.34315 18 1=
 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L8.81069 3=
.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.75833C22.5=
191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418 15.5974 =
21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19.8927 17.=
2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.5175 20.999=
6 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 7.22726 1=
9.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8679 7.657=
89 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001C18.4996 =
13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16.1511 16.=
0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.2298 13.7564=
 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 15.6004 9.=
30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"currentColo=
r"></path></svg></span></button></span><span class=3D"" data-state=3D"close=
d"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-mai=
n-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center jus=
tify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=
=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"><path f=
ill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 =
0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3=
h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1z=
M5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-=
rule=3D"evenodd"></path></svg></span></button></span><div class=3D"flex"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token=
-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex =
h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.4=
267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.93=
226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.207=
28 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.00=
45 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 =
15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.3663=
7 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.32=
185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.960=
28 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L1=
3.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.=
44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.=
8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.55=
68 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></butt=
on></span></div><span class=3D"" data-state=3D"closed"><button type=3D"butt=
on" id=3D"radix-:r2f8:" aria-haspopup=3D"menu" aria-expanded=3D"false" data=
-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-s=
econdary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex=
 items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_sv=
g]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"cur=
rentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.=
305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.3=
17.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-=
2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792=
-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"curre=
ntColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.14=
6 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.09=
4-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248=
-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.=
002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.1=
18A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 =
1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.=
094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.2=
1-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path>=
</svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; paddi=
ng-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 =
0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=
=3D"evenodd"></path></svg></div></button></span></div></div></div><div clas=
s=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"w-full=
 text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-144=
" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text=
-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex fl=
ex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D=
"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"user"=
 data-message-id=3D"aaa24309-dbb3-4905-93e9-3944ffcae362" dir=3D"auto" clas=
s=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre-wra=
p break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overf=
low-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidd=
en items-end rtl:items-start"><div class=3D"relative max-w-[70%] rounded-3x=
l bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">=EC=9E=A0=
=EC=8B=9C =EC=BD=94=EB=93=9C =EB=B3=B4=EB=82=B4=EC=A7=80=EB=A7=90=EA=B3=A0 =
=EC=9D=B4=EC=95=BC=EA=B8=B0=ED=95=B4=EB=B3=B4=EC=9E=90, =EB=82=B4=EA=B0=80 =
=EC=84=A4=EC=A0=95=ED=95=9C =EB=B0=B0=EA=B2=BD=EC=9E=88=EC=9E=96=EC=95=84, =
=EB=8B=A4=EB=A5=B8 =EC=9A=94=EC=86=8C=EB=93=A4 =EB=B0=B0=EA=B2=BD=EB=B3=B4=
=EB=8B=A4 =EC=9C=84=EB=A1=9C =EA=B0=80=EB=8A=94=EB=8D=B0 =EC=9A=94=EC=86=8C=
 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=82=98 =EB=B2=84=ED=8A=BC=EA=B0=99=EC=9D=80=
=EA=B1=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9C=84=EB=A1=9C =EA=B0=80=EA=B2=8C =
=EA=B0=80=EB=8A=A5=ED=95=B4?<div class=3D"absolute bottom-0 right-full top-=
0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=
=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items-center just=
ify-center rounded-full text-token-text-secondary transition hover:bg-token=
-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"=
24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><pa=
th fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.5=
36 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 =
0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 =
0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.1=
72L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"=
></path></svg></button></span></div></div></div></div></div></div></div></d=
iv></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" d=
ata-testid=3D"conversation-turn-145" data-scroll-anchor=3D"false"><div clas=
s=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:=
px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:m=
d:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-=
shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:=
pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-cent=
er overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative=
 p-1 rounded-sm flex items-center justify-center bg-token-main-surface-prim=
ary text-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBo=
x=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div cl=
ass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w=
-full"><div data-message-author-role=3D"assistant" data-message-id=3D"e4c5b=
a15-717a-4fba-aed6-116bb4ceeb4f" dir=3D"auto" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start whitespace-pre-wrap break-words [.text-mess=
age+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div cl=
ass=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]">=
<div class=3D"markdown prose w-full break-words dark:prose-invert light"><p=
>=EB=84=A4, =EA=B0=80=EB=8A=A5=ED=95=A9=EB=8B=88=EB=8B=A4. Tkinter=EC=97=90=
=EC=84=9C=EB=8A=94 =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=84=9C=EB=A1=9C =EA=B2=B9=
=EC=B9=98=EA=B2=8C =EB=B0=B0=EC=B9=98=ED=95=A0 =EB=95=8C, =EA=B0=81 =EC=9C=
=84=EC=A0=AF=EC=9D=98 =EB=B0=B0=EC=B9=98 =EC=88=9C=EC=84=9C=EB=A5=BC =EC=A1=
=B0=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EC=
=9D=B4=EB=A5=BC =ED=86=B5=ED=95=B4 =ED=8A=B9=EC=A0=95 =EC=9A=94=EC=86=8C=EB=
=A5=BC =EB=8B=A4=EB=A5=B8 =EC=9A=94=EC=86=8C=EC=9D=98 =EC=9C=84=EB=A1=9C =
=EB=B0=B0=EC=B9=98=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.=
</p><p>=EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=EA=B2=BD=EC=9D=84 =EC=84=A4=EC=
=A0=95=ED=95=98=EA=B3=A0 =EA=B7=B8 =EC=9C=84=EC=97=90 =EB=8B=A4=EB=A5=B8 =
=EC=9A=94=EC=86=8C=EB=93=A4(=EC=9D=B4=EB=AF=B8=EC=A7=80, =EB=B2=84=ED=8A=BC=
 =EB=93=B1)=EC=9D=84 =EC=98=AC=EB=A6=AC=EB=A0=A4=EB=A9=B4 <code>tkraise()</=
code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC =EC=9C=84=EC=A0=AF=EC=9D=98 Z-=EC=88=9C=EC=84=9C=EB=A5=BC =EC=A1=B0=
=EC=A0=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><p>=
=EC=98=88=EB=A5=BC =EB=93=A4=EC=96=B4, =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=
=99=EC=9D=B4 =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EC=84=
=A4=EC=A0=95=ED=95=98=EA=B3=A0 =EA=B7=B8 =EC=9C=84=EC=97=90 =EB=8B=A4=EB=A5=
=B8 =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=84 =EB=B0=B0=EC=B9=98=ED=95=9C =ED=9B=
=84, <code>tkraise()</code>=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =
=EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=84 =EB=B0=B0=EA=B2=BD =EC=9C=84=EB=A1=9C =
=EC=98=AC=EB=A6=B4 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4:</p><pre>=
<div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-borde=
r-medium"><div class=3D"flex items-center relative text-token-text-secondar=
y bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-betwe=
en rounded-t-md"><span>python</span><div class=3D"flex items-center"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center">=
<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=
=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColo=
r" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 =
1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 =
1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1=
v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"><=
/path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></di=
v><div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code =
class=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword"=
>import</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>ExampleApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.title(<span class=3D"hljs-string">"Example App"</span>)
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EC=84=A4=EC=A0=95</span>
        self.background_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(<span class=3D"hljs-string">"background.jpg"</span>)
        self.background_photo =3D ImageTk.PhotoImage(self.background_image)
        self.background_label =3D tk.Label(self, image=3Dself.background_ph=
oto)
        self.background_label.place(x=3D<span class=3D"hljs-number">0</span=
>, y=3D<span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs=
-number">1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        <span class=3D"hljs-comment"># =EB=8B=A4=EB=A5=B8 =EC=9A=94=EC=86=
=8C=EB=93=A4 =EC=84=A4=EC=A0=95</span>
        self.button =3D tk.Button(self, text=3D<span class=3D"hljs-string">=
"Button"</span>)
        self.button.place(x=3D<span class=3D"hljs-number">100</span>, y=3D<=
span class=3D"hljs-number">100</span>)

        self.label =3D tk.Label(self, text=3D<span class=3D"hljs-string">"L=
abel"</span>)
        self.label.place(x=3D<span class=3D"hljs-number">200</span>, y=3D<s=
pan class=3D"hljs-number">200</span>)

        <span class=3D"hljs-comment"># =EC=9A=94=EC=86=8C=EB=93=A4=EC=9D=84=
 =EB=B0=B0=EA=B2=BD =EC=9C=84=EB=A1=9C =EC=98=AC=EB=A6=AC=EA=B8=B0</span>
        self.button.tkraise()
        self.label.tkraise()

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D ExampleApp()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=98=88=EC=A0=9C=EC=97=90=EC=84=9C =
<code>background_label</code>=EC=9D=80 =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80=EB=A5=BC =ED=91=9C=EC=8B=9C=ED=95=98=EB=A9=B0, <code>button</c=
ode>=EA=B3=BC <code>label</code>=EC=9D=80 <code>tkraise()</code>=EB=A5=BC =
=EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=
=EC=A7=80 =EC=9C=84=EB=A1=9C =EC=98=AC=EB=A0=A4=EC=A7=91=EB=8B=88=EB=8B=A4.=
</p><p>=EC=9D=B4 =EB=B0=A9=EB=B2=95=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=
=97=AC, <code>self.background_label</code>=EC=9D=84 =EB=8B=A4=EB=A5=B8 =EC=
=9A=94=EC=86=8C=EB=93=A4=EB=B3=B4=EB=8B=A4 =EB=A8=BC=EC=A0=80 =EB=B0=B0=EC=
=B9=98=ED=95=9C</p></div></div></div></div><div class=3D"mt-1 flex gap-3 em=
pty:hidden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl=
 p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:bord=
er-token-border-light md:hidden"><div class=3D"flex items-center"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-s=
econdary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px=
] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129=
 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15=
C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.=
1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C=
10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81=
069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.3431=
5 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.0931=
3 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.=
0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.869=
5 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C2=
0.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98=
627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.799=
4 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.=
4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.560=
4C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 1=
4.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.49=
96 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 =
15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span=
><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-to=
ken-text-secondary hover:bg-token-main-surface-secondary"><span class=3D"fl=
ex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-=
3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1=
-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 =
1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></=
button></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-sur=
face-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-=
center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 =
11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.=
1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9=
.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 =
2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.004=
5C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29=
589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.74=
6 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9=
.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.50=
02 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 =
13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5=
C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.4477=
2 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curr=
entColor"></path></svg></span></button></span></div><span class=3D"" data-s=
tate=3D"closed"><button type=3D"button" id=3D"radix-:r2fg:" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-poi=
nter rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main=
-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div=
 class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0=
-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0=
 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4=
 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.=
4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.9=
41-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .9=
93.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 =
0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-=
2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.=
347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118=
-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.23=
4.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.=
223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-=
2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891=
.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-=
1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><s=
vg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"=
none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><p=
ath fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1=
 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0=
l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button>=
</span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" da=
ta-testid=3D"conversation-turn-146" data-scroll-anchor=3D"false"><div class=
=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:p=
x-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md=
:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/=
conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex=
-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div=
 data-message-author-role=3D"user" data-message-id=3D"aaa29875-0288-4529-ab=
cf-bfc842135ed2" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-=
col items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-fu=
ll flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token=
-main-surface-secondary">=EA=B7=B8=EB=9F=AC=EB=8B=88=EA=B9=90 =EC=9D=B4=EC=
=A0=9C =EC=98=88=EB=A5=BC=EB=93=A4=EC=96=B4 =EB=82=B4=EA=B0=80 =EC=96=B4=EB=
=96=A4 =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC =EB=B0=B0=EA=B2=BD=EC=9C=BC=EB=
=A1=9C =EC=93=B0=EA=B3=A0 =EC=9E=88=EB=8A=94=EB=8D=B0, =ED=95=9C =EB=B2=84=
=ED=8A=BC=EC=9D=B4 =EC=9E=88=EB=8B=A4=EA=B3=A0 =ED=95=B4=EB=B3=B4=EC=9E=90?=
 =EB=B2=84=ED=8A=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=B4 =EC=9E=88=EA=B3=A0=
 =EA=B7=B8 =EB=B2=84=ED=8A=BC=EC=9D=98 =EA=B0=9D=EC=B2=B4=EA=B0=80 =EC=9E=
=88=EC=9D=84=EA=B1=B0 =EC=95=84=EB=8B=88=EC=95=BC? =EB=B0=B0=EA=B2=BD=EC=9D=
=80 =EC=9D=B4=EC=A0=9C =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=B3=B4=EB=8B=A4 =EC=95=
=84=EB=9E=98=EC=97=90 =EA=B9=94=EB=A6=AC=EB=8A=94=EB=8D=B0 =EA=B0=9D=EC=B2=
=B4=EB=A7=8C =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EB=A1=9C =EB=B3=B4=EC=9D=
=B4=EA=B2=8C =EB=AA=BB=ED=95=98=EB=83=90=EA=B3=A0 =EB=AC=BC=EC=96=B4=EB=B3=
=B8=EA=B1=B0=EC=95=BC<div class=3D"absolute bottom-0 right-full top-0 -mr-3=
.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"><span class=3D"" d=
ata-state=3D"closed"><button class=3D"flex h-9 w-9 items-center justify-cen=
ter rounded-full text-token-text-secondary transition hover:bg-token-main-s=
urface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" hei=
ght=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md"><path fill=
=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.293a4.536 4.536 0 1 =
1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.1=
5-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.=
838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.4=
14 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=3D"evenodd"></path=
></svg></button></span></div></div></div></div></div></div></div></div></di=
v></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-tes=
tid=3D"conversation-turn-147" data-scroll-anchor=3D"false"><div class=3D"py=
-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><=
div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6=
 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"flex-shrink-=
0 flex flex-col relative items-end"><div><div class=3D"pt-0.5 juice:pt-0"><=
div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center justify-center over=
flow-hidden rounded-full juice:h-8 juice:w-8"><div class=3D"relative p-1 ro=
unded-sm flex items-center justify-center bg-token-main-surface-primary tex=
t-token-text-primary h-8 w-8"><svg width=3D"41" height=3D"41" viewBox=3D"0 =
0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.=
5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.274=
4 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4=
985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 =
1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C=
16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.=
44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 =
10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.=
721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.47=
59 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 =
32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8=
907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366=
C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39=
.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.50=
27 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38=
.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.451=
7 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 =
37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.90=
04 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 2=
6.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.95=
41 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30=
.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.483=
8 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 =
5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7=
248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.=
8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376=
 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33=
.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.387=
85 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364=
 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1=
9351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.826=
7 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28=
.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.0404=
6 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3=
.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4=
981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928=
 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.=
6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878=
 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30=
.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.958=
6 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0=
556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045=
 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.=
9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.075=
3 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L2=
4.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31=
589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334=
 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L1=
0.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9=
441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848=
 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.=
21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.103=
4 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14=
.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.48=
77 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 =
17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentCol=
or"></path></svg></div></div></div></div></div><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"f=
lex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><=
div data-message-author-role=3D"assistant" data-message-id=3D"9be523ac-8d8f=
-4fac-96a7-5d4c2ff7a701" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden juice:first:pt-[3px]"><div cla=
ss=3D"markdown prose w-full break-words dark:prose-invert light"><p>=EC=9D=
=B4=ED=95=B4=ED=96=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=B2=84=ED=8A=BC=EC=9D=
=98 =EB=B0=B0=EA=B2=BD=EC=9D=80 =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=
=80 =EC=95=84=EB=9E=98=EC=97=90 =EA=B9=94=EB=A6=AC=EA=B3=A0, =EB=B2=84=ED=
=8A=BC =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=82=98 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=
=99=80 =EA=B0=99=EC=9D=80 =EB=82=B4=EC=9A=A9=EB=AC=BC=EC=9D=80 =EB=B0=B0=EA=
=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=90 =ED=91=9C=EC=8B=9C=EB=
=90=98=EA=B2=8C =ED=95=98=EB=8A=94 =EA=B2=83=EC=9D=80 Tkinter=EC=9D=98 =EA=
=B8=B0=EB=B3=B8 =EC=9C=84=EC=A0=AF =EC=84=A4=EC=A0=95=EB=A7=8C=EC=9C=BC=EB=
=A1=9C=EB=8A=94 =EC=96=B4=EB=A0=B5=EC=8A=B5=EB=8B=88=EB=8B=A4. Tkinter=EB=
=8A=94 =EB=B0=B0=EA=B2=BD=EA=B3=BC =EB=82=B4=EC=9A=A9=EB=AC=BC=EC=9D=84 =ED=
=95=98=EB=82=98=EC=9D=98 =EC=9C=84=EC=A0=AF=EC=9C=BC=EB=A1=9C =EC=B2=98=EB=
=A6=AC=ED=95=98=EA=B8=B0 =EB=95=8C=EB=AC=B8=EC=97=90 =EB=B0=B0=EA=B2=BD=EB=
=A7=8C =EB=94=B0=EB=A1=9C =EC=A0=9C=EC=96=B4=ED=95=A0 =EC=88=98 =EC=9E=88=
=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=B4 =EC=A0=9C=ED=95=9C=EC=A0=81=EC=9E=85=
=EB=8B=88=EB=8B=A4.</p><p>=ED=95=98=EC=A7=80=EB=A7=8C, =EC=9D=B4 =EB=AC=B8=
=EC=A0=9C=EB=A5=BC =ED=95=B4=EA=B2=B0=ED=95=A0 =EC=88=98 =EC=9E=88=EB=8A=94=
 =EB=AA=87 =EA=B0=80=EC=A7=80 =EB=B0=A9=EB=B2=95=EC=9D=B4 =EC=9E=88=EC=8A=
=B5=EB=8B=88=EB=8B=A4:</p><ol><li><p><strong>=EB=B2=84=ED=8A=BC=EC=9D=98 =
=EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =EC=84=A4=
=EC=A0=95</strong>: Tkinter=EB=8A=94 =ED=88=AC=EB=AA=85 =EB=B0=B0=EA=B2=BD=
=EC=9D=84 =EC=A7=81=EC=A0=91 =EC=A7=80=EC=9B=90=ED=95=98=EC=A7=80 =EC=95=8A=
=EC=A7=80=EB=A7=8C, =EC=9D=B4 =ED=9A=A8=EA=B3=BC=EB=A5=BC =ED=9D=89=EB=82=
=B4 =EB=82=BC =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=B2=84=ED=
=8A=BC =EB=B0=B0=EA=B2=BD=EC=9D=84 =EC=97=86=EC=95=A0=EA=B3=A0 =EC=9D=B4=EB=
=AF=B8=EC=A7=80=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=
=8A=BC=EC=9D=98 =EC=99=B8=EA=B4=80=EC=9D=84 =EB=A7=8C=EB=93=9C=EB=8A=94 =EA=
=B2=83=EC=9E=85=EB=8B=88=EB=8B=A4. =EC=9D=B4=EB=A0=87=EA=B2=8C =ED=95=98=EB=
=A9=B4 =EB=B2=84=ED=8A=BC=EC=9D=98 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=8A=94 =EB=
=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=90 =ED=91=9C=EC=
=8B=9C=EB=90=A9=EB=8B=88=EB=8B=A4.</p></li><li><p><strong>=EB=B2=84=ED=8A=
=BC=EC=9D=84 =EC=BB=A4=EC=8A=A4=ED=84=B0=EB=A7=88=EC=9D=B4=EC=A7=95</strong=
>: =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=82=AC=EC=9A=
=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC=EA=B3=BC =EA=B0=99=EC=9D=80 =EB=8F=
=99=EC=9E=91=EC=9D=84 =ED=95=98=EB=8F=84=EB=A1=9D =EC=BB=A4=EC=8A=A4=ED=84=
=B0=EB=A7=88=EC=9D=B4=EC=A7=95=ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=
=88=EB=8B=A4. =EC=9D=B4=EB=A0=87=EA=B2=8C =ED=95=98=EB=A9=B4 =EC=BA=94=EB=
=B2=84=EC=8A=A4=EC=9D=98 =EC=9A=94=EC=86=8C=EB=93=A4(=ED=85=8D=EC=8A=A4=ED=
=8A=B8, =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=93=B1)=EC=9D=84 =EA=B0=9C=EB=B3=84=
=EC=A0=81=EC=9C=BC=EB=A1=9C =EC=A0=9C=EC=96=B4=ED=95=A0 =EC=88=98 =EC=9E=88=
=EC=8A=B5=EB=8B=88=EB=8B=A4.</p></li></ol><p>=EB=8B=A4=EC=9D=8C=EC=9D=80 =
=EB=91=90 =EB=B2=88=EC=A7=B8 =EB=B0=A9=EB=B2=95=EC=9D=84 =EC=82=AC=EC=9A=A9=
=ED=95=98=EB=8A=94 =EC=98=88=EC=A0=9C=EC=9E=85=EB=8B=88=EB=8B=A4:</p><pre><=
div class=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border=
-medium"><div class=3D"flex items-center relative text-token-text-secondary=
 bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-betwee=
n rounded-t-md"><span>python</span><div class=3D"flex items-center"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><=
svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D=
"none" viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" =
fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3=
 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3=
 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a=
1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></pa=
th></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><=
div class=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code cla=
ss=3D"!whitespace-pre hljs language-python"><span class=3D"hljs-keyword">im=
port</span> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>CustomButtonApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.title(<span class=3D"hljs-string">"Custom Button App"</span>)
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EC=84=A4=EC=A0=95</span>
        self.background_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(<span class=3D"hljs-string">"background.jpg"</span>)
        self.background_photo =3D ImageTk.PhotoImage(self.background_image)
        self.background_label =3D tk.Label(self, image=3Dself.background_ph=
oto)
        self.background_label.place(x=3D<span class=3D"hljs-number">0</span=
>, y=3D<span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs=
-number">1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas =3D tk.Canvas(self, width=3D<span class=3D"hljs-number"=
>800</span>, height=3D<span class=3D"hljs-number">600</span>, bg=3D<span cl=
ass=3D"hljs-string">"white"</span>, highlightthickness=3D<span class=3D"hlj=
s-number">0</span>)
        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =EB=B0=B0=EA=B2=
=BD =EC=9D=B4=EB=AF=B8=EC=A7=80</span>
        self.button_bg_image =3D Image.<span class=3D"hljs-built_in">open</=
span>(<span class=3D"hljs-string">"button_bg.png"</span>).resize((<span cla=
ss=3D"hljs-number">100</span>, <span class=3D"hljs-number">50</span>), Imag=
e.ANTIALIAS)
        self.button_bg_photo =3D ImageTk.PhotoImage(self.button_bg_image)
        self.button_bg =3D self.canvas.create_image(<span class=3D"hljs-num=
ber">150</span>, <span class=3D"hljs-number">150</span>, image=3Dself.butto=
n_bg_photo)

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =ED=85=8D=EC=8A=
=A4=ED=8A=B8</span>
        self.button_text =3D self.canvas.create_text(<span class=3D"hljs-nu=
mber">150</span>, <span class=3D"hljs-number">150</span>, text=3D<span clas=
s=3D"hljs-string">"Button"</span>, fill=3D<span class=3D"hljs-string">"blac=
k"</span>, font=3D(<span class=3D"hljs-string">"Arial"</span>, <span class=
=3D"hljs-number">16</span>))

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =ED=81=B4=EB=A6=
=AD =EC=9D=B4=EB=B2=A4=ED=8A=B8</span>
        self.canvas.tag_bind(self.button_bg, <span class=3D"hljs-string">"&=
lt;Button-1&gt;"</span>, self.on_button_click)
        self.canvas.tag_bind(self.button_text, <span class=3D"hljs-string">=
"&lt;Button-1&gt;"</span>, self.on_button_click)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_button_click</span>(<span class=3D"hljs-params">self, event</span>=
):
        <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-stri=
ng">"Button clicked"</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D CustomButtonApp()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=98=88=EC=A0=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EC=BA=94=EB=B2=84=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=
=EC=97=AC =EB=B2=84=ED=8A=BC =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=
=EB=A5=BC</p></div></div></div></div><div class=3D"mt-1 flex gap-3 empty:hi=
dden juice:-ml-3"><div class=3D"items-center justify-start rounded-xl p-1 z=
-10 -mt-1 bg-token-main-surface-primary md:absolute md:border md:border-tok=
en-border-light md:hidden"><div class=3D"flex items-center"><span class=3D"=
" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-seconda=
ry hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[3=
0px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H=
5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5=
a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 =
0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></butt=
on></span><div class=3D"flex"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"rounded-lg text-token-text-secondary hover:bg-token-main-surface=
-secondary"><span class=3D"flex h-[30px] w-[30px] items-center justify-cent=
er"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11=
.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.16=
65 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.9=
4753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 =
21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C=
15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2958=
9C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 =
5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.9=
9743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002=
 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13=
.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C1=
7.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 =
19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curren=
tColor"></path></svg></span></button></span></div><span class=3D"" data-sta=
te=3D"closed"><button type=3D"button" id=3D"radix-:r2fo:" aria-haspopup=3D"=
menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"cursor-pointer=
 rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-token-main-sur=
face-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0"><div cla=
ss=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBo=
x=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.79=
5 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0=
 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0=
 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 =
0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2=
.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.8=
87c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 =
1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.46=
7 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-=
3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.5=
04 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.50=
3 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 =
2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.06=
4-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-=
1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-clamp-1 te=
xt-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</span><svg x=
mlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none=
" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaternary"><path =
fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.4=
14 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-=
6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></button></sp=
an></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" dir=3D"auto" data-t=
estid=3D"conversation-turn-148" data-scroll-anchor=3D"false"><div class=3D"=
py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"=
><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap=
-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"group/conv=
ersation-turn relative flex w-full min-w-0 flex-col"><div class=3D"flex-col=
 gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div dat=
a-message-author-role=3D"user" data-message-id=3D"aaa294a7-8066-4406-964e-e=
da828db2cf9" dir=3D"auto" class=3D"min-h-[20px] text-message flex flex-col =
items-start whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 juic=
e:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"flex w-full f=
lex-col gap-1 juice:empty:hidden items-end rtl:items-start"><div class=3D"r=
elative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main=
-surface-secondary">1=EB=B2=88=EC=9D=80 =EC=96=B4=EB=96=BB=EA=B2=8C =ED=95=
=98=EB=8A=94=EC=A7=80 =EB=B3=B4=EC=97=AC=EC=A4=98=EB=B4=90<div class=3D"abs=
olute bottom-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conver=
sation-turn:block"><span class=3D"" data-state=3D"closed"><button class=3D"=
flex h-9 w-9 items-center justify-center rounded-full text-token-text-secon=
dary transition hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://=
www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 =
0 24 24" class=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd=
" d=3D"M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0=
 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.7=
13zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0=
 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586=
 3.586z" clip-rule=3D"evenodd"></path></svg></button></span></div></div></d=
iv></div></div></div></div></div></div></div><div class=3D"w-full text-toke=
n-text-primary" dir=3D"auto" data-testid=3D"conversation-turn-149" data-scr=
oll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:p=
x-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3=
 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-=
w-[48rem]"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><d=
iv><div class=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6=
 w-6 items-center justify-center overflow-hidden rounded-full juice:h-8 jui=
ce:w-8"><div class=3D"relative p-1 rounded-sm flex items-center justify-cen=
ter bg-token-main-surface-primary text-token-text-primary h-8 w-8"><svg wid=
th=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D=
"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 1=
4.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.61=
26 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25=
.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.7855=
75 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.36=
14 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5=
.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312=
C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.8361=
2 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.9=
5951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322=
 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38=
.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.49=
46 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 =
31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.=
821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 2=
4.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.=
4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117=
 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.=
137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542=
L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.0=
52 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 2=
7.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.=
0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.6604=
8 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.=
3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28=
.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.69=
88 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 =
10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13=
.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.194=
91 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 2=
0.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.2=
06 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 =
15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2=
235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955=
 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25=
.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.13=
64C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 2=
2.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.11=
03 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 =
32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.3=
19 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 3=
5.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.094=
3 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 1=
5.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9=
225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158=
 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33=
.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.60=
95 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423=
 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10=
.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.83=
77 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C2=
0.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.942=
15 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 =
10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16=
.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071=
 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></d=
iv></div><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"=
flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"assist=
ant" data-message-id=3D"bb4cc673-ceb8-49d8-92fd-eff9eef02d55" dir=3D"auto" =
class=3D"min-h-[20px] text-message flex flex-col items-start whitespace-pre=
-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end o=
verflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:=
hidden juice:first:pt-[3px]"><div class=3D"markdown prose w-full break-word=
s dark:prose-invert light"><p>Tkinter=EB=8A=94 =EA=B8=B0=EB=B3=B8=EC=A0=81=
=EC=9C=BC=EB=A1=9C =EC=9C=84=EC=A0=AF=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =
=ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =EC=84=A4=EC=A0=95=ED=95=98=EB=8A=94 =
=EA=B8=B0=EB=8A=A5=EC=9D=84 =EC=A0=9C=EA=B3=B5=ED=95=98=EC=A7=80 =EC=95=8A=
=EC=8A=B5=EB=8B=88=EB=8B=A4. =EA=B7=B8=EB=9F=AC=EB=82=98, Tkinter=EC=9D=98 =
=EC=BA=94=EB=B2=84=EC=8A=A4 =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=82=AC=EC=9A=A9=
=ED=95=98=EC=97=AC =EB=B9=84=EC=8A=B7=ED=95=9C =ED=9A=A8=EA=B3=BC=EB=A5=BC =
=ED=9D=89=EB=82=B4=EB=82=BC =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=8B=A4.=
 =EB=8B=A4=EC=9D=8C=EC=9D=80 =EB=B2=84=ED=8A=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=
=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =EB=A7=8C=EB=93=A4=EA=B3=A0 =
=EB=B2=84=ED=8A=BC=EC=9D=98 =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =EB=B0=B0=
=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=90 =ED=91=9C=EC=8B=9C=
=ED=95=98=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EB=B3=B4=EC=97=AC=EC=A3=BC=
=EB=8A=94 =EC=98=88=EC=A0=9C=EC=9E=85=EB=8B=88=EB=8B=A4.</p><pre><div class=
=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" vi=
ewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-rule=
=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3=
 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 =
1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0=
 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg>=
=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div class=
=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!wh=
itespace-pre hljs language-python"><span class=3D"hljs-keyword">import</spa=
n> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>TransparentButtonApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.title(<span class=3D"hljs-string">"Transparent Button App"</sp=
an>)
        self.geometry(<span class=3D"hljs-string">"800x600"</span>)

        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EC=84=A4=EC=A0=95</span>
        self.background_image =3D Image.<span class=3D"hljs-built_in">open<=
/span>(<span class=3D"hljs-string">"background.jpg"</span>)
        self.background_photo =3D ImageTk.PhotoImage(self.background_image)
        self.background_label =3D tk.Label(self, image=3Dself.background_ph=
oto)
        self.background_label.place(x=3D<span class=3D"hljs-number">0</span=
>, y=3D<span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs=
-number">1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        <span class=3D"hljs-comment"># =EC=BA=94=EB=B2=84=EC=8A=A4 =EC=84=
=A4=EC=A0=95</span>
        self.canvas =3D tk.Canvas(self, width=3D<span class=3D"hljs-number"=
>800</span>, height=3D<span class=3D"hljs-number">600</span>, bg=3D<span cl=
ass=3D"hljs-string">"white"</span>, highlightthickness=3D<span class=3D"hlj=
s-number">0</span>)
        self.canvas.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<sp=
an class=3D"hljs-number">0</span>)

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =EB=B0=B0=EA=B2=
=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EB=A5=BC None=EC=9C=BC=EB=A1=9C =EC=84=A4=
=EC=A0=95</span>
        self.button =3D tk.Button(self.canvas, text=3D<span class=3D"hljs-s=
tring">"Button"</span>, command=3Dself.on_button_click,=20
                                bg=3D<span class=3D"hljs-string">""</span>,=
 activebackground=3D<span class=3D"hljs-string">""</span>, bd=3D<span class=
=3D"hljs-number">0</span>, highlightthickness=3D<span class=3D"hljs-number"=
>0</span>)
        self.button_window =3D self.canvas.create_window(<span class=3D"hlj=
s-number">150</span>, <span class=3D"hljs-number">150</span>, window=3Dself=
.button)

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =EC=9C=84=EB=A1=
=9C =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=A5=BC =EC=98=AC=EB=A6=AC=EA=B8=B0 =EC=9C=
=84=ED=95=B4 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1</span>
        self.button_text =3D self.canvas.create_text(<span class=3D"hljs-nu=
mber">150</span>, <span class=3D"hljs-number">150</span>, text=3D<span clas=
s=3D"hljs-string">"Button"</span>, fill=3D<span class=3D"hljs-string">"blac=
k"</span>, font=3D(<span class=3D"hljs-string">"Arial"</span>, <span class=
=3D"hljs-number">16</span>))

        <span class=3D"hljs-comment"># =EB=B2=84=ED=8A=BC =ED=81=B4=EB=A6=
=AD =EC=9D=B4=EB=B2=A4=ED=8A=B8=EC=99=80 =EC=97=B0=EB=8F=99</span>
        self.canvas.tag_bind(self.button_text, <span class=3D"hljs-string">=
"&lt;Button-1&gt;"</span>, self.on_button_click)

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">on_button_click</span>(<span class=3D"hljs-params">self, event=3D<spa=
n class=3D"hljs-literal">None</span></span>):
        <span class=3D"hljs-built_in">print</span>(<span class=3D"hljs-stri=
ng">"Button clicked"</span>)

<span class=3D"hljs-keyword">if</span> __name__ =3D=3D <span class=3D"hljs-=
string">"__main__"</span>:
    app =3D TransparentButtonApp()
    app.mainloop()
</code></div></div></pre><p>=EC=9D=B4 =EC=98=88=EC=A0=9C=EC=97=90=EC=84=9C=
=EB=8A=94 =EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=80 =EC=A0=90=EC=9D=84=
 =EC=A3=BC=EC=9D=98=ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4:</p><ol><=
li><strong>=EC=BA=94=EB=B2=84=EC=8A=A4 =EC=82=AC=EC=9A=A9</strong>: =EC=BA=
=94=EB=B2=84=EC=8A=A4=EB=A5=BC =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =EB=B0=
=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80 =EC=9C=84=EC=A0=AF=EC=9D=
=84 =EB=B0=B0=EC=B9=98=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EB=B2=
=84=ED=8A=BC =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=A0=9C=EA=B1=
=B0</strong>: =EB=B2=84=ED=8A=BC=EC=9D=98 <code>bg</code>, <code>activeback=
ground</code>, <code>bd</code>, <code>highlightthickness</code> =EC=86=8D=
=EC=84=B1=EC=9D=84 =EC=A1=B0=EC=A0=95=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC=
=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =
=EB=A7=8C=EB=93=AD=EB=8B=88=EB=8B=A4.</li><li><strong>=EB=B2=84=ED=8A=BC =
=ED=85=8D=EC=8A=A4=ED=8A=B8</strong>: =EC=BA=94=EB=B2=84=EC=8A=A4=EC=9D=98 =
<code>create_text</code> =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =EC=82=AC=EC=
=9A=A9=ED=95=98=EC=97=AC =EB=B2=84=ED=8A=BC =ED=85=8D=EC=8A=A4=ED=8A=B8=EB=
=A5=BC =EB=B0=B0=EC=B9=98=ED=95=A9=EB=8B=88=EB=8B=A4.</li><li><strong>=EB=
=B2=84=ED=8A=BC =ED=81=B4=EB=A6=AD =EC=9D=B4=EB=B2=A4=ED=8A=B8</strong>: =
=ED=85=8D=EC=8A=A4=ED=8A=B8=EC=99=80 =EB=B2=84=ED=8A=BC =EB=AA=A8=EB=91=90 =
=ED=81=B4=EB=A6=AD =EC=9D=B4=EB=B2=A4=ED=8A=B8=EC=99=80 =EC=97=B0=EB=8F=99=
=ED=95=98=EC=97=AC =ED=81=B4=EB=A6=AD =EC=8B=9C =EB=8F=99=EC=9D=BC=ED=95=9C=
 =EB=8F=99=EC=9E=91=EC=9D=84 =EC=88=98=ED=96=89=ED=95=98=EB=8F=84=EB=A1=9D =
=ED=95=A9=EB=8B=88=EB=8B=A4.</li></ol><p>=EC=9D=B4 =EB=B0=A9=EB=B2=95=EC=9D=
=84 =EC=82=AC=EC=9A=A9=ED=95=98=EB=A9=B4 =EB=B2=84=ED=8A=BC=EC=9D=98 =EB=B0=
=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =EB=A7=8C=EB=93=
=A4 =EC=88=98 =EC=9E=88=EA=B3=A0, =EB=B2=84=ED=8A=BC=EC=9D=98 =ED=85=8D=EC=
=8A=A4=ED=8A=B8=EB=8A=94 =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=
=9C=84=EC=97=90 =ED=91=9C=EC=8B=9C=EB=90=A9=EB=8B=88=EB=8B=A4.</p></div></d=
iv></div></div><div class=3D"mt-1 flex gap-3 empty:hidden juice:-ml-3"><div=
 class=3D"items-center justify-start rounded-xl p-1 z-10 -mt-1 bg-token-mai=
n-surface-primary md:absolute md:border md:border-token-border-light md:hid=
den"><div class=3D"flex items-center"><span class=3D"" data-state=3D"closed=
"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-main=
-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center just=
ify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.47485 10.4828=
 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8.00005 6 8=
.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772 16 4 16H6=
C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.4828 19.7527=
 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13 2.73463 1=
3 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.61102 18H4C2.3=
4315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.00005H5.61102L=
8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 21.6725 6.7=
5833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.8507 22.5418=
 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 17.5475C19=
.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.9996 13.51=
75 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.71262C19.6514 =
7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7.5688 16.8=
679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.4996 12.0001=
C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 16.5158 16=
.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4637C16.229=
8 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653 10.0526 1=
5.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" fill=3D"cu=
rrentColor"></path></svg></span></button></span><span class=3D"" data-state=
=3D"closed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-=
token-main-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-c=
enter justify-center"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24=
" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-md-heavy"=
><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h=
9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0=
 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 =
0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1=
z" clip-rule=3D"evenodd"></path></svg></span></button></span><div class=3D"=
flex"><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg te=
xt-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.=
9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.6505=
4 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91=
145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5=
V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391=
 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.603=
64 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.0=
0451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9=
908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 =
19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C1=
5.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.=
31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5=
523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></sp=
an></button></span></div><span class=3D"" data-state=3D"closed"><button typ=
e=3D"button" id=3D"radix-:r2g0:" aria-haspopup=3D"menu" aria-expanded=3D"fa=
lse" data-state=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-tok=
en-text-secondary h-[30px] hover:bg-token-main-surface-secondary"><div clas=
s=3D"flex items-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full =
[&amp;_svg]:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fil=
l=3D"currentColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802=
-.943 2.305-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801=
.436 2.317.942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1=
.792.93-2.308.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.0=
94-1.792-.418-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=
=3D"currentColor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775=
 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-=
4.75 1.094-6.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.=
003c-.248-2.795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 =
1 0 0 1-.002-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 =
2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069=
.877.861 1.56 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.90=
7-1.55 3.094-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-=
2.069-3.21-.505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z=
"></path></svg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity:=
 0; padding-left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.or=
g/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" =
class=3D"icon-sm text-token-text-quaternary"><path fill=3D"currentColor" fi=
ll-rule=3D"evenodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.2=
93a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" cli=
p-rule=3D"evenodd"></path></svg></div></button></span></div></div></div><di=
v class=3D"pr-2 lg:pr-0"></div></div></div></div></div></div><div class=3D"=
w-full text-token-text-primary" dir=3D"auto" data-testid=3D"conversation-tu=
rn-150" data-scroll-anchor=3D"false"><div class=3D"py-2 juice:py-[18px] px-=
3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto f=
lex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w=
-[40rem] xl:max-w-[48rem]"><div class=3D"group/conversation-turn relative f=
lex w-full min-w-0 flex-col"><div class=3D"flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D=
"user" data-message-id=3D"aaa2968e-66b8-46d0-b37f-bb4651989fba" dir=3D"auto=
" class=3D"min-h-[20px] text-message flex flex-col items-start whitespace-p=
re-wrap break-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end=
 overflow-x-auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empt=
y:hidden items-end rtl:items-start"><div class=3D"relative max-w-[70%] roun=
ded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:bg-token-main-surface-secondary">impo=
rt tkinter as tk
from tkinter import ttk, messagebox
from tkinter import PhotoImage, Label
import mysql.connector
import random
import time
import sys
from PIL import Image, ImageTk
from Util import Util
from tkinter import font as tkFont
import os

class GameApp(tk.Tk):
    def __init__(self, current_user):
        super().__init__()
        self.geometry("750x530")
        self.title("=EC=88=98=EB=AD=89=EC=9D=B4 =ED=82=A4=EC=9A=B0=EA=B8=B0=
 =EA=B2=8C=EC=9E=84")
        self.configure(bg=3D'#ffffff')  # =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=
=84=A4=EC=A0=95

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D 4
        self.setup_game_variables()
        #self.setup_button_style()
        self.setup_ui()

    def connect_database(self):
        return mysql.connector.connect(
            host=3D"ystdb.cl260eouqhjz.ap-northeast-2.rds.amazonaws.com",
            user=3D"admin",
            password=3D"seat0323",
            database=3D"wordbook"
        )

    def setup_game_variables(self):
        self.current_score =3D 0
        self.level =3D 1
        self.start_time =3D time.time()
        self.game_active =3D False
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image("=EC=88=98=EB=AD=89=EC=9D=B4=
=EC=A0=95=EB=8B=B5=EC=9A=A9.png", (50, 50), alpha=3DTrue)
        self.incorrect_image =3D self.load_image("=EC=88=98=EB=AD=89=EC=9D=
=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png", (50, 50), alpha=3DTrue)
        self.info_image =3D self.load_image("=EA=B2=8C=EC=9E=84=EC=A0=95=EB=
=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png", (275, 181), alpha=3DTrue)  # =EA=B2=
=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B6=94=EA=B0=
=80

    def setup_entry_style(self):
        style =3D ttk.Style()
        style.theme_use('default')  # =EA=B8=B0=EB=B3=B8 =ED=85=8C=EB=A7=88=
 =EC=82=AC=EC=9A=A9
        style.configure('Rounded.TEntry', padding=3D6, relief=3D'flat', bac=
kground=3D"#ffffff")

    def setup_button_style(self):
        style =3D ttk.Style()
        style.theme_use('clam')=20
        style.configure('My.TButton', font=3D('Arial-BoldMT', 14), borderwi=
dth=3D'4', foreground=3D'white', background=3D'#0096c7')
        style.map('My.TButton',
                  foreground=3D[('active', 'white')],
                  background=3D[('active', '#005f73')])

    def setup_ui(self):
        # =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C=
 =EB=B0=8F =EC=84=A4=EC=A0=95
        self.background_image =3D self.load_background_image("=EA=B2=8C=EC=
=9E=84=EB=B0=B0=EA=B2=BD.jpg", (750, 530))
        self.bg_label =3D Label(self, image=3Dself.background_image)
        self.bg_label.place(x=3D0, y=3D0, relwidth=3D1, relheight=3D1)

        self.back_button =3D self.create_image_button("=EC=9D=B4=EC=A0=84=
=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png", "=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=
=A1=9C=ED=98=B8=EB=B2=84.png", lambda: Util.SwitchPage(self, "UserMainPage"=
, self.current_user), 50, 30)
        self.back_button.place(x=3D10, y=3D10)
       =20
        # =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=84 =EB=9D=BC=EB=B2=A8=
=EA=B3=BC =ED=94=84=EB=A0=88=EC=9E=84 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.leaderboard_label =3D tk.Label(self, text=3D"=ED=98=84=EC=9E=
=AC =EC=8B=A4=EC=8B=9C=EA=B0=84 =EC=88=9C=EC=9C=84", font=3D("Arial-BoldMT"=
, 16, "bold"), bg=3D'#ffffff')
        self.leaderboard_label.place(x=3D375, y=3D370, anchor=3D"center")
        self.leaderboard_frame =3D tk.Frame(self, bg=3D'#ffffff')
        self.leaderboard_frame.place(x=3D375, y=3D425, anchor=3D"center")
        self.display_leaderboard()
       =20
        # =EC=88=98=EB=AD=89=EC=9D=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=
=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.image_label =3D Label(self, image=3Dself.images[self.level], b=
g=3D'#ffffff')
        self.image_label.pack(pady=3D5)
       =20
        # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC =EC=9C=
=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.button_start =3D self.create_image_button("=EA=B2=8C=EC=9E=84=
=EC=8B=9C=EC=9E=91=EC=9D=BC=EB=B0=98.png", "=EA=B2=8C=EC=9E=84=EC=8B=9C=EC=
=9E=91=ED=98=B8=EB=B2=84.png", self.start_game, 90, 40)
        self.button_start.place(x=3D325, y=3D280)
       =20
        # =EB=AC=B8=EC=A0=9C =EB=9D=BC=EB=B2=A8=EC=9D=84 word_frame =EC=99=
=B8=EB=B6=80=EB=A1=9C =EC=9D=B4=EB=8F=99
        self.label_word =3D tk.Label(self, text=3D"", font=3D("Arial-BoldMT=
", 20), bg=3D'#ffffff')
        self.label_word.pack(pady=3D5)
       =20
        # =EB=AC=B8=EC=A0=9C=EC=99=80 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=
=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =ED=94=84=EB=A0=88=EC=9E=84 =
=EC=83=9D=EC=84=B1
        self.word_frame =3D tk.Frame(self, bg=3D'#ffffff')
        self.word_frame.place_forget()  # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=
=9E=91 =EC=A0=84=EC=97=90=EB=8A=94 =EC=88=A8=EA=B9=80

        # =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C
        self.entry_answer =3D ttk.Entry(self.word_frame, font=3D("Arial-Bol=
dMT", 20), style=3D'Rounded.TEntry')
        self.entry_answer.pack(pady=3D10)
        self.entry_answer.bind("&lt;Return&gt;", self.check_answer)
       =20
        self.label_status =3D tk.Label(self, text=3D"", font=3D("Arial-Bold=
MT", 16, "bold"), bg=3D'#ffffff')
        self.label_status.place_forget()

        self.label_timer =3D tk.Label(self, text=3D"", font=3D("Arial-BoldM=
T", 16, "bold"), bg=3D'#ffffff')
        self.label_timer.place_forget()
       =20
        # =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80=
 =EB=9D=BC=EB=B2=A8 =EC=83=9D=EC=84=B1
        self.label_info_image =3D Label(self, image=3Dself.info_image, bg=
=3D'#ffffff')
        self.label_info_image.place_forget()  # =EC=B4=88=EA=B8=B0=EC=97=90=
=EB=8A=94 =EC=88=A8=EA=B9=80

    def load_images(self):
        image_paths =3D {
            1: "=EC=88=98=EB=AD=89=EC=9D=B41.png",
            2: "=EC=88=98=EB=AD=89=EC=9D=B42.png",
            3: "=EC=88=98=EB=AD=89=EC=9D=B43.png",
            4: "=EC=88=98=EB=AD=89=EC=9D=B44.png",
            5: "=EC=88=98=EB=AD=89=EC=9D=B45.png"
        }
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EC=8B=9C =EC=95=
=8C=ED=8C=8C =EC=B1=84=EB=84=90=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=
=AC =ED=88=AC=EB=AA=85=ED=95=9C =EB=B0=B0=EA=B2=BD=EC=9D=84 =EC=B2=98=EB=A6=
=AC
        return {level: self.load_image(path, (180, 180), alpha=3DTrue) for =
level, path in image_paths.items()}


    def load_image(self, path, size, alpha=3DFalse):
        image =3D Image.open(path)
        if alpha:
            image =3D image.convert("RGBA")  # =EC=95=8C=ED=8C=8C =EC=B1=84=
=EB=84=90=EC=9D=84 =EC=82=AC=EC=9A=A9=ED=95=98=EC=97=AC =ED=88=AC=EB=AA=85=
=ED=95=9C =EB=B0=B0=EA=B2=BD =EC=B2=98=EB=A6=AC
        return ImageTk.PhotoImage(image.resize(size, Image.Resampling.LANCZ=
OS))

    def load_background_image(self, path, size):
        image =3D Image.open(path)
        return ImageTk.PhotoImage(image.resize(size, Image.Resampling.LANCZ=
OS))

    def create_image_button(self, normal_image_path, hover_image_path, comm=
and, width, height):
        # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EB=B0=8F =EB=A6=
=AC=EC=82=AC=EC=9D=B4=EC=A7=95
        normal_image =3D ImageTk.PhotoImage(Image.open(normal_image_path).r=
esize((width, height), Image.Resampling.LANCZOS))
        hover_image =3D ImageTk.PhotoImage(Image.open(hover_image_path).res=
ize((width, height), Image.Resampling.LANCZOS))
        # =EB=B2=84=ED=8A=BC =EC=83=9D=EC=84=B1
        button =3D tk.Button(self, image=3Dnormal_image, command=3Dcommand,=
 borderwidth=3D0, bg=3D'#ffffff')
        button.image =3D normal_image  # =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=B0=
=B8=EC=A1=B0 =EB=B3=B4=EA=B4=80
        button.bind("&lt;Enter&gt;", lambda e: button.config(image=3Dhover_=
image))
        button.bind("&lt;Leave&gt;", lambda e: button.config(image=3Dnormal=
_image))
        return button

    def fetch_word(self):
        self.cursor.execute("SELECT Spell, Mean FROM toeicword ORDER BY RAN=
D() LIMIT 1")
        return self.cursor.fetchone()

    def check_answer(self, event=3DNone):
        if not self.game_active:
            return
        answer =3D self.entry_answer.get().lower().strip()
        if answer =3D=3D self.current_word:
            self.show_transparent_popup("=EC=A0=95=EB=8B=B5=EC=9E=85=EB=8B=
=88=EB=8B=A4!", "green", self.correct_image)
            self.current_score +=3D 10
            self.level_up()
        else:
            self.show_transparent_popup("=EC=98=A4=EB=8B=B5=EC=9E=85=EB=8B=
=88=EB=8B=A4!", "red", self.incorrect_image)
        self.entry_answer.delete(0, tk.END)
        self.next_word()

    def start_game(self):
        self.game_active =3D True
        self.current_score =3D 0
        self.level =3D 1
        self.start_time =3D time.time()
        self.next_word()
        self.entry_answer.focus_set()
       =20
        # =EC=A0=90=EC=88=98=EC=99=80 =EB=A0=88=EB=B2=A8=EC=9D=84 =ED=91=9C=
=EC=8B=9C=ED=95=98=EB=8A=94 =EB=9D=BC=EB=B2=A8=EC=9D=98 =ED=85=8D=EC=8A=A4=
=ED=8A=B8=EB=A5=BC =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=98=EA=B3=A0 =
=ED=99=94=EB=A9=B4=EC=97=90 =ED=91=9C=EC=8B=9C
        self.label_status.config(text=3Df"=EB=A0=88=EB=B2=A8: {self.level},=
 =EC=A0=90=EC=88=98: {self.current_score}")
        self.label_status.place(x=3D295, y=3D375)  # =EC=9C=84=EC=B9=98 =EC=
=A1=B0=EC=A0=95
       =20
        # =EC=88=A8=EA=B2=A8=EC=A7=84 =EC=9A=94=EC=86=8C=EB=93=A4 =EB=B3=B4=
=EC=9D=B4=EA=B8=B0
        self.word_frame.place(relx=3D0.5, rely=3D0.6, anchor=3D"center")  #=
 =EC=A4=91=EC=95=99=EC=97=90 =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.label_word.pack(pady=3D5)
        self.label_timer.place(x=3D300, y=3D400)  # =EC=83=81=ED=83=9C =EC=
=A0=95=EB=B3=B4=EB=A5=BC =EC=9C=84=EC=B9=98 =EC=A1=B0=EC=A0=95
        self.label_info_image.place(x=3D280, y=3D360)  # =EA=B2=8C=EC=9E=84=
 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=B9=98 =EC=A1=
=B0=EC=A0=95

        # =EB=A0=88=EB=B2=A8=EA=B3=BC =ED=83=80=EC=9D=B4=EB=A8=B8=EB=A5=BC =
info image =EC=9C=84=EB=A1=9C =EB=B3=B4=EC=9D=B4=EB=8F=84=EB=A1=9D =EC=84=
=A4=EC=A0=95
        self.label_status.tkraise()
        self.label_timer.tkraise()

        # =EC=8B=9C=EC=9E=91 =EC=8B=9C =EC=88=A8=EA=B9=80 =EC=B2=98=EB=A6=
=AC=EB=90=98=EC=97=88=EB=8D=98 =EC=9A=94=EC=86=8C=EB=93=A4 =EB=B3=B4=EC=9D=
=B4=EA=B8=B0
        self.button_start.place_forget()
        self.leaderboard_label.place_forget()
        self.leaderboard_frame.place_forget()
       =20
        self.update_timer()  # =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=85=EB=8D=
=B0=EC=9D=B4=ED=8A=B8 =EC=8B=9C=EC=9E=91

    def next_word(self):
        self.current_word, self.current_meaning =3D self.fetch_word()
        self.label_word.config(text=3Dself.current_meaning)

    def display_leaderboard(self):
        """=EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C=EB=A5=BC =EA=B0=B1=EC=8B=A0=
=ED=95=98=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =ED=94=84=EB=A0=88=EC=9E=84 =
=EB=82=B4=EC=9D=98 =EB=AA=A8=EB=93=A0 =EC=9C=84=EC=A0=AF=EC=9D=84 =EC=A0=9C=
=EA=B1=B0
        for widget in self.leaderboard_frame.winfo_children():
            widget.destroy()
        # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=A4=EC=97=90=
=EC=84=9C =EC=83=81=EC=9C=84 3=EB=AA=85=EC=9D=98 =EC=82=AC=EC=9A=A9=EC=9E=
=90 =EC=A0=95=EB=B3=B4=EB=A5=BC =EB=8B=A4=EC=8B=9C =EC=A1=B0=ED=9A=8C
        self.cursor.execute("SELECT id, highscore FROM user ORDER BY highsc=
ore DESC LIMIT 3")
        rows =3D self.cursor.fetchall()
        for idx, (user_id, score) in enumerate(rows, start=3D1):
            tk.Label(self.leaderboard_frame, text=3Df"{idx}=EB=93=B1: {user=
_id} - {score}=EC=A0=90", font=3D("Arial-BoldMT", 14), bg=3D'#ffffff').pack=
()

    def show_transparent_popup(self, message, color, image):
        popup =3D tk.Toplevel(self)
        popup.overrideredirect(True)  # =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=85=
=8C=EB=91=90=EB=A6=AC=EC=99=80 =EC=A0=9C=EB=AA=A9 =ED=91=9C=EC=8B=9C=EC=A4=
=84 =EC=A0=9C=EA=B1=B0
        popup.geometry("200x80+{}+{}".format(self.winfo_x() + 280, self.win=
fo_y() + 100))
        popup.attributes('-alpha', 0.7)  # =EC=9C=88=EB=8F=84=EC=9A=B0 =ED=
=88=AC=EB=AA=85=EB=8F=84 =EC=84=A4=EC=A0=95 (70%)

        # =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=99=80 =ED=85=8D=EC=8A=A4=ED=8A=B8=
=EB=A5=BC =ED=8F=AC=ED=95=A8=ED=95=98=EB=8A=94 =EB=A0=88=EC=9D=B4=EB=B8=94 =
=EC=83=9D=EC=84=B1
        if image:
            label_image =3D tk.Label(popup, image=3Dimage, bg=3D'#ffffff')
            label_image.pack(side=3D'top')
       =20
        popup_label =3D tk.Label(popup, text=3Dmessage, font=3D("Arial-Bold=
MT", 16), fg=3Dcolor, bg=3D"white")
        popup_label.pack(expand=3DTrue, fill=3D'both')
        # =ED=8C=9D=EC=97=85=EC=9D=84 700ms =ED=9B=84=EC=97=90 =EC=9E=90=EB=
=8F=99=EC=9C=BC=EB=A1=9C =EB=8B=AB=EA=B8=B0
        popup.after(700, popup.destroy)

    def level_up(self):
        if self.level &lt;=3D 4 and self.current_score % 10 =3D=3D 0:
            self.level +=3D 1
        self.label_status.config(text=3Df"=EB=A0=88=EB=B2=A8: {self.level},=
 =EC=A0=90=EC=88=98: {self.current_score}")
        self.image_label.config(image=3Dself.images[self.level])
   =20
    # =EC=B5=9C=EA=B3=A0 =EC=A0=90=EC=88=98 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=
=8A=B8
    def update_high_score(self):
        """=EC=82=AC=EC=9A=A9=EC=9E=90=EC=9D=98 =EC=B5=9C=EA=B3=A0 =EC=A0=
=90=EC=88=98=EB=A5=BC =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=EC=9D=B4=EC=8A=
=A4=EC=97=90 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8=ED=95=98=EB=8A=94 =EB=A9=
=94=EC=84=9C=EB=93=9C"""
        query =3D "UPDATE user SET highscore =3D %s WHERE id =3D %s AND hig=
hscore &lt; %s"
        try:
            self.cursor.execute(query, (self.current_score, self.current_us=
er, self.current_score))
            self.db.commit()
        except mysql.connector.Error as err:
            self.db.rollback()

    def update_timer(self):
        if not self.game_active:
            return  # =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=B9=84=ED=99=9C=EC=84=
=B1=ED=99=94 =EC=83=81=ED=83=9C=EB=A9=B4 =ED=83=80=EC=9D=B4=EB=A8=B8 =EC=97=
=85=EB=8D=B0=EC=9D=B4=ED=8A=B8 =EC=A4=91=EB=8B=A8
        elapsed_time =3D int(time.time() - self.start_time)
        remaining_time =3D self.game_duration - elapsed_time
        self.label_timer.config(text=3Df"=EB=82=A8=EC=9D=80 =EC=8B=9C=EA=B0=
=84: {remaining_time}=EC=B4=88")
        if remaining_time &gt; 0:
            self.after(1000, self.update_timer)  # 1=EC=B4=88 =ED=9B=84 =EB=
=8B=A4=EC=8B=9C =EC=9D=B4 =EB=A9=94=EC=84=9C=EB=93=9C=EB=A5=BC =ED=98=B8=EC=
=B6=9C
        else:
            messagebox.showinfo("=EA=B2=8C=EC=9E=84 =EC=A2=85=EB=A3=8C", "=
=EA=B2=8C=EC=9E=84=EC=9D=B4 =EC=A2=85=EB=A3=8C=EB=90=98=EC=97=88=EC=8A=B5=
=EB=8B=88=EB=8B=A4")
            self.update_high_score()
            messagebox.showinfo("=EA=B2=8C=EC=9E=84 =EC=A2=85=EB=A3=8C", f"=
=EC=B5=9C=EC=A2=85 =EC=A0=90=EC=88=98: {self.current_score}")
            self.reset_game()

    def reset_game(self):
        """=EA=B2=8C=EC=9E=84=EC=9D=84 =EB=A6=AC=EC=85=8B=ED=95=98=EA=B3=A0=
 =EC=B4=88=EA=B8=B0 =ED=99=94=EB=A9=B4=EC=9D=84 =EC=A4=80=EB=B9=84=ED=95=98=
=EB=8A=94 =EB=A9=94=EC=84=9C=EB=93=9C"""
        self.game_active =3D False
        self.update_high_score()  # =EA=B2=8C=EC=9E=84=EC=9D=B4 =EB=81=9D=
=EB=82=98=EB=A9=B4 =EC=A0=90=EC=88=98 =EC=97=85=EB=8D=B0=EC=9D=B4=ED=8A=B8
        self.display_leaderboard()  # =EB=8D=B0=EC=9D=B4=ED=84=B0=EB=B2=A0=
=EC=9D=B4=EC=8A=A4=EC=97=90=EC=84=9C =EA=B0=B1=EC=8B=A0=EB=90=9C =EC=88=9C=
=EC=9C=84=EB=A1=9C =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =EA=B0=B1=EC=8B=A0
        self.current_score =3D 0
        self.level =3D 1
        self.label_word.config(text=3D"=EB=8B=A4=EC=8B=9C =EC=8B=9C=EC=9E=
=91=ED=95=98=EB=A0=A4=EB=A9=B4 =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91=EC=9D=
=84 =EB=88=84=EB=A5=B4=EC=84=B8=EC=9A=94")
        self.label_word.pack(pady=3D5)  # =EB=8B=A4=EC=8B=9C =ED=99=94=EB=
=A9=B4=EC=97=90 =ED=91=9C=EC=8B=9C
        self.label_status.place_forget()
        self.label_timer.config(text=3D"")
        self.entry_answer.delete(0, tk.END)
        self.word_frame.place_forget()  # =EC=B4=88=EA=B8=B0 =ED=99=94=EB=
=A9=B4=EC=97=90=EC=84=9C=EB=8A=94 =EC=9E=85=EB=A0=A5 =ED=95=84=EB=93=9C=EB=
=A5=BC =EC=88=A8=EA=B9=80
        self.label_info_image.place_forget()  # =EA=B2=8C=EC=9E=84 =EC=A0=
=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=88=A8=EA=B9=80
        # =EA=B2=8C=EC=9E=84 =EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC=EC=9D=84=
 =EB=8B=A4=EC=8B=9C =ED=91=9C=EC=8B=9C
        self.button_start.place(x=3D325, y=3D280)
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =ED=94=84=EB=A0=88=EC=9E=84=
=EA=B3=BC =EB=9D=BC=EB=B2=A8=EC=9D=84 =EB=8B=A4=EC=8B=9C =EB=B0=B0=EC=B9=98
        self.leaderboard_label.place(x=3D375, y=3D370, anchor=3D"center")
        self.leaderboard_frame.place(x=3D375, y=3D425, anchor=3D"center")
        # =EB=A6=AC=EB=8D=94=EB=B3=B4=EB=93=9C =EB=82=B4=EC=9A=A9=EC=9D=84 =
=EA=B0=B1=EC=8B=A0
        self.display_leaderboard()
        self.image_label.config(image=3Dself.images[self.level])

if __name__ =3D=3D "__main__":
    current_user =3D sys.argv[1] if len(sys.argv) &gt; 1 else 'default_user=
'
    app =3D GameApp(current_user)
    app.mainloop()

=EA=B7=B8=EB=9F=AC=EB=A9=B4 =EC=97=AC=EA=B8=B0=EC=84=9C =EC=9D=B4=EC=A0=84=
=EC=9C=BC=EB=A1=9C =EB=B2=84=ED=8A=BC=EC=9D=B4=EB=9E=91 =EA=B2=8C=EC=9E=84=
=EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=83=89=
=EC=9D=84 =EC=A1=B0=EC=A0=95=ED=95=B4=EB=B4=90<div class=3D"absolute bottom=
-0 right-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:=
block"><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9=
 items-center justify-center rounded-full text-token-text-secondary transit=
ion hover:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" cla=
ss=3D"icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.2=
93 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.19=
7l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414=
l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.83=
7L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" cli=
p-rule=3D"evenodd"></path></svg></button></span></div></div></div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" dir=3D"auto" data-testid=3D"conversation-turn-151" data-scroll-anchor=
=3D"false"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto=
 md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base=
 juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"=
><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div cl=
ass=3D"pt-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items=
-center justify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><d=
iv class=3D"relative p-1 rounded-sm flex items-center justify-center bg-tok=
en-main-surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" =
height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">Ch=
atGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.=
9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404=
 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85=
078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249=
 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214=
C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3=
414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 =
14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 =
3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.72=
56 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 3=
6.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0=
786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998=
C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35=
.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115=
 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.=
0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.88=
49C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 3=
6.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.381=
3 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 2=
0.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842=
 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.=
6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.513=
97 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 =
5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.90=
2C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7=
321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893=
 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34=
.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17=
156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228=
 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4=
8312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979=
C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28=
.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.5528=
9 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L2=
2.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4=
787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967=
 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4=
832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086=
 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30=
.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348=
 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.=
9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 =
10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.=
9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.104=
8 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 2=
8.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40=
939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055=
 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 1=
0.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8=
107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659=
 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3=
5876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668=
 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14=
.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.99=
91L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V1=
7.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col =
agent-turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"assistant" data-=
message-id=3D"efa02f79-d436-4c1f-b9a3-c5ea2039d0d3" dir=3D"auto" class=3D"m=
in-h-[20px] text-message flex flex-col items-start whitespace-pre-wrap brea=
k-words [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-=
auto gap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden jui=
ce:first:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:pro=
se-invert light"><p>=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C =EB=B2=84=ED=8A=BC=
=EA=B3=BC =EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=BC=EC=9D=98 =
=EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 =EC=A1=B0=EC=A0=95=ED=95=98=EB=A0=A4=
=EB=A9=B4, =EB=B2=84=ED=8A=BC =EC=83=9D=EC=84=B1 =EC=8B=9C <code>bg</code> =
=EC=86=8D=EC=84=B1=EC=9D=84 =EC=84=A4=EC=A0=95=ED=95=98=EA=B3=A0, =EB=B2=84=
=ED=8A=BC=EC=9D=98 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EC=9C=84=EC=97=90 =EC=84=A4=
=EC=A0=95=EB=90=9C =EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=B4 =EB=B0=98=EC=98=81=
=EB=90=98=EB=8F=84=EB=A1=9D =ED=95=B4=EC=95=BC =ED=95=A9=EB=8B=88=EB=8B=A4.=
 =EC=9D=B4=EB=A5=BC =EC=9C=84=ED=95=B4 =EA=B8=B0=EC=A1=B4=EC=9D=98 =EB=B2=
=84=ED=8A=BC =EC=83=9D=EC=84=B1 =EB=B0=A9=EC=8B=9D=EC=9D=84 =EC=88=98=EC=A0=
=95=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4.</p><pre><div cla=
ss=3D"dark bg-gray-950 rounded-md border-[0.5px] border-token-border-medium=
"><div class=3D"flex items-center relative text-token-text-secondary bg-tok=
en-main-surface-secondary px-4 py-2 text-xs font-sans justify-between round=
ed-t-md"><span>python</span><div class=3D"flex items-center"><span class=3D=
"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg xml=
ns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" =
viewBox=3D"0 0 24 24" class=3D"icon-sm"><path fill=3D"currentColor" fill-ru=
le=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2=
a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a=
1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0=
 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></sv=
g>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=AC</button></span></div></div><div cla=
ss=3D"overflow-y-auto p-4 text-left undefined" dir=3D"ltr"><code class=3D"!=
whitespace-pre hljs language-python"><span class=3D"hljs-keyword">import</s=
pan> tkinter <span class=3D"hljs-keyword">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk, messagebox
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> PhotoImage, Label
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> random
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> font <span class=3D"hljs-keyword">as</span> tkFont
<span class=3D"hljs-keyword">import</span> os

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk.Tk):
    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">__init__</span>(<span class=3D"hljs-params">self, current_user</span>=
):
        <span class=3D"hljs-built_in">super</span>().__init__()
        self.geometry(<span class=3D"hljs-string">"750x530"</span>)
        self.title(<span class=3D"hljs-string">"=EC=88=98=EB=AD=89=EC=9D=B4=
 =ED=82=A4=EC=9A=B0=EA=B8=B0 =EA=B2=8C=EC=9E=84"</span>)
        self.configure(bg=3D<span class=3D"hljs-string">'#ffffff'</span>)  =
<span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD=EC=83=89 =EC=84=A4=EC=A0=
=95</span>

        self.db =3D self.connect_database()
        self.cursor =3D self.db.cursor()
        self.current_user =3D current_user
        self.game_duration =3D <span class=3D"hljs-number">4</span>
        self.setup_game_variables()
        self.setup_ui()

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">connect_database</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-keyword">return</span> mysql.connector.connect(
            host=3D<span class=3D"hljs-string">"ystdb.cl260eouqhjz.ap-north=
east-2.rds.amazonaws.com"</span>,
            user=3D<span class=3D"hljs-string">"admin"</span>,
            password=3D<span class=3D"hljs-string">"seat0323"</span>,
            database=3D<span class=3D"hljs-string">"wordbook"</span>
        )

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_game_variables</span>(<span class=3D"hljs-params">self</span>):
        self.current_score =3D <span class=3D"hljs-number">0</span>
        self.level =3D <span class=3D"hljs-number">1</span>
        self.start_time =3D time.time()
        self.game_active =3D <span class=3D"hljs-literal">False</span>
        self.images =3D self.load_images()
        self.correct_image =3D self.load_image(<span class=3D"hljs-string">=
"=EC=88=98=EB=AD=89=EC=9D=B4=EC=A0=95=EB=8B=B5=EC=9A=A9.png"</span>, (<span=
 class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>), a=
lpha=3D<span class=3D"hljs-literal">True</span>)
        self.incorrect_image =3D self.load_image(<span class=3D"hljs-string=
">"=EC=88=98=EB=AD=89=EC=9D=B4=EC=98=A4=EB=8B=B5=EC=9A=A9.png"</span>, (<sp=
an class=3D"hljs-number">50</span>, <span class=3D"hljs-number">50</span>),=
 alpha=3D<span class=3D"hljs-literal">True</span>)
        self.info_image =3D self.load_image(<span class=3D"hljs-string">"=
=EA=B2=8C=EC=9E=84=EC=A0=95=EB=B3=B4=EC=88=98=EB=AD=89=EC=9D=B4.png"</span>=
, (<span class=3D"hljs-number">275</span>, <span class=3D"hljs-number">181<=
/span>), alpha=3D<span class=3D"hljs-literal">True</span>)  <span class=3D"=
hljs-comment"># =EA=B2=8C=EC=9E=84 =EC=A0=95=EB=B3=B4 =EC=9D=B4=EB=AF=B8=EC=
=A7=80 =EC=B6=94=EA=B0=80</span>

    <span class=3D"hljs-keyword">def</span> <span class=3D"hljs-title funct=
ion_">setup_ui</span>(<span class=3D"hljs-params">self</span>):
        <span class=3D"hljs-comment"># =EB=B0=B0=EA=B2=BD =EC=9D=B4=EB=AF=
=B8=EC=A7=80 =EB=A1=9C=EB=93=9C =EB=B0=8F =EC=84=A4=EC=A0=95</span>
        self.background_image =3D self.load_background_image(<span class=3D=
"hljs-string">"=EA=B2=8C=EC=9E=84=EB=B0=B0=EA=B2=BD.jpg"</span>, (<span cla=
ss=3D"hljs-number">750</span>, <span class=3D"hljs-number">530</span>))
        self.bg_label =3D Label(self, image=3Dself.background_image)
        self.bg_label.place(x=3D<span class=3D"hljs-number">0</span>, y=3D<=
span class=3D"hljs-number">0</span>, relwidth=3D<span class=3D"hljs-number"=
>1</span>, relheight=3D<span class=3D"hljs-number">1</span>)

        self.back_button =3D self.create_image_button(<span class=3D"hljs-s=
tring">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=EC=9D=BC=EB=B0=98.png"</span>,=
 <span class=3D"hljs-string">"=EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C=ED=98=B8=
=EB=B2=84.png"</span>, <span class=3D"hljs-keyword">lambda</span>: Util.Swi=
tchPage(self, <span class=3D"hljs-string">"UserMainPage"</span>, self.curre=
nt_user), <span class=3D"hljs-number">50</span>, <span class=3D"hljs-number=
">30</span>, bg_color=3D<span class=3D"hljs-string">'#48B8FA'</span>)
        self.back_button.place(x=3D<span class=3D"hljs-number">10</span>
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 z-10 -mt-1 bg-token-main-surface-primary md:absolute md:border m=
d:border-token-border-light md:hidden"><div class=3D"flex items-center"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M11 4.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6=
.49129 7.90626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00=
005V15C3 15.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.26=
29L10.1621 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.=
06701C10.4142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.40=
3 8.81069 20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 =
2.34315 6.00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 =
6.09313 21.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.99=
96 12.0001C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 =
20.8695 17.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.=
1962C20.6249 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.606=
4 8.98627 19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM=
15.7994 7.90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.185=
93 18.4996 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 =
15.5604C17.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.=
4632 14.9255 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001=
C16.4996 10.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.=
23218 15.7994 7.90049Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-lg t=
ext-token-text-secondary hover:bg-token-main-surface-secondary"><span class=
=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"=
0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D=
"evenodd" d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 =
0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0=
 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 =
1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></s=
pan></button></span><div class=3D"flex"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"rounded-lg text-token-text-secondary hover:bg-token-ma=
in-surface-secondary"><span class=3D"flex h-[30px] w-[30px] items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21=
.8466 11.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.368=
55 19.1665 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.=
0732 9.94753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19=
.6614 2 21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H=
16.0045C15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 =
4H8.29589C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574=
 11.746 5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.=
4059C9.99743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661=
 18.5002 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14=
.4376 13.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.004=
5 13V5C17.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 =
4.44772 19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=
=3D"currentColor"></path></svg></span></button></span></div><span class=3D"=
" data-state=3D"closed"><button type=3D"button" id=3D"radix-:r2g8:" aria-ha=
spopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"curs=
or-pointer rounded-md px-1 text-token-text-secondary h-[30px] hover:bg-toke=
n-main-surface-secondary"><div class=3D"flex items-center pb-0.5 juice:pb-0=
"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]:w-full icon-md h-4 w-4"><svg=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"no=
ne" viewBox=3D"0 0 24 24"><path fill=3D"currentColor" d=3D"M19.898.855a.4.4=
 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305-.503.503-1.241.82-2.306.943a=
.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.942.512.504.836 1.241.93 2.29=
6a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.308.515-.516 1.269-.839 2.306-=
.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.418-2.296-.93-.506-.516-.823-1=
.27-.941-2.317Z"></path><path fill=3D"currentColor" d=3D"M12.001 1.5a1 1 0 =
0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1.34 1.366 3.3 2.223 6.095 2.4=
7a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6.123 2.467-1.373 1.374-2.229 =
3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.795-1.105-4.754-2.47-6.095-1.=
372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002-1.987c2.818-.325 4.779-1.165=
 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A1 1 0 0 1 12 1.5ZM6.725 11.99=
8c1.234.503 2.309 1.184 3.21 2.069.877.861 1.56 1.888 2.063 3.076.5-1.187 1=
.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094-2.05-1.188-.503-2.215-1.187-=
3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.505 1.235-1.19 2.3-2.081 3.19=
2-.891.89-1.957 1.576-3.192 2.082Z"></path></svg></div><span class=3D"line-=
clamp-1 text-sm" style=3D"opacity: 0; padding-left: 0px; width: 0px;">4o</s=
pan><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"24" height=3D"24" fi=
ll=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm text-token-text-quaterna=
ry"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M5.293 9.293a1 1=
 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1 1.414 1.414l-6 6a1 1 0 0 1-1=
.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"evenodd"></path></svg></div></b=
utton></span></div></div></div><div class=3D"pr-2 lg:pr-0"></div></div></di=
v></div></div></div><div class=3D"w-full text-token-text-primary" dir=3D"au=
to" data-testid=3D"conversation-turn-152" data-scroll-anchor=3D"false"><div=
 class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 lg:px-=
1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:gap-4 ju=
ice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2c0ba-ec1f=
-41e9-b04e-9ad8fb55b24f" dir=3D"auto" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start whitespace-pre-wrap break-words [.text-message+&amp=
;]:mt-5 juice:w-full juice:items-end overflow-x-auto gap-2"><div class=3D"f=
lex w-full flex-col gap-1 juice:empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[70%] rounded-3xl bg-[#f4f4f4] px-5 py-2.5 dark:b=
g-token-main-surface-secondary">=EA=B7=B8=EB=9F=AC=EB=8B=88=EA=B9=90 =EB=82=
=B4 =EB=A7=90=EC=9D=80 =EC=9D=B4=EC=A0=84=EC=9C=BC=EB=A1=9C =EB=B2=84=ED=8A=
=BC=EC=9D=B4=EB=9E=91 =EA=B2=8C=EC=9E=84=EC=8B=9C=EC=9E=91 =EB=B2=84=ED=8A=
=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=
=8C =ED=95=B4=EB=B3=B4=EB=9D=BC=EA=B3=A0<div class=3D"absolute bottom-0 rig=
ht-full top-0 -mr-3.5 hidden pr-5 pt-1 group-hover/conversation-turn:block"=
><span class=3D"" data-state=3D"closed"><button class=3D"flex h-9 w-9 items=
-center justify-center rounded-full text-token-text-secondary transition ho=
ver:bg-token-main-surface-tertiary"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"=
icon-md"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M13.293 4.2=
93a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.7=
36.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.38=
6 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.5=
86 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule=
=3D"evenodd"></path></svg></button></span></div></div></div></div></div></d=
iv></div></div></div></div><div class=3D"w-full text-token-text-primary" di=
r=3D"auto" data-testid=3D"conversation-turn-153" data-scroll-anchor=3D"true=
"><div class=3D"py-2 juice:py-[18px] px-3 text-base md:px-4 m-auto md:px-5 =
lg:px-1 xl:px-5"><div class=3D"mx-auto flex flex-1 gap-3 text-base juice:ga=
p-4 juice:md:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]"><div cla=
ss=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt=
-0.5 juice:pt-0"><div class=3D"gizmo-bot-avatar flex h-6 w-6 items-center j=
ustify-center overflow-hidden rounded-full juice:h-8 juice:w-8"><div class=
=3D"relative p-1 rounded-sm flex items-center justify-center bg-token-main-=
surface-primary text-token-text-primary h-8 w-8"><svg width=3D"41" height=
=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT<=
/text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 1=
2.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.98=
82 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24=
.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491=
269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.63=
35 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.=
8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.159=
1 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 =
24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.4=
0701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013=
C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39=
.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.63=
07 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 =
32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.98=
74 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 2=
2.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.=
7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586=
 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9=
378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C=
29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.07=
07 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C2=
6.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.=
4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7346=
1 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.5=
83 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29=
.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.68=
29 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C=
9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12=
.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.194=
91 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 2=
0.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.18=
94 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 1=
5.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3=
046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312=
 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25=
.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.84=
9 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24=
.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.94=
15 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V=
21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.15=
4 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 3=
5.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.094=
3C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C1=
6.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9=
068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383=
 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34=
.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.01=
28ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309=
 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.=
18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.12=
75 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 2=
2.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.984=
73L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 =
10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.=
4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991=
Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"2717f249-8289-4e15-8030-459f283c6ec6" dir=3D"auto" class=3D"min-h-[=
20px] text-message flex flex-col items-start whitespace-pre-wrap break-word=
s [.text-message+&amp;]:mt-5 juice:w-full juice:items-end overflow-x-auto g=
ap-2"><div class=3D"flex w-full flex-col gap-1 juice:empty:hidden juice:fir=
st:pt-[3px]"><div class=3D"markdown prose w-full break-words dark:prose-inv=
ert light"><p>=EC=95=8C=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=B2=84=ED=
=8A=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=9D=84 =ED=88=AC=EB=AA=85=ED=95=98=EA=
=B2=8C =EB=A7=8C=EB=93=9C=EB=8A=94 =EB=B0=A9=EB=B2=95=EC=9D=84 =EC=8B=9C=EB=
=8F=84=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=EB=8B=88=EB=8B=A4. =EB=B2=84=ED=
=8A=BC =EC=9E=90=EC=B2=B4=EB=8A=94 =ED=88=AC=EB=AA=85=ED=95=98=EA=B2=8C =ED=
=95=A0 =EC=88=98 =EC=97=86=EC=A7=80=EB=A7=8C, =EB=B2=84=ED=8A=BC=EC=9D=98 =
=EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84 =EC=9D=B4=EB=AF=B8=EC=A7=80=EC=9D=98 =
=EC=83=89=EC=83=81=EA=B3=BC =EC=9D=BC=EC=B9=98=EC=8B=9C=ED=82=A4=EA=B3=A0, =
=EB=B2=84=ED=8A=BC=EC=9D=98 =ED=85=8C=EB=91=90=EB=A6=AC=EB=A5=BC =EC=97=86=
=EC=95=A0=EC=84=9C =EC=B5=9C=EB=8C=80=ED=95=9C =ED=88=AC=EB=AA=85=ED=95=9C =
=ED=9A=A8=EA=B3=BC=EB=A5=BC =EC=A4=84 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=
=EB=8B=A4. =EB=B2=84=ED=8A=BC=EC=9D=98 =EB=B0=B0=EA=B2=BD=EC=83=89=EC=9D=84=
 =EC=84=A4=EC=A0=95=ED=95=98=EA=B3=A0 =EC=9D=B4=EB=AF=B8=EC=A7=80 =EB=B0=B0=
=EA=B2=BD=EC=83=89=EA=B3=BC =EB=A7=9E=EC=B6=94=EB=8A=94 =EB=B0=A9=EC=8B=9D=
=EC=9C=BC=EB=A1=9C =EC=A7=84=ED=96=89=ED=95=B4=EB=B3=B4=EA=B2=A0=EC=8A=B5=
=EB=8B=88=EB=8B=A4.</p><p>=EB=8B=A4=EC=9D=8C=EA=B3=BC =EA=B0=99=EC=9D=B4 =
=EC=BD=94=EB=93=9C=EB=A5=BC =EC=88=98=EC=A0=95=ED=95=98=EA=B2=A0=EC=8A=B5=
=EB=8B=88=EB=8B=A4:</p><pre><div class=3D"dark bg-gray-950 rounded-md borde=
r-[0.5px] border-token-border-medium"><div class=3D"flex items-center relat=
ive text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 tex=
t-xs font-sans justify-between rounded-t-md"><span>python</span><div class=
=3D"flex items-center"><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg xmlns=3D"http://www.w3.org/2000/svg" widt=
h=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-sm=
"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M7 5a3 3 0 0 1 3-3=
h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9a3 3 =
0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-9a1 1 0=
 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-=
1z" clip-rule=3D"evenodd"></path></svg>=EC=BD=94=EB=93=9C =EB=B3=B5=EC=82=
=AC</button></span></div></div><div class=3D"overflow-y-auto p-4 text-left =
undefined" dir=3D"ltr"><code class=3D"!whitespace-pre hljs language-python"=
><span class=3D"hljs-keyword">import</span> tkinter <span class=3D"hljs-key=
word">as</span> tk
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> ttk, messagebox
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> PhotoImage, Label
<span class=3D"hljs-keyword">import</span> mysql.connector
<span class=3D"hljs-keyword">import</span> random
<span class=3D"hljs-keyword">import</span> time
<span class=3D"hljs-keyword">import</span> sys
<span class=3D"hljs-keyword">from</span> PIL <span class=3D"hljs-keyword">i=
mport</span> Image, ImageTk
<span class=3D"hljs-keyword">from</span> Util <span class=3D"hljs-keyword">=
import</span> Util
<span class=3D"hljs-keyword">from</span> tkinter <span class=3D"hljs-keywor=
d">import</span> font <span class=3D"hljs-keyword">as</span> tkFont
<span class=3D"hljs-keyword">import</span> os

<span class=3D"hljs-keyword">class</span> <span class=3D"hljs-title class_"=
>GameApp</span>(tk
</code></div></div></pre></div></div></div></div><div class=3D"mt-1 flex ga=
p-3 empty:hidden juice:-ml-3"><div class=3D"items-center justify-start roun=
ded-xl p-1 flex"><div class=3D"z-10 flex items-center justify-center rounde=
d-lg text-token-text-secondary"><button class=3D"flex h-[30px] w-[30px] ite=
ms-center justify-center rounded-md hover:bg-token-main-surface-secondary d=
isabled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=3D"http://www.=
w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24=
 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"eveno=
dd" d=3D"M14.707 5.293a1 1 0 0 1 0 1.414L9.414 12l5.293 5.293a1 1 0 0 1-1.4=
14 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0" clip-rule=3D"evenodd=
"></path></svg></button><div class=3D"px-0.5 text-sm font-semibold tabular-=
nums">5/5</div><button disabled=3D"" class=3D"flex h-[30px] w-[30px] items-=
center justify-center rounded-md hover:bg-token-main-surface-secondary disa=
bled:opacity-50 disabled:hover:bg-transparent"><svg xmlns=3D"http://www.w3.=
org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24=
" class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd"=
 d=3D"M9.293 18.707a1 1 0 0 1 0-1.414L14.586 12 9.293 6.707a1 1 0 0 1 1.414=
-1.414l6 6a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414 0" clip-rule=3D"evenodd">=
</path></svg></button></div><div class=3D"flex items-center"><span class=3D=
"" data-state=3D"closed"><button class=3D"rounded-lg text-token-text-second=
ary hover:bg-token-main-surface-secondary"><span class=3D"flex h-[30px] w-[=
30px] items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4=
.9099C11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.9=
0626 6.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 1=
5.5523 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621=
 19.4588C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4=
142 1.59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 =
20.9331L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.=
00005 4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21=
.409 6.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001=
C22.9996 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17=
.8054 20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.62=
49 14.9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 =
19.9149 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.=
90049C16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996=
 10.5379 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17=
.1357 16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.92=
55 15.766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 1=
0.9859 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7=
994 7.90049Z" fill=3D"currentColor"></path></svg></span></button></span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-=
text-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h=
-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"http://www.w3.o=
rg/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"=
 class=3D"icon-md-heavy"><path fill=3D"currentColor" fill-rule=3D"evenodd" =
d=3D"M7 5a3 3 0 0 1 3-3h9a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3h-2v2a3 3 0 0 1-3 3H=
5a3 3 0 0 1-3-3v-9a3 3 0 0 1 3-3h2zm2 2h5a3 3 0 0 1 3 3v5h2a1 1 0 0 0 1-1V5=
a1 1 0 0 0-1-1h-9a1 1 0 0 0-1 1zM5 9a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h9a1 1 0 =
0 0 1-1v-9a1 1 0 0 0-1-1z" clip-rule=3D"evenodd"></path></svg></span></butt=
on></span><span class=3D"" data-state=3D"closed"><button class=3D"rounded-l=
g text-token-text-secondary hover:bg-token-main-surface-secondary"><span cl=
ass=3D"flex h-[30px] w-[30px] items-center justify-center"><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" width=3D"24" height=3D"24" fill=3D"none" viewBox=
=3D"0 0 24 24" class=3D"icon-md-heavy"><path fill=3D"currentColor" d=3D"M3.=
07 10.876C3.623 6.436 7.41 3 12 3a9.15 9.15 0 0 1 6.012 2.254V4a1 1 0 1 1 2=
 0v4a1 1 0 0 1-1 1H15a1 1 0 1 1 0-2h1.957A7.15 7.15 0 0 0 12 5a7 7 0 0 0-6.=
946 6.124 1 1 0 1 1-1.984-.248m16.992 1.132a1 1 0 0 1 .868 1.116C20.377 17.=
564 16.59 21 12 21a9.15 9.15 0 0 1-6-2.244V20a1 1 0 1 1-2 0v-4a1 1 0 0 1 1-=
1h4a1 1 0 1 1 0 2H7.043A7.15 7.15 0 0 0 12 19a7 7 0 0 0 6.946-6.124 1 1 0 0=
 1 1.116-.868"></path></svg></span></button></span><div class=3D"flex"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"rounded-lg text-token-t=
ext-secondary hover:bg-token-main-surface-secondary"><span class=3D"flex h-=
[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22.0423 10.8805 21.9922L10.426=
7 21.9355C7.95958 21.6271 6.36855 19.1665 7.09975 16.7901L7.65054 15H6.9322=
6C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.43684 4.94753C4.91145 3.20728=
 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 3.34315 21.0045 5V12C21.0045=
 13.6569 19.6614 15 18.0045 15H16.0045C15.745 15 15.5054 15.1391 15.3766 15=
.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.39399 4 6.60367 4.60364 6.36637 =
5.47376L5.00273 10.4738C4.65574 11.746 5.61351 13 6.93226 13H9.00451C9.3218=
5 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.6612 10.0536 13.9908 9.96028=
 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608 19.6596 10.4726 19.9153L13.=
6401 14.3721C13.9523 13.8258 14.4376 13.4141 15.0045 13.1902V5C15.0045 4.44=
772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4.64937 16.9444 4.31278 16.83=
38 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 5V12C19.0045 12.5523 18.5568=
 13 18.0045 13H17.0045Z" fill=3D"currentColor"></path></svg></span></button=
></span></div><span class=3D"" data-state=3D"closed"><button type=3D"button=
" id=3D"radix-:r2gh:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-s=
tate=3D"closed" class=3D"cursor-pointer rounded-md px-1 text-token-text-sec=
ondary h-[30px] hover:bg-token-main-surface-secondary"><div class=3D"flex i=
tems-center pb-0.5 juice:pb-0"><div class=3D"[&amp;_svg]:h-full [&amp;_svg]=
:w-full icon-md h-4 w-4"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D=
"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"curren=
tColor" d=3D"M19.898.855a.4.4 0 0 0-.795 0c-.123 1.064-.44 1.802-.943 2.305=
-.503.503-1.241.82-2.306.943a.4.4 0 0 0 .001.794c1.047.119 1.801.436 2.317.=
942.512.504.836 1.241.93 2.296a.4.4 0 0 0 .796 0c.09-1.038.413-1.792.93-2.3=
08.515-.516 1.269-.839 2.306-.928a.4.4 0 0 0 .001-.797c-1.055-.094-1.792-.4=
18-2.296-.93-.506-.516-.823-1.27-.941-2.317Z"></path><path fill=3D"currentC=
olor" d=3D"M12.001 1.5a1 1 0 0 1 .993.887c.313 2.77 1.153 4.775 2.5 6.146 1=
.34 1.366 3.3 2.223 6.095 2.47a1 1 0 0 1-.003 1.993c-2.747.238-4.75 1.094-6=
.123 2.467-1.373 1.374-2.229 3.376-2.467 6.123a1 1 0 0 1-1.992.003c-.248-2.=
795-1.105-4.754-2.47-6.095-1.372-1.347-3.376-2.187-6.147-2.5a1 1 0 0 1-.002=
-1.987c2.818-.325 4.779-1.165 6.118-2.504 1.339-1.34 2.179-3.3 2.504-6.118A=
1 1 0 0 1 12 1.5ZM6.725 11.998c1.234.503 2.309 1.184 3.21 2.069.877.861 1.5=
6 1.888 2.063 3.076.5-1.187 1.18-2.223 2.051-3.094.871-.87 1.907-1.55 3.094=
-2.05-1.188-.503-2.215-1.187-3.076-2.064-.885-.901-1.566-1.976-2.069-3.21-.=
505 1.235-1.19 2.3-2.081 3.192-.891.89-1.957 1.576-3.192 2.082Z"></path></s=
vg></div><span class=3D"line-clamp-1 text-sm" style=3D"opacity: 0; padding-=
left: 0px; width: 0px;">4o</span><svg xmlns=3D"http://www.w3.org/2000/svg" =
width=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"ico=
n-sm text-token-text-quaternary"><path fill=3D"currentColor" fill-rule=3D"e=
venodd" d=3D"M5.293 9.293a1 1 0 0 1 1.414 0L12 14.586l5.293-5.293a1 1 0 1 1=
 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 0-1.414" clip-rule=3D"ev=
enodd"></path></svg></div></button></span></div></div></div><div class=3D"p=
r-2 lg:pr-0"></div></div></div></div></div></div><button class=3D"cursor-po=
inter absolute z-10 rounded-full bg-clip-padding border text-token-text-sec=
ondary border-token-border-light right-1/2 juice:translate-x-1/2 bg-token-m=
ain-surface-primary bottom-5"><svg xmlns=3D"http://www.w3.org/2000/svg" wid=
th=3D"24" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24" class=3D"icon-m=
d m-1 text-token-text-primary"><path fill=3D"currentColor" fill-rule=3D"eve=
nodd" d=3D"M12 21a1 1 0 0 1-.707-.293l-7-7a1 1 0 1 1 1.414-1.414L11 17.586V=
4a1 1 0 1 1 2 0v13.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-7 7A1 1 0 0 1 12 =
21" clip-rule=3D"evenodd"></path></svg></button></div></div></div><button c=
lass=3D"react-scroll-to-bottom--css-mvqmu-1tj0vk3 scroll-convo" type=3D"but=
ton"></button></div></div><div class=3D"w-full md:pt-0 dark:border-white/20=
 md:border-transparent md:dark:border-transparent md:w-[calc(100%-.5rem)] j=
uice:w-full" style=3D"padding-left: 0px; padding-right: 0px;"><div class=3D=
"px-3 text-base md:px-4 m-auto md:px-5 lg:px-1 xl:px-5"><div class=3D"mx-au=
to flex flex-1 gap-3 text-base juice:gap-4 juice:md:gap-6 md:max-w-3xl lg:m=
ax-w-[40rem] xl:max-w-[48rem]"><form class=3D"w-full"><div class=3D"relativ=
e flex h-full max-w-full flex-1 flex-col"><div class=3D"absolute bottom-ful=
l left-0 right-0"></div><div class=3D"flex w-full items-center"><div class=
=3D"flex w-full flex-col gap-1.5 rounded-[26px] p-1.5 transition-colors bg-=
[#f4f4f4] dark:bg-token-main-surface-secondary"><div class=3D"flex items-en=
d gap-1.5 md:gap-3.5"><div class=3D""><div class=3D"flex flex-col"><input m=
ultiple=3D"" type=3D"file" tabindex=3D"-1" class=3D"hidden" style=3D"displa=
y: none;"><button type=3D"button" id=3D"radix-:r1t1:" aria-haspopup=3D"menu=
" aria-expanded=3D"false" data-state=3D"closed" class=3D"text-token-text-pr=
imary border border-transparent inline-flex items-center justify-center gap=
-1 rounded-lg text-sm dark:transparent dark:bg-transparent leading-none out=
line-none cursor-pointer hover:bg-token-main-surface-secondary dark:hover:b=
g-token-main-surface-secondary focus-visible:bg-token-main-surface-secondar=
y radix-state-active:text-token-text-secondary radix-disabled:cursor-auto r=
adix-disabled:bg-transparent radix-disabled:text-token-text-tertiary dark:r=
adix-disabled:bg-transparent m-0 h-0 w-0 border-none bg-transparent p-0"></=
button><button class=3D"flex items-center justify-center text-token-text-pr=
imary juice:h-8 juice:w-8 dark:text-white juice:rounded-full focus-visible:=
outline-black dark:focus-visible:outline-white juice:mb-1 juice:ml-[3px]" a=
ria-disabled=3D"false"><svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"2=
4" height=3D"24" fill=3D"none" viewBox=3D"0 0 24 24"><path fill=3D"currentC=
olor" fill-rule=3D"evenodd" d=3D"M9 7a5 5 0 0 1 10 0v8a7 7 0 1 1-14 0V9a1 1=
 0 0 1 2 0v6a5 5 0 0 0 10 0V7a3 3 0 1 0-6 0v8a1 1 0 1 0 2 0V9a1 1 0 1 1 2 0=
v6a3 3 0 1 1-6 0z" clip-rule=3D"evenodd"></path></svg></button><div type=3D=
"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-controls=3D"=
radix-:r1t3:" data-state=3D"closed"></div></div></div><div class=3D"flex mi=
n-w-0 flex-1 flex-col"><textarea id=3D"prompt-textarea" tabindex=3D"0" data=
-id=3D"2717f249-8289-4e15-8030-459f283c6ec6" dir=3D"auto" rows=3D"1" placeh=
older=3D"=EB=A9=94=EC=8B=9C=EC=A7=80 ChatGPT" class=3D"m-0 resize-none bord=
er-0 bg-transparent px-0 text-token-text-primary focus:ring-0 focus-visible=
:ring-0 max-h-[25dvh] max-h-52" style=3D"height: 40px; overflow-y: hidden;"=
></textarea></div><button disabled=3D"" data-testid=3D"fruitjuice-send-butt=
on" class=3D"mb-1 me-1 flex h-8 w-8 items-center justify-center rounded-ful=
l bg-black text-white transition-colors hover:opacity-70 focus-visible:outl=
ine-none focus-visible:outline-black disabled:bg-[#D7D7D7] disabled:text-[#=
f4f4f4] disabled:hover:opacity-100 dark:bg-white dark:text-black dark:focus=
-visible:outline-white disabled:dark:bg-token-text-quaternary dark:disabled=
:text-token-main-surface-secondary"><svg xmlns=3D"http://www.w3.org/2000/sv=
g" width=3D"32" height=3D"32" fill=3D"none" viewBox=3D"0 0 32 32" class=3D"=
icon-2xl"><path fill=3D"currentColor" fill-rule=3D"evenodd" d=3D"M15.192 8.=
906a1.143 1.143 0 0 1 1.616 0l5.143 5.143a1.143 1.143 0 0 1-1.616 1.616l-3.=
192-3.192v9.813a1.143 1.143 0 0 1-2.286 0v-9.813l-3.192 3.192a1.143 1.143 0=
 1 1-1.616-1.616z" clip-rule=3D"evenodd"></path></svg></button></div></div>=
</div></div></form></div></div><div class=3D"relative px-2 py-2 text-center=
 text-xs text-token-text-secondary md:px-[60px]"><span>ChatGPT=EB=8A=94 =EC=
=8B=A4=EC=88=98=EB=A5=BC =ED=95=A0 =EC=88=98 =EC=9E=88=EC=8A=B5=EB=8B=88=EB=
=8B=A4. =EC=A4=91=EC=9A=94=ED=95=9C =EC=A0=95=EB=B3=B4=EB=A5=BC =ED=99=95=
=EC=9D=B8=ED=95=98=EC=84=B8=EC=9A=94.</span></div></div></div><div class=3D=
"group fixed bottom-3 end-3 z-10 hidden gap-1 lg:flex"><button class=3D"fle=
x h-6 w-6 items-center justify-center rounded-full border border-token-bord=
er-light text-xs text-token-text-secondary" type=3D"button" id=3D"radix-:r1=
t4:" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed">?=
</button></div></main></div></div><div class=3D"absolute left-0 right-0 top=
-0 z-[2]"></div><audio class=3D"fixed bottom-0 left-0 hidden h-0 w-0" autop=
lay=3D"" crossorigin=3D"anonymous"></audio></div><next-route-announcer><p a=
ria-live=3D"assertive" id=3D"__next-route-announcer__" role=3D"alert" style=
=3D"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px;=
 overflow: hidden; padding: 0px; position: absolute; top: 0px; width: 1px; =
white-space: nowrap; overflow-wrap: normal;">ChatGPT</p></next-route-announ=
cer><div portal-container=3D""><span class=3D"pointer-events-none fixed ins=
et-0 z-[60] mx-auto my-2 flex max-w-[560px] flex-col items-stretch justify-=
start md:pb-5"></span></div><div id=3D"enforcement-containerchatgpt-paid" t=
abindex=3D"0" style=3D"position: fixed; top: 0px; left: 0px; width: 100vw; =
height: 100vh; z-index: 1000; background-color: rgba(255, 255, 255, 0.85); =
align-items: center; box-sizing: border-box; flex-direction: column; justif=
y-content: center; text-align: center; opacity: 0; transition: opacity 0.5s=
 ease 0s; pointer-events: auto; display: none;"><div style=3D"position: fix=
ed; top: 20px; right: 20px; height: 20px; width: 20px; background-repeat: n=
o-repeat; background-position: center center; z-index: 1500; cursor: pointe=
r; transform: scale(1); background-image: url(&quot;data:image/svg+xml;base=
64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzhw=
eCIgaGVpZ2h0PSIzOHB4IiB2aWV3Qm94PSIwIDAgMzggMzgiIHZlcnNpb249IjEuMSIgeG1sbnM=
9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My=
5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDQ0LjEgKDQxNDU1K=
SAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT4KICAgIDx0aXRsZT5H=
cm91cDwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDx=
kZWZzPjwvZGVmcz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZH=
RoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJHc=
m91cCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTkuMDAwMDAwLCAxOS4wMDAwMDApIHJvdGF0ZSg0=
NS4wMDAwMDApIHRyYW5zbGF0ZSgtMTkuMDAwMDAwLCAtMTkuMDAwMDAwKSB0cmFuc2xhdGUoLTY=
uMDAwMDAwLCAtNi4wMDAwMDApIiBmaWxsPSIjOTQ5NDk0Ij4KICAgICAgICAgICAgPHJlY3QgaW=
Q9IlJlY3RhbmdsZSIgeD0iMjQiIHk9IjAiIHdpZHRoPSIyIiBoZWlnaHQ9IjUwIj48L3JlY3Q+C=
iAgICAgICAgICAgIDxyZWN0IGlkPSJSZWN0YW5nbGUiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDI1=
LjAwMDAwMCwgMjUuMDAwMDAwKSByb3RhdGUoOTAuMDAwMDAwKSB0cmFuc2xhdGUoLTI1LjAwMDA=
wMCwgLTI1LjAwMDAwMCkgIiB4PSIyNCIgeT0iMCIgd2lkdGg9IjIiIGhlaWdodD0iNTAiPjwvcm=
VjdD4KICAgICAgICA8L2c+CiAgICA8L2c+Cjwvc3ZnPg=3D=3D&quot;);"></div></div></b=
ody></html>
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0e679274-98e8-4b9c-8a31-4ad0116352af@mhtml.blink

@charset "utf-8";

.react-scroll-to-bottom--css-mvqmu-79elbk { position: relative; }

.react-scroll-to-bottom--css-mvqmu-1n7m0yu { height: 100%; overflow-y: auto=
; width: 100%; }

.react-scroll-to-bottom--css-mvqmu-1tj0vk3 { background-color: rgba(0, 0, 0=
, 0.2); border-radius: 10px; border-width: 0px; bottom: 5px; cursor: pointe=
r; height: 20px; outline: 0px; position: absolute; right: 20px; width: 20px=
; }

.react-scroll-to-bottom--css-mvqmu-1tj0vk3:hover { background-color: rgba(0=
, 0, 0, 0.4); }

.react-scroll-to-bottom--css-mvqmu-1tj0vk3:active { background-color: rgba(=
0, 0, 0, 0.6); }
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1b6ec8fb-5b97-4e1d-b7d5-0a6c8f549173@mhtml.blink

@charset "utf-8";

.r34K7X1zGgAi6DllVF3T { box-sizing: border-box; border: 0px; margin: 0px; p=
adding: 0px; z-index: 2147483647; pointer-events: none; visibility: hidden;=
 opacity: 0; transition: opacity 300ms linear 0s; height: 0px; width: 0px; =
max-height: 0px; overflow: hidden; display: block; }

.r34K7X1zGgAi6DllVF3T.active { display: block; visibility: visible; max-hei=
ght: none; overflow: visible; }

.r34K7X1zGgAi6DllVF3T.active.show { opacity: 1; pointer-events: inherit; po=
sition: inherit; }

.r34K7X1zGgAi6DllVF3T.active.show.in-situ { width: inherit; height: inherit=
; }

.r34K7X1zGgAi6DllVF3T.active.show.lightbox { position: fixed; inset: 0px; w=
idth: 100% !important; height: 100% !important; }
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/_next/static/css/3fa7e362c60113a3.css?dpl=0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0

@charset "utf-8";

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media/cir=
cle-400.d446e5e9.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 600; src: url("https://cdn.oaistatic.com/_next/static/media/cir=
cle-600.9eb377ad.woff2") format("woff2"); }

*, ::after, ::before { border: 0px solid rgb(227, 227, 227); box-sizing: bo=
rder-box; }

::after, ::before { --tw-content: ""; }

:host, html { text-size-adjust: 100%; font-feature-settings: normal; -webki=
t-tap-highlight-color: transparent; font-family: ui-sans-serif, -apple-syst=
em, system-ui, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-ser=
if, Helvetica, "Apple Color Emoji", Arial, "Segoe UI Emoji", "Segoe UI Symb=
ol"; font-variation-settings: normal; line-height: 1.5; tab-size: 4; }

body { line-height: inherit; margin: 0px; }

hr { border-top-width: 1px; color: inherit; height: 0px; }

abbr:where([title]) { text-decoration: underline dotted currentcolor; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-feature-settings: normal; font-family: ui-monos=
pace, SFMono-Regular, "SF Mono", Menlo, Consolas, "Liberation Mono", monosp=
ace; font-size: 1em; font-variation-settings: normal; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { border-collapse: collapse; border-color: inherit; text-indent: 0px;=
 }

button, input, optgroup, select, textarea { font-feature-settings: inherit;=
 color: inherit; font-family: inherit; font-size: 100%; font-variation-sett=
ings: inherit; font-weight: inherit; letter-spacing: inherit; line-height: =
inherit; margin: 0px; padding: 0px; }

button, select { text-transform: none; }

button, input:where([type=3D"button"]), input:where([type=3D"reset"]), inpu=
t:where([type=3D"submit"]) { appearance: button; background-color: transpar=
ent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, fieldset, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { =
margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

dialog { padding: 0px; }

textarea { resize: vertical; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(180, 180, 180); }

input::placeholder, textarea::placeholder { color: rgb(180, 180, 180); }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { height: auto; max-width: 100%; }

[hidden] { display: none; }

[multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"], [=
type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"],=
 [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=3D=
"week"], select, textarea { --tw-shadow: 0 0 transparent; appearance: none;=
 background-color: rgb(255, 255, 255); border-color: rgb(155, 155, 155); bo=
rder-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; =
padding: 0.5rem 0.75rem; }

[multiple]:focus, [type=3D"date"]:focus, [type=3D"datetime-local"]:focus, [=
type=3D"email"]:focus, [type=3D"month"]:focus, [type=3D"number"]:focus, [ty=
pe=3D"password"]:focus, [type=3D"search"]:focus, [type=3D"tel"]:focus, [typ=
e=3D"text"]:focus, [type=3D"time"]:focus, [type=3D"url"]:focus, [type=3D"we=
ek"]:focus, select:focus, textarea:focus { --tw-ring-inset: var(--tw-empty,=
/*!*/ /*!*/); --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --=
tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0=
 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow:=
 var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--t=
w-ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent s=
olid 2px; outline-offset: 2px; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(155, 155, 155); opacity: 1; }

input::placeholder, textarea::placeholder { color: rgb(155, 155, 155); opac=
ity: 1; }

::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

::-webkit-date-and-time-value { min-height: 1.5em; }

::-webkit-datetime-edit, ::-webkit-datetime-edit-day-field, ::-webkit-datet=
ime-edit-hour-field, ::-webkit-datetime-edit-meridiem-field, ::-webkit-date=
time-edit-millisecond-field, ::-webkit-datetime-edit-minute-field, ::-webki=
t-datetime-edit-month-field, ::-webkit-datetime-edit-second-field, ::-webki=
t-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg x=
mlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3E%=
3Cpath stroke=3D'%239B9B9B' stroke-linecap=3D'round' stroke-linejoin=3D'rou=
nd' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-pos=
ition: right 0.5rem center; background-repeat: no-repeat; background-size: =
1.5em 1.5em; padding-right: 2.5rem; -webkit-print-color-adjust: exact; }

[multiple] { background-image: none; background-position: 0px 0px; backgrou=
nd-repeat: repeat; background-size: initial; padding-right: 0.75rem; -webki=
t-print-color-adjust: inherit; }

[type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 transparent; appea=
rance: none; background-color: rgb(255, 255, 255); background-origin: borde=
r-box; border-color: rgb(155, 155, 155); border-width: 1px; color: rgb(37, =
99, 235); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px=
; -webkit-print-color-adjust: exact; user-select: none; vertical-align: mid=
dle; width: 1rem; }

[type=3D"checkbox"] { border-radius: 0px; }

[type=3D"radio"] { border-radius: 100%; }

[type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-inset: var(--=
tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 2px; --tw-ring-offset-color:=
 #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-ins=
et) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-rin=
g-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offse=
t: 2px; }

[type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color: c=
urrentcolor; background-position: 50% center; background-repeat: no-repeat;=
 background-size: 100% 100%; border-color: transparent; }

[type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;cha=
rset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://w=
ww.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1=
 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1=
.414 0z'/%3E%3C/svg%3E"); }

[type=3D"radio"]:checked { background-image: url("data:image/svg+xml;charse=
t=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://www.=
w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }

[type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [type=
=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-colo=
r: currentcolor; border-color: transparent; }

[type=3D"checkbox"]:indeterminate { background-color: currentcolor; backgro=
und-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http://w=
ww.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=3D=
'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=3D=
'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backgrou=
nd-repeat: no-repeat; background-size: 100% 100%; border-color: transparent=
; }

[type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminate:=
hover { background-color: currentcolor; border-color: transparent; }

[type=3D"file"] { background: initial; border-color: inherit; border-radius=
: 0px; border-width: 0px; font-size: inherit; line-height: inherit; padding=
: 0px; }

[type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }

h1 { font-size: 1.875rem; line-height: 2.25rem; }

h1, h2, h3 { font-weight: 600; }

h2, h3 { font-size: 1.5rem; line-height: 2rem; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { appearance: none; margin: 0px; }

*, ::after, ::before { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-=
from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ;=
 --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-s=
pacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-widt=
h: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); =
--tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent=
; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-=
blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rota=
te: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --t=
w-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --=
tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: =
; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ;=
 --tw-contain-size: ; --tw-contain-layout: ; --tw-contain-paint: ; --tw-con=
tain-style: ; }

::-webkit-backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --=
tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --t=
w-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; =
--tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-fr=
om-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; -=
-tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spa=
cing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:=
 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --=
tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; =
--tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-bl=
ur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate=
: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-=
backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw=
-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; =
--tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; -=
-tw-contain-size: ; --tw-contain-layout: ; --tw-contain-paint: ; --tw-conta=
in-style: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-posit=
ion: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordi=
nal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; =
--tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --=
tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-=
offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-sha=
dow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --=
tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw=
-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop=
-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdro=
p-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-bac=
kdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; --tw-cont=
ain-size: ; --tw-contain-layout: ; --tw-contain-paint: ; --tw-contain-style=
: ; }

:root { --white: #fff; --black: #000; --gray-50: #f9f9f9; --gray-100: #ecec=
ec; --gray-200: #e3e3e3; --gray-300: #cdcdcd; --gray-400: #b4b4b4; --gray-5=
00: #9b9b9b; --gray-600: #676767; --gray-700: #424242; --gray-750: #2f2f2f;=
 --gray-800: #212121; --gray-900: #171717; --gray-950: #0d0d0d; --red-500: =
#ef4444; --red-700: #b91c1c; --brand-purple: #ab68ff; }

html { --text-primary: var(--gray-950); --text-secondary: var(--gray-500); =
--text-tertiary: var(--gray-400); --text-quaternary: var(--gray-300); --tex=
t-error: var(--red-700); --surface-error: var(--red-700); --border-light: r=
gba(0,0,0,.1); --border-medium: rgba(0,0,0,.15); --border-heavy: rgba(0,0,0=
,.2); --border-xheavy: rgba(0,0,0,.25); --main-surface-primary: var(--white=
); --main-surface-secondary: var(--gray-50); --main-surface-tertiary: var(-=
-gray-100); --sidebar-surface-primary: var(--gray-50); --sidebar-surface-se=
condary: var(--gray-100); --sidebar-surface-tertiary: var(--gray-200); --li=
nk: #2964aa; --link-hover: #749ac8; --selection: #007aff; }

html.ZnJ1aXRqdWljZQ { --text-secondary: #7d7d7d; --text-error: #f93a37; --s=
urface-error: 249 58 55; }

.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray-300);=
 --text-tertiary: var(--gray-400); --text-quaternary: var(--gray-500); --te=
xt-error: var(--red-500); --border-light: hsla(0,0%,100%,.1); --border-medi=
um: hsla(0,0%,100%,.15); --border-heavy: hsla(0,0%,100%,.2); --border-xheav=
y: hsla(0,0%,100%,.25); --main-surface-primary: var(--gray-800); --main-sur=
face-secondary: var(--gray-750); --main-surface-tertiary: var(--gray-700); =
--sidebar-surface-primary: var(--gray-900); --sidebar-surface-secondary: va=
r(--gray-800); --sidebar-surface-tertiary: var(--gray-750); --link: #7ab7ff=
; --link-hover: #5e83b3; }

html.ZnJ1aXRqdWljZQ.dark { --text-secondary: var(--gray-400); --text-tertia=
ry: var(--gray-500); --text-quaternary: var(--gray-600); --text-error: #f93=
a37; --surface-error: 249 58 55; }

.popover { --main-surface-primary: var(--white) !important; --main-surface-=
secondary: var(--gray-100) !important; --main-surface-tertiary: var(--gray-=
200) !important; --sidebar-surface-primary: var(--white) !important; }

.dark .popover, .dark.popover, .popover .dark { --main-surface-primary: var=
(--gray-750) !important; --main-surface-secondary: var(--gray-700) !importa=
nt; --main-surface-tertiary: var(--gray-600) !important; --text-primary: va=
r(--gray-50) !important; --text-secondary: var(--gray-200) !important; --te=
xt-tertiary: var(--gray-400) !important; --text-quaternary: var(--gray-500)=
 !important; --sidebar-surface-primary: var(--gray-750) !important; }

textarea:focus { border-color: inherit; box-shadow: none; outline: none; }

::-webkit-scrollbar { height: 1rem; width: 0.5rem; }

::-webkit-scrollbar:horizontal { height: 0.5rem; width: 1rem; }

::-webkit-scrollbar-track { background-color: transparent; border-radius: 9=
999px; }

::-webkit-scrollbar-thumb { --tw-border-opacity: 1; background-color: rgba(=
227, 227, 227, 0.8); border-color: rgba(255,255,255,var(--tw-border-opacity=
)); border-radius: 9999px; border-width: 1px; }

::-webkit-scrollbar-thumb:hover { --tw-bg-opacity: 1; background-color: rgb=
a(227,227,227,var(--tw-bg-opacity)); }

.dark ::-webkit-scrollbar-thumb { background-color: rgba(255, 255, 255, 0.1=
); }

.dark ::-webkit-scrollbar-thumb:hover { background-color: rgba(255, 255, 25=
5, 0.3); }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

@media (min-width: 2006px) {
  .container { max-width: 2006px; }
}

.prose { color: var(--tw-prose-body); max-width: 65ch; }

.prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { co=
lor: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bott=
om: 1.2em; margin-top: 1.2em; }

.prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-pr=
ose-links); font-weight: 500; text-decoration: underline; }

.prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(--=
tw-prose-bold); font-weight: 600; }

.prose :where(a strong):not(:where([class~=3D"not-prose"] *)) { color: inhe=
rit; }

.prose :where(blockquote strong):not(:where([class~=3D"not-prose"] *)) { co=
lor: inherit; }

.prose :where(thead th strong):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
decimal; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; =
}

.prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-alpha; }

.prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-alpha; }

.prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-roman; }

.prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-roman; }

.prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: decimal; }

.prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
disc; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-counters); font-weight: 400; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-bullets); }

.prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: var=
(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3em=
; }

.prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { border-le=
ft-color: var(--tw-prose-quote-borders); border-left-width: 0.25rem; color:=
 var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-botto=
m: 1.6em; margin-top: 1.6em; padding-left: 1em; quotes: "=E2=80=9C" "=E2=80=
=9D" "=E2=80=98" "=E2=80=99"; }

.prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose"]=
 *))::before { content: open-quote; }

.prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"] =
*))::after { content: close-quote; }

.prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111; =
margin-bottom: 0.888889em; margin-top: 0px; }

.prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 900; }

.prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333; m=
argin-bottom: 1em; margin-top: 2em; }

.prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 800; }

.prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; marg=
in-bottom: 0.6em; margin-top: 1.6em; }

.prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em; m=
argin-top: 1.5em; }

.prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2=
em; margin-top: 2em; }

.prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-bo=
ttom: 0px; margin-top: 0px; }

.prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-to=
p: 0.857143em; }

.prose :where(code):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-code); font-size: 0.875em; font-weight: 600; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::before { content=
: "`"; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::after { content:=
 "`"; }

.prose :where(a code):not(:where([class~=3D"not-prose"] *)) { color: inheri=
t; }

.prose :where(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.875em; }

.prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.9em; }

.prose :where(h4 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(thead th code):not(:where([class~=3D"not-prose"] *)) { color:=
 inherit; }

.prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-color=
: transparent; border-radius: 0.375rem; color: currentcolor; font-size: 0.8=
75em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-x: auto=
; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { background-=
color: transparent; border-radius: 0px; border-width: 0px; color: inherit; =
font-family: inherit; font-size: inherit; font-weight: inherit; line-height=
: inherit; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { con=
tent: none; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after { cont=
ent: none; }

.prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0.8=
75em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-layo=
ut: auto; text-align: left; width: 100%; }

.prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-bottom-=
color: var(--tw-prose-th-borders); border-bottom-width: 1px; }

.prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; padding=
-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }

.prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bott=
om-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }

.prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) { =
border-bottom-width: 0px; }

.prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: baseline; }

.prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-col=
or: var(--tw-prose-th-borders); border-top-width: 1px; }

.prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: top; }

.prose { --tw-prose-body: var(--text-primary); --tw-prose-headings: var(--t=
ext-primary); --tw-prose-lead: var(--text-primary); --tw-prose-links: var(-=
-text-primary); --tw-prose-bold: var(--text-primary); --tw-prose-counters: =
var(--text-primary); --tw-prose-bullets: var(--text-primary); --tw-prose-hr=
: var(--border-xheavy); --tw-prose-quotes: var(--text-primary); --tw-prose-=
quote-borders: #e5e7eb; --tw-prose-captions: var(--text-secondary); --tw-pr=
ose-code: var(--text-primary); --tw-prose-pre-code: #e5e7eb; --tw-prose-pre=
-bg: #1f2937; --tw-prose-th-borders: #d1d5db; --tw-prose-td-borders: #e5e7e=
b; --tw-prose-invert-body: var(--text-primary); --tw-prose-invert-headings:=
 var(--text-primary); --tw-prose-invert-lead: var(--text-primary); --tw-pro=
se-invert-links: var(--text-primary); --tw-prose-invert-bold: var(--text-pr=
imary); --tw-prose-invert-counters: var(--text-primary); --tw-prose-invert-=
bullets: var(--text-primary); --tw-prose-invert-hr: var(--border-xheavy); -=
-tw-prose-invert-quotes: var(--text-primary); --tw-prose-invert-quote-borde=
rs: #374151; --tw-prose-invert-captions: var(--text-secondary); --tw-prose-=
invert-code: var(--text-primary); --tw-prose-invert-pre-code: #d1d5db; --tw=
-prose-invert-pre-bg: rgba(0,0,0,.5); --tw-prose-invert-th-borders: #4b5563=
; --tw-prose-invert-td-borders: #374151; font-size: 1rem; line-height: 1.75=
; }

.prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1.2=
5em; margin-top: 1.25em; }

.prose :where(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }

.prose :where(figure):not(:where([class~=3D"not-prose"] *)) { margin-bottom=
: 2em; margin-top: 2em; }

.prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 0.=
5em; margin-top: 0.5em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) { m=
argin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose"]=
 *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(hr + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h3 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h4 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(thead th:first-child):not(:where([class~=3D"not-prose"] *)) {=
 padding-left: 0px; }

.prose :where(thead th:last-child):not(:where([class~=3D"not-prose"] *)) { =
padding-right: 0px; }

.prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) { p=
adding: 0.571429em; }

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class=
~=3D"not-prose"] *)) { padding-left: 0px; }

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=
=3D"not-prose"] *)) { padding-right: 0px; }

.prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)) =
{ margin-top: 0px; }

.prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0px; }

.prose-sm :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.571429em; margin-top: 0.571429em; }

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-sm :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-base :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > :first-child):not(:where([class~=3D"not-prose"]=
 *)) { margin-top: 0px; }

.prose-base :where(.prose > :last-child):not(:where([class~=3D"not-prose"] =
*)) { margin-bottom: 0px; }

.prose-lg :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.888889em; margin-top: 0.888889em; }

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-lg :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.8em; margin-top: 0.8em; }

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-2xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0.833333em; margin-top: 0.833333em; }

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] =
*)) { margin-top: 0px; }

.prose-2xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *=
)) { margin-bottom: 0px; }

.form-input, .form-multiselect, .form-select, .form-textarea { --tw-shadow:=
 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); b=
order-color: rgb(155, 155, 155); border-radius: 0px; border-width: 1px; fon=
t-size: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

.form-input:focus, .form-multiselect:focus, .form-select:focus, .form-texta=
rea:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-=
width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ri=
ng-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) va=
r(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 cal=
c(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); border-color: rg=
b(37, 99, 235); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shad=
ow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; =
}

.form-input::-webkit-input-placeholder, .form-textarea::-webkit-input-place=
holder { color: rgb(155, 155, 155); opacity: 1; }

.form-input::placeholder, .form-textarea::placeholder { color: rgb(155, 155=
, 155); opacity: 1; }

.form-input::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

.form-input::-webkit-date-and-time-value { min-height: 1.5em; }

.form-input::-webkit-datetime-edit, .form-input::-webkit-datetime-edit-day-=
field, .form-input::-webkit-datetime-edit-hour-field, .form-input::-webkit-=
datetime-edit-meridiem-field, .form-input::-webkit-datetime-edit-millisecon=
d-field, .form-input::-webkit-datetime-edit-minute-field, .form-input::-web=
kit-datetime-edit-month-field, .form-input::-webkit-datetime-edit-second-fi=
eld, .form-input::-webkit-datetime-edit-year-field { padding-bottom: 0px; p=
adding-top: 0px; }

.btn { align-items: center; border-color: transparent; border-radius: 0.5re=
m; border-width: 1px; display: inline-flex; font-size: 0.875rem; font-weigh=
t: 500; line-height: 1.25rem; padding: 0.5rem 0.75rem; pointer-events: auto=
; }

.btn:focus { outline: transparent solid 2px; outline-offset: 2px; }

.btn:disabled { cursor: not-allowed; opacity: 0.5; }

.ZnJ1aXRqdWljZQ .btn { border-radius: 9999px; padding-left: 0.875rem; paddi=
ng-right: 0.875rem; }

.btn:active { opacity: 0.8; }

.btn-green, .btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; backgr=
ound-color: rgba(16,163,127,var(--tw-bg-opacity)); color: rgba(255,255,255,=
var(--tw-text-opacity)); }

.btn-green:hover, .btn-primary:hover { --tw-bg-opacity: 1; background-color=
: rgba(26,127,100,var(--tw-bg-opacity)); }

.btn-green.focus-visible, .btn-primary.focus-visible { --tw-ring-offset-sha=
dow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-o=
ffset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(-=
-tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ri=
ng-color: rgba(25,195,125,var(--tw-ring-opacity)); --tw-ring-offset-width: =
2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow,0 0 transparent); }

.btn-green:focus-visible, .btn-primary:focus-visible { --tw-ring-offset-sha=
dow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-o=
ffset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(-=
-tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ri=
ng-color: rgba(25,195,125,var(--tw-ring-opacity)); --tw-ring-offset-width: =
2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow,0 0 transparent); }

.ZnJ1aXRqdWljZQ .btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; ba=
ckground-color: rgba(13,13,13,var(--tw-bg-opacity)); color: rgba(255,255,25=
5,var(--tw-text-opacity)); }

.ZnJ1aXRqdWljZQ .btn-primary:hover { --tw-bg-opacity: 1; background-color: =
rgba(33,33,33,var(--tw-bg-opacity)); }

.ZnJ1aXRqdWljZQ .btn-primary.focus-visible { --tw-ring-offset-shadow: var(-=
-tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-colo=
r); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-o=
ffset-width)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: =
rgba(155,155,155,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-=
shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,=
0 0 transparent); }

.ZnJ1aXRqdWljZQ .btn-primary:focus-visible { --tw-ring-offset-shadow: var(-=
-tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-colo=
r); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-o=
ffset-width)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: =
rgba(155,155,155,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-=
shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,=
0 0 transparent); }

.ZnJ1aXRqdWljZQ .btn-primary:is(.dark *) { --tw-bg-opacity: 1; --tw-text-op=
acity: 1; background-color: rgba(249,249,249,var(--tw-bg-opacity)); color: =
rgba(13,13,13,var(--tw-text-opacity)); }

.ZnJ1aXRqdWljZQ .btn-primary:hover:is(.dark *) { --tw-bg-opacity: 1; backgr=
ound-color: rgba(236,236,236,var(--tw-bg-opacity)); }

.btn-danger { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: r=
gba(239,68,68,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-text-=
opacity)); }

.btn-danger:hover { --tw-bg-opacity: 1; background-color: rgba(185,28,28,va=
r(--tw-bg-opacity)); }

.btn-danger.focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0=
 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sha=
dow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var=
(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(248,113,113,=
var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-=
ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent);=
 }

.btn-danger:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0=
 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sha=
dow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var=
(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(248,113,113,=
var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--tw-=
ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent);=
 }

.btn-danger:disabled:hover { --tw-bg-opacity: 1; background-color: rgba(185=
,28,28,var(--tw-bg-opacity)); }

.btn-danger-outline { --tw-border-opacity: 1; --tw-text-opacity: 1; border-=
color: rgba(220,38,38,var(--tw-border-opacity)); border-width: 1px; color: =
rgba(220,38,38,var(--tw-text-opacity)); }

.btn-danger-outline.focus-visible { --tw-ring-offset-shadow: var(--tw-ring-=
inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-=
ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-wid=
th)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(220,=
38,38,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var=
(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transpa=
rent); }

.btn-danger-outline:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-=
inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-=
ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-wid=
th)) var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(220,=
38,38,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var=
(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transpa=
rent); }

.btn-secondary { background-color: var(--main-surface-primary); border-colo=
r: var(--border-medium); border-width: 1px; color: var(--text-primary); fon=
t-size: 0.875rem; line-height: 1.25rem; }

.btn-secondary:hover { background-color: var(--main-surface-secondary); }

.btn-secondary.focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset=
) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-=
shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) =
var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(103,103,1=
03,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--=
tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparen=
t); }

.btn-secondary:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset=
) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-=
shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) =
var(--tw-ring-color); --tw-ring-opacity: 1; --tw-ring-color: rgba(103,103,1=
03,var(--tw-ring-opacity)); --tw-ring-offset-width: 2px; box-shadow: var(--=
tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparen=
t); }

.btn-dark { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-opacity: =
1; background-color: rgba(33,33,33,var(--tw-bg-opacity)); border-color: rgb=
a(103,103,103,var(--tw-border-opacity)); border-width: 1px; color: rgba(255=
,255,255,var(--tw-text-opacity)); }

.btn-dark:hover { --tw-bg-opacity: 1; background-color: rgba(66,66,66,var(-=
-tw-bg-opacity)); }

.btn-light { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rg=
ba(236,236,236,var(--tw-bg-opacity)); color: rgba(0,0,0,var(--tw-text-opaci=
ty)); }

.btn-light:hover { --tw-bg-opacity: 1; background-color: rgba(255,255,255,v=
ar(--tw-bg-opacity)); }

.btn-disabled { background-color: var(--main-surface-tertiary); color: var(=
--text-tertiary); cursor: not-allowed; }

.btn-small { padding: 0.25rem 0.5rem; }

.ZnJ1aXRqdWljZQ .btn-small { padding-left: 0.625rem; padding-right: 0.625re=
m; }

.divide-token-border-light > :not([hidden]) ~ :not([hidden]) { border-color=
: rgba(0, 0, 0, 0.1); }

.border-token-border-heavy { border-color: rgba(0, 0, 0, 0.2); }

.border-token-border-light { border-color: rgba(0, 0, 0, 0.1); }

.border-token-border-medium { border-color: rgba(0, 0, 0, 0.15); }

.border-token-border-xheavy { border-color: rgba(0, 0, 0, 0.25); }

.border-token-main-surface-secondary { }

.border-token-main-surface-tertiary { }

.border-token-surface-error\/15 { }

.border-token-text-primary { }

.border-token-text-secondary { }

.border-token-text-tertiary { }

.border-y-token-border-medium { border-bottom-color: rgba(0, 0, 0, 0.15); b=
order-top-color: rgba(0, 0, 0, 0.15); }

.border-l-token-sidebar-surface-secondary { }

.\!bg-token-main-surface-primary { }

.\!bg-token-text-primary { }

.bg-token-border-light { background-color: rgba(0, 0, 0, 0.1); }

.bg-token-border-medium { background-color: rgba(0, 0, 0, 0.15); }

.bg-token-main-surface-primary { }

.bg-token-main-surface-secondary { }

.bg-token-main-surface-tertiary { }

.bg-token-sidebar-surface-primary { }

.bg-token-sidebar-surface-secondary { }

.bg-token-sidebar-surface-tertiary { }

.bg-token-surface-error { background-color: rgb(theme(colors.red.700)/var(-=
-tw-bg-opacity)); }

.bg-token-text-primary { }

.bg-token-text-quaternary { }

.bg-token-text-secondary { }

.bg-token-text-tertiary { }

.fill-token-main-surface-primary { }

.stroke-token-main-surface-tertiary { }

.\!text-token-main-surface-primary { }

.\!text-token-text-primary { }

.text-token-link { color: rgb(41, 100, 170); }

.text-token-main-surface-primary { }

.text-token-main-surface-tertiary { }

.text-token-text-error { }

.text-token-text-primary { }

.text-token-text-quaternary { }

.text-token-text-secondary { }

.text-token-text-tertiary { }

.decoration-token-link { text-decoration-color: rgb(41, 100, 170); }

.decoration-token-text-primary { }

.caret-token-text-primary { }

body, html { background-color: var(--main-surface-primary); }

#__next, #root, body, html { height: 100%; }

.markdown { max-width: none; }

.markdown h1 { font-weight: 600; }

.markdown h1:first-child { margin-top: 0px; }

.markdown h2 { font-weight: 600; margin-bottom: 1rem; margin-top: 2rem; }

.markdown h2:first-child { margin-top: 0px; }

.markdown h3 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h3:first-child { margin-top: 0px; }

.markdown h4 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h4:first-child { margin-top: 0px; }

.markdown h5 { font-weight: 600; }

.markdown h5:first-child { margin-top: 0px; }

.markdown blockquote { --tw-border-opacity: 1; border-color: rgba(155,155,1=
55,var(--tw-border-opacity)); border-left-width: 2px; line-height: 1.5rem; =
margin: 0px; padding-bottom: 0.5rem; padding-left: 1rem; padding-top: 0.5re=
m; }

.markdown blockquote > p { margin: 0px; }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown table { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; b=
order-collapse: separate; border-spacing: var(--tw-border-spacing-x) var(--=
tw-border-spacing-y); margin-bottom: 0.25rem; margin-top: 0.25rem; width: 1=
00%; }

.markdown th { background-color: var(--border-light); border-bottom-width: =
1px; border-color: var(--border-medium); border-left-width: 1px; border-top=
-width: 1px; padding: 0.25rem 0.75rem; }

.markdown th:first-child { border-top-left-radius: 0.375rem; }

.markdown th:last-child { border-right-width: 1px; border-top-right-radius:=
 0.375rem; }

.markdown td { border-bottom-width: 1px; border-color: var(--border-medium)=
; border-left-width: 1px; padding: 0.25rem 0.75rem; }

.markdown td:last-child { border-right-width: 1px; }

.markdown tbody tr:last-child td:first-child { border-bottom-left-radius: 0=
.375rem; }

.markdown tbody tr:last-child td:last-child { border-bottom-right-radius: 0=
.375rem; }

.markdown a { color: var(--link); font-weight: 400; text-decoration-line: n=
one; }

.markdown a:hover { color: var(--link-hover); }

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

button.scroll-convo { display: none; }

@-webkit-keyframes blink {=20
  100% { visibility: hidden; }
}

@keyframes blink {=20
  100% { visibility: hidden; }
}

.result-streaming > :not(ol):not(ul):not(pre):last-child::after, .result-st=
reaming > pre:last-child code::after { content: "=E2=97=8F"; font-family: C=
ircle, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "No=
to Sans", sans-serif; line-height: normal; margin-left: 0.25rem; vertical-a=
lign: baseline; }

.result-thinking:empty:last-child::after { -webkit-font-smoothing: subpixel=
-antialiased; animation: 1.25s ease-in-out 0s infinite normal none running =
pulseSize; backface-visibility: hidden; background-color: var(--text-primar=
y); border-radius: 50%; box-sizing: border-box; content: " "; display: bloc=
k; height: 12px; position: absolute; top: 7px; transform: translateZ(0px); =
transform-origin: center center; width: 12px; will-change: transform; }

@supports (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child > ol:last-child > li:la=
st-child::after, .result-streaming > ol:last-child > li:last-child > ol:las=
t-child > li:last-child > ol:last-child > li:last-child::after, .result-str=
eaming > ol:last-child > li:last-child > ol:last-child > li:last-child > ul=
:last-child > li:last-child::after, .result-streaming > ol:last-child > li:=
last-child > ul:last-child > li:last-child::after, .result-streaming > ol:l=
ast-child > li:last-child > ul:last-child > li:last-child > ol:last-child >=
 li:last-child::after, .result-streaming > ol:last-child > li:last-child > =
ul:last-child > li:last-child > ul:last-child > li:last-child::after, .resu=
lt-streaming > ul:last-child > li:last-child > ol:last-child > li:last-chil=
d::after, .result-streaming > ul:last-child > li:last-child > ol:last-child=
 > li:last-child > ol:last-child > li:last-child::after, .result-streaming =
> ul:last-child > li:last-child > ol:last-child > li:last-child > ul:last-c=
hild > li:last-child::after, .result-streaming > ul:last-child > li:last-ch=
ild > ul:last-child > li:last-child::after, .result-streaming > ul:last-chi=
ld > li:last-child > ul:last-child > li:last-child > ol:last-child > li:las=
t-child::after, .result-streaming > ul:last-child > li:last-child > ul:last=
-child > li:last-child > ul:last-child > li:last-child::after, .result-stre=
aming > ul:last-child > li:last-child[*|\:not-has\(]::after { content: "=E2=
=97=8F"; font-family: Circle, system-ui, -apple-system, "Segoe UI", Roboto,=
 Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: normal; margin-le=
ft: 0.25rem; vertical-align: baseline; }
  .result-streaming > ul:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: Circle, system-ui, -apple-system, "S=
egoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: =
normal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child[*|\:not-has\(]::after {=
 content: "=E2=97=8F"; font-family: Circle, system-ui, -apple-system, "Sego=
e UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: nor=
mal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: Circle, system-ui, -apple-system, "S=
egoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: =
normal; margin-left: 0.25rem; vertical-align: baseline; }
}

@supports not (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streami=
ng > ul:last-child > li:last-child::after { content: "=E2=97=8F"; font-fami=
ly: Circle, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell=
, "Noto Sans", sans-serif; line-height: normal; margin-left: 0.25rem; verti=
cal-align: baseline; }
}

@-webkit-keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@-webkit-keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@-webkit-keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

button[data-state=3D"closed"] .toggle-item-button-closed, button[data-state=
=3D"open"] .toggle-item-button-open { display: none; }

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: all 0.24s cubic-bezier(0, 0, 0.2, 1) 0s; }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1) 0s 1 normal both runn=
ing toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.interact-bounce { transition-duration: 0.15s; transition-property: transfo=
rm, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2=
, 1); }

.interact-bounce:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; }

.interact-bounce:active, .interact-bounce:hover { transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }

.interact-bounce:active { --tw-scale-x: .9; --tw-scale-y: .9; }

.title { font-feature-settings: normal; font-family: ui-sans-serif, system-=
ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans=
-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Se=
goe UI Symbol", "Noto Color Emoji"; font-variation-settings: normal; }

.icon-xs { stroke-width: 1.5; flex-shrink: 0; height: 0.75rem; width: 0.75r=
em; }

.icon-sm { stroke-width: 2; }

.icon-sm, .icon-sm-heavy { flex-shrink: 0; height: 1rem; width: 1rem; }

.icon-sm-heavy { stroke-width: 2.5; }

.icon-md { stroke-width: 1.5; }

.icon-md, .icon-md-heavy { flex-shrink: 0; height: 18px; width: 18px; }

.icon-md-heavy { stroke-width: 2.5; }

.icon-lg { stroke-width: 1.5; flex-shrink: 0; height: 1.5rem; width: 1.5rem=
; }

.icon-lg-heavy { stroke-width: 2; flex-shrink: 0; height: 22px; width: 22px=
; }

.icon-xl { stroke-width: 1.5; flex-shrink: 0; height: 1.75rem; width: 1.75r=
em; }

.icon-xl-heavy { stroke-width: 2; flex-shrink: 0; height: 24px; width: 24px=
; }

.icon-2xl { stroke-width: 1.5; flex-shrink: 0; height: 2rem; width: 2rem; }

.icon-workspace-avatar-preview { stroke-width: 1.5; height: 96px; width: 96=
px; }

.icon-cover { stroke-width: 1.5; height: 234px; width: 234px; }

.icon-shimmer { animation: 5s cubic-bezier(0.2, 0.44, 0.38, 1.02) 0s infini=
te normal none running icon-shimmer; background-repeat: no-repeat; mask: li=
near-gradient(80deg, currentcolor 30%, rgba(0, 0, 0, 0.333), currentcolor 7=
0%) right center / 300% 100%; }

@-webkit-keyframes icon-shimmer {=20
  0% { mask-position: right center; }
  20% { mask-position: left center; }
  100% { mask-position: left center; }
}

@keyframes icon-shimmer {=20
  0% { mask-position: right center; }
  20% { mask-position: left center; }
  100% { mask-position: left center; }
}

.loading-shimmer { -webkit-text-fill-color: transparent; animation-delay: 0=
.5s; animation-duration: 3s; animation-iteration-count: infinite; animation=
-name: loading-shimmer; background-image: ; background-attachment: ; backgr=
ound-origin: ; background-color: ; background-clip: text; background-positi=
on: -100% top; background-repeat: no-repeat; background-size: 50% 200%; dis=
play: inline-block; }

.loading-shimmer:hover { -webkit-text-fill-color: var(--text-primary); anim=
ation: auto ease 0s 1 normal none running none; background: transparent; }

@-webkit-keyframes loading-shimmer {=20
  0% { background-position: -100% top; }
  100% { background-position: 250% top; }
}

@keyframes loading-shimmer {=20
  0% { background-position: -100% top; }
  100% { background-position: 250% top; }
}

.gizmo-shadow-stroke { position: relative; }

.gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px rgba(0,0,0,.1); =
--tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); border-radius:=
 9999px; inset: 0px; content: ""; position: absolute; }

.dark .gizmo-shadow-stroke::after, .gizmo-shadow-stroke::after { box-shadow=
: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 tra=
nsparent),var(--tw-shadow); }

.dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px hsla(0,0%,=
100%,.2); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); }

.no-scrollbar::-webkit-scrollbar { display: none; }

.no-scrollbar { scrollbar-width: none; }

.gizmo-bot-avatar { outline: solid 1px var(--main-surface-tertiary); }

.dark .dark\:prose-invert { --tw-prose-body: var(--tw-prose-invert-body); -=
-tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var(-=
-tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); --t=
w-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-pr=
ose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets); -=
-tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-prose-=
invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-borde=
rs); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-code:=
 var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-invert-pr=
e-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-prose-th-bo=
rders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: var(--tw-p=
rose-invert-td-borders); }

.marker\:text-token-text-tertiary ::marker { }

.marker\:text-token-text-tertiary::marker { }

.placeholder\:text-token-text-tertiary::-webkit-input-placeholder { }

.placeholder\:text-token-text-tertiary::placeholder { }

.before\:bg-token-text-tertiary::before { }

.after\:bg-token-text-primary::after { }

.after\:bg-token-text-tertiary::after { }

.checked\:border-token-text-secondary:checked { }

.focus-within\:border-token-border-xheavy[focus-within] { border-color: rgb=
a(0, 0, 0, 0.25); }

.focus-within\:border-token-border-xheavy:focus-within { border-color: rgba=
(0, 0, 0, 0.25); }

.focus-within\:bg-token-main-surface-tertiary[focus-within] { }

.focus-within\:bg-token-main-surface-tertiary:focus-within { }

.hover\:border-token-border-heavy:hover { border-color: rgba(0, 0, 0, 0.2);=
 }

.hover\:border-token-border-medium:hover { border-color: rgba(0, 0, 0, 0.15=
); }

.hover\:border-token-main-surface-tertiary:hover { }

.hover\:bg-token-main-surface-primary:hover { }

.hover\:bg-token-main-surface-secondary:hover { }

.hover\:bg-token-main-surface-tertiary:hover, .hover\:bg-token-sidebar-surf=
ace-secondary:hover { }

.hover\:bg-token-sidebar-surface-tertiary:hover { }

.hover\:bg-token-surface-error\/10:hover { }

.hover\:text-token-link:hover { color: rgb(41, 100, 170); }

.hover\:text-token-link-hover:hover { color: rgb(116, 154, 200); }

.hover\:text-token-main-surface-tertiary:hover { }

.hover\:text-token-text-primary:hover { }

.hover\:text-token-text-quaternary:hover { }

.hover\:text-token-text-secondary:hover { }

.hover\:text-token-text-tertiary:hover { }

.focus\:border-token-text-primary:focus { }

.focus-visible\:border-token-border-light.focus-visible { border-color: rgb=
a(0, 0, 0, 0.1); }

.focus-visible\:border-token-border-light:focus-visible { border-color: rgb=
a(0, 0, 0, 0.1); }

.focus-visible\:bg-token-main-surface-secondary.focus-visible { }

.focus-visible\:bg-token-main-surface-secondary:focus-visible { }

.focus-visible\:bg-token-sidebar-surface-secondary.focus-visible { }

.focus-visible\:bg-token-sidebar-surface-secondary:focus-visible { }

.disabled\:bg-token-main-surface-tertiary:disabled { }

.disabled\:text-token-border-medium:disabled { color: rgba(0, 0, 0, 0.15); =
}

.disabled\:text-token-text-tertiary:disabled { }

.group:hover .group-hover\:bg-token-main-surface-secondary { }

.group:hover .group-hover\:text-token-link { color: rgb(41, 100, 170); }

.group:hover .group-hover\:text-token-text-primary { }

.group[\:has\(\:focus\)] .group-has-\[\:focus\]\:border-token-border-xheavy=
 { border-color: rgba(0, 0, 0, 0.25); }

.group:has(:focus) .group-has-\[\:focus\]\:border-token-border-xheavy { bor=
der-color: rgba(0, 0, 0, 0.25); }

.radix-disabled\:text-token-text-tertiary[data-disabled] { }

.radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"] =
{ }

.radix-state-active\:text-token-text-primary[data-state=3D"active"] { }

.radix-state-active\:text-token-text-secondary[data-state=3D"active"] { }

.radix-state-checked\:border-token-text-tertiary[data-state=3D"checked"] { =
}

.radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked"]=
 { }

.radix-state-checked\:bg-token-text-primary[data-state=3D"checked"] { }

.radix-state-checked\:text-token-main-surface-primary[data-state=3D"checked=
"] { }

.radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { }

.radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] { }

.radix-state-open\:text-token-text-primary[data-state=3D"open"] { }

.radix-state-open\:text-token-text-secondary[data-state=3D"open"] { }

.radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { }

.group-ui-open\:bg-token-sidebar-surface-secondary.group[data-headlessui-st=
ate~=3D"open"], .group[data-state=3D"open"] .group-radix-state-open\:bg-tok=
en-main-surface-tertiary { }

.group:where([data-headlessui-state~=3D"open"]) .group-ui-open\:bg-token-si=
debar-surface-secondary { }

.ZnJ1aXRqdWljZQ .juice\:bg-token-main-surface-secondary, .ZnJ1aXRqdWljZQ .j=
uice\:bg-token-sidebar-surface-primary { }

.ZnJ1aXRqdWljZQ .juice\:text-token-text-secondary { }

.ZnJ1aXRqdWljZQ .juice\:text-token-text-tertiary { }

.ZnJ1aXRqdWljZQ .juice\:hover\:text-token-text-primary:hover { }

.dark .dark\:border-token-border-medium { border-color: rgba(0, 0, 0, 0.15)=
; }

.dark .dark\:border-token-border-xheavy { border-color: rgba(0, 0, 0, 0.25)=
; }

.dark .dark\:bg-token-main-surface-secondary { }

.dark .dark\:text-token-main-surface-tertiary { }

.dark\:focus-within\:border-token-border-xheavy[focus-within]:is(.dark *) {=
 border-color: rgba(0, 0, 0, 0.25); }

.dark\:focus-within\:border-token-border-xheavy:focus-within:is(.dark *) { =
border-color: rgba(0, 0, 0, 0.25); }

.dark\:hover\:bg-token-main-surface-secondary:hover:is(.dark *) { }

.dark\:hover\:bg-token-main-surface-tertiary:hover:is(.dark *) { }

.hover\:dark\:text-token-main-surface-tertiary:is(.dark *):hover { }

.dark\:focus-visible\:bg-token-main-surface-secondary.focus-visible:is(.dar=
k *) { }

.dark\:focus-visible\:bg-token-main-surface-secondary:focus-visible:is(.dar=
k *) { }

.disabled\:dark\:bg-token-text-quaternary:is(.dark *):disabled { }

.dark\:disabled\:text-token-main-surface-secondary:disabled:is(.dark *) { }

.dark\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"]:is(.dark *) { }

.dark\:radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open=
"]:is(.dark *) { }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:left-16 { left: 4rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-snc-results-content-padding { margin-left: var(--snc-results-cont=
ent-padding); margin-right: var(--snc-results-content-padding); }
  .sm\:-mt-12 { margin-top: -3rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-2\.5 { margin-bottom: 0.625rem; }
  .sm\:mb-3 { margin-bottom: 0.75rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mb-snc-results-padding { margin-bottom: var(--snc-results-padding); =
}
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-16 { margin-top: 4rem; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-snc-results-content-inset { margin-top: var(--snc-results-content=
-inset); }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:inline { display: inline; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-32 { height: 8rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-32 { width: 8rem; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[calc\(\(100\%-12px\)\/2\)\] { width: calc(50% - 6px); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-snc-1 { gap: var(--snc-1); }
  .sm\:gap-x-2 { column-gap: 0.5rem; }
  .sm\:gap-x-2\.5 { column-gap: 0.625rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:gap-y-5 { row-gap: 1.25rem; }
  .sm\:rounded-full { border-radius: 9999px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:rounded-bl-xl { border-bottom-left-radius: 0.75rem; }
  .sm\:rounded-br-xl { border-bottom-right-radius: 0.75rem; }
  .sm\:rounded-tl-xl { border-top-left-radius: 0.75rem; }
  .sm\:rounded-tr-xl { border-top-right-radius: 0.75rem; }
  .sm\:border-none { border-style: none; }
  .sm\:border-token-border-medium { border-color: var(--border-medium); }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-10 { padding: 2.5rem; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-4 { padding: 1rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:px-\[1\.333rem\] { padding-left: 1.333rem; padding-right: 1.333rem; =
}
  .sm\:px-snc-results-padding { padding-left: var(--snc-results-padding); p=
adding-right: var(--snc-results-padding); }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-1 { padding-bottom: 0.25rem; }
  .sm\:pb-10 { padding-bottom: 2.5rem; }
  .sm\:pb-2 { padding-bottom: 0.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pb-8 { padding-bottom: 2rem; }
  .sm\:pb-snc-results-padding { padding-bottom: var(--snc-results-padding);=
 }
  .sm\:pr-2 { padding-right: 0.5rem; }
  .sm\:pt-1 { padding-top: 0.25rem; }
  .sm\:pt-12 { padding-top: 3rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:pt-\[calc\(var\(--snc-results-padding\)\+var\(--snc-input-height\)\+=
\.75rem\)\] { padding-top: calc(var(--snc-results-padding) + var(--snc-inpu=
t-height) + .75rem); }
  .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:font-semibold { font-weight: 600; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
  .dark .sm\:dark\:border-x-token-border-xheavy { border-left-color: var(--=
border-xheavy); border-right-color: var(--border-xheavy); }
  .dark .dark\:sm\:bg-token-main-surface-primary { background-color: var(--=
main-surface-primary); }
  .dark .dark\:sm\:bg-token-main-surface-tertiary { background-color: var(-=
-main-surface-tertiary); }
}

@media (min-width: 768px) {
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:absolute { position: absolute; }
  .md\:bottom-2 { bottom: 0.5rem; }
  .md\:bottom-2\.5 { bottom: 0.625rem; }
  .md\:bottom-3 { bottom: 0.75rem; }
  .md\:bottom-3\.5 { bottom: 0.875rem; }
  .md\:left-4 { left: 1rem; }
  .md\:right-3 { right: 0.75rem; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:ml-0 { margin-left: 0px; }
  .md\:ml-8 { margin-left: 2rem; }
  .md\:ml-\[-8px\] { margin-left: -8px; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:mt-px { margin-top: 1px; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[26rem\] { width: 26rem; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[672px\] { min-width: 672px; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:max-w-xs { max-width: 20rem; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_20px\] { grid-template-rows: m=
inmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-center { align-items: center; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-3\.5 { gap: 0.875rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-width: 1px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  .md\:border-l { border-left-width: 1px; }
  .md\:border-r { border-right-width: 1px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236=
,236,var(--tw-border-opacity)); }
  .md\:border-token-border-light { border-color: var(--border-light); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-2 { padding: 0.5rem; }
  .md\:p-4 { padding: 1rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pl-0 { padding-left: 0px; }
  .md\:pl-2 { padding-left: 0.5rem; }
  .md\:pl-4 { padding-left: 1rem; }
  .md\:pl-6 { padding-left: 1.5rem; }
  .md\:pl-\[55px\] { padding-left: 55px; }
  .md\:pr-12 { padding-right: 3rem; }
  .md\:pr-3 { padding-right: 0.75rem; }
  .md\:pr-4 { padding-right: 1rem; }
  .md\:pr-8 { padding-right: 2rem; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-\[3\.37125rem\] { font-size: 3.37125rem; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .md\:first\:ml-0:first-child { margin-left: 0px; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  .md\:last\:mr-0:last-child { margin-right: 0px; }
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba=
(249,249,249,var(--tw-bg-opacity)); }
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .ZnJ1aXRqdWljZQ .juice\:md\:gap-6 { gap: 1.5rem; }
  .dark .md\:dark\:border-gray-700 { --tw-border-opacity: 1; border-color: =
rgba(66,66,66,var(--tw-border-opacity)); }
  .dark .md\:dark\:border-transparent { border-color: transparent; }
  .dark .dark\:md\:bg-transparent { background-color: transparent; }
  .dark .dark\:md\:bg-vert-dark-gradient { background-image: linear-gradien=
t(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
  .dark\:md\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgba(66,66,66,var(--tw-bg-opacity)); }
}

@media (min-width: 1280px) {
  .xl\:mx-0 { margin-left: 0px; margin-right: 0px; }
  .xl\:block { display: block; }
  .xl\:hidden { display: none; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:w-\[63\%\] { width: 63%; }
  .xl\:min-w-\[1024px\] { min-width: 1024px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-\[1160px\] { max-width: 1160px; }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:translate-x-\[-47\%\] { --tw-translate-x: -47%; transform: translate=
(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew=
X(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scale=
Y(var(--tw-scale-y)); }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .xl\:border-x-\[0\.5px\] { border-left-width: 0.5px; border-right-width: =
0.5px; }
  .xl\:border-token-border-medium { border-color: var(--border-medium); }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:px-snc-results-content-padding { padding-left: var(--snc-results-con=
tent-padding); padding-right: var(--snc-results-content-padding); }
  .dark .xl\:dark\:border-x-token-border-xheavy { border-left-color: var(--=
border-xheavy); border-right-color: var(--border-xheavy); }
}

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy[\:has\(textarea=
\:focus\)] { border-color: rgba(0, 0, 0, 0.25); }

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy:has(textarea:fo=
cus) { border-color: rgba(0, 0, 0, 0.25); }

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_AMS-Regular.a7=
9f1c31.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Bold.ec17d132.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Regular.55fac258.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Bo=
ld.d42a5579.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Re=
gular.d3c882a6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Bold.c3f=
b5ac2.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-BoldItal=
ic.6f2bb1df.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Italic.8=
916142b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Regular.=
0462f03b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-BoldItal=
ic.572d331f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-Italic.f=
28c23ac.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Bold.8c5b5494.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Italic.3b1e59b3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Regular.ba21ed5f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Script-Regu=
lar.03e9641d.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size1-Regula=
r.eae34984.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size2-Regula=
r.5916a24f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size3-Regula=
r.b4230e7e.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size4-Regula=
r.10d95fd3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Typewri=
ter-Regular.a8709e36.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-=
sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

.snc { --snc-1: 1.5rem; --snc-2: 1.75rem; --snc-3: 3rem; --snc-results-padd=
ing: 0.5rem; --snc-results-content-inset: 0.5rem; --snc-input-height: 3.25r=
em; --snc-results-content-padding: calc(var(--snc-results-padding) + var(--=
snc-results-content-inset)); --snc-text-base: 16px; --snc-hover: rgba(0,0,0=
,.03); --main-surface-secondary: #f7f7f7; --main-surface-tertiary: #f1f1f1;=
 --text-secondary: var(--gray-600); --text-tertiary: var(--gray-500); font-=
size: var(--snc-text-base); }

.snc .snc-accent-border { border: 0px; }

.snc.dark { --snc-hover: hsla(0,0%,100%,.03); --snc-focus-border: hsla(0,0%=
,100%,.75); --main-surface-primary: var(--gray-950); --main-surface-seconda=
ry: var(--gray-900); --main-surface-tertiary: var(--gray-700); --text-secon=
dary: var(--gray-300); --text-tertiary: var(--gray-500); --border-light: hs=
la(0,0%,100%,.05); --border-medium: hsla(0,0%,100%,.12); --border-xheavy: h=
sla(0,0%,100%,.2); --gray-950: #141414; }

.snc.dark .snc-accent-border { border: .5px solid var(--border-xheavy); }

.snc .user-query .prose p:first-child { margin-bottom: 0px; }

.snc .prose { max-width: 100%; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 { column-gap: 1.5rem; display: grid; grid-template-columns: 120px 1fr; mar=
gin-bottom: 1.5rem; margin-top: 1.5rem; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) { col=
umn-gap: 1.5rem; display: grid; grid-template-columns: 120px 1fr; margin-bo=
ttom: 1.5rem; margin-top: 1.5rem; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
:last-child { margin-bottom: 0px; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation):last-=
child { margin-bottom: 0px; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 .inline-image-citation { grid-column-start: 1; grid-row: 1 / 13; height: 1=
80px; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) .inli=
ne-image-citation { grid-column-start: 1; grid-row: 1 / 13; height: 180px; =
}

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 * { grid-column-start: 2; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) * { g=
rid-column-start: 2; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 h3:first-of-type { margin-bottom: 0px; margin-top: 0.25rem; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) h3:fi=
rst-of-type { margin-bottom: 0px; margin-top: 0.25rem; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 .title-citation { margin-top: 0.25rem; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) .titl=
e-citation { margin-top: 0.25rem; }

.snc .prose .remark-container.inlineimage[\:has\(\.inline-image-citation\)]=
 p:first-of-type { margin-top: 0px; }

.snc .prose .remark-container.inlineimage:has(.inline-image-citation) p:fir=
st-of-type { margin-top: 0px; }

.snc .prose a { color: var(--link); font-weight: 400; text-decoration-line:=
 none; text-underline-offset: 2px; }

.snc .prose h1, .snc .prose h2, .snc .prose h3, .snc .prose h4, .snc .prose=
 h5 { font-size: 1rem; font-weight: 500; }

.snc .prose h3:first-child a { font-size: 1.25rem; font-weight: 500; }

.snc .prose ol, .snc .prose p, .snc .prose ul { margin-bottom: 1rem; }

.snc .prose ol:last-child, .snc .prose p:last-child, .snc .prose ul:last-ch=
ild { margin-bottom: 0px; }

.snc .prose ol, .snc .prose ul { display: contents; list-style-position: in=
side; list-style-type: none; margin-top: 0px; }

.snc .prose ol > li, .snc .prose ul > li { margin-bottom: 0px; margin-top: =
0px; position: relative; }

.snc .prose ol > li[\:has\(\.title-citation\)], .snc .prose ul > li[\:has\(=
\.title-citation\)] { margin-bottom: 0.75rem; }

.snc .prose ol > li:has(.title-citation), .snc .prose ul > li:has(.title-ci=
tation) { margin-bottom: 0.75rem; }

.snc .prose ol > li[\:has\(\.title-citation\)]:last-child, .snc .prose ul >=
 li[\:has\(\.title-citation\)]:last-child { margin-bottom: 0px; }

.snc .prose ol > li:has(.title-citation):last-child, .snc .prose ul > li:ha=
s(.title-citation):last-child { margin-bottom: 0px; }

.snc .prose ol > li::before, .snc .prose ul > li::before { left: 0px; posit=
ion: absolute; }

.snc .prose ol > li button, .snc .prose ol > li > a, .snc .prose ul > li bu=
tton, .snc .prose ul > li > a { margin-bottom: 0px; margin-top: 0px; }

.snc .prose ol > li p, .snc .prose ul > li p { margin-bottom: 0.5rem; margi=
n-top: 0px; }

.snc .prose ol > li ol, .snc .prose ol > li ul, .snc .prose ul > li ol, .sn=
c .prose ul > li ul { display: block; margin-bottom: 0px; margin-left: 1rem=
; margin-top: 0px; padding: 0px; }

.snc .prose ol { counter-reset: list-counter 0; }

.snc .prose ol > li { counter-increment: list-counter 1; padding-left: 2rem=
; }

.snc .prose ol > li::before { color: var(--text-secondary); content: counte=
r(list-counter) "."; }

.snc .prose ul > li { padding-left: 1.5rem; }

.snc .prose ul > li::before { content: "=E2=80=A2"; }

.snc .prose strong { font-weight: 500; }

.snc .prose.result-streaming .remark-container.inlineimage:last-child[\:has=
\(p\)]::after { display: none; }

.snc .prose.result-streaming .remark-container.inlineimage:last-child:has(p=
)::after { display: none; }

.snc .prose.result-streaming .remark-container.inlineimage:last-child p:las=
t-child::after { content: "=E2=97=8F"; display: inline; font-family: Circle=
, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sa=
ns", sans-serif; line-height: normal; margin-left: 0.25rem; vertical-align:=
 baseline; }

.sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px; =
margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-spa=
ce: nowrap; width: 1px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.\!visible { visibility: visible !important; }

.visible { visibility: visible; }

.\!invisible { visibility: hidden !important; }

.invisible { visibility: hidden; }

.collapse { visibility: collapse; }

.\!static { position: static !important; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.\!sticky { position: sticky !important; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-x-px { left: 1px; right: 1px; }

.inset-y-0 { bottom: 0px; top: 0px; }

.-bottom-px { bottom: -1px; }

.-left-2 { left: -0.5rem; }

.-left-96 { left: -24rem; }

.-right-1 { right: -0.25rem; }

.-right-2 { right: -0.5rem; }

.-top-1 { top: -0.25rem; }

.-top-96 { top: -24rem; }

.-top-\[1px\], .-top-px { top: -1px; }

.bottom-0 { bottom: 0px; }

.bottom-1 { bottom: 0.25rem; }

.bottom-1\.5 { bottom: 0.375rem; }

.bottom-12 { bottom: 3rem; }

.bottom-16 { bottom: 4rem; }

.bottom-2 { bottom: 0.5rem; }

.bottom-2\.5 { bottom: 0.625rem; }

.bottom-3 { bottom: 0.75rem; }

.bottom-4 { bottom: 1rem; }

.bottom-5 { bottom: 1.25rem; }

.bottom-8 { bottom: 2rem; }

.bottom-\[64px\] { bottom: 64px; }

.bottom-full { bottom: 100%; }

.bottom-snc-1 { bottom: var(--snc-1); }

[dir=3D"ltr"] .end-3 { right: 0.75rem; }

[dir=3D"rtl"] .end-3 { left: 0.75rem; }

.left-0 { left: 0px; }

.left-1\/2 { left: 50%; }

.left-2 { left: 0.5rem; }

.left-3 { left: 0.75rem; }

.left-4 { left: 1rem; }

.left-5 { left: 1.25rem; }

.left-6 { left: 1.5rem; }

.left-\[7px\] { left: 7px; }

.left-full { left: 100%; }

.right-0 { right: 0px; }

.right-1 { right: 0.25rem; }

.right-1\/2 { right: 50%; }

.right-14 { right: 3.5rem; }

.right-2 { right: 0.5rem; }

.right-3 { right: 0.75rem; }

.right-4 { right: 1rem; }

.right-8 { right: 2rem; }

.right-full { right: 100%; }

.right-snc-1 { right: var(--snc-1); }

[dir=3D"ltr"] .start-1\/2 { left: 50%; }

[dir=3D"rtl"] .start-1\/2 { right: 50%; }

.top-0 { top: 0px; }

.top-1 { top: 0.25rem; }

.top-1\/2 { top: 50%; }

.top-11 { top: 2.75rem; }

.top-14 { top: 3.5rem; }

.top-2 { top: 0.5rem; }

.top-3 { top: 0.75rem; }

.top-4 { top: 1rem; }

.top-6 { top: 1.5rem; }

.top-8 { top: 2rem; }

.top-\[-1px\] { top: -1px; }

.top-\[-3px\] { top: -3px; }

.top-\[-4px\] { top: -4px; }

.top-\[-6px\] { top: -6px; }

.top-\[20px\] { top: 20px; }

.top-\[calc\(100\%-10px\)\] { top: calc(100% - 10px); }

.top-full { top: 100%; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-30 { z-index: 30; }

.z-40 { z-index: 40; }

.z-50 { z-index: 50; }

.z-\[1000\] { z-index: 1000; }

.z-\[100\] { z-index: 100; }

.z-\[15\] { z-index: 15; }

.z-\[17\] { z-index: 17; }

.z-\[2\] { z-index: 2; }

.z-\[60\] { z-index: 60; }

.col-auto { grid-column: auto; }

.col-span-1 { grid-column: span 1 / span 1; }

.col-span-2 { grid-column: span 2 / span 2; }

.col-span-3 { grid-column: span 3 / span 3; }

.col-span-6 { grid-column: span 6 / span 6; }

.col-start-2 { grid-column-start: 2; }

.row-auto { grid-row: auto; }

.row-span-4 { grid-row: span 4 / span 4; }

.row-start-2 { grid-row-start: 2; }

.float-right { float: right; }

.float-left { float: left; }

.m-0 { margin: 0px; }

.m-1 { margin: 0.25rem; }

.m-1\.5 { margin: 0.375rem; }

.m-2 { margin: 0.5rem; }

.m-4 { margin: 1rem; }

.m-5 { margin: 1.25rem; }

.m-6 { margin: 1.5rem; }

.m-8 { margin: 2rem; }

.m-auto { margin: auto; }

.-mx-1 { margin-left: -0.25rem; margin-right: -0.25rem; }

.-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.-mx-snc-results-content-padding { margin-left: calc(var(--snc-results-cont=
ent-padding)*-1); margin-right: calc(var(--snc-results-content-padding)*-1)=
; }

.-my-0 { margin-bottom: 0px; margin-top: 0px; }

.-my-0\.5 { margin-bottom: -0.125rem; margin-top: -0.125rem; }

.-my-1 { margin-bottom: -0.25rem; margin-top: -0.25rem; }

.-my-2 { margin-bottom: -0.5rem; margin-top: -0.5rem; }

.mx-0 { margin-left: 0px; margin-right: 0px; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-1\.5 { margin-left: 0.375rem; margin-right: 0.375rem; }

.mx-16 { margin-left: 4rem; margin-right: 4rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.mx-2\.5 { margin-left: 0.625rem; margin-right: 0.625rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.mx-8 { margin-left: 2rem; margin-right: 2rem; }

.mx-\[32px\] { margin-left: 32px; margin-right: 32px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mx-snc-results-content-padding { margin-left: var(--snc-results-content-pa=
dding); margin-right: var(--snc-results-content-padding); }

.mx-snc-results-padding { margin-left: var(--snc-results-padding); margin-r=
ight: var(--snc-results-padding); }

.my-0 { margin-bottom: 0px; margin-top: 0px; }

.my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem; }

.my-1\.5 { margin-bottom: 0.375rem; margin-top: 0.375rem; }

.my-10 { margin-bottom: 2.5rem; margin-top: 2.5rem; }

.my-2 { margin-bottom: 0.5rem; margin-top: 0.5rem; }

.my-2\.5 { margin-bottom: 0.625rem; margin-top: 0.625rem; }

.my-3 { margin-bottom: 0.75rem; margin-top: 0.75rem; }

.my-4 { margin-bottom: 1rem; margin-top: 1rem; }

.my-6 { margin-bottom: 1.5rem; margin-top: 1.5rem; }

.my-8 { margin-bottom: 2rem; margin-top: 2rem; }

.my-\[32px\] { margin-bottom: 32px; margin-top: 32px; }

.my-auto { margin-bottom: auto; margin-top: auto; }

.-mb-0 { margin-bottom: 0px; }

.-mb-0\.5 { margin-bottom: -0.125rem; }

.-mb-2 { margin-bottom: -0.5rem; }

.-mb-4 { margin-bottom: -1rem; }

.-ml-1 { margin-left: -0.25rem; }

.-ml-1\.5 { margin-left: -0.375rem; }

.-ml-2 { margin-left: -0.5rem; }

.-ml-4 { margin-left: -1rem; }

.-ml-\[1px\] { margin-left: -1px; }

.-mr-1 { margin-right: -0.25rem; }

.-mr-12 { margin-right: -3rem; }

.-mr-2 { margin-right: -0.5rem; }

.-mr-3 { margin-right: -0.75rem; }

.-mr-3\.5 { margin-right: -0.875rem; }

.-mt-0 { margin-top: 0px; }

.-mt-0\.5 { margin-top: -0.125rem; }

.-mt-1 { margin-top: -0.25rem; }

.-mt-16 { margin-top: -4rem; }

.-mt-3 { margin-top: -0.75rem; }

.-mt-4 { margin-top: -1rem; }

.-mt-5 { margin-top: -1.25rem; }

.mb-0 { margin-bottom: 0px; }

.mb-0\.5 { margin-bottom: 0.125rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-1\.5 { margin-bottom: 0.375rem; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-16 { margin-bottom: 4rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mb-7 { margin-bottom: 1.75rem; }

.mb-8 { margin-bottom: 2rem; }

.mb-\[-1px\] { margin-bottom: -1px; }

.mb-\[-2px\] { margin-bottom: -2px; }

.mb-\[-6px\] { margin-bottom: -6px; }

.mb-\[1px\] { margin-bottom: 1px; }

.mb-\[2\.5rem\] { margin-bottom: 2.5rem; }

.mb-\[calc\(var\(--snc-results-padding\)-var\(--snc-results-content-inset\)=
\)\] { margin-bottom: calc(var(--snc-results-padding) - var(--snc-results-c=
ontent-inset)); }

.mb-auto { margin-bottom: auto; }

.mb-snc-1 { margin-bottom: var(--snc-1); }

.mb-snc-2 { margin-bottom: var(--snc-2); }

[dir=3D"ltr"] .me-1 { margin-right: 0.25rem; }

[dir=3D"rtl"] .me-1 { margin-left: 0.25rem; }

.ml-0 { margin-left: 0px; }

.ml-0\.5 { margin-left: 0.125rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-12 { margin-left: 3rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-6 { margin-left: 1.5rem; }

.ml-7 { margin-left: 1.75rem; }

.ml-8 { margin-left: 2rem; }

.ml-\[3px\] { margin-left: 3px; }

.ml-\[6px\] { margin-left: 6px; }

.ml-auto { margin-left: auto; }

.ml-snc-2 { margin-left: var(--snc-2); }

.mr-0 { margin-right: 0px; }

.mr-1 { margin-right: 0.25rem; }

.mr-1\.5 { margin-right: 0.375rem; }

.mr-2 { margin-right: 0.5rem; }

.mr-3 { margin-right: 0.75rem; }

.mr-4 { margin-right: 1rem; }

.mr-5 { margin-right: 1.25rem; }

.mr-8 { margin-right: 2rem; }

.mr-\[0\.5\] { }

.mr-auto { margin-right: auto; }

.mr-px { margin-right: 1px; }

.mr-snc-results-content-padding { margin-right: var(--snc-results-content-p=
adding); }

[dir=3D"ltr"] .ms-2 { margin-left: 0.5rem; }

[dir=3D"rtl"] .ms-2 { margin-right: 0.5rem; }

.mt-0 { margin-top: 0px; }

.mt-0\.5 { margin-top: 0.125rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-1\.5 { margin-top: 0.375rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-16 { margin-top: 4rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-24 { margin-top: 6rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-7 { margin-top: 1.75rem; }

.mt-8 { margin-top: 2rem; }

.mt-\[-2px\] { margin-top: -2px; }

.mt-\[-3px\] { margin-top: -3px; }

.mt-\[-4px\] { margin-top: -4px; }

.mt-\[14px\] { margin-top: 14px; }

.mt-\[2px\] { margin-top: 2px; }

.mt-auto { margin-top: auto; }

.mt-snc-1 { margin-top: var(--snc-1); }

.mt-snc-results-content-inset { margin-top: var(--snc-results-content-inset=
); }

.line-clamp-1 { -webkit-line-clamp: 1; }

.line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-2 { -webkit-line-clamp: 2; }

.line-clamp-3 { -webkit-line-clamp: 3; }

.line-clamp-3, .line-clamp-5 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-5 { -webkit-line-clamp: 5; }

.line-clamp-6 { -webkit-box-orient: vertical; -webkit-line-clamp: 6; displa=
y: -webkit-box; overflow: hidden; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.flow-root { display: flow-root; }

.grid { display: grid; }

.contents { display: contents; }

.hidden { display: none; }

.aspect-\[4\/7\] { aspect-ratio: 4 / 7; }

.aspect-\[7\/4\] { aspect-ratio: 7 / 4; }

.aspect-square { aspect-ratio: 1 / 1; }

.aspect-video { aspect-ratio: 16 / 9; }

.\!h-20 { height: 5rem !important; }

.\!h-fit { height: fit-content !important; }

.h-0 { height: 0px; }

.h-1 { height: 0.25rem; }

.h-1\.5 { height: 0.375rem; }

.h-1\/4 { height: 25%; }

.h-10 { height: 2.5rem; }

.h-11 { height: 2.75rem; }

.h-12 { height: 3rem; }

.h-14 { height: 3.5rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-2\/3 { height: 66.6667%; }

.h-20 { height: 5rem; }

.h-24 { height: 6rem; }

.h-3 { height: 0.75rem; }

.h-3\.5 { height: 0.875rem; }

.h-32 { height: 8rem; }

.h-4 { height: 1rem; }

.h-4\/5 { height: 80%; }

.h-40 { height: 10rem; }

.h-44 { height: 11rem; }

.h-48 { height: 12rem; }

.h-5 { height: 1.25rem; }

.h-52 { height: 13rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-96 { height: 24rem; }

.h-\[0\.2rem\] { height: 0.2rem; }

.h-\[0\.75rem\] { height: 0.75rem; }

.h-\[100dvh\] { height: 100dvh; }

.h-\[100vh\] { height: 100vh; }

.h-\[104px\] { height: 104px; }

.h-\[11px\] { height: 11px; }

.h-\[1200px\] { height: 1200px; }

.h-\[12px\] { height: 12px; }

.h-\[14px\] { height: 14px; }

.h-\[15px\] { height: 15px; }

.h-\[16px\] { height: 16px; }

.h-\[18px\] { height: 18px; }

.h-\[19px\] { height: 19px; }

.h-\[1px\] { height: 1px; }

.h-\[20px\] { height: 20px; }

.h-\[22px\] { height: 22px; }

.h-\[234px\] { height: 234px; }

.h-\[23px\] { height: 23px; }

.h-\[24rem\] { height: 24rem; }

.h-\[250px\] { height: 250px; }

.h-\[26px\] { height: 26px; }

.h-\[280px\] { height: 280px; }

.h-\[2px\] { height: 2px; }

.h-\[30px\] { height: 30px; }

.h-\[36px\] { height: 36px; }

.h-\[3px\] { height: 3px; }

.h-\[404px\] { height: 404px; }

.h-\[42px\] { height: 42px; }

.h-\[44px\] { height: 44px; }

.h-\[50px\] { height: 50px; }

.h-\[52px\] { height: 52px; }

.h-\[600px\] { height: 600px; }

.h-\[60px\] { height: 60px; }

.h-\[70px\] { height: 70px; }

.h-\[70vh\] { height: 70vh; }

.h-\[72px\] { height: 72px; }

.h-\[76px\] { height: 76px; }

.h-\[80vh\] { height: 80vh; }

.h-\[95vh\] { height: 95vh; }

.h-\[9rem\] { height: 9rem; }

.h-\[calc\(100\%\+var\(--snc-1\)\)\] { height: calc(100% + var(--snc-1)); }

.h-\[calc\(100vh-25rem\)\] { height: calc(-25rem + 100vh); }

.h-auto { height: auto; }

.h-fit { height: fit-content; }

.h-full { height: 100%; }

.h-px { height: 1px; }

.h-screen { height: 100vh; }

.h-snc-1 { height: var(--snc-1); }

.h-snc-3 { height: var(--snc-3); }

.h-snc-input-height { height: var(--snc-input-height); }

.\!max-h-\[100vh\] { max-height: 100vh !important; }

.max-h-0 { max-height: 0px; }

.max-h-32 { max-height: 8rem; }

.max-h-36 { max-height: 9rem; }

.max-h-40 { max-height: 10rem; }

.max-h-52 { max-height: 13rem; }

.max-h-60 { max-height: 15rem; }

.max-h-64 { max-height: 16rem; }

.max-h-72 { max-height: 18rem; }

.max-h-96 { max-height: 24rem; }

.max-h-\[200px\] { max-height: 200px; }

.max-h-\[25dvh\] { max-height: 25dvh; }

.max-h-\[28rem\] { max-height: 28rem; }

.max-h-\[600px\] { max-height: 600px; }

.max-h-\[60vh\] { max-height: 60vh; }

.max-h-\[75vh\] { max-height: 75vh; }

.max-h-\[80\%\] { max-height: 80%; }

.max-h-\[80vh\] { max-height: 80vh; }

.max-h-\[85vh\] { max-height: 85vh; }

.max-h-\[calc\(100vh-150px\)\] { max-height: calc(-150px + 100vh); }

.max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-10 { min-height: 2.5rem; }

.min-h-20 { min-height: 5rem; }

.min-h-\[1\.5rem\] { min-height: 1.5rem; }

.min-h-\[104px\] { min-height: 104px; }

.min-h-\[2\.5rem\] { min-height: 2.5rem; }

.min-h-\[20px\] { min-height: 20px; }

.min-h-\[36px\] { min-height: 36px; }

.min-h-\[40px\] { min-height: 40px; }

.min-h-\[44px\] { min-height: 44px; }

.min-h-\[50vh\] { min-height: 50vh; }

.min-h-\[56px\] { min-height: 56px; }

.min-h-\[64px\] { min-height: 64px; }

.min-h-\[71px\] { min-height: 71px; }

.min-h-\[75vh\] { min-height: 75vh; }

.min-h-\[80vh\] { min-height: 80vh; }

.min-h-\[96px\] { min-height: 96px; }

.min-h-full { min-height: 100%; }

.min-h-screen { min-height: 100vh; }

.\!w-20 { width: 5rem !important; }

.w-0 { width: 0px; }

.w-1 { width: 0.25rem; }

.w-1\.5 { width: 0.375rem; }

.w-1\/2 { width: 50%; }

.w-1\/3 { width: 33.3333%; }

.w-1\/4 { width: 25%; }

.w-10 { width: 2.5rem; }

.w-11 { width: 2.75rem; }

.w-12 { width: 3rem; }

.w-14 { width: 3.5rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\/3 { width: 66.6667%; }

.w-20 { width: 5rem; }

.w-24 { width: 6rem; }

.w-28 { width: 7rem; }

.w-3 { width: 0.75rem; }

.w-3\.5 { width: 0.875rem; }

.w-32 { width: 8rem; }

.w-36 { width: 9rem; }

.w-4 { width: 1rem; }

.w-4\/5 { width: 80%; }

.w-40 { width: 10rem; }

.w-48 { width: 12rem; }

.w-5 { width: 1.25rem; }

.w-52 { width: 13rem; }

.w-6 { width: 1.5rem; }

.w-60 { width: 15rem; }

.w-64 { width: 16rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-80 { width: 20rem; }

.w-9 { width: 2.25rem; }

.w-96 { width: 24rem; }

.w-\[0\.75rem\] { width: 0.75rem; }

.w-\[103px\] { width: 103px; }

.w-\[11px\] { width: 11px; }

.w-\[120px\] { width: 120px; }

.w-\[140\%\] { width: 140%; }

.w-\[14px\] { width: 14px; }

.w-\[15px\] { width: 15px; }

.w-\[16px\] { width: 16px; }

.w-\[180px\] { width: 180px; }

.w-\[184px\] { width: 184px; }

.w-\[18px\] { width: 18px; }

.w-\[1px\] { width: 1px; }

.w-\[209px\] { width: 209px; }

.w-\[20px\] { width: 20px; }

.w-\[218px\] { width: 218px; }

.w-\[234px\] { width: 234px; }

.w-\[23px\] { width: 23px; }

.w-\[250px\] { width: 250px; }

.w-\[25vw\] { width: 25vw; }

.w-\[260px\] { width: 260px; }

.w-\[294px\] { width: 294px; }

.w-\[304px\] { width: 304px; }

.w-\[30px\] { width: 30px; }

.w-\[32px\] { width: 32px; }

.w-\[37\%\] { width: 37%; }

.w-\[3px\] { width: 3px; }

.w-\[400px\] { width: 400px; }

.w-\[42px\] { width: 42px; }

.w-\[44px\] { width: 44px; }

.w-\[50px\] { width: 50px; }

.w-\[70\%\] { width: 70%; }

.w-\[700px\] { width: 700px; }

.w-\[70px\] { width: 70px; }

.w-\[80\%\] { width: 80%; }

.w-\[860px\] { width: 860px; }

.w-\[88px\] { width: 88px; }

.w-\[90px\] { width: 90px; }

.w-\[90vw\] { width: 90vw; }

.w-\[960px\] { width: 960px; }

.w-\[calc\(\(100\%-768px\)\/2\)\] { width: calc(50% - 384px); }

.w-\[calc\(100\%-50px\)\] { width: calc(100% - 50px); }

.w-auto { width: auto; }

.w-fit { width: fit-content; }

.w-full { width: 100%; }

.w-px { width: 1px; }

.w-screen { width: 100vw; }

.w-snc-1 { width: var(--snc-1); }

.min-w-0 { min-width: 0px; }

.min-w-20 { min-width: 5rem; }

.min-w-32 { min-width: 8rem; }

.min-w-36 { min-width: 9rem; }

.min-w-48 { min-width: 12rem; }

.min-w-60 { min-width: 15rem; }

.min-w-\[100px\] { min-width: 100px; }

.min-w-\[125px\] { min-width: 125px; }

.min-w-\[180px\] { min-width: 180px; }

.min-w-\[200px\] { min-width: 200px; }

.min-w-\[220px\] { min-width: 220px; }

.min-w-\[250px\] { min-width: 250px; }

.min-w-\[25vw\] { min-width: 25vw; }

.min-w-\[280px\] { min-width: 280px; }

.min-w-\[32px\] { min-width: 32px; }

.min-w-\[340px\] { min-width: 340px; }

.min-w-\[5\.5rem\] { min-width: 5.5rem; }

.min-w-\[50px\] { min-width: 50px; }

.min-w-\[80vw\] { min-width: 80vw; }

.min-w-fit { min-width: fit-content; }

.min-w-full { min-width: 100%; }

.\!max-w-\[80vw\] { max-width: 80vw !important; }

.max-w-28 { max-width: 7rem; }

.max-w-2xl { max-width: 42rem; }

.max-w-2xs { max-width: 240px; }

.max-w-32 { max-width: 8rem; }

.max-w-36 { max-width: 9rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-52 { max-width: 13rem; }

.max-w-5xl { max-width: 64rem; }

.max-w-64 { max-width: 16rem; }

.max-w-6xl { max-width: 72rem; }

.max-w-72 { max-width: 18rem; }

.max-w-7xl { max-width: 80rem; }

.max-w-80 { max-width: 20rem; }

.max-w-96 { max-width: 24rem; }

.max-w-\[100\%\] { max-width: 100%; }

.max-w-\[100vw\] { max-width: 100vw; }

.max-w-\[1200px\] { max-width: 1200px; }

.max-w-\[1300px\] { max-width: 1300px; }

.max-w-\[200px\] { max-width: 200px; }

.max-w-\[22\%\] { max-width: 22%; }

.max-w-\[220px\] { max-width: 220px; }

.max-w-\[260px\] { max-width: 260px; }

.max-w-\[280px\] { max-width: 280px; }

.max-w-\[372px\] { max-width: 372px; }

.max-w-\[373px\] { max-width: 373px; }

.max-w-\[400px\] { max-width: 400px; }

.max-w-\[440px\] { max-width: 440px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-\[550px\] { max-width: 550px; }

.max-w-\[555px\] { max-width: 555px; }

.max-w-\[560px\] { max-width: 560px; }

.max-w-\[70\%\] { max-width: 70%; }

.max-w-\[700px\] { max-width: 700px; }

.max-w-\[80\%\] { max-width: 80%; }

.max-w-\[800px\] { max-width: 800px; }

.max-w-\[90\%\] { max-width: 90%; }

.max-w-\[90vw\] { max-width: 90vw; }

.max-w-\[96vw\] { max-width: 96vw; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-screen-md { max-width: 768px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.max-w-xs { max-width: 20rem; }

.flex-1 { flex: 1 1 0%; }

.flex-auto { flex: 1 1 auto; }

.flex-initial { flex: 0 1 auto; }

.flex-none { flex: 0 0 auto; }

.flex-shrink { flex-shrink: 1; }

.flex-shrink-0 { flex-shrink: 0; }

.shrink { flex-shrink: 1; }

.shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

.flex-grow-0 { flex-grow: 0; }

.grow { flex-grow: 1; }

.grow-0 { flex-grow: 0; }

.table-auto { table-layout: auto; }

.table-fixed { table-layout: fixed; }

.border-separate { border-collapse: separate; }

.border-spacing-0 { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px;=
 border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); }

.origin-\[50\%_50\%\] { transform-origin: 50% 50%; }

.origin-left { transform-origin: left center; }

.origin-top-left { transform-origin: left top; }

.origin-top-right { transform-origin: right top; }

.-translate-x-1\/2 { --tw-translate-x: -50%; }

.-translate-x-1\/2, .-translate-x-full { transform: translate(var(--tw-tran=
slate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-translate-x-full { --tw-translate-x: -100%; }

.-translate-y-1 { --tw-translate-y: -0.25rem; }

.-translate-y-1, .-translate-y-1\/2 { transform: translate(var(--tw-transla=
te-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }

.-translate-y-1\/2 { --tw-translate-y: -50%; }

.-translate-y-3 { --tw-translate-y: -0.75rem; }

.-translate-y-3, .translate-x-0 { transform: translate(var(--tw-translate-x=
),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) s=
kewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));=
 }

.translate-x-0 { --tw-translate-x: 0px; }

.translate-x-0\.5 { --tw-translate-x: 0.125rem; }

.translate-x-0\.5, .translate-x-1 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-1 { --tw-translate-x: 0.25rem; }

.translate-x-1\/2 { --tw-translate-x: 50%; }

.translate-x-1\/2, .translate-x-\[-calc\(100\%\+4px\)\] { transform: transl=
ate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) s=
kewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) sc=
aleY(var(--tw-scale-y)); }

.translate-x-\[-calc\(100\%\+4px\)\] { --tw-translate-x: -calc(100% + 4px);=
 }

.translate-x-full { --tw-translate-x: 100%; }

.translate-x-full, .translate-y-0 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-y-0 { --tw-translate-y: 0px; }

.translate-y-1 { --tw-translate-y: 0.25rem; }

.translate-y-1, .translate-y-3 { transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) sk=
ewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); =
}

.translate-y-3 { --tw-translate-y: 0.75rem; }

.translate-y-\[calc\(100\%-71px\)\] { --tw-translate-y: calc(100% - 71px); =
}

.-rotate-180, .translate-y-\[calc\(100\%-71px\)\] { transform: translate(va=
r(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.-rotate-180 { --tw-rotate: -180deg; }

.-rotate-90 { --tw-rotate: -90deg; }

.-rotate-90, .rotate-180 { transform: translate(var(--tw-translate-x),var(-=
-tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(va=
r(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; }

.rotate-45 { --tw-rotate: 45deg; }

.rotate-45, .rotate-90 { transform: translate(var(--tw-translate-x),var(--t=
w-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(=
--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-90 { --tw-rotate: 90deg; }

.rotate-\[40deg\] { --tw-rotate: 40deg; }

.rotate-\[40deg\], .scale-95 { transform: translate(var(--tw-translate-x),v=
ar(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skew=
Y(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-95 { --tw-scale-x: .95; --tw-scale-y: .95; }

.-scale-x-100 { --tw-scale-x: -1; }

.-scale-x-100, .scale-x-75 { transform: translate(var(--tw-translate-x),var=
(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(=
var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-x-75 { --tw-scale-x: .75; }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)=
) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@-webkit-keyframes blinkOnce {=20
  0% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes blinkOnce {=20
  0% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}

.animate-blinkOnce { animation: 0.5s ease 0s 1 normal none running blinkOnc=
e; }

@-webkit-keyframes pulse {=20
  50% { opacity: 0.5; }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

.animate-pulse { animation: 2s cubic-bezier(0.4, 0, 0.6, 1) 0s infinite nor=
mal none running pulse; }

@-webkit-keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.animate-slideDownAndFadeLong { animation: 0.8s cubic-bezier(0.16, 1, 0.3, =
1) 0s 1 normal none running slideDownAndFade; }

@-webkit-keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(1px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.animate-slideLeftAndFade { animation: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0=
s 1 normal none running slideLeftAndFade; }

@-webkit-keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; =
}

.cursor-auto { cursor: auto; }

.cursor-default { cursor: default; }

.cursor-e-resize { cursor: e-resize; }

.cursor-grab { cursor: grab; }

.cursor-grabbing { cursor: grabbing; }

.cursor-none { cursor: none; }

.cursor-not-allowed { cursor: not-allowed; }

.cursor-pointer { cursor: pointer; }

.cursor-progress { cursor: progress; }

.cursor-text { cursor: text; }

.cursor-w-resize { cursor: w-resize; }

.cursor-wait { cursor: wait; }

.select-none { user-select: none; }

.resize-none { resize: none; }

.resize { resize: both; }

.scroll-m-5 { scroll-margin: 1.25rem; }

.scroll-mx-5 { scroll-margin-left: 1.25rem; scroll-margin-right: 1.25rem; }

.scroll-mt-28 { scroll-margin-top: 7rem; }

.list-decimal { list-style-type: decimal; }

.list-disc { list-style-type: disc; }

.list-none { list-style-type: none; }

.appearance-none { appearance: none; }

.grid-flow-row { grid-auto-flow: row; }

.grid-flow-col { grid-auto-flow: column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }

.grid-cols-8 { grid-template-columns: repeat(8, minmax(0px, 1fr)); }

.grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }

.grid-cols-\[1fr\,auto\,1fr\] { grid-template-columns: 1fr auto 1fr; }

.grid-cols-\[50\%\,50\%\] { grid-template-columns: 50% 50%; }

.grid-cols-\[auto\,1fr\] { grid-template-columns: auto 1fr; }

.grid-cols-\[auto\,auto\] { grid-template-columns: auto auto; }

.grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content; =
}

.grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-col=
umns: repeat(auto-fit, minmax(250px, 1fr)); }

.grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_10px\] { grid-template-rows: minmax(=
10px, 1fr) auto 10px; }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_minmax\(10px\,_1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }

.flex-row { flex-direction: row; }

.flex-row-reverse { flex-direction: row-reverse; }

.flex-col { flex-direction: column; }

.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }

.flex-wrap-reverse { flex-wrap: wrap-reverse; }

.flex-nowrap { flex-wrap: nowrap; }

.content-center { align-content: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.items-baseline { align-items: baseline; }

.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.justify-stretch { justify-content: stretch; }

.gap-0 { gap: 0px; }

.gap-0\.5 { gap: 0.125rem; }

.gap-1 { gap: 0.25rem; }

.gap-1\.5 { gap: 0.375rem; }

.gap-10 { gap: 2.5rem; }

.gap-16 { gap: 4rem; }

.gap-2 { gap: 0.5rem; }

.gap-2\.5 { gap: 0.625rem; }

.gap-3 { gap: 0.75rem; }

.gap-3\.5 { gap: 0.875rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-8 { gap: 2rem; }

.gap-\[2px\] { gap: 2px; }

.gap-\[6px\] { gap: 6px; }

.gap-snc-1 { gap: var(--snc-1); }

.gap-snc-results-content-padding { gap: var(--snc-results-content-padding);=
 }

.gap-snc-results-padding { gap: var(--snc-results-padding); }

.gap-x-1 { column-gap: 0.25rem; }

.gap-x-1\.5 { column-gap: 0.375rem; }

.gap-x-3 { column-gap: 0.75rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-x-9 { column-gap: 2.25rem; }

.gap-y-1 { row-gap: 0.25rem; }

.gap-y-2 { row-gap: 0.5rem; }

.-space-y-px > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; m=
argin-bottom: calc(-1px*var(--tw-space-y-reverse)); margin-top: calc(-1px*(=
1 - var(--tw-space-y-reverse))); }

.space-x-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.25rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(=
.25rem*var(--tw-space-x-reverse)); }

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; =
margin-left: calc(.375rem*(1 - var(--tw-space-x-reverse))); margin-right: c=
alc(.375rem*var(--tw-space-x-reverse)); }

.space-x-14 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; ma=
rgin-left: calc(3.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc=
(3.5rem*var(--tw-space-x-reverse)); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.=
5rem*var(--tw-space-x-reverse)); }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.75rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(=
.75rem*var(--tw-space-x-reverse)); }

.space-x-32 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; ma=
rgin-left: calc(8rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(8=
rem*var(--tw-space-x-reverse)); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(1rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(1r=
em*var(--tw-space-x-reverse)); }

.space-x-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(1.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(=
1.5rem*var(--tw-space-x-reverse)); }

.space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(0px*var(--tw-space-y-reverse)); margin-top: calc(0px*(1 - =
var(--tw-space-y-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.25rem*var(--tw-space-y-reverse)); margin-top: calc(.25rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; =
margin-bottom: calc(.375rem*var(--tw-space-y-reverse)); margin-top: calc(.3=
75rem*(1 - var(--tw-space-y-reverse))); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.5rem*var(--tw-space-y-reverse)); margin-top: calc(.5rem*(=
1 - var(--tw-space-y-reverse))); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.75rem*var(--tw-space-y-reverse)); margin-top: calc(.75rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1rem*var(--tw-space-y-reverse)); margin-top: calc(1rem*(1 =
- var(--tw-space-y-reverse))); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1.25rem*var(--tw-space-y-reverse)); margin-top: calc(1.25r=
em*(1 - var(--tw-space-y-reverse))); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(2rem*var(--tw-space-y-reverse)); margin-top: calc(2rem*(1 =
- var(--tw-space-y-reverse))); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-left-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-right-wi=
dth: calc(1px*var(--tw-divide-x-reverse)); }

.divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: 0; bor=
der-bottom-width: calc(1px*var(--tw-divide-y-reverse)); border-top-width: c=
alc(1px*(1 - var(--tw-divide-y-reverse))); }

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgba(227,227,227,var(--tw-divide-opacity)); }

.divide-token-border-light > :not([hidden]) ~ :not([hidden]) { border-color=
: var(--border-light); }

.divide-white\/10 > :not([hidden]) ~ :not([hidden]) { border-color: rgba(25=
5, 255, 255, 0.1); }

.self-start { align-self: flex-start; }

.self-end { align-self: flex-end; }

.self-center { align-self: center; }

.self-stretch { align-self: stretch; }

.justify-self-start { justify-self: start; }

.justify-self-end { justify-self: end; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-clip { overflow: clip; }

.overflow-visible { overflow: visible; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-x-clip { overflow-x: clip; }

.overflow-y-visible { overflow-y: visible; }

.overflow-y-scroll { overflow-y: scroll; }

.scroll-smooth { scroll-behavior: smooth; }

.truncate { overflow: hidden; white-space: nowrap; }

.overflow-ellipsis, .text-ellipsis, .truncate { text-overflow: ellipsis; }

.whitespace-normal { white-space: normal; }

.whitespace-nowrap { white-space: nowrap; }

.\!whitespace-pre { white-space: pre !important; }

.whitespace-pre-line { white-space: pre-line; }

.\!whitespace-pre-wrap { white-space: pre-wrap !important; }

.whitespace-pre-wrap { white-space: pre-wrap; }

.text-nowrap { text-wrap: nowrap; }

.break-words { overflow-wrap: break-word; }

.break-all { word-break: break-all; }

.\!rounded { border-radius: 0.25rem !important; }

.\!rounded-full { border-radius: 9999px !important; }

.\!rounded-lg { border-radius: 0.5rem !important; }

.rounded { border-radius: 0.25rem; }

.rounded-2xl { border-radius: 1rem; }

.rounded-3xl { border-radius: 1.5rem; }

.rounded-\[26px\] { border-radius: 26px; }

.rounded-\[2px\] { border-radius: 2px; }

.rounded-\[38px\] { border-radius: 38px; }

.rounded-\[5px\] { border-radius: 5px; }

.rounded-\[6px\] { border-radius: 6px; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded-none { border-radius: 0px; }

.rounded-sm { border-radius: 0.125rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radi=
us: 0.5rem; }

.rounded-b-xl { border-bottom-left-radius: 0.75rem; border-bottom-right-rad=
ius: 0.75rem; }

.rounded-l-full { border-bottom-left-radius: 9999px; border-top-left-radius=
: 9999px; }

.rounded-l-md { border-bottom-left-radius: 0.375rem; border-top-left-radius=
: 0.375rem; }

.rounded-l-none { border-bottom-left-radius: 0px; border-top-left-radius: 0=
px; }

.rounded-r-full { border-bottom-right-radius: 9999px; border-top-right-radi=
us: 9999px; }

.rounded-r-md { border-bottom-right-radius: 0.375rem; border-top-right-radi=
us: 0.375rem; }

.rounded-r-none { border-bottom-right-radius: 0px; border-top-right-radius:=
 0px; }

.rounded-t-2xl { border-top-left-radius: 1rem; border-top-right-radius: 1re=
m; }

.rounded-t-\[20px\] { border-top-left-radius: 20px; border-top-right-radius=
: 20px; }

.rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius=
: 30px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0px=
; }

.rounded-t-xl { border-top-left-radius: 0.75rem; border-top-right-radius: 0=
.75rem; }

.rounded-bl-2xl { border-bottom-left-radius: 1rem; }

.rounded-bl-md { border-bottom-left-radius: 0.375rem; }

.rounded-bl-xl { border-bottom-left-radius: 0.75rem; }

.rounded-br-full { border-bottom-right-radius: 9999px; }

.rounded-br-md { border-bottom-right-radius: 0.375rem; }

.rounded-br-sm { border-bottom-right-radius: 0.125rem; }

.rounded-br-xl { border-bottom-right-radius: 0.75rem; }

.rounded-tl-2xl { border-top-left-radius: 1rem; }

.rounded-tl-md { border-top-left-radius: 0.375rem; }

.rounded-tl-xl { border-top-left-radius: 0.75rem; }

.rounded-tr-2xl { border-top-right-radius: 1rem; }

.rounded-tr-lg { border-top-right-radius: 0.5rem; }

.rounded-tr-md { border-top-right-radius: 0.375rem; }

.rounded-tr-xl { border-top-right-radius: 0.75rem; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-\[0\.5px\] { border-width: 0.5px; }

.border-\[3px\] { border-width: 3px; }

.border-y { border-top-width: 1px; }

.border-b, .border-y { border-bottom-width: 1px; }

.border-b-2 { border-bottom-width: 2px; }

.border-b-\[0\.5px\] { border-bottom-width: 0.5px; }

.border-l { border-left-width: 1px; }

.border-l-0 { border-left-width: 0px; }

.border-l-4 { border-left-width: 4px; }

.border-l-8 { border-left-width: 8px; }

.border-r { border-right-width: 1px; }

.border-r-8 { border-right-width: 8px; }

.border-r-\[1px\] { border-right-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-t-8 { border-top-width: 8px; }

.border-t-\[0\.5px\] { border-top-width: 0.5px; }

.border-dashed { border-style: dashed; }

.border-none { border-style: none; }

.border-\[\#EDEDF2\] { --tw-border-opacity: 1; border-color: rgba(237,237,2=
42,var(--tw-border-opacity)); }

.border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, 0, 0.1); }

.border-black { --tw-border-opacity: 1; border-color: rgba(0,0,0,var(--tw-b=
order-opacity)); }

.border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.border-black\/30 { border-color: rgba(0, 0, 0, 0.3); }

.border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }

.border-blue-selection\/\[\.24\] { border-color: rgba(0, 122, 255, 0.24); }

.border-blue-selection\/\[\.3\] { border-color: rgba(0, 122, 255, 0.3); }

.border-brand-green-800 { --tw-border-opacity: 1; border-color: rgba(5,167,=
70,var(--tw-border-opacity)); }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236,236,v=
ar(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgba(227,227,227,v=
ar(--tw-border-opacity)); }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgba(205,205,205,v=
ar(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgba(180,180,180,v=
ar(--tw-border-opacity)); }

.border-gray-500 { --tw-border-opacity: 1; border-color: rgba(155,155,155,v=
ar(--tw-border-opacity)); }

.border-gray-700 { --tw-border-opacity: 1; border-color: rgba(66,66,66,var(=
--tw-border-opacity)); }

.border-gray-950 { --tw-border-opacity: 1; border-color: rgba(13,13,13,var(=
--tw-border-opacity)); }

.border-green-500 { --tw-border-opacity: 1; border-color: rgba(25,195,125,v=
ar(--tw-border-opacity)); }

.border-green-600 { --tw-border-opacity: 1; border-color: rgba(16,163,127,v=
ar(--tw-border-opacity)); }

.border-orange-400 { --tw-border-opacity: 1; border-color: rgba(255,96,0,va=
r(--tw-border-opacity)); }

.border-orange-400\/15 { border-color: rgba(255, 96, 0, 0.15); }

.border-orange-500 { --tw-border-opacity: 1; border-color: rgba(224,108,43,=
var(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(=
--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgba(220,38,38,var(=
--tw-border-opacity)); }

.border-token-border-heavy { border-color: var(--border-heavy); }

.border-token-border-light { border-color: var(--border-light); }

.border-token-border-medium { border-color: var(--border-medium); }

.border-token-border-xheavy { border-color: var(--border-xheavy); }

.border-token-main-surface-secondary { border-color: var(--main-surface-sec=
ondary); }

.border-token-main-surface-tertiary { border-color: var(--main-surface-tert=
iary); }

.border-token-surface-error\/15 { border-color: rgb(var(--surface-error)/.1=
5); }

.border-token-text-primary { border-color: var(--text-primary); }

.border-token-text-secondary { border-color: var(--text-secondary); }

.border-token-text-tertiary { border-color: var(--text-tertiary); }

.border-transparent { border-color: transparent; }

.border-white { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(=
--tw-border-opacity)); }

.border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.border-y-token-border-medium { border-bottom-color: var(--border-medium); =
border-top-color: var(--border-medium); }

.border-b-black { --tw-border-opacity: 1; border-bottom-color: rgba(0,0,0,v=
ar(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

.border-l-token-sidebar-surface-secondary { border-left-color: var(--sideba=
r-surface-secondary); }

.border-l-transparent { border-left-color: transparent; }

.border-r-transparent { border-right-color: transparent; }

.border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgba(0,1=
19,255,var(--tw-border-opacity)); }

.\!bg-brand-purple { --tw-bg-opacity: 1 !important; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)) !important; }

.\!bg-gray-200 { --tw-bg-opacity: 1 !important; background-color: rgba(227,=
227,227,var(--tw-bg-opacity)) !important; }

.\!bg-token-main-surface-primary { background-color: var(--main-surface-pri=
mary) !important; }

.\!bg-token-text-primary { background-color: var(--text-primary) !important=
; }

.\!bg-transparent { background-color: transparent !important; }

.bg-\[\#0077FF\] { --tw-bg-opacity: 1; background-color: rgba(0,119,255,var=
(--tw-bg-opacity)); }

.bg-\[\#080808\] { --tw-bg-opacity: 1; background-color: rgba(8,8,8,var(--t=
w-bg-opacity)); }

.bg-\[\#10A37F\] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,va=
r(--tw-bg-opacity)); }

.bg-\[\#3C46FF\] { --tw-bg-opacity: 1; background-color: rgba(60,70,255,var=
(--tw-bg-opacity)); }

.bg-\[\#4046EC\] { --tw-bg-opacity: 1; background-color: rgba(64,70,236,var=
(--tw-bg-opacity)); }

.bg-\[\#B161FD\] { --tw-bg-opacity: 1; background-color: rgba(177,97,253,va=
r(--tw-bg-opacity)); }

.bg-\[\#F8CA27\] { --tw-bg-opacity: 1; background-color: rgba(248,202,39,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF5588\] { --tw-bg-opacity: 1; background-color: rgba(255,85,136,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF6E3C\] { --tw-bg-opacity: 1; background-color: rgba(255,110,60,va=
r(--tw-bg-opacity)); }

.bg-\[\#f4f4f4\] { --tw-bg-opacity: 1; background-color: rgba(244,244,244,v=
ar(--tw-bg-opacity)); }

.bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-op=
acity)); }

.bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }

.bg-black\/50 { background-color: rgba(0, 0, 0, 0.5); }

.bg-black\/90 { background-color: rgba(0, 0, 0, 0.9); }

.bg-black\/\[\.04\] { background-color: rgba(0, 0, 0, 0.04); }

.bg-black\/\[\.08\] { background-color: rgba(0, 0, 0, 0.08); }

.bg-black\/\[\.12\] { background-color: rgba(0, 0, 0, 0.12); }

.bg-blue-100 { --tw-bg-opacity: 1; background-color: rgba(219,234,254,var(-=
-tw-bg-opacity)); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgba(191,219,254,var(-=
-tw-bg-opacity)); }

.bg-blue-300 { --tw-bg-opacity: 1; background-color: rgba(121,137,255,var(-=
-tw-bg-opacity)); }

.bg-blue-400 { --tw-bg-opacity: 1; background-color: rgba(58,136,255,var(--=
tw-bg-opacity)); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgba(69,89,164,var(--t=
w-bg-opacity)); }

.bg-blue-700 { --tw-bg-opacity: 1; background-color: rgba(29,78,216,var(--t=
w-bg-opacity)); }

.bg-blue-selection { --tw-bg-opacity: 1; background-color: rgba(0,122,255,v=
ar(--tw-bg-opacity)); }

.bg-blue-selection\/\[\.08\] { background-color: rgba(0, 122, 255, 0.08); }

.bg-blue-selection\/\[0\.1\] { background-color: rgba(0, 122, 255, 0.1); }

.bg-brand-blue-800 { --tw-bg-opacity: 1; background-color: rgba(0,102,222,v=
ar(--tw-bg-opacity)); }

.bg-brand-green { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var=
(--tw-bg-opacity)); }

.bg-brand-green\/20 { background-color: rgba(25, 195, 125, 0.2); }

.bg-brand-green\/40 { background-color: rgba(25, 195, 125, 0.4); }

.bg-brand-purple { --tw-bg-opacity: 1; background-color: rgba(171,104,255,v=
ar(--tw-bg-opacity)); }

.bg-current { background-color: currentcolor; }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,236,var(-=
-tw-bg-opacity)); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgba(227,227,227,var(-=
-tw-bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgba(205,205,205,var(-=
-tw-bg-opacity)); }

.bg-gray-300\/60 { background-color: rgba(204, 204, 204, 0.6); }

.bg-gray-400 { --tw-bg-opacity: 1; background-color: rgba(180,180,180,var(-=
-tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(249,249,249,var(--=
tw-bg-opacity)); }

.bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(155,155,155,var(-=
-tw-bg-opacity)); }

.bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(103,103,103,var(-=
-tw-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(66,66,66,var(--tw=
-bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(23,23,23,var(--tw=
-bg-opacity)); }

.bg-gray-950 { --tw-bg-opacity: 1; background-color: rgba(13,13,13,var(--tw=
-bg-opacity)); }

.bg-green-100 { --tw-bg-opacity: 1; background-color: rgba(210,244,211,var(=
--tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgba(185,238,188,var(=
--tw-bg-opacity)); }

.bg-green-50 { --tw-bg-opacity: 1; background-color: rgba(235,250,235,var(-=
-tw-bg-opacity)); }

.bg-green-500 { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var(-=
-tw-bg-opacity)); }

.bg-green-500\/10 { background-color: rgba(25, 195, 125, 0.1); }

.bg-green-600 { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(-=
-tw-bg-opacity)); }

.bg-orange-400 { --tw-bg-opacity: 1; background-color: rgba(255,96,0,var(--=
tw-bg-opacity)); }

.bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224,108,43,var(=
--tw-bg-opacity)); }

.bg-orange-500\/10 { background-color: rgba(224, 108, 43, 0.1); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgba(254,226,226,var(--=
tw-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,202,202,var(--=
tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgba(239,68,68,var(--tw=
-bg-opacity)); }

.bg-red-500\/10 { background-color: rgba(239, 68, 68, 0.1); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgba(220,38,38,var(--tw=
-bg-opacity)); }

.bg-token-border-light { background-color: var(--border-light); }

.bg-token-border-medium { background-color: var(--border-medium); }

.bg-token-main-surface-primary { background-color: var(--main-surface-prima=
ry); }

.bg-token-main-surface-secondary { background-color: var(--main-surface-sec=
ondary); }

.bg-token-main-surface-tertiary { background-color: var(--main-surface-tert=
iary); }

.bg-token-sidebar-surface-primary { background-color: var(--sidebar-surface=
-primary); }

.bg-token-sidebar-surface-secondary { background-color: var(--sidebar-surfa=
ce-secondary); }

.bg-token-sidebar-surface-tertiary { background-color: var(--sidebar-surfac=
e-tertiary); }

.bg-token-surface-error { --tw-bg-opacity: 1; background-color: rgb(var(--s=
urface-error)/var(--tw-bg-opacity)); }

.bg-token-text-primary { background-color: var(--text-primary); }

.bg-token-text-quaternary { background-color: var(--text-quaternary); }

.bg-token-text-secondary { background-color: var(--text-secondary); }

.bg-token-text-tertiary { background-color: var(--text-tertiary); }

.bg-transparent { background-color: transparent; }

.bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw=
-bg-opacity)); }

.bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }

.bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }

.bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }

.bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }

.bg-yellow-100 { --tw-bg-opacity: 1; background-color: rgba(254,249,195,var=
(--tw-bg-opacity)); }

.bg-yellow-200 { --tw-bg-opacity: 1; background-color: rgba(250,230,158,var=
(--tw-bg-opacity)); }

.bg-yellow-400 { --tw-bg-opacity: 1; background-color: rgba(255,198,87,var(=
--tw-bg-opacity)); }

.bg-yellow-500 { --tw-bg-opacity: 1; background-color: rgba(234,179,8,var(-=
-tw-bg-opacity)); }

.bg-opacity-0 { --tw-bg-opacity: 0; }

.bg-opacity-10 { --tw-bg-opacity: 0.1; }

.bg-opacity-5 { --tw-bg-opacity: 0.05; }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw-gradi=
ent-stops)); }

.from-gray-900\/0 { --tw-gradient-from: hsla(0,0%,9%,0) var(--tw-gradient-f=
rom-position); --tw-gradient-to: hsla(0,0%,9%,0) var(--tw-gradient-to-posit=
ion); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-token-main-surface-primary { --tw-gradient-from: var(--main-surface-p=
rimary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,=
0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-f=
rom),var(--tw-gradient-to); }

.from-token-main-surface-secondary { --tw-gradient-from: var(--main-surface=
-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,1=
00%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradie=
nt-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-primary { --tw-gradient-from: var(--sidebar-sur=
face-primary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%=
,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-grad=
ient-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-secondary { --tw-gradient-from: var(--sidebar-s=
urface-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(=
0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-=
gradient-from),var(--tw-gradient-to); }

.from-token-text-tertiary { --tw-gradient-from: var(--text-tertiary) var(--=
tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gr=
adient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-=
gradient-to); }

.from-transparent { --tw-gradient-from: transparent var(--tw-gradient-from-=
position); --tw-gradient-to: transparent var(--tw-gradient-to-position); --=
tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-grad=
ient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-0\% { --tw-gradient-from-position: 0%; }

.from-50\% { --tw-gradient-from-position: 50%; }

.from-60\% { --tw-gradient-from-position: 60%; }

.from-\[47\%\] { --tw-gradient-from-position: 47%; }

.via-black\/20 { --tw-gradient-to: transparent var(--tw-gradient-to-positio=
n); --tw-gradient-stops: var(--tw-gradient-from),rgba(0,0,0,.2) var(--tw-gr=
adient-via-position),var(--tw-gradient-to); }

.to-gray-900 { --tw-gradient-to: #171717 var(--tw-gradient-to-position); }

.to-transparent { --tw-gradient-to: transparent var(--tw-gradient-to-positi=
on); }

.to-\[53\%\] { --tw-gradient-to-position: 53%; }

.bg-contain { background-size: contain; }

.bg-cover { background-size: cover; }

.bg-clip-padding { background-clip: padding-box; }

.bg-clip-content { background-clip: content-box; }

.bg-center { background-position: 50% center; }

.bg-no-repeat { background-repeat: no-repeat; }

.fill-token-main-surface-primary { fill: var(--main-surface-primary); }

.fill-yellow-500 { fill: rgb(234, 179, 8); }

.stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }

.stroke-gray-400 { stroke: rgb(180, 180, 180); }

.stroke-token-main-surface-tertiary { stroke: var(--main-surface-tertiary);=
 }

.stroke-0 { stroke-width: 0; }

.stroke-2 { stroke-width: 2; }

.stroke-\[2\.5\] { stroke-width: 2.5; }

.stroke-\[2\] { stroke-width: 2; }

.stroke-\[3\] { stroke-width: 3; }

.stroke-\[4\] { stroke-width: 4; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-scale-down { object-fit: scale-down; }

.object-center { object-position: center center; }

.\!p-0 { padding: 0px !important; }

.p-0 { padding: 0px; }

.p-0\.5 { padding: 0.125rem; }

.p-1 { padding: 0.25rem; }

.p-1\.5 { padding: 0.375rem; }

.p-2 { padding: 0.5rem; }

.p-2\.5 { padding: 0.625rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-7 { padding: 1.75rem; }

.p-8 { padding: 2rem; }

.p-snc-1 { padding: var(--snc-1); }

.\!px-1 { padding-left: 0.25rem !important; padding-right: 0.25rem !importa=
nt; }

.\!px-1\.5 { padding-left: 0.375rem !important; padding-right: 0.375rem !im=
portant; }

.\!py-0 { padding-bottom: 0px !important; padding-top: 0px !important; }

.\!py-0\.5 { padding-bottom: 0.125rem !important; padding-top: 0.125rem !im=
portant; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-0\.5 { padding-left: 0.125rem; padding-right: 0.125rem; }

.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.px-1\.5 { padding-left: 0.375rem; padding-right: 0.375rem; }

.px-16 { padding-left: 4rem; padding-right: 4rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.px-2\.5 { padding-left: 0.625rem; padding-right: 0.625rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-7 { padding-left: 1.75rem; padding-right: 1.75rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.px-\[1\.41875rem\] { padding-left: 1.41875rem; padding-right: 1.41875rem; =
}

.px-\[16px\] { padding-left: 16px; padding-right: 16px; }

.px-\[4px\] { padding-left: 4px; padding-right: 4px; }

.px-snc-1 { padding-left: var(--snc-1); padding-right: var(--snc-1); }

.px-snc-2 { padding-left: var(--snc-2); padding-right: var(--snc-2); }

.px-snc-results-content-padding { padding-left: var(--snc-results-content-p=
adding); padding-right: var(--snc-results-content-padding); }

.px-snc-results-padding { padding-left: var(--snc-results-padding); padding=
-right: var(--snc-results-padding); }

.py-0 { padding-bottom: 0px; padding-top: 0px; }

.py-0\.5 { padding-bottom: 0.125rem; padding-top: 0.125rem; }

.py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }

.py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }

.py-12 { padding-bottom: 3rem; padding-top: 3rem; }

.py-16 { padding-bottom: 4rem; padding-top: 4rem; }

.py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }

.py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }

.py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }

.py-4 { padding-bottom: 1rem; padding-top: 1rem; }

.py-5 { padding-bottom: 1.25rem; padding-top: 1.25rem; }

.py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }

.py-8 { padding-bottom: 2rem; padding-top: 2rem; }

.py-\[10px\] { padding-bottom: 10px; padding-top: 10px; }

.py-\[12px\] { padding-bottom: 12px; padding-top: 12px; }

.py-\[2px\] { padding-bottom: 2px; padding-top: 2px; }

.py-\[6px\] { padding-bottom: 6px; padding-top: 6px; }

.py-snc-1 { padding-bottom: var(--snc-1); padding-top: var(--snc-1); }

.\!pr-2 { padding-right: 0.5rem !important; }

.\!pr-3 { padding-right: 0.75rem !important; }

.\!pt-0 { padding-top: 0px !important; }

.pb-0 { padding-bottom: 0px; }

.pb-0\.5 { padding-bottom: 0.125rem; }

.pb-1 { padding-bottom: 0.25rem; }

.pb-1\.5 { padding-bottom: 0.375rem; }

.pb-10 { padding-bottom: 2.5rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pb-2\.5 { padding-bottom: 0.625rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pb-3\.5 { padding-bottom: 0.875rem; }

.pb-4 { padding-bottom: 1rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pb-8 { padding-bottom: 2rem; }

.pb-9 { padding-bottom: 2.25rem; }

.pb-snc-1 { padding-bottom: var(--snc-1); }

.pb-snc-2 { padding-bottom: var(--snc-2); }

.pl-0 { padding-left: 0px; }

.pl-0\.5 { padding-left: 0.125rem; }

.pl-1 { padding-left: 0.25rem; }

.pl-10 { padding-left: 2.5rem; }

.pl-12 { padding-left: 3rem; }

.pl-2 { padding-left: 0.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pl-4 { padding-left: 1rem; }

.pl-5 { padding-left: 1.25rem; }

.pl-6 { padding-left: 1.5rem; }

.pl-8 { padding-left: 2rem; }

.pl-9 { padding-left: 2.25rem; }

.pl-\[3\.25rem\] { padding-left: 3.25rem; }

.pl-snc-results-padding { padding-left: var(--snc-results-padding); }

.pr-1 { padding-right: 0.25rem; }

.pr-1\.5 { padding-right: 0.375rem; }

.pr-10 { padding-right: 2.5rem; }

.pr-12 { padding-right: 3rem; }

.pr-14 { padding-right: 3.5rem; }

.pr-2 { padding-right: 0.5rem; }

.pr-3 { padding-right: 0.75rem; }

.pr-3\.5 { padding-right: 0.875rem; }

.pr-4 { padding-right: 1rem; }

.pr-5 { padding-right: 1.25rem; }

.pr-6 { padding-right: 1.5rem; }

.pr-7 { padding-right: 1.75rem; }

.pr-8 { padding-right: 2rem; }

.pr-9 { padding-right: 2.25rem; }

.pr-\[\.2rem\] { padding-right: 0.2rem; }

.pt-0 { padding-top: 0px; }

.pt-0\.5 { padding-top: 0.125rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-16 { padding-top: 4rem; }

.pt-2 { padding-top: 0.5rem; }

.pt-20 { padding-top: 5rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-3\.5 { padding-top: 0.875rem; }

.pt-4 { padding-top: 1rem; }

.pt-5 { padding-top: 1.25rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-9 { padding-top: 2.25rem; }

.pt-\[1\.125rem\] { padding-top: 1.125rem; }

.pt-\[2px\] { padding-top: 2px; }

.pt-\[4\.5px\] { padding-top: 4.5px; }

.pt-\[4px\] { padding-top: 4px; }

.pt-\[67\%\] { padding-top: 67%; }

.pt-\[7px\] { padding-top: 7px; }

.pt-px { padding-top: 1px; }

.pt-snc-results-content-inset { padding-top: var(--snc-results-content-inse=
t); }

.text-left { text-align: left; }

.text-center { text-align: center; }

.text-right { text-align: right; }

[dir=3D"ltr"] .text-start { text-align: left; }

[dir=3D"rtl"] .text-start { text-align: right; }

.indent-\[0\.1em\] { text-indent: 0.1em; }

.align-baseline { vertical-align: baseline; }

.align-top { vertical-align: top; }

.align-middle { vertical-align: middle; }

.font-circle { font-family: Circle, system-ui, -apple-system, "Segoe UI", R=
oboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; }

.font-mono { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, C=
onsolas, "Liberation Mono", monospace; }

.font-sans { font-family: ui-sans-serif, -apple-system, system-ui, "Segoe U=
I", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, Helvetica, "Apple C=
olor Emoji", Arial, "Segoe UI Emoji", "Segoe UI Symbol"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-\[0\.5rem\] { font-size: 0.5rem; }

.text-\[0\.65rem\] { font-size: 0.65rem; }

.text-\[0\.94625rem\] { font-size: 0.94625rem; }

.text-\[10px\] { font-size: 10px; }

.text-\[11px\] { font-size: 11px; }

.text-\[15px\] { font-size: 15px; }

.text-\[18px\] { font-size: 18px; }

.text-\[2\.4rem\] { font-size: 2.4rem; }

.text-\[20px\] { font-size: 20px; }

.text-\[28px\] { font-size: 28px; }

.text-\[32px\] { font-size: 32px; }

.text-\[8px\] { font-size: 8px; }

.text-\[9px\] { font-size: 9px; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.\!font-semibold { font-weight: 600 !important; }

.font-bold { font-weight: 700; }

.font-extrabold { font-weight: 800; }

.font-extralight { font-weight: 200; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.capitalize { text-transform: capitalize; }

.normal-case { text-transform: none; }

.italic { font-style: italic; }

.ordinal { --tw-ordinal: ordinal; }

.ordinal, .tabular-nums { font-variant-numeric: var(--tw-ordinal) var(--tw-=
slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-n=
umeric-fraction); }

.tabular-nums { --tw-numeric-spacing: tabular-nums; }

.\!leading-none { line-height: 1 !important; }

.leading-3 { line-height: 0.75rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-\[1\.1\] { line-height: 1.1; }

.leading-\[1\.2\] { line-height: 1.2; }

.leading-none { line-height: 1; }

.leading-normal { line-height: 1.5; }

.leading-tight { line-height: 1.25; }

.tracking-\[-0\.0674375rem\] { letter-spacing: -0.0674375rem; }

.tracking-\[0\.0015rem\] { letter-spacing: 0.0015rem; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.\!text-token-main-surface-primary { color: var(--main-surface-primary) !im=
portant; }

.\!text-token-text-primary { color: var(--text-primary) !important; }

.text-\[\#FE7600\] { --tw-text-opacity: 1; color: rgba(254,118,0,var(--tw-t=
ext-opacity)); }

.text-\[\#fff\] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-te=
xt-opacity)); }

.text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity=
)); }

.text-black\/60 { color: rgba(0, 0, 0, 0.6); }

.text-black\/70 { color: rgba(0, 0, 0, 0.7); }

.text-blue-500 { --tw-text-opacity: 1; color: rgba(69,89,164,var(--tw-text-=
opacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-=
opacity)); }

.text-blue-selection { --tw-text-opacity: 1; color: rgba(0,122,255,var(--tw=
-text-opacity)); }

.text-brand-blue-800 { --tw-text-opacity: 1; color: rgba(0,102,222,var(--tw=
-text-opacity)); }

.text-brand-green { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-t=
ext-opacity)); }

.text-brand-green-800 { --tw-text-opacity: 1; color: rgba(5,167,70,var(--tw=
-text-opacity)); }

.text-brand-purple { --tw-text-opacity: 1; color: rgba(171,104,255,var(--tw=
-text-opacity)); }

.text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,236,var(--tw-tex=
t-opacity)); }

.text-gray-300 { --tw-text-opacity: 1; color: rgba(205,205,205,var(--tw-tex=
t-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgba(180,180,180,var(--tw-tex=
t-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgba(155,155,155,var(--tw-tex=
t-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgba(103,103,103,var(--tw-tex=
t-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgba(66,66,66,var(--tw-text-o=
pacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgba(33,33,33,var(--tw-text-o=
pacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgba(23,23,23,var(--tw-text-o=
pacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-tex=
t-opacity)); }

.text-green-600 { --tw-text-opacity: 1; color: rgba(16,163,127,var(--tw-tex=
t-opacity)); }

.text-green-700 { --tw-text-opacity: 1; color: rgba(26,127,100,var(--tw-tex=
t-opacity)); }

.text-green-800 { --tw-text-opacity: 1; color: rgba(27,93,74,var(--tw-text-=
opacity)); }

.text-orange-300 { --tw-text-opacity: 1; color: rgba(255,160,69,var(--tw-te=
xt-opacity)); }

.text-orange-400 { --tw-text-opacity: 1; color: rgba(255,96,0,var(--tw-text=
-opacity)); }

.text-orange-500 { --tw-text-opacity: 1; color: rgba(224,108,43,var(--tw-te=
xt-opacity)); }

.text-orange-600 { --tw-text-opacity: 1; color: rgba(244,108,33,var(--tw-te=
xt-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-o=
pacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgba(220,38,38,var(--tw-text-o=
pacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgba(185,28,28,var(--tw-text-o=
pacity)); }

.text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var(--tw-text-o=
pacity)); }

.text-token-link { color: var(--link); }

.text-token-main-surface-primary { color: var(--main-surface-primary); }

.text-token-main-surface-tertiary { color: var(--main-surface-tertiary); }

.text-token-text-error { color: var(--text-error); }

.text-token-text-primary { color: var(--text-primary); }

.text-token-text-quaternary { color: var(--text-quaternary); }

.text-token-text-secondary { color: var(--text-secondary); }

.text-token-text-tertiary { color: var(--text-tertiary); }

.text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-o=
pacity)); }

.text-white\/25 { color: rgba(255, 255, 255, 0.25); }

.text-white\/50 { color: rgba(255, 255, 255, 0.5); }

.text-white\/80 { color: rgba(255, 255, 255, 0.8); }

.text-yellow-500 { --tw-text-opacity: 1; color: rgba(234,179,8,var(--tw-tex=
t-opacity)); }

.text-yellow-700 { --tw-text-opacity: 1; color: rgba(161,98,7,var(--tw-text=
-opacity)); }

.text-yellow-800 { --tw-text-opacity: 1; color: rgba(133,77,14,var(--tw-tex=
t-opacity)); }

.text-yellow-900 { --tw-text-opacity: 1; color: rgba(146,114,1,var(--tw-tex=
t-opacity)); }

.underline { text-decoration-line: underline; }

.line-through { text-decoration-line: line-through; }

.\!no-underline { text-decoration-line: none !important; }

.decoration-token-link { text-decoration-color: var(--link); }

.decoration-token-text-primary { text-decoration-color: var(--text-primary)=
; }

.underline-offset-2 { text-underline-offset: 2px; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-black\/50::-webkit-input-placeholder { color: rgba(0, 0, 0, 0.=
5); }

.placeholder-black\/50::placeholder { color: rgba(0, 0, 0, 0.5); }

.placeholder-gray-500::-webkit-input-placeholder { --tw-placeholder-opacity=
: 1; color: rgba(155,155,155,var(--tw-placeholder-opacity)); }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rg=
ba(155,155,155,var(--tw-placeholder-opacity)); }

.caret-token-text-primary { caret-color: var(--text-primary); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-20 { opacity: 0.2; }

.opacity-25 { opacity: 0.25; }

.opacity-30 { opacity: 0.3; }

.opacity-50 { opacity: 0.5; }

.opacity-60 { opacity: 0.6; }

.opacity-70 { opacity: 0.7; }

.opacity-75 { opacity: 0.75; }

.opacity-80 { opacity: 0.8; }

.opacity-85 { opacity: 0.85; }

.\!shadow-none { --tw-shadow: 0 0 transparent !important; --tw-shadow-color=
ed: 0 0 transparent !important; box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow) !impor=
tant; }

.shadow { --tw-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0=
,.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1p=
x var(--tw-shadow-color); }

.shadow, .shadow-2xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transpar=
ent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-2xl { --tw-shadow: 0 25px 50px -12px rgba(0,0,0,.25); --tw-shadow-c=
olored: 0 25px 50px -12px var(--tw-shadow-color); }

.shadow-\[0_0_2px_0_rgba\(0\,0\,0\,0\.05\)\,0_4px_6px_0_rgba\(0\,0\,0\,0\.0=
2\)\] { --tw-shadow: 0 0 2px 0 rgba(0,0,0,.05),0 4px 6px 0 rgba(0,0,0,.02);=
 --tw-shadow-colored: 0 0 2px 0 var(--tw-shadow-color),0 4px 6px 0 var(--tw=
-shadow-color); }

.shadow-\[0_0_2px_0_rgba\(0\,0\,0\,0\.05\)\,0_4px_6px_0_rgba\(0\,0\,0\,0\.0=
2\)\], .shadow-\[0_1px_12px_0px_\#0000000B\] { box-shadow: var(--tw-ring-of=
fset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw=
-shadow); }

.shadow-\[0_1px_12px_0px_\#0000000B\] { --tw-shadow: 0 1px 12px 0px rgba(0,=
0,0,.043); --tw-shadow-colored: 0 1px 12px 0px var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\] { --tw-shadow: 0 1px 2px rgba(=
0,0,0,.45); --tw-shadow-colored: 0 1px 2px var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\], .shadow-\[0_1px_7px_0_rgba\(0=
\,0\,0\,0\.03\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent=
),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_1px_7px_0_rgba\(0\,0\,0\,0\.03\)\] { --tw-shadow: 0 1px 7px 0 r=
gba(0,0,0,.03); --tw-shadow-colored: 0 1px 7px 0 var(--tw-shadow-color); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 2px 12px=
 0px rgba(0,0,0,.08); --tw-shadow-colored: 0 2px 12px 0px var(--tw-shadow-c=
olor); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0_2px_24px_rgb=
a\(0\,0\,0\,0\.05\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transpa=
rent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 2px 24px rgb=
a(0,0,0,.05); --tw-shadow-colored: 0 2px 24px var(--tw-shadow-color); }

.shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 2px 3px 0 r=
gba(0,0,0,.25); --tw-shadow-colored: 0 2px 3px 0 var(--tw-shadow-color); }

.shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\], .shadow-\[0px_10px_10px_-6p=
x_rgba\(0\,0\,0\,0\.04\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 tr=
ansparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0px_10px_10px_-6px_rgba\(0\,0\,0\,0\.04\)\] { --tw-shadow: 0px 10=
px 10px -6px rgba(0,0,0,.04); --tw-shadow-colored: 0px 10px 10px -6px var(-=
-tw-shadow-color); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14px=
 rgba(0,0,0,.06); --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);=
 }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[inset_0_0_0_1px_=
rgba\(0\,0\,0\,0\.1\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 trans=
parent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 0 =
0 1px rgba(0,0,0,.1); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-=
color); }

.shadow-inner { --tw-shadow: inset 0 2px 4px 0 rgba(0,0,0,.05); --tw-shadow=
-colored: inset 0 2px 4px 0 var(--tw-shadow-color); }

.shadow-inner, .shadow-lg { box-shadow: var(--tw-ring-offset-shadow,0 0 tra=
nsparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rg=
ba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),=
0 4px 6px -4px var(--tw-shadow-color); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba=
(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2p=
x 4px -2px var(--tw-shadow-color); }

.shadow-md, .shadow-none { box-shadow: var(--tw-ring-offset-shadow,0 0 tran=
sparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 trans=
parent; }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored:=
 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-sm, .shadow-xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transp=
arent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px r=
gba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color)=
,0 8px 10px -6px var(--tw-shadow-color); }

.shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0=
 15px var(--tw-shadow-color); }

.shadow-xs, .shadow-xxs { box-shadow: var(--tw-ring-offset-shadow,0 0 trans=
parent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xxs { --tw-shadow: 0 0 2px 0 rgba(0,0,0,.05),0 4px 6px 0 rgba(0,0,0=
,.02); --tw-shadow-colored: 0 0 2px 0 var(--tw-shadow-color),0 4px 6px 0 va=
r(--tw-shadow-color); }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline { outline-style: solid; }

.outline-0 { outline-width: 0px; }

.ring-0 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-0, .ring-1 { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-s=
hadow),var(--tw-shadow,0 0 transparent); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 }

.ring-2 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow,0 0 transparent); }

.ring-inset { --tw-ring-inset: inset; }

.ring-black { --tw-ring-opacity: 1; --tw-ring-color: rgba(0,0,0,var(--tw-ri=
ng-opacity)); }

.ring-black\/10 { --tw-ring-color: rgba(0,0,0,.1); }

.ring-transparent { --tw-ring-color: transparent; }

.ring-white { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(-=
-tw-ring-opacity)); }

.ring-opacity-5 { --tw-ring-opacity: 0.05; }

.ring-offset-4 { --tw-ring-offset-width: 4px; }

.ring-offset-black { --tw-ring-offset-color: #000; }

.blur { --tw-blur: blur(8px); }

.blur, .blur-sm { filter: var(--tw-blur) var(--tw-brightness) var(--tw-cont=
rast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-sa=
turate) var(--tw-sepia) var(--tw-drop-shadow); }

.blur-sm { --tw-blur: blur(4px); }

.blur-xl { --tw-blur: blur(24px); }

.blur-xl, .drop-shadow { filter: var(--tw-blur) var(--tw-brightness) var(--=
tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(=
--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.drop-shadow { --tw-drop-shadow: drop-shadow(0 1px 2px rgba(0,0,0,.1)) drop=
-shadow(0 1px 1px rgba(0,0,0,.06)); }

.drop-shadow-lg { --tw-drop-shadow: drop-shadow(0 10px 8px rgba(0,0,0,.04))=
 drop-shadow(0 4px 3px rgba(0,0,0,.1)); }

.drop-shadow-lg, .drop-shadow-md { filter: var(--tw-blur) var(--tw-brightne=
ss) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-in=
vert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.drop-shadow-md { --tw-drop-shadow: drop-shadow(0 4px 3px rgba(0,0,0,.07)) =
drop-shadow(0 2px 2px rgba(0,0,0,.06)); }

.grayscale { --tw-grayscale: grayscale(100%); }

.grayscale, .hue-rotate-0 { filter: var(--tw-blur) var(--tw-brightness) var=
(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) v=
ar(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.hue-rotate-0 { --tw-hue-rotate: hue-rotate(0deg); }

.hue-rotate-180 { --tw-hue-rotate: hue-rotate(180deg); }

.hue-rotate-180, .hue-rotate-90 { filter: var(--tw-blur) var(--tw-brightnes=
s) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-inv=
ert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.hue-rotate-90 { --tw-hue-rotate: hue-rotate(90deg); }

.hue-rotate-\[270deg\] { --tw-hue-rotate: hue-rotate(270deg); }

.hue-rotate-\[270deg\], .sepia { filter: var(--tw-blur) var(--tw-brightness=
) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-inve=
rt) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.sepia { --tw-sepia: sepia(100%); }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.backdrop-blur-sm { --tw-backdrop-blur: blur(4px); }

.backdrop-blur-sm, .backdrop-blur-xl { backdrop-filter: var(--tw-backdrop-b=
lur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-bac=
kdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) va=
r(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepi=
a); }

.backdrop-blur-xl { --tw-backdrop-blur: blur(24px); }

.transition { transition-duration: 0.15s; transition-property: color, backg=
round-color, border-color, text-decoration-color, fill, stroke, opacity, bo=
x-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-fi=
lter, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4=
, 0, 0.2, 1); }

.transition-\[background\] { transition-duration: 0.15s; transition-propert=
y: background; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[flex-basis\] { transition-duration: 0.15s; transition-propert=
y: flex-basis; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[opacity\,filter\] { transition-duration: 0.15s; transition-pr=
operty: opacity, filter, -webkit-filter; transition-timing-function: cubic-=
bezier(0.4, 0, 0.2, 1); }

.transition-\[opacity\,transform\,filter\] { transition-duration: 0.15s; tr=
ansition-property: opacity, transform, filter, -webkit-transform, -webkit-f=
ilter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[stroke-dashoffset\] { transition-duration: 0.15s; transition-=
property: stroke-dashoffset; transition-timing-function: cubic-bezier(0.4, =
0, 0.2, 1); }

.transition-all { transition-duration: 0.15s; transition-property: all; tra=
nsition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-colors { transition-duration: 0.15s; transition-property: color=
, background-color, border-color, text-decoration-color, fill, stroke; tran=
sition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-opacity { transition-duration: 0.15s; transition-property: opac=
ity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-transform { transition-duration: 0.15s; transition-property: tr=
ansform, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0=
, 0.2, 1); }

.transition-width { transition-duration: 0.15s; transition-property: width;=
 transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.delay-100 { transition-delay: 0.1s; }

.delay-1000 { transition-delay: 1s; }

.delay-200 { transition-delay: 0.2s; }

.delay-300 { transition-delay: 0.3s; }

.duration-100 { transition-duration: 0.1s; }

.duration-1000 { transition-duration: 1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.duration-700 { transition-duration: 0.7s; }

.ease-\[cubic-bezier\(\.215\,\.61\,\.355\,1\)\] { transition-timing-functio=
n: cubic-bezier(0.215, 0.61, 0.355, 1); }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.ease-linear { transition-timing-function: linear; }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

.will-change-\[opacity\,transform\] { will-change: opacity, transform; }

.will-change-transform { will-change: transform; }

.snc .text-xs { font-size: 0.825rem; line-height: 1.4; }

.snc .text-sm { font-size: 0.9rem; line-height: 1.4; }

.snc .text-base { font-size: 1rem; }

.snc .text-lg { font-size: 1.125rem; }

.snc .text-xl { font-size: 1.25rem; }

.snc .text-2xl { font-size: 1.5rem; }

.snc .text-3xl { font-size: 1.875rem; }

@media (min-width: 640px) {
  .snc { --snc-results-padding: 1.5rem; }
}

.\[grid-area\:_title\] { grid-area: title; }

.\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid-t=
emplate-areas: "title action" "description action"; }

.\[oaicite\:123\] { }

.\[overflow-wrap\:anywhere\] { overflow-wrap: anywhere; }

.\[text-wrap\:pretty\] { text-wrap: pretty; }

.first-letter\:uppercase::first-letter { text-transform: uppercase; }

.marker\:text-token-text-tertiary ::marker { color: var(--text-tertiary); }

.marker\:text-token-text-tertiary::marker { color: var(--text-tertiary); }

.placeholder\:text-gray-300::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(205,205,205,var(--tw-text-opacity)); }

.placeholder\:text-gray-300::placeholder { --tw-text-opacity: 1; color: rgb=
a(205,205,205,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(155,155,155,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::placeholder { --tw-text-opacity: 1; color: rgb=
a(155,155,155,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(103,103,103,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::placeholder { --tw-text-opacity: 1; color: rgb=
a(103,103,103,var(--tw-text-opacity)); }

.placeholder\:text-token-text-tertiary::-webkit-input-placeholder { color: =
var(--text-tertiary); }

.placeholder\:text-token-text-tertiary::placeholder { color: var(--text-ter=
tiary); }

.before\:absolute::before { content: var(--tw-content); position: absolute;=
 }

.before\:right-0::before { content: var(--tw-content); right: 0px; }

.before\:block::before { content: var(--tw-content); display: block; }

.before\:h-\[5px\]::before { content: var(--tw-content); height: 5px; }

.before\:w-\[5px\]::before { content: var(--tw-content); width: 5px; }

.before\:translate-y-\[-3px\]::before { --tw-translate-y: -3px; content: va=
r(--tw-content); transform: translate(var(--tw-translate-x),var(--tw-transl=
ate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-ske=
w-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.before\:rounded-full::before { border-radius: 9999px; content: var(--tw-co=
ntent); }

.before\:bg-token-text-tertiary::before { background-color: var(--text-tert=
iary); content: var(--tw-content); }

.after\:block::after { content: var(--tw-content); display: block; }

.after\:h-2::after { content: var(--tw-content); height: 0.5rem; }

.after\:h-\[5px\]::after { content: var(--tw-content); height: 5px; }

.after\:w-2::after { content: var(--tw-content); width: 0.5rem; }

.after\:w-\[5px\]::after { content: var(--tw-content); width: 5px; }

.after\:translate-y-\[-3px\]::after { --tw-translate-y: -3px; content: var(=
--tw-content); transform: translate(var(--tw-translate-x),var(--tw-translat=
e-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-=
y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-con=
tent); }

.after\:rounded-full::after { border-radius: 9999px; content: var(--tw-cont=
ent); }

.after\:bg-token-text-primary::after { background-color: var(--text-primary=
); content: var(--tw-content); }

.after\:bg-token-text-tertiary::after { background-color: var(--text-tertia=
ry); content: var(--tw-content); }

.after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-conte=
nt); }

.first\:ml-4:first-child { margin-left: 1rem; }

.first\:mt-0:first-child { margin-top: 0px; }

.first\:border-0:first-child { border-width: 0px; }

.last\:mb-0:last-child { margin-bottom: 0px; }

.last\:mb-2:last-child { margin-bottom: 0.5rem; }

.last\:mr-4:last-child { margin-right: 1rem; }

.last\:min-h-\[calc\(100vh-8rem\)\]:last-child { min-height: calc(-8rem + 1=
00vh); }

.last\:border-0:last-child { border-width: 0px; }

.last\:border-b:last-child { border-bottom-width: 1px; }

.last\:border-b-0:last-child { border-bottom-width: 0px; }

.last\:border-r-0:last-child { border-right-width: 0px; }

.last\:pb-0:last-child { padding-bottom: 0px; }

.last\:pr-0:last-child { padding-right: 0px; }

.last-of-type\:border-b-0:last-of-type { border-bottom-width: 0px; }

.checked\:border-blue-600:checked { --tw-border-opacity: 1; border-color: r=
gba(37,99,235,var(--tw-border-opacity)); }

.checked\:border-token-text-secondary:checked { border-color: var(--text-se=
condary); }

.checked\:\!bg-black:checked { --tw-bg-opacity: 1 !important; background-co=
lor: rgba(0,0,0,var(--tw-bg-opacity)) !important; }

.checked\:bg-blue-600:checked { --tw-bg-opacity: 1; background-color: rgba(=
37,99,235,var(--tw-bg-opacity)); }

.empty\:mt-0:empty { margin-top: 0px; }

.empty\:hidden:empty { display: none; }

.focus-within\:z-10[focus-within] { z-index: 10; }

.focus-within\:z-10:focus-within { z-index: 10; }

.focus-within\:border-green-500[focus-within] { --tw-border-opacity: 1; bor=
der-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-green-500:focus-within { --tw-border-opacity: 1; bord=
er-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-green-600[focus-within] { --tw-border-opacity: 1; bor=
der-color: rgba(16,163,127,var(--tw-border-opacity)); }

.focus-within\:border-green-600:focus-within { --tw-border-opacity: 1; bord=
er-color: rgba(16,163,127,var(--tw-border-opacity)); }

.focus-within\:border-token-border-xheavy[focus-within] { border-color: var=
(--border-xheavy); }

.focus-within\:border-token-border-xheavy:focus-within { border-color: var(=
--border-xheavy); }

.focus-within\:bg-token-main-surface-tertiary[focus-within] { background-co=
lor: var(--main-surface-tertiary); }

.focus-within\:bg-token-main-surface-tertiary:focus-within { background-col=
or: var(--main-surface-tertiary); }

.focus-within\:shadow-none[focus-within] { --tw-shadow: 0 0 transparent; --=
tw-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow=
,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 transparent; --t=
w-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,=
0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:outline-none[focus-within] { outline: transparent solid 2px;=
 outline-offset: 2px; }

.focus-within\:outline-none:focus-within { outline: transparent solid 2px; =
outline-offset: 2px; }

.focus-within\:ring-0[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-0:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) =
var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-w=
idth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-wi=
dth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-green-600[focus-within] { --tw-ring-opacity: 1; --tw-ri=
ng-color: rgba(16,163,127,var(--tw-ring-opacity)); }

.focus-within\:ring-green-600:focus-within { --tw-ring-opacity: 1; --tw-rin=
g-color: rgba(16,163,127,var(--tw-ring-opacity)); }

.focus-within\:ring-token-text-secondary[focus-within] { --tw-ring-color: v=
ar(--text-secondary); }

.focus-within\:ring-token-text-secondary:focus-within { --tw-ring-color: va=
r(--text-secondary); }

.focus-within\:ring-transparent[focus-within] { --tw-ring-color: transparen=
t; }

.focus-within\:ring-transparent:focus-within { --tw-ring-color: transparent=
; }

.hover\:line-clamp-none:hover { -webkit-box-orient: horizontal; display: bl=
ock; overflow: visible; }

.hover\:cursor-default:hover { cursor: default; }

.hover\:cursor-pointer:hover { cursor: pointer; }

.hover\:overflow-visible:hover { overflow: visible; }

.hover\:border-black\/10:hover { border-color: rgba(0, 0, 0, 0.1); }

.hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgba(=
236,236,236,var(--tw-border-opacity)); }

.hover\:border-token-border-heavy:hover { border-color: var(--border-heavy)=
; }

.hover\:border-token-border-medium:hover { border-color: var(--border-mediu=
m); }

.hover\:border-token-main-surface-tertiary:hover { border-color: var(--main=
-surface-tertiary); }

.hover\:bg-\[\#0000FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,0,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,119,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#4E4E4E\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
78,78,78,var(--tw-bg-opacity)); }

.hover\:bg-\[\#6E73FC\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
110,115,252,var(--tw-bg-opacity)); }

.hover\:bg-\[\#f5f5f5\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
245,245,245,var(--tw-bg-opacity)); }

.hover\:bg-\[var\(--snc-hover\)\]:hover { background-color: var(--snc-hover=
); }

.hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgba(0,0,0,v=
ar(--tw-bg-opacity)); }

.hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }

.hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-color: rgba(29,7=
8,216,var(--tw-bg-opacity)); }

.hover\:bg-brand-green\/30:hover { background-color: rgba(25, 195, 125, 0.3=
); }

.hover\:bg-brand-purple:hover { --tw-bg-opacity: 1; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)); }

.hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgba(236,=
236,236,var(--tw-bg-opacity)); }

.hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgba(227,=
227,227,var(--tw-bg-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba(249,2=
49,249,var(--tw-bg-opacity)); }

.hover\:bg-gray-500\/10:hover { background-color: rgba(156, 156, 156, 0.1);=
 }

.hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-color: rgba(66,6=
6,66,var(--tw-bg-opacity)); }

.hover\:bg-green-100:hover { --tw-bg-opacity: 1; background-color: rgba(210=
,244,211,var(--tw-bg-opacity)); }

.hover\:bg-orange-400\/10:hover { background-color: rgba(255, 96, 0, 0.1); =
}

.hover\:bg-token-main-surface-primary:hover { background-color: var(--main-=
surface-primary); }

.hover\:bg-token-main-surface-secondary:hover { background-color: var(--mai=
n-surface-secondary); }

.hover\:bg-token-main-surface-tertiary:hover { background-color: var(--main=
-surface-tertiary); }

.hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(--=
sidebar-surface-secondary); }

.hover\:bg-token-sidebar-surface-tertiary:hover { background-color: var(--s=
idebar-surface-tertiary); }

.hover\:bg-token-surface-error\/10:hover { background-color: rgb(var(--surf=
ace-error)/.1); }

.hover\:bg-transparent:hover { background-color: transparent; }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgba(255,255=
,255,var(--tw-bg-opacity)); }

.hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); }

.hover\:text-black\/50:hover { color: rgba(0, 0, 0, 0.5); }

.hover\:text-black\/70:hover { color: rgba(0, 0, 0, 0.7); }

.hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba(37,99,235,v=
ar(--tw-text-opacity)); }

.hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgba(239,68,68,va=
r(--tw-text-opacity)); }

.hover\:text-red-700:hover { --tw-text-opacity: 1; color: rgba(185,28,28,va=
r(--tw-text-opacity)); }

.hover\:text-token-link:hover { color: var(--link); }

.hover\:text-token-link-hover:hover { color: var(--link-hover); }

.hover\:text-token-main-surface-tertiary:hover { color: var(--main-surface-=
tertiary); }

.hover\:text-token-text-primary:hover { color: var(--text-primary); }

.hover\:text-token-text-quaternary:hover { color: var(--text-quaternary); }

.hover\:text-token-text-secondary:hover { color: var(--text-secondary); }

.hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }

.hover\:text-white:hover { --tw-text-opacity: 1; color: rgba(255,255,255,va=
r(--tw-text-opacity)); }

.hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }

.hover\:underline:hover { text-decoration-line: underline; }

.hover\:no-underline:hover { text-decoration-line: none; }

.hover\:opacity-100:hover { opacity: 1; }

.hover\:opacity-50:hover { opacity: 0.5; }

.hover\:opacity-65:hover { opacity: 0.65; }

.hover\:opacity-70:hover { opacity: 0.7; }

.hover\:opacity-75:hover { opacity: 0.75; }

.hover\:opacity-80:hover { opacity: 0.8; }

.hover\:opacity-85:hover { opacity: 0.85; }

.hover\:opacity-90:hover { opacity: 0.9; }

.hover\:brightness-90:hover { --tw-brightness: brightness(.9); filter: var(=
--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(=
--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--=
tw-drop-shadow); }

.hover\:delay-0:hover { transition-delay: 0s; }

.focus\:border-0:focus { border-width: 0px; }

.focus\:border-none:focus { border-style: none; }

.focus\:border-blue-500:focus { --tw-border-opacity: 1; border-color: rgba(=
69,89,164,var(--tw-border-opacity)); }

.focus\:border-gray-200:focus { --tw-border-opacity: 1; border-color: rgba(=
227,227,227,var(--tw-border-opacity)); }

.focus\:border-green-500:focus { --tw-border-opacity: 1; border-color: rgba=
(25,195,125,var(--tw-border-opacity)); }

.focus\:border-green-600:focus { --tw-border-opacity: 1; border-color: rgba=
(16,163,127,var(--tw-border-opacity)); }

.focus\:border-orange-400:focus { --tw-border-opacity: 1; border-color: rgb=
a(255,96,0,var(--tw-border-opacity)); }

.focus\:border-red-500:focus { --tw-border-opacity: 1; border-color: rgba(2=
39,68,68,var(--tw-border-opacity)); }

.focus\:border-token-text-primary:focus { border-color: var(--text-primary)=
; }

.focus\:shadow-none:focus { --tw-shadow: 0 0 transparent; --tw-shadow-color=
ed: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,0 0 transparen=
t),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.focus\:outline-0:focus { outline-width: 0px; }

.focus\:ring-0:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-=
color); }

.focus\:ring-0:focus, .focus\:ring-1:focus { box-shadow: var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:ring-1:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow,0 0 transparent); }

.focus\:ring-inset:focus { --tw-ring-inset: inset; }

.focus\:ring-blue-400:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(5=
8,136,255,var(--tw-ring-opacity)); }

.focus\:ring-blue-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(6=
9,89,164,var(--tw-ring-opacity)); }

.focus\:ring-gray-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(2=
27,227,227,var(--tw-ring-opacity)); }

.focus\:ring-green-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
25,195,125,var(--tw-ring-opacity)); }

.focus\:ring-green-600:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
16,163,127,var(--tw-ring-opacity)); }

.focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-primary=
); }

.focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,=
255,255,var(--tw-ring-opacity)); }

.focus\:ring-offset-0:focus { --tw-ring-offset-width: 0px; }

.focus-visible\:border-none.focus-visible { border-style: none; }

.focus-visible\:border-none:focus-visible { border-style: none; }

.focus-visible\:border-token-border-light.focus-visible { border-color: var=
(--border-light); }

.focus-visible\:border-token-border-light:focus-visible { border-color: var=
(--border-light); }

.focus-visible\:bg-\[\#f5f5f5\].focus-visible { --tw-bg-opacity: 1; backgro=
und-color: rgba(245,245,245,var(--tw-bg-opacity)); }

.focus-visible\:bg-\[\#f5f5f5\]:focus-visible { --tw-bg-opacity: 1; backgro=
und-color: rgba(245,245,245,var(--tw-bg-opacity)); }

.focus-visible\:bg-token-main-surface-secondary.focus-visible { background-=
color: var(--main-surface-secondary); }

.focus-visible\:bg-token-main-surface-secondary:focus-visible { background-=
color: var(--main-surface-secondary); }

.focus-visible\:bg-token-sidebar-surface-secondary.focus-visible { backgrou=
nd-color: var(--sidebar-surface-secondary); }

.focus-visible\:bg-token-sidebar-surface-secondary:focus-visible { backgrou=
nd-color: var(--sidebar-surface-secondary); }

.focus-visible\:outline-none.focus-visible { outline: transparent solid 2px=
; outline-offset: 2px; }

.focus-visible\:outline-none:focus-visible { outline: transparent solid 2px=
; outline-offset: 2px; }

.focus-visible\:outline-0.focus-visible { outline-width: 0px; }

.focus-visible\:outline-0:focus-visible { outline-width: 0px; }

.focus-visible\:outline-black.focus-visible { outline-color: rgb(0, 0, 0); =
}

.focus-visible\:outline-black:focus-visible { outline-color: rgb(0, 0, 0); =
}

.focus-visible\:outline-white.focus-visible { outline-color: rgb(255, 255, =
255); }

.focus-visible\:outline-white:focus-visible { outline-color: rgb(255, 255, =
255); }

.focus-visible\:ring-0.focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.focus-visible\:ring-0:focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.active\:scale-\[0\.9\]:active { --tw-scale-x: 0.9; --tw-scale-y: 0.9; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw=
-scale-x)) scaleY(var(--tw-scale-y)); }

.active\:opacity-50:active { opacity: 0.5; }

.active\:opacity-90:active { opacity: 0.9; }

.enabled\:bg-black:enabled { --tw-bg-opacity: 1; background-color: rgba(0,0=
,0,var(--tw-bg-opacity)); }

.disabled\:cursor-auto:disabled { cursor: auto; }

.disabled\:bg-\[\#D7D7D7\]:disabled { --tw-bg-opacity: 1; background-color:=
 rgba(215,215,215,var(--tw-bg-opacity)); }

.disabled\:bg-token-main-surface-tertiary:disabled { background-color: var(=
--main-surface-tertiary); }

.disabled\:text-\[\#f4f4f4\]:disabled { --tw-text-opacity: 1; color: rgba(2=
44,244,244,var(--tw-text-opacity)); }

.disabled\:text-gray-300:disabled { --tw-text-opacity: 1; color: rgba(205,2=
05,205,var(--tw-text-opacity)); }

.disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgba(180,1=
80,180,var(--tw-text-opacity)); }

.disabled\:text-token-border-medium:disabled { color: var(--border-medium);=
 }

.disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary);=
 }

.disabled\:opacity-10:disabled { opacity: 0.1; }

.disabled\:opacity-20:disabled { opacity: 0.2; }

.disabled\:opacity-50:disabled { opacity: 0.5; }

.disabled\:hover\:bg-gray-900:hover:disabled { --tw-bg-opacity: 1; backgrou=
nd-color: rgba(23,23,23,var(--tw-bg-opacity)); }

.disabled\:hover\:bg-transparent:hover:disabled { background-color: transpa=
rent; }

.disabled\:hover\:opacity-100:hover:disabled { opacity: 1; }

.group:hover .group-hover\:visible, .group\/dalle-image:hover .group-hover\=
/dalle-image\:visible { visibility: visible; }

.group:hover .group-hover\:invisible { visibility: hidden; }

.group:hover .group-hover\:block, .group\/conversation-turn:hover .group-ho=
ver\/conversation-turn\:block { display: block; }

.group:hover .group-hover\:flex { display: flex; }

.group:hover .group-hover\:hidden { display: none; }

.group:hover .group-hover\:w-10 { width: 2.5rem; }

.group:hover .group-hover\:w-20 { width: 5rem; }

.group:hover .group-hover\:border-t-\[\#0077FF\] { --tw-border-opacity: 1; =
border-top-color: rgba(0,119,255,var(--tw-border-opacity)); }

.group\/dalle-image:hover .group-hover\/dalle-image\:bg-black\/20 { backgro=
und-color: rgba(0, 0, 0, 0.2); }

.group\/dalle-image:hover .group-hover\/dalle-image\:bg-black\/70 { backgro=
und-color: rgba(0, 0, 0, 0.7); }

.group:hover .group-hover\:bg-token-main-surface-secondary { background-col=
or: var(--main-surface-secondary); }

.group:hover .group-hover\:from-token-sidebar-surface-secondary { --tw-grad=
ient-from: var(--sidebar-surface-secondary) var(--tw-gradient-from-position=
); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw=
-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.group:hover .group-hover\:from-60\% { --tw-gradient-from-position: 60%; }

.group:hover .group-hover\:text-token-link { color: var(--link); }

.group:hover .group-hover\:text-token-text-primary { color: var(--text-prim=
ary); }

.group\/news-highlight:hover .group-hover\/news-highlight\:underline { text=
-decoration-line: underline; }

.group\/title-citation:hover .group-hover\/title-citation\:\!underline { te=
xt-decoration-line: underline !important; }

.group\/tldr:hover .group-hover\/tldr\:underline { text-decoration-line: un=
derline; }

.group:hover .group-hover\:opacity-100 { opacity: 1; }

.group:hover .group-hover\:opacity-50 { opacity: 0.5; }

.group:hover .group-hover\:opacity-90 { opacity: 0.9; }

.group:hover .group-hover\:grayscale-0 { --tw-grayscale: grayscale(0); filt=
er: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-graysca=
le) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia=
) var(--tw-drop-shadow); }

.group[\:has\(\:focus\)] .group-has-\[\:focus\]\:border-token-border-xheavy=
 { border-color: var(--border-xheavy); }

.group:has(:focus) .group-has-\[\:focus\]\:border-token-border-xheavy { bor=
der-color: var(--border-xheavy); }

.group[data-disabled] .group-data-\[disabled\]\:opacity-50 { opacity: 0.5; =
}

.radix-disabled\:pointer-events-none[data-disabled] { pointer-events: none;=
 }

.radix-disabled\:pointer-events-auto[data-disabled] { pointer-events: auto;=
 }

.radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }

.radix-disabled\:cursor-not-allowed[data-disabled] { cursor: not-allowed; }

.radix-disabled\:bg-transparent[data-disabled] { background-color: transpar=
ent; }

.radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--tex=
t-tertiary); }

.radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }

.radix-disabled\:hover\:bg-transparent:hover[data-disabled] { background-co=
lor: transparent; }

.radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"] =
{ background-color: var(--main-surface-tertiary); }

.radix-state-active\:bg-white[data-state=3D"active"] { --tw-bg-opacity: 1; =
background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.radix-state-active\:text-token-text-primary[data-state=3D"active"] { color=
: var(--text-primary); }

.radix-state-active\:text-token-text-secondary[data-state=3D"active"] { col=
or: var(--text-secondary); }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 13px; }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"], .radix-=
state-checked\:translate-x-\[14px\][data-state=3D"checked"] { transform: tr=
anslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate=
)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.radix-state-checked\:translate-x-\[14px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 14px; }

.radix-state-checked\:border[data-state=3D"checked"] { border-width: 1px; }

.radix-state-checked\:border-green-500[data-state=3D"checked"] { --tw-borde=
r-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.radix-state-checked\:border-token-text-tertiary[data-state=3D"checked"] { =
border-color: var(--text-tertiary); }

.radix-state-checked\:\!bg-green-600[data-state=3D"checked"] { --tw-bg-opac=
ity: 1 !important; background-color: rgba(16,163,127,var(--tw-bg-opacity)) =
!important; }

.radix-state-checked\:bg-green-500[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgba(25,195,125,var(--tw-bg-opacity)); }

.radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked"]=
 { background-color: var(--main-surface-primary); }

.radix-state-checked\:bg-token-text-primary[data-state=3D"checked"] { backg=
round-color: var(--text-primary); }

.radix-state-checked\:font-semibold[data-state=3D"checked"] { font-weight: =
600; }

.radix-state-checked\:text-token-main-surface-primary[data-state=3D"checked=
"] { color: var(--main-surface-primary); }

.radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { col=
or: var(--text-primary); }

.radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px rgba(0,0,0,.03); --tw-shadow-colored: =
0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

@-webkit-keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

@keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.radix-state-open\:animate-alertShow[data-state=3D"open"] { animation: 0.15=
s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running alertShow; }

@-webkit-keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

.radix-state-open\:animate-contentShow[data-state=3D"open"] { animation: 0.=
15s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running contentShow; }

@-webkit-keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cubi=
c-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }

.radix-state-open\:bg-\[\#f5f5f5\][data-state=3D"open"] { --tw-bg-opacity: =
1; background-color: rgba(245,245,245,var(--tw-bg-opacity)); }

.radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] { b=
ackground-color: var(--main-surface-secondary); }

.radix-state-open\:text-token-text-primary[data-state=3D"open"] { color: va=
r(--text-primary); }

.radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color: =
var(--text-secondary); }

.radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { color: v=
ar(--text-tertiary); }

.group[data-state=3D"open"] .group-radix-state-open\:bg-token-main-surface-=
tertiary { background-color: var(--main-surface-tertiary); }

@-webkit-keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

@keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-bottom\:animate-slideUpAndFade[data-side=3D"bottom"] { animatio=
n: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFa=
de; }

@-webkit-keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-1px); }
  100% { opacity: 1; transform: translateX(0px); }
}

@keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-1px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-left\:animate-slideRightAndFade[data-side=3D"left"] { animation=
: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAnd=
Fade; }

@keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(1px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideLeftAndFade[data-side=3D"right"] { animatio=
n: 0.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAnd=
Fade; }

@keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-1px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideDownAndFade[data-side=3D"top"] { animation: 0=
.2s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade=
; }

.group-ui-open\:bg-token-sidebar-surface-secondary.group[data-headlessui-st=
ate~=3D"open"] { background-color: var(--sidebar-surface-secondary); }

.group:where([data-headlessui-state~=3D"open"]) .group-ui-open\:bg-token-si=
debar-surface-secondary { background-color: var(--sidebar-surface-secondary=
); }

.ZnJ1aXRqdWljZQ .juice\:static { position: static; }

.ZnJ1aXRqdWljZQ .juice\:sticky { position: sticky; }

.ZnJ1aXRqdWljZQ .juice\:top-0 { top: 0px; }

.ZnJ1aXRqdWljZQ .juice\:z-20 { z-index: 20; }

.ZnJ1aXRqdWljZQ .juice\:mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.ZnJ1aXRqdWljZQ .juice\:mx-2\.5 { margin-left: 0.625rem; margin-right: 0.62=
5rem; }

.ZnJ1aXRqdWljZQ .juice\:mx-5 { margin-left: 1.25rem; margin-right: 1.25rem;=
 }

.ZnJ1aXRqdWljZQ .juice\:my-0 { margin-bottom: 0px; margin-top: 0px; }

.ZnJ1aXRqdWljZQ .juice\:my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem;=
 }

.ZnJ1aXRqdWljZQ .juice\:-ml-3 { margin-left: -0.75rem; }

.ZnJ1aXRqdWljZQ .juice\:mb-0 { margin-bottom: 0px; }

.ZnJ1aXRqdWljZQ .juice\:mb-1 { margin-bottom: 0.25rem; }

.ZnJ1aXRqdWljZQ .juice\:ml-\[3px\] { margin-left: 3px; }

.ZnJ1aXRqdWljZQ .juice\:mr-1 { margin-right: 0.25rem; }

.ZnJ1aXRqdWljZQ .juice\:mt-0 { margin-top: 0px; }

.ZnJ1aXRqdWljZQ .juice\:mt-1 { margin-top: 0.25rem; }

.ZnJ1aXRqdWljZQ .juice\:mt-5 { margin-top: 1.25rem; }

.ZnJ1aXRqdWljZQ .juice\:flex { display: flex; }

.ZnJ1aXRqdWljZQ .juice\:hidden { display: none; }

.ZnJ1aXRqdWljZQ .juice\:h-5 { height: 1.25rem; }

.ZnJ1aXRqdWljZQ .juice\:h-7 { height: 1.75rem; }

.ZnJ1aXRqdWljZQ .juice\:h-8 { height: 2rem; }

.ZnJ1aXRqdWljZQ .juice\:h-full { height: 100%; }

.ZnJ1aXRqdWljZQ .juice\:min-h-\[60px\] { min-height: 60px; }

.ZnJ1aXRqdWljZQ .juice\:w-10 { width: 2.5rem; }

.ZnJ1aXRqdWljZQ .juice\:w-5 { width: 1.25rem; }

.ZnJ1aXRqdWljZQ .juice\:w-7 { width: 1.75rem; }

.ZnJ1aXRqdWljZQ .juice\:w-8 { width: 2rem; }

.ZnJ1aXRqdWljZQ .juice\:w-full { width: 100%; }

.ZnJ1aXRqdWljZQ .juice\:translate-x-1\/2 { --tw-translate-x: 50%; transform=
: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-ro=
tate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scal=
e-x)) scaleY(var(--tw-scale-y)); }

.ZnJ1aXRqdWljZQ .juice\:flex-row-reverse { flex-direction: row-reverse; }

.ZnJ1aXRqdWljZQ .juice\:flex-nowrap { flex-wrap: nowrap; }

.ZnJ1aXRqdWljZQ .juice\:items-end { align-items: flex-end; }

.ZnJ1aXRqdWljZQ .juice\:items-center { align-items: center; }

.ZnJ1aXRqdWljZQ .juice\:justify-end { justify-content: flex-end; }

.ZnJ1aXRqdWljZQ .juice\:gap-0 { gap: 0px; }

.ZnJ1aXRqdWljZQ .juice\:gap-0\.5 { gap: 0.125rem; }

.ZnJ1aXRqdWljZQ .juice\:gap-2 { gap: 0.5rem; }

.ZnJ1aXRqdWljZQ .juice\:gap-2\.5 { gap: 0.625rem; }

.ZnJ1aXRqdWljZQ .juice\:gap-3 { gap: 0.75rem; }

.ZnJ1aXRqdWljZQ .juice\:gap-4 { gap: 1rem; }

.ZnJ1aXRqdWljZQ .juice\:overflow-hidden { overflow: hidden; }

.ZnJ1aXRqdWljZQ .juice\:rounded-2xl { border-radius: 1rem; }

.ZnJ1aXRqdWljZQ .juice\:rounded-full { border-radius: 9999px; }

.ZnJ1aXRqdWljZQ .juice\:rounded-lg { border-radius: 0.5rem; }

.ZnJ1aXRqdWljZQ .juice\:border-transparent { border-color: transparent; }

.ZnJ1aXRqdWljZQ .juice\:bg-token-main-surface-secondary { background-color:=
 var(--main-surface-secondary); }

.ZnJ1aXRqdWljZQ .juice\:bg-token-sidebar-surface-primary { background-color=
: var(--sidebar-surface-primary); }

.ZnJ1aXRqdWljZQ .juice\:p-2 { padding: 0.5rem; }

.ZnJ1aXRqdWljZQ .juice\:p-3 { padding: 0.75rem; }

.ZnJ1aXRqdWljZQ .juice\:p-4 { padding: 1rem; }

.ZnJ1aXRqdWljZQ .juice\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem;=
 }

.ZnJ1aXRqdWljZQ .juice\:px-5 { padding-left: 1.25rem; padding-right: 1.25re=
m; }

.ZnJ1aXRqdWljZQ .juice\:py-1 { padding-bottom: 0.25rem; padding-top: 0.25re=
m; }

.ZnJ1aXRqdWljZQ .juice\:py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.=
375rem; }

.ZnJ1aXRqdWljZQ .juice\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem;=
 }

.ZnJ1aXRqdWljZQ .juice\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75re=
m; }

.ZnJ1aXRqdWljZQ .juice\:py-\[18px\] { padding-bottom: 18px; padding-top: 18=
px; }

.ZnJ1aXRqdWljZQ .juice\:pb-0 { padding-bottom: 0px; }

.ZnJ1aXRqdWljZQ .juice\:pl-5 { padding-left: 1.25rem; }

.ZnJ1aXRqdWljZQ .juice\:pr-4 { padding-right: 1rem; }

.ZnJ1aXRqdWljZQ .juice\:pt-0 { padding-top: 0px; }

.ZnJ1aXRqdWljZQ .juice\:pt-2 { padding-top: 0.5rem; }

.ZnJ1aXRqdWljZQ .juice\:text-xs { font-size: 0.75rem; line-height: 1rem; }

.ZnJ1aXRqdWljZQ .juice\:font-normal { font-weight: 400; }

.ZnJ1aXRqdWljZQ .juice\:text-token-text-secondary { color: var(--text-secon=
dary); }

.ZnJ1aXRqdWljZQ .juice\:text-token-text-tertiary { color: var(--text-tertia=
ry); }

.snc .ZnJ1aXRqdWljZQ .juice\:text-xs { font-size: 0.825rem; line-height: 1.=
4; }

.ZnJ1aXRqdWljZQ .juice\:first\:mt-0:first-child { margin-top: 0px; }

.ZnJ1aXRqdWljZQ .juice\:first\:pt-\[3px\]:first-child { padding-top: 3px; }

.ZnJ1aXRqdWljZQ .juice\:last\:mb-5:last-child { margin-bottom: 1.25rem; }

.ZnJ1aXRqdWljZQ .juice\:empty\:hidden:empty { display: none; }

.ZnJ1aXRqdWljZQ .juice\:hover\:text-token-text-primary:hover { color: var(-=
-text-primary); }

.ZnJ1aXRqdWljZQ .group:hover .juice\:group-hover\:w-10 { width: 2.5rem; }

.ZnJ1aXRqdWljZQ .group\/dalle-image:hover .juice\:group-hover\/dalle-image\=
:bg-transparent { background-color: transparent; }

@media (hover: hover) and (pointer: fine) {
  .group:hover .can-hover\:group-hover\:opacity-100 { opacity: 1; }
}

.dark\:divide-gray-900:is(.dark *) > :not([hidden]) ~ :not([hidden]) { --tw=
-divide-opacity: 1; border-color: rgba(23,23,23,var(--tw-divide-opacity)); =
}

.dark .dark\:border { border-width: 1px; }

.dark .dark\:border-b { border-bottom-width: 1px; }

.dark .dark\:border-r { border-right-width: 1px; }

.dark .dark\:border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.dark .dark\:border-gray-300 { --tw-border-opacity: 1; border-color: rgba(2=
05,205,205,var(--tw-border-opacity)); }

.dark .dark\:border-gray-500 { --tw-border-opacity: 1; border-color: rgba(1=
55,155,155,var(--tw-border-opacity)); }

.dark .dark\:border-gray-600 { --tw-border-opacity: 1; border-color: rgba(1=
03,103,103,var(--tw-border-opacity)); }

.dark .dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgba(6=
6,66,66,var(--tw-border-opacity)); }

.dark .dark\:border-gray-800 { --tw-border-opacity: 1; border-color: rgba(3=
3,33,33,var(--tw-border-opacity)); }

.dark .dark\:border-token-border-medium { border-color: var(--border-medium=
); }

.dark .dark\:border-token-border-xheavy { border-color: var(--border-xheavy=
); }

.dark .dark\:border-transparent { border-color: transparent; }

.dark .dark\:border-white { --tw-border-opacity: 1; border-color: rgba(255,=
255,255,var(--tw-border-opacity)); }

.dark .dark\:border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.dark .dark\:border-white\/30 { border-color: rgba(255, 255, 255, 0.3); }

.dark .dark\:border-b-white { --tw-border-opacity: 1; border-bottom-color: =
rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:bg-\[\#272832\] { --tw-bg-opacity: 1; background-color: rgba(3=
9,40,50,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[rgba\(255\,255\,255\,0\.15\)\] { background-color: rgba(2=
55, 255, 255, 0.15); }

.dark .dark\:bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,va=
r(--tw-bg-opacity)); }

.dark .dark\:bg-black\/75 { background-color: rgba(0, 0, 0, 0.75); }

.dark .dark\:bg-black\/80 { background-color: rgba(0, 0, 0, 0.8); }

.dark .dark\:bg-brand-green\/50 { background-color: rgba(25, 195, 125, 0.5)=
; }

.dark .dark\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,2=
36,236,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(249,24=
9,249,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(155,1=
55,155,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(103,1=
03,103,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(66,66=
,66,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(23,23=
,23,var(--tw-bg-opacity)); }

.dark .dark\:bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224=
,108,43,var(--tw-bg-opacity)); }

.dark .dark\:bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,20=
2,202,var(--tw-bg-opacity)); }

.dark .dark\:bg-token-main-surface-secondary { background-color: var(--main=
-surface-secondary); }

.dark .dark\:bg-transparent { background-color: transparent; }

.dark .dark\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,=
255,var(--tw-bg-opacity)); }

.dark .dark\:bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }

.dark .dark\:bg-yellow-900 { --tw-bg-opacity: 1; background-color: rgba(146=
,114,1,var(--tw-bg-opacity)); }

.dark .dark\:from-gray-800 { --tw-gradient-from: #212121 var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(33,33,33,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.dark .dark\:via-white\/5 { --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gr=
adient-to-position); --tw-gradient-stops: var(--tw-gradient-from),hsla(0,0%=
,100%,.05) var(--tw-gradient-via-position),var(--tw-gradient-to); }

.dark .dark\:stroke-brand-purple\/50 { stroke: rgba(171, 104, 255, 0.5); }

.dark .dark\:text-\[\#D292FF\] { --tw-text-opacity: 1; color: rgba(210,146,=
255,var(--tw-text-opacity)); }

.dark .dark\:text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-=
text-opacity)); }

.dark .dark\:text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,v=
ar(--tw-text-opacity)); }

.dark .dark\:text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,va=
r(--tw-text-opacity)); }

.dark .dark\:text-gray-500 { --tw-text-opacity: 1; color: rgba(155,155,155,=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-700 { --tw-text-opacity: 1; color: rgba(66,66,66,var=
(--tw-text-opacity)); }

.dark .dark\:text-gray-800 { --tw-text-opacity: 1; color: rgba(33,33,33,var=
(--tw-text-opacity)); }

.dark .dark\:text-gray-900 { --tw-text-opacity: 1; color: rgba(23,23,23,var=
(--tw-text-opacity)); }

.dark .dark\:text-green-100 { --tw-text-opacity: 1; color: rgba(210,244,211=
,var(--tw-text-opacity)); }

.dark .dark\:text-green-400 { --tw-text-opacity: 1; color: rgba(104,222,122=
,var(--tw-text-opacity)); }

.dark .dark\:text-token-main-surface-tertiary { color: var(--main-surface-t=
ertiary); }

.dark .dark\:text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var=
(--tw-text-opacity)); }

.dark .dark\:text-white\/60 { color: rgba(255, 255, 255, 0.6); }

.dark .dark\:text-white\/70 { color: rgba(255, 255, 255, 0.7); }

.dark\:placeholder-white\/50:is(.dark *)::-webkit-input-placeholder { color=
: rgba(255, 255, 255, 0.5); }

.dark\:placeholder-white\/50:is(.dark *)::placeholder { color: rgba(255, 25=
5, 255, 0.5); }

.dark .dark\:opacity-60 { opacity: 0.6; }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\] { --tw-=
shadow: inset 0 0 0 1px hsla(0,0%,100%,.1); --tw-shadow-colored: inset 0 0 =
0 1px var(--tw-shadow-color); }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\], .dark =
.dark\:shadow-none { box-shadow: var(--tw-ring-offset-shadow,0 0 transparen=
t),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dark .dark\:shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colore=
d: 0 0 transparent; }

.dark .dark\:ring-white\/20 { --tw-ring-color: hsla(0,0%,100%,.2); }

.placeholder\:dark\:text-white:is(.dark *)::-webkit-input-placeholder { --t=
w-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.placeholder\:dark\:text-white:is(.dark *)::placeholder { --tw-text-opacity=
: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark\:last\:border-0:last-child:is(.dark *) { border-width: 0px; }

.dark\:focus-within\:border-token-border-xheavy[focus-within]:is(.dark *) {=
 border-color: var(--border-xheavy); }

.dark\:focus-within\:border-token-border-xheavy:focus-within:is(.dark *) { =
border-color: var(--border-xheavy); }

.dark\:focus-within\:ring-0[focus-within]:is(.dark *) { --tw-ring-offset-sh=
adow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-=
offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-r=
ing-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.dark\:focus-within\:ring-0:focus-within:is(.dark *) { --tw-ring-offset-sha=
dow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-o=
ffset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ri=
ng-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.dark\:hover\:border-gray-800:hover:is(.dark *) { --tw-border-opacity: 1; b=
order-color: rgba(33,33,33,var(--tw-border-opacity)); }

.dark\:hover\:border-white:hover:is(.dark *) { --tw-border-opacity: 1; bord=
er-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark\:hover\:bg-brand-green\/40:hover:is(.dark *) { background-color: rgba=
(25, 195, 125, 0.4); }

.dark\:hover\:bg-gray-200:hover:is(.dark *) { --tw-bg-opacity: 1; backgroun=
d-color: rgba(227,227,227,var(--tw-bg-opacity)); }

.dark\:hover\:bg-gray-500\/10:hover:is(.dark *) { background-color: rgba(15=
6, 156, 156, 0.1); }

.dark\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; backgroun=
d-color: rgba(66,66,66,var(--tw-bg-opacity)); }

.dark\:hover\:bg-gray-800:hover:is(.dark *) { --tw-bg-opacity: 1; backgroun=
d-color: rgba(33,33,33,var(--tw-bg-opacity)); }

.dark\:hover\:bg-token-main-surface-secondary:hover:is(.dark *) { backgroun=
d-color: var(--main-surface-secondary); }

.dark\:hover\:bg-token-main-surface-tertiary:hover:is(.dark *) { background=
-color: var(--main-surface-tertiary); }

.dark\:hover\:bg-white:hover:is(.dark *) { --tw-bg-opacity: 1; background-c=
olor: rgba(255,255,255,var(--tw-bg-opacity)); }

.dark\:hover\:bg-white\/10:hover:is(.dark *) { background-color: rgba(255, =
255, 255, 0.1); }

.dark\:hover\:bg-white\/20:hover:is(.dark *) { background-color: rgba(255, =
255, 255, 0.2); }

.hover\:dark\:bg-white:is(.dark *):hover { --tw-bg-opacity: 1; background-c=
olor: rgba(255,255,255,var(--tw-bg-opacity)); }

.hover\:dark\:bg-white\/10:is(.dark *):hover { background-color: rgba(255, =
255, 255, 0.1); }

.dark\:hover\:text-black:hover:is(.dark *) { --tw-text-opacity: 1; color: r=
gba(0,0,0,var(--tw-text-opacity)); }

.dark\:hover\:text-blue-600:hover:is(.dark *) { --tw-text-opacity: 1; color=
: rgba(37,99,235,var(--tw-text-opacity)); }

.dark\:hover\:text-white\/50:hover:is(.dark *) { color: rgba(255, 255, 255,=
 0.5); }

.hover\:dark\:text-token-main-surface-tertiary:is(.dark *):hover { color: v=
ar(--main-surface-tertiary); }

.dark\:focus\:border-white:focus:is(.dark *) { --tw-border-opacity: 1; bord=
er-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark\:focus\:ring-gray-600:focus:is(.dark *) { --tw-ring-opacity: 1; --tw-=
ring-color: rgba(103,103,103,var(--tw-ring-opacity)); }

.dark\:focus\:ring-white:focus:is(.dark *) { --tw-ring-opacity: 1; --tw-rin=
g-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark\:focus-visible\:bg-token-main-surface-secondary.focus-visible:is(.dar=
k *) { background-color: var(--main-surface-secondary); }

.dark\:focus-visible\:bg-token-main-surface-secondary:focus-visible:is(.dar=
k *) { background-color: var(--main-surface-secondary); }

.dark\:focus-visible\:outline-white.focus-visible:is(.dark *) { outline-col=
or: rgb(255, 255, 255); }

.dark\:focus-visible\:outline-white:focus-visible:is(.dark *) { outline-col=
or: rgb(255, 255, 255); }

.disabled\:dark\:bg-token-text-quaternary:is(.dark *):disabled { background=
-color: var(--text-quaternary); }

.dark\:disabled\:text-gray-400:disabled:is(.dark *) { --tw-text-opacity: 1;=
 color: rgba(180,180,180,var(--tw-text-opacity)); }

.dark\:disabled\:text-token-main-surface-secondary:disabled:is(.dark *) { c=
olor: var(--main-surface-secondary); }

.dark\:disabled\:hover\:bg-white:hover:disabled:is(.dark *) { --tw-bg-opaci=
ty: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.dark\:radix-disabled\:bg-transparent[data-disabled]:is(.dark *) { backgrou=
nd-color: transparent; }

.dark\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"]:is(.dark *) { background-color: var(--main-surface-tertiary); }

.dark\:radix-state-checked\:border-green-600[data-state=3D"checked"]:is(.da=
rk *) { --tw-border-opacity: 1; border-color: rgba(16,163,127,var(--tw-bord=
er-opacity)); }

.dark\:radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open=
"]:is(.dark *) { background-color: var(--main-surface-secondary); }

.dark\:radix-state-open\:text-gray-400[data-state=3D"open"]:is(.dark *) { -=
-tw-text-opacity: 1; color: rgba(180,180,180,var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:left-16 { left: 4rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-snc-results-content-padding { margin-left: var(--snc-results-cont=
ent-padding); margin-right: var(--snc-results-content-padding); }
  .sm\:-mt-12 { margin-top: -3rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-2\.5 { margin-bottom: 0.625rem; }
  .sm\:mb-3 { margin-bottom: 0.75rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mb-snc-results-padding { margin-bottom: var(--snc-results-padding); =
}
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-16 { margin-top: 4rem; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-snc-results-content-inset { margin-top: var(--snc-results-content=
-inset); }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:inline { display: inline; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-32 { height: 8rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-32 { width: 8rem; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[calc\(\(100\%-12px\)\/2\)\] { width: calc(50% - 6px); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-snc-1 { gap: var(--snc-1); }
  .sm\:gap-x-2 { column-gap: 0.5rem; }
  .sm\:gap-x-2\.5 { column-gap: 0.625rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:gap-y-5 { row-gap: 1.25rem; }
  .sm\:rounded-full { border-radius: 9999px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:rounded-bl-xl { border-bottom-left-radius: 0.75rem; }
  .sm\:rounded-br-xl { border-bottom-right-radius: 0.75rem; }
  .sm\:rounded-tl-xl { border-top-left-radius: 0.75rem; }
  .sm\:rounded-tr-xl { border-top-right-radius: 0.75rem; }
  .sm\:border-none { border-style: none; }
  .sm\:border-token-border-medium { border-color: var(--border-medium); }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-10 { padding: 2.5rem; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-4 { padding: 1rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:px-\[1\.333rem\] { padding-left: 1.333rem; padding-right: 1.333rem; =
}
  .sm\:px-snc-results-padding { padding-left: var(--snc-results-padding); p=
adding-right: var(--snc-results-padding); }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-1 { padding-bottom: 0.25rem; }
  .sm\:pb-10 { padding-bottom: 2.5rem; }
  .sm\:pb-2 { padding-bottom: 0.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pb-8 { padding-bottom: 2rem; }
  .sm\:pb-snc-results-padding { padding-bottom: var(--snc-results-padding);=
 }
  .sm\:pr-2 { padding-right: 0.5rem; }
  .sm\:pt-1 { padding-top: 0.25rem; }
  .sm\:pt-12 { padding-top: 3rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:pt-\[calc\(var\(--snc-results-padding\)\+var\(--snc-input-height\)\+=
\.75rem\)\] { padding-top: calc(var(--snc-results-padding) + var(--snc-inpu=
t-height) + .75rem); }
  .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:font-semibold { font-weight: 600; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  .snc .sm\:text-sm { font-size: 0.9rem; line-height: 1.4; }
  .snc .sm\:text-base { font-size: 1rem; }
  .snc .sm\:text-2xl { font-size: 1.5rem; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
  .dark .sm\:dark\:border-x-token-border-xheavy { border-left-color: var(--=
border-xheavy); border-right-color: var(--border-xheavy); }
  .dark .dark\:sm\:bg-token-main-surface-primary { background-color: var(--=
main-surface-primary); }
  .dark .dark\:sm\:bg-token-main-surface-tertiary { background-color: var(-=
-main-surface-tertiary); }
}

@media (min-width: 768px) {
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:absolute { position: absolute; }
  .md\:bottom-2 { bottom: 0.5rem; }
  .md\:bottom-2\.5 { bottom: 0.625rem; }
  .md\:bottom-3 { bottom: 0.75rem; }
  .md\:bottom-3\.5 { bottom: 0.875rem; }
  .md\:left-4 { left: 1rem; }
  .md\:right-3 { right: 0.75rem; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:ml-0 { margin-left: 0px; }
  .md\:ml-8 { margin-left: 2rem; }
  .md\:ml-\[-8px\] { margin-left: -8px; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:mt-px { margin-top: 1px; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[26rem\] { width: 26rem; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[672px\] { min-width: 672px; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:max-w-xs { max-width: 20rem; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_20px\] { grid-template-rows: m=
inmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-center { align-items: center; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-3\.5 { gap: 0.875rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-width: 1px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  .md\:border-l { border-left-width: 1px; }
  .md\:border-r { border-right-width: 1px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236=
,236,var(--tw-border-opacity)); }
  .md\:border-token-border-light { border-color: var(--border-light); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-2 { padding: 0.5rem; }
  .md\:p-4 { padding: 1rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pl-0 { padding-left: 0px; }
  .md\:pl-2 { padding-left: 0.5rem; }
  .md\:pl-4 { padding-left: 1rem; }
  .md\:pl-6 { padding-left: 1.5rem; }
  .md\:pl-\[55px\] { padding-left: 55px; }
  .md\:pr-12 { padding-right: 3rem; }
  .md\:pr-3 { padding-right: 0.75rem; }
  .md\:pr-4 { padding-right: 1rem; }
  .md\:pr-8 { padding-right: 2rem; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-\[3\.37125rem\] { font-size: 3.37125rem; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .snc .md\:text-base { font-size: 1rem; }
  .snc .md\:text-lg { font-size: 1.125rem; }
  .snc .md\:text-2xl { font-size: 1.5rem; }
  .md\:first\:ml-0:first-child { margin-left: 0px; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  .md\:last\:mr-0:last-child { margin-right: 0px; }
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba=
(249,249,249,var(--tw-bg-opacity)); }
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .ZnJ1aXRqdWljZQ .juice\:md\:gap-6 { gap: 1.5rem; }
  .dark .md\:dark\:border-gray-700 { --tw-border-opacity: 1; border-color: =
rgba(66,66,66,var(--tw-border-opacity)); }
  .dark .md\:dark\:border-transparent { border-color: transparent; }
  .dark .dark\:md\:bg-transparent { background-color: transparent; }
  .dark .dark\:md\:bg-vert-dark-gradient { background-image: linear-gradien=
t(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
  .dark\:md\:hover\:bg-gray-700:hover:is(.dark *) { --tw-bg-opacity: 1; bac=
kground-color: rgba(66,66,66,var(--tw-bg-opacity)); }
}

@media (min-width: 1024px) {
  .lg\:relative { position: relative; }
  .lg\:-left-3 { left: -0.75rem; }
  .lg\:-right-3 { right: -0.75rem; }
  .lg\:left-auto { left: auto; }
  .lg\:top-1\/2 { top: 50%; }
  .lg\:-mx-8 { margin-left: -2rem; margin-right: -2rem; }
  .lg\:mx-auto { margin-left: auto; margin-right: auto; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:flex { display: flex; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: 9rem; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-\[300px\] { width: 300px; }
  .lg\:w-\[calc\(\(100\%-24px\)\/3\)\] { width: calc(33.3333% - 8px); }
  .lg\:w-auto { width: auto; }
  .lg\:w-full { width: 100%; }
  .lg\:min-w-\[896px\] { min-width: 896px; }
  .lg\:max-w-2xl { max-width: 42rem; }
  .lg\:max-w-\[40rem\] { max-width: 40rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[896px\] { max-width: 896px; }
  .lg\:max-w-md { max-width: 28rem; }
  .lg\:max-w-none { max-width: none; }
  .lg\:max-w-sm { max-width: 24rem; }
  .lg\:-translate-x-full { --tw-translate-x: -100%; }
  .lg\:-translate-x-full, .lg\:-translate-y-1\/2 { transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(va=
r(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(va=
r(--tw-scale-y)); }
  .lg\:-translate-y-1\/2 { --tw-translate-y: -50%; }
  .lg\:translate-x-full { --tw-translate-x: 100%; }
  .lg\:translate-x-full, .lg\:translate-y-0 { transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }
  .lg\:translate-y-0 { --tw-translate-y: 0px; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-x-3 { column-gap: 0.75rem; }
  .lg\:gap-y-2 { row-gap: 0.5rem; }
  .lg\:gap-y-2\.5 { row-gap: 0.625rem; }
  .lg\:self-center { align-self: center; }
  .lg\:rounded-lg { border-radius: 0.5rem; }
  .lg\:rounded-none { border-radius: 0px; }
  .lg\:border { border-width: 1px; }
  .lg\:border-0 { border-width: 0px; }
  .lg\:p-0 { padding: 0px; }
  .lg\:p-6 { padding: 1.5rem; }
  .lg\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }
  .lg\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .lg\:px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .lg\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .lg\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .lg\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .lg\:pr-0 { padding-right: 0px; }
  .lg\:pr-10 { padding-right: 2.5rem; }
  .lg\:pt-32 { padding-top: 8rem; }
  .lg\:text-left { text-align: left; }
  .lg\:text-\[22px\] { font-size: 22px; }
  .lg\:text-\[4\.5rem\] { font-size: 4.5rem; }
}

@media (min-width: 1280px) {
  .xl\:mx-0 { margin-left: 0px; margin-right: 0px; }
  .xl\:block { display: block; }
  .xl\:hidden { display: none; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:w-\[63\%\] { width: 63%; }
  .xl\:min-w-\[1024px\] { min-width: 1024px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-\[1160px\] { max-width: 1160px; }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:translate-x-\[-47\%\] { --tw-translate-x: -47%; transform: translate=
(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew=
X(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scale=
Y(var(--tw-scale-y)); }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .xl\:border-x-\[0\.5px\] { border-left-width: 0.5px; border-right-width: =
0.5px; }
  .xl\:border-token-border-medium { border-color: var(--border-medium); }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:px-snc-results-content-padding { padding-left: var(--snc-results-con=
tent-padding); padding-right: var(--snc-results-content-padding); }
  .dark .xl\:dark\:border-x-token-border-xheavy { border-left-color: var(--=
border-xheavy); border-right-color: var(--border-xheavy); }
}

@media (min-width: 1536px) {
  .\32 xl\:w-\[400px\] { width: 400px; }
  .\32 xl\:max-w-\[1200px\] { max-width: 1200px; }
  .\32 xl\:max-w-\[740px\] { max-width: 740px; }
}

@media (min-width: 2006px) {
  .\33 xl\:max-w-\[1240px\] { max-width: 1240px; }
}

.ltr\:right-0:where([dir=3D"ltr"], [dir=3D"ltr"] *) { right: 0px; }

.ltr\:mr-auto:where([dir=3D"ltr"], [dir=3D"ltr"] *) { margin-right: auto; }

.ltr\:-translate-x-1\/2:where([dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-transl=
ate-x: -50%; transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)=
) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.ltr\:bg-gradient-to-l:where([dir=3D"ltr"], [dir=3D"ltr"] *) { background-i=
mage: linear-gradient(to left,var(--tw-gradient-stops)); }

.rtl\:left-0:where([dir=3D"rtl"], [dir=3D"rtl"] *) { left: 0px; }

.rtl\:ml-auto:where([dir=3D"rtl"], [dir=3D"rtl"] *) { margin-left: auto; }

.rtl\:translate-x-1\/2:where([dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-transla=
te-x: 50%; transform: translate(var(--tw-translate-x),var(--tw-translate-y)=
) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) =
scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rtl\:items-start:where([dir=3D"rtl"], [dir=3D"rtl"] *) { align-items: flex=
-start; }

.rtl\:bg-gradient-to-r:where([dir=3D"rtl"], [dir=3D"rtl"] *) { background-i=
mage: linear-gradient(to right,var(--tw-gradient-stops)); }

.\[\&\&\]\:text-black.\[\&\&\]\:text-black { --tw-text-opacity: 1; color: r=
gba(0,0,0,var(--tw-text-opacity)); }

.\[\&\&\]\:underline.\[\&\&\]\:underline { text-decoration-line: underline;=
 }

.\[\&\&\]\:hover\:text-black:hover.\[\&\&\]\:hover\:text-black:hover { --tw=
-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity)); }

.\[\&\:\:-webkit-search-cancel-button\]\:hidden::-webkit-search-cancel-butt=
on { display: none; }

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy[\:has\(textarea=
\:focus\)] { border-color: var(--border-xheavy); }

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy:has(textarea:fo=
cus) { border-color: var(--border-xheavy); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,0\,0\,\.05\)\]=
[\:has\(textarea\:focus\)] { --tw-shadow: 0 2px 6px rgba(0,0,0,.05); --tw-s=
hadow-colored: 0 2px 6px var(--tw-shadow-color); box-shadow: var(--tw-ring-=
offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--=
tw-shadow); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,0\,0\,\.05\)\]=
:has(textarea:focus) { --tw-shadow: 0 2px 6px rgba(0,0,0,.05); --tw-shadow-=
colored: 0 2px 6px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset=
-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-sha=
dow); }

.\[\&\>div\:nth-child\(2\)\]\:overflow-y-hidden > div:nth-child(2) { overfl=
ow-y: hidden; }

.\[\&_svg\]\:h-full svg { height: 100%; }

.\[\&_svg\]\:w-full svg { width: 100%; }

.text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: 1.25rem; }

tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-width: 0px=
; }

tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-50 =
{ opacity: 0.5; }

code, pre { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Co=
nsolas, "Liberation Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; color: rgb(255, 255, 255); hyphens: none; =
line-height: 1.5; tab-size: 4; text-align: left; white-space: pre; word-bre=
ak: normal; word-spacing: normal; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

.hljs-comment { color: rgba(255, 255, 255, 0.5); }

.hljs-meta { color: rgba(255, 255, 255, 0.6); }

.hljs-built_in, .hljs-class .hljs-title { color: rgb(233, 149, 12); }

.hljs-doctag, .hljs-formula, .hljs-keyword, .hljs-literal { color: rgb(46, =
149, 211); }

.hljs-addition, .hljs-attribute, .hljs-meta-string, .hljs-regexp, .hljs-str=
ing { color: rgb(0, 166, 125); }

.hljs-attr, .hljs-number, .hljs-selector-attr, .hljs-selector-class, .hljs-=
selector-pseudo, .hljs-template-variable, .hljs-type, .hljs-variable { colo=
r: rgb(223, 48, 121); }

.hljs-bullet, .hljs-link, .hljs-selector-id, .hljs-symbol, .hljs-title { co=
lor: rgb(242, 44, 61); }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.PopoverContent { z-index: 1000; }

.react-select-container input:focus { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.react-select-container .react-select__control { --tw-border-opacity: 1; al=
ign-items: flex-start; border-color: rgba(236,236,236,var(--tw-border-opaci=
ty)); border-radius: 0.5rem; font-size: 0.875rem; height: 192px; line-heigh=
t: 1.25rem; min-height: 192px; overflow: auto; padding: 0.5rem; }

.snc .react-select-container .react-select__control { font-size: 0.9rem; li=
ne-height: 1.4; }

.react-select-container .react-select__control:hover { --tw-border-opacity:=
 1; border-color: rgba(227,227,227,var(--tw-border-opacity)); }

.react-select-container .react-select__control:is(.dark *) { --tw-bg-opacit=
y: 1; background-color: rgba(23,23,23,var(--tw-bg-opacity)); border-color: =
rgba(255, 255, 255, 0.1); }

.react-select-container .react-select__control:is(.dark *):hover { border-c=
olor: rgba(255, 255, 255, 0.2); }

.react-select-container.react-select--invalid .react-select__control { --tw=
-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity));=
 }

.react-select-container.react-select--invalid .react-select__control:is(.da=
rk *) { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-borde=
r-opacity)); }

.react-select-container .react-select__placeholder { padding-left: 0.5rem; =
padding-right: 0.5rem; }

.react-select-container .react-select__input-container { color: var(--text-=
secondary); padding-left: 0.5rem; padding-right: 0.5rem; }

.react-select-container .react-select__input { height: 2rem; }

.react-select-container .react-select__control--is-focused { --tw-ring-offs=
et-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-=
ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(-=
-tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-off=
set-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); --tw-bo=
rder-opacity: 1 !important; border-color: rgba(227,227,227,var(--tw-border-=
opacity)) !important; }

.react-select-container .react-select__control--is-focused:is(.dark *) { bo=
rder-color: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: 0px; }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: tran=
sparent; margin: 0px; }

.react-select-container .react-select__multi-value__label { padding: 0px; }

#intercom-container { display: none; }
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/_next/static/css/8eba3749e745ba24.css?dpl=0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0

@charset "utf-8";

.dvd-player_wrapperX__nhvkp { animation: dvd-player_moveX__zrJVd var(--dura=
tionX) linear var(--delayX) infinite alternate; }

.dvd-player_wrapperY__LKifR { animation: dvd-player_moveY__LVKW_ var(--dura=
tionY) linear var(--delayY) infinite alternate; }

@-webkit-keyframes dvd-player_moveX__zrJVd {=20
  0% { transform: translateX(0px); }
  100% { transform: translateX(var(--boundX)); }
}

@keyframes dvd-player_moveX__zrJVd {=20
  0% { transform: translateX(0px); }
  100% { transform: translateX(var(--boundX)); }
}

@-webkit-keyframes dvd-player_moveY__LVKW_ {=20
  0% { transform: translateY(0px); }
  100% { transform: translateY(var(--boundY)); }
}

@keyframes dvd-player_moveY__LVKW_ {=20
  0% { transform: translateY(0px); }
  100% { transform: translateY(var(--boundY)); }
}
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/_next/static/css/85ea0523a4a24fab.css?dpl=0eb06d1ca14a173bcd1bae1cf21f80dca728a1a0

@charset "utf-8";

.ProseMirror_jidori-editor__qe4qb:focus { --tw-ring-offset-shadow: var(--tw=
-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);=
 --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-wid=
th)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--t=
w-ring-shadow),var(--tw-shadow,0 0 transparent); outline: transparent solid=
 2px; outline-offset: 2px; }

.ProseMirror_jidori-editor__qe4qb h1 { font-size: 1.5rem; font-weight: 700;=
 line-height: 2rem; margin-bottom: 1rem; margin-top: 1rem; }

.ProseMirror_jidori-editor__qe4qb h2 { font-size: 1.25rem; font-weight: 600=
; line-height: 1.75rem; margin-bottom: 0.75rem; margin-top: 0.75rem; }

.ProseMirror_jidori-editor__qe4qb h3 { font-size: 1.125rem; line-height: 1.=
75rem; }

.ProseMirror_jidori-editor__qe4qb h3, .ProseMirror_jidori-editor__qe4qb h4,=
 .ProseMirror_jidori-editor__qe4qb h5, .ProseMirror_jidori-editor__qe4qb h6=
 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 0.5rem; }

.ProseMirror_jidori-editor__qe4qb h4, .ProseMirror_jidori-editor__qe4qb h5,=
 .ProseMirror_jidori-editor__qe4qb h6 { font-size: 1rem; line-height: 1.5re=
m; }

.ProseMirror_jidori-editor__qe4qb p { font-size: 0.875rem; line-height: 1.2=
5rem; margin-bottom: 0.5rem; margin-top: 0.5rem; }

.ProseMirror_jidori-editor__qe4qb ul { list-style-type: disc; }

.ProseMirror_jidori-editor__qe4qb ol, .ProseMirror_jidori-editor__qe4qb ul =
{ margin-bottom: 0.5rem; margin-top: 0.5rem; padding-left: 1.25rem; }

.ProseMirror_jidori-editor__qe4qb ol { list-style-type: decimal; }

.ProseMirror_jidori-editor__qe4qb li { margin-bottom: 0.25rem; }

.ProseMirror_jidori-editor__qe4qb blockquote { --tw-border-opacity: 1; bord=
er-color: rgba(227,227,227,var(--tw-border-opacity)); border-left-width: 4p=
x; font-style: italic; margin-bottom: 0.5rem; margin-top: 0.5rem; padding-l=
eft: 1rem; }

.ProseMirror_jidori-editor__qe4qb code { --tw-gradient-to: var(--main-surfa=
ce-primary) var(--tw-gradient-to-position); border-radius: 0.25rem; color: =
var(--text-quaternary); padding: 0.25rem; }

.ProseMirror_jidori-editor__qe4qb pre { --tw-bg-opacity: 1; background-colo=
r: rgba(236,236,236,var(--tw-bg-opacity)); border-radius: 0.25rem; font-siz=
e: 0.875rem; line-height: 1.25rem; margin-bottom: 0.5rem; margin-top: 0.5re=
m; overflow: auto; padding: 0.75rem; }

.ProseMirror_jidori-editor__qe4qb pre code { background-color: transparent;=
 padding: 0px; }

.ProseMirror_jidori-editor__qe4qb hr { border-top-width: 1px; margin-bottom=
: 1rem; margin-top: 1rem; }

.ProseMirror_generated-text___vj5n { --tw-text-opacity: 1; color: rgba(5,16=
7,70,var(--tw-text-opacity)); }

.ProseMirror_highlighted-edit__XlnRz { --tw-bg-opacity: 1; background-color=
: rgba(84,0,222,var(--tw-bg-opacity)); }

.ProseMirror_dark__iBd2U .ProseMirror_highlighted-edit__XlnRz { --tw-bg-opa=
city: 1; background-color: rgba(171,104,255,var(--tw-bg-opacity)); }

.ProseMirror_highlighted-delete__p_chl { --tw-bg-opacity: 1; background-col=
or: rgba(220,38,38,var(--tw-bg-opacity)); }
------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-thqJUpDWcYAMxgKhiwNYZFj0?se=2123-10-17T10%3A02%3A59Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D1fb91f30-1519-4f62-81f7-e141fa19f099.png&sig=UljckMV40AarnEvasy2Z2yiDGjVV1UFD/e0dtZkyETI%3D

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
6bQ878orX/n2KygsAYGQSEZcefUZJ994yYVOWz3oVEtjQ3tbW1FxUSQaamhouGXyE39789PewxTL
3hIKW+aFZ5181Q03FffpAxQHjN45+babb7m7pwSw77tv/d1rbwA7bBiBk4+b9I+eEsB5Z0yafNN5
xZXVa+s2Xn3J9W99+FWGaE7US5MZjjry8OtuuDKan9fc1PL99B+mTp36/Q8/e47c0jFc8AEDq3bd
dfuDD95r7Ihh0kmnU0kkMhAQ0LIsyzSDoaBl2aYdXFOz7pJrJ38y9YfcxZm9HSxbyhAA7bHL9jde
edF240YCk6AdAkBmG4GgEtb1N935xFMvg4bs76B/oWTIAPE15EejTzx2/0mnnkxACFbWF4wAUhls
I7oMrZampocfevjhR/6aSLkcsadOZc9WwJ2P/GBgx+3H7Tphx3Hbjo/mF9imHWtr++arr76eNn32
gsVur2S6zFOnH3HQXVeeKphiAklRwvHaEh2FpUWh0uJgfol2VDqFqbTKxQ+Qpryi4rziQlBJ34wa
CEEEdFo2NjblFUTtcABcx2/nICkCIk1IiEZQdqRjtRsV6FBB2CwsVNqldNwXK/z/dALYFL35xwmA
5ySATZpFndJYzOcHMJ/ky5BxJoQQBgIQkiTJABllTLqQkNBgpkkK337k6fdeeY0Jcfa1V0887lDQ
yUzhLMw1S9ZefOKpba0tnKEmZABp6eWVFr/y0ZslBZZOxggZCju9eo1BAhEo689JKKwBw5959bUL
L7hCE+pNenOdqULnrjLBuW1bruu6nuzhGm25nZdTsHQu3R223+6O227b94ADff9e8jwnleKGaQZC
8Y72a6+5+tlnX/CyTSXspYYqKYzuuMPYXXbdxhDG/DlLpk2ftbp2Yy/1UeZT9q+u+ui9d0dtMwZU
O0gJVv6n738w6dSzW9rjf1giDujX7767bz3mmINUcy14KWIBN+0uWrS278ABZVX5MtbCbIsZISio
/vub7592w41i0ECPiww43XOhtublO2876egjWhtW19XULV04Ky8v3J5wKosjQ0YOf3TKKw88/HIi
5XULFt2KEoBdt9n67vtvn7DnBMDgjTfdcPddDhcK0wABAABJREFUj3YPCocftM87r7/YuHKJNgLB
UPS0My96/+vvun+pCy448/HH71q6fOVpp5w3c+b8Xm9m9qoed8xht95y/Ya62rW1tdFoXlVVX0X0
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
nV452KuFJXH2gKbXIpCiRmSrkekaXPaXz3rWXz7rOX537zW33/mdn/3iS//277/+9aUH9h+IwtDN
1rnJWGmPN+D/ra7/uV+9XcXnPvlxy5f3BgFPTYwdOHCws7OrWCyFUeiwR0Fo5bIs1EqSJlH9KBXA
0UQyHowAIKIVNRr19es3bt164o033DgxOf0H44j/9/UnRbCw7Y/wfh4vgIdHx665/qaLfnPptu07
16xf+6znPnvT8Ztn52YOj4wYY1IqoWOMCZJlw2w7OzqI5ZKfXrT/vj2nPeTsUmdHo1YnwpZhnpi2
ztVqvX9wyLAdPzyqlSZKZh0QiKjeaJSKpSAIrLVeEOzdu/c5z3lq1Khoor179ok4YiKQoysRWeaO
7q6tJ53UiEzTHzbZBY5mayLOFbpmKvV3vultv/ivH6/t7ekpFlgiS0LN3SlOW8MyN5hXHbflqc97
/sMf//gdB0e/+LVvfubz/3LVdTft3buv0Wg4mBQQM7+bEVv4v6//Jad/+eUveMq64f582fcDXQh8
RXrf3gNEqqe3N2qE8ZBwS2NAMrZmf5wAgId2XHGM5WSWF/RAegAZYm2GNQFADNTV2b/zvj3/8uVv
bLvrnkqlYowxlp0IhjWWIwOIyvP2798/MzObvjgBCVgAGOzt7SznmVlAUNCyk7d13A9sjjO6eQ1I
GfPx9FY87gTNga+F4uPJ+NLic6al19bi183xr0qTypl6v8R8D7YZ6n0LHoSCial900Ul7kaSakZl
IUB2j0FMzQ+SSdDkvWYGo1qn2Zq38WjT+hybahsEDBuNufk5OMoYCKXvLl4bmXO/fUFLACcev/HJ
T3z04x59fm18/LKLL7nr1ttso5HP5z2tnTNzet76WvvK23NwpHfFqnd97KMbtx5XmZlmDYKiOGbO
gRsPtYiEpVLxusuunBgdyee8rE2ssbbc0TW8cjkDHDo8evDAwfPOPbdRq9brtV07d+eCnIigxPqm
kWHy1KlnnVYqdUZWKBm4QIy1cBCZLXd0DNyzc887Xv+mxtT46mV9EIXIIBSPvWAiN9+ohRbVxhNP
ethjH+cVO3/120t/+JOf7dqzP1k92Gp+3Bz6luyw0v3pvvhKB9pvRPViPu/5Pjhr9HicAZtWGcmg
UzrPLZlZ7rjoyMwKI7aIqbXMIy6l9NZOqsG1/l1IS82BYklHlqY92KLDq2UKGlKd0uYGooQ7Gtvw
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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-jMLKJbC0GYKOo5sPxZNrndYe?se=2123-10-21T04%3A23%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dgantt%2520chart%2520gpt.png&sig=JnTv/jcKBIenlIjz/QMhMXq6bXafrMi%2BGEMslwb7lbo%3D

iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAHTlJREFUeF7t
2L/P31UZx+HTh7ZAQK3hZ5ABBuNgiIuTiXEywcTN+Bf492niZkxMdHBRiSviYDBAiESQUhqKtDVl
kUGHnnCf5z7nfXWBod/zOee674RXuHL//v37wx8CBAgQIEAgSuCKAIiat8cSIECAAIHPBQSARSBA
gAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyA
AAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAEC
gQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIE
BIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIg
cOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0g
QIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5M
gAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAAB
AoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAEC
BASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQIC
IHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAd
IECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOie
TIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAA
AQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAAB
AgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoEC
AiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASA
HSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDo
nkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECA
AAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAA
AQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKB
AgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQE
gB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw
6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBA
gAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyA
AAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAEC
gQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIE
BIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0gQIAAAQKBAgIg
cOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5MgAABAgQEgB0g
QIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAABAoECAiBw6J5M
gAABAgQEgB0gQIAAAQKBAgIgcOieTIAAAQIEBIAdIECAAAECgQICIHDonkyAAAECBASAHSBAgAAB
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
dmClgABYqd3sWwKg2UBcJ15AAMSvwFIAAbCUu9fHBECvebgNAQFgB1YKCICV2s2+JQCaDcR14gUE
QPwKLAUQAEu5e31MAPSah9sQEAB2YKWAAFip3exbAqDZQFwnXkAAxK/AUgABsJS718cEQK95uA0B
AWAHVgoIgJXazb4lAJoNxHXiBQRA/AosBRAAS7l7fUwA9JqH2xAQAHZgpYAAWKnd7Fv37o/x+3+N
8dadMR78uz8ECFyuwI1rY3z3q2M8d/1y7+HrGQICIGPO//eVH342xp17Y9wXAOGb4PkdBK5ejPGV
R8a4ftHhNu5wuoAAOH3C3keAAAECBP6HgACwFgQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQ
QAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAA
sAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO
3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQI
ECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQ
IECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAg
UEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICA
ALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAE
Dt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAME
CBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJ
ECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBA
IFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECA
gACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAA
BA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALAD
BAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2T
CRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAg
QCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBA
gIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBA
AAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACw
AwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7d
kwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQ
IEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAg
QICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQ
QAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAA
sAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO
3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQI
ECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQ
IECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAg
UEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAEDt2TCRAgQICA
ALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAMECBAgQCBQQAAE
Dt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJECBAgIAAsAME
CBAgQCBQQAAEDt2TCRAgQICAALADBAgQIEAgUEAABA7dkwkQIECAgACwAwQIECBAIFBAAAQO3ZMJ
ECBAgMB/APf4/rXcJxjNAAAAAElFTkSuQmCC

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://lh3.googleusercontent.com/a/ACg8ocKQxvDv3aYMW5-vKSjDkBaasYWjAAhvucs9UEBEizGR=s96-c

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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-PQn0Eq036RO1hZ8mI7vh2M4j?se=2024-05-28T03%3A10%3A45Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D299%2C%20immutable&rscd=attachment%3B%20filename%3Dimage.png&sig=8T4KlRpiSkPGWe60xjipGwb2GaPV5NenGpwzv4tiKcI%3D

iVBORw0KGgoAAAANSUhEUgAAA6AAAAF8CAYAAADRptbMAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAF49SURBVHhe7d170CTVeef5et+3uYNA3IQAScju
FmpEW9bKNzAjLF9CgBhvy14zjolYIsa7Av2xoYWdIGJibGR7sWcmlo2A1e7EGrzh3SVidj34ovYO
0MiyHUZmwJYvstWYNmpkCV2QkLiIWwN9eXvrdzKfes97Kk/myaysfDOrvh/icDLPOZl58tTb3fXU
U1Xvyvr6+rFRxLFj0a4pZWNjfU2OWVasBwAAAJpaWVnJtyBl69Gkr876Nr32oogGoHUCnroBZlF7
G9fDchnSzwE/swCAPlu0J73L8CQe9TUJ/Iram5wnVDUu9TxDVBiApj5Zjo2r057athX6Mo9lxfoD
AIAmFvnJ+yLoy+MTm0dRe2qbpN5fyrjUcw3JVACa+qQ/Nq6oPaWtzvlQrI21Yr0BAAD6pY0gZBED
mSZi61DUHraljDGx9lDb44ZgUwCaGnzUCRbDtqp9iZ2/jjbO0ZUhzbUty3jPAABgOBbpCX/ftLG2
8zpH2NZ0jMTaQ6njpM7YvqodgMbGhO1t789D1TW6mAOa4/EBAABFFuFJ+jKb1+Pnnze8RtE1Zxlv
itqKpI4zdcf3ySQATXkyXzQmbKuznzI2bOubvs8Pw8HPEgBg0Q35STPSDOEx1hz9eYZzTu2Tqn0p
aguljCnS9LitlByAFvWHbWX7qdv+vilqG5Khzx+LhZ9HAEBoiE9i0b1F+DkJ70H71lbUZ2LbUrUv
RW2hlDExsxzbNReApjwhDcfU2bftsK1ojPjbRar6h2bR7gcAAADDM6QgJkXV/fj9tq26qN3E+srG
SbhfJGVMlTbOMW9JAWhRv99WZ1t1nfFFyvoW1TLeMwAAANoxhMCkjlnvxz8+tr26uppvpY33t6Vq
v0jKmBRtnWceVo4ePVoa2RQFPrFAsWzbirHtojYT7tcxy7F9tGj3AwAAgO70OSBpYpb78Y9N2bZA
tO5x/rYpavNV9dfV9vnaUDsA9fertlX7234ttj2ew+jVV18dvfDCC6PXX399dOjQodGRI0dce1P+
dYBFwc81AMDXxyeXQBdm+dlfW1sbbdu2bXT88cePTjzxxNEZZ5wxOvXUU127+Oe2bb8O2yRl2xS1
mbK+puZxzlmUBqDhk92i4FHCbSvGtsNageYzzzwzeu655ybBpn+chPvLinVAl/h5A4Bh6NsTS/QX
PysZfx38bQWfZ5555ui8885zgalYf1hL06yoKWozZX1NzeOcTUUD0KpA0N+37fX1dVfbftEY1Srf
+ta3XPBpgadehTj55JNHp5xyiqtV7MEHAAAAgDYoCXbw4EFX9C5M1Xr3pSgQfctb3uICUQVtFrj5
AZzf5o8Rv89Xte8r65vFvM5bV2EA6geOpiiYFAsora2q1gP+5S9/efTKK6+4faW73/a2t7mAEwAA
AAC6piD0a1/72qYY5Z3vfGdlNtSvrZjYtilqM2V9s5jXeetICkBj+7GMZ6zWA/ulL33JBaFy/vnn
j9761re6bQAAAADYSt/85jdHTz/9tNtW8Ll9+/bRSSed5PYteKuqU749V8J9X1nfrOZ57hRTAagF
iz6/TdtWjG37ddimoPOJJ55wtd5mq6ynagAAAADoC70tV9lQ1QpCL7744sJMqL9tUvvF3y5S1T+L
eZ67ykZ4HmEBpCjj6e9LGGj6/bat4/S2Wws+3/3udxN8AgAAAOgdP16xjw8WvfOzKP4xfn9MVf88
beW1KwNQCRfQtstqf1tfNqT3U2tbmU8AAAAA6DPFLYpfFMconvHjGxO2+X2ifQteJezfSls1l00B
aNGCWVtsgmG/P07bhw8fdt94q+0LLriAzCcAAACA3lPcovhFcYziGcU1YaxTVJuisaFYu5T1taWL
a4SiGVBNpmhC1lbVZ9t6sPSrVk477TS+cAgAAADAYCh+URyjeEZxjfixjtW+ojax42L9W6Xr+UwF
oEULE5uUtcfG6oF67rnn3DZvvQUAAAAwNBbHKK6JvZ02jItitWjbiu1vtS7nMAlAi75gKFS0SGVt
+uYoBaHbtm3j93wCAAAAGBzFMYpnFNfY99pUxUOpmhwzL13NZVUXCi/m78cmUtTun0v1888/72o+
9wkAAABgqBTPKK554YUX8pbNsY/P2sI+fz/cthIqapunLq6X9C24YpPxJ+W3+dvKpqq88cYbro3s
JwAAAIChsnjm9ddfn8Q6xo+FipT1GT+WShk/T/O+vgtA27iIzuE/EKIAVO0EoAAAAACGyjKglmCT
ovinKq6q6jep4+ZlntcvzYDahWO1aNH9fW3b/pEjR1zNW3ABAAAADJUl1Cy+8WMe27Z98fuaCs/Z
tXldu/BbcFP4gWfR4mhfH9SV448/3tUAAAAAMDQWzyi+KYp7/FKkqD02NhRmWbuUOsc6kj8DavyF
DSfk9wEAAADAIiuKfSxRVzcuKhu/lTFW29d234KbIraQRccXjQMAAACAobNYJ4x3wraiMVLUlqLp
cW1o89rRDKhdRHV4wap931amjAEAAACgDWVxTVl8ZMcVxUxlcZTPxqWOn4e2rl37LbgAAAAA0Ibf
+/1PjR7Yu3d06NChvKU+Hbt3fA6dC/1HAAoAAABgS5x00omj73znO6PP/NEfNQpCdYyO/fb4HCeP
z4X+qwxAY6nWsF37flu4DwAAAAC+n/yJnxidffbZo2effbZ2EGrBp47VOX5ifK55q4qBYtqMjdo6
TxNtXJsMaIf+7M/+bPRbv/Vbo3/4h3/IWwAAAIDlpV9v8lM/+ZO1g9Aw+NQ5+NWPw7By+PDhTWGs
RbVWhx+aVW0l3PfbdNzf/u3fuu0f+ZEfce2z2LNnz+j555/P9zZs27Zt9KY3vcmVnTt3jt761rfm
Pf2jAPTAgQOjyy+/fPTud787b11MCrKfeuqp0QsvvDA6ePCga9NjdeaZZ47e8pa3jH7wB3/QtS0L
vfBQZseOHaN/8k/+Sb4HAACwXOoElFsVfP75n//5aGVlZfS+973P1Spi237x221bVlez/J/tS2w7
lDpu3ma99qYMqAWQ4geUJtwvosBTpej4NiiA8YsoMP3KV77iPnz8J3/yJ6OXX37Ztc/qH//xH0ef
/vSnR48++mjegipa+/vuu2/0yCOPjL7xjW+44NN/rL797W+P9u3bN/qd3/kdt77LxALwonLiiXxm
AQAALK/UTOhWZz4V3/jxThG/PRzTVnzU1nm2wqYMqH8jWlSxNtVl21b84FMZUGkzA/oLv/ALecuG
b37zm6Mnn3xy9OUvf3l05MiR0WmnnTb6uZ/7uby3OctYtpWdWoYMqAJLBaEKtpSRDjOdCjq/8IUv
uMdSY37qp36q11nrtigDqkBz9+7deQsAAABCZQHmVgefyoDK93//97ssoLKZqsMiVdu2L7HtUNhX
NnaeZr3uQnwGVAGMAkQFMwo+FQAp2EO3LPt88sknjz7ykY8Uvs32e77ne1wQdsEFF7gXC/7iL/4i
7wEAAMCyi2VCtzr4RHumAlDLXvrCfZM6risKRN///ve7bWVD0R1lofU2aNGrQnohoIyywMqAKhOq
jCgAAAAgRUFoH4PPOnGTr+i4Jto4RxOzXnfqLbh2Qr+OtYX7/ttvVbp6C27IxoZvdVWQpGDH/2Ic
ZeuUjfPfYmtvlS0Svh33L//yL91nHXU9c+65544uueQSl+3z+W/B1TX1OUmbi4IxfTnP933f9xW+
JVVf6qO3Ges6yhyKgryLL77YHRPSW111rWeeeWYyXm8B1XqEb/9V1tKfi8TuIUafk92/f7877tpr
r81byyljqqBVa/GhD33Itek+NZfY256tP/Z2Vt33448/PlknW1eteRgU+z9T+rnQcbp/zUePqY69
/vrr89Gb6Tp/+qd/mvx277pvwfXH6+fG3l5uP9OxuYfrFvu5ufDCC0eXXXaZ2/f5668XErSttZCU
P3sAAABt8bOestXBZ/gWXCv+W3HF7/P3bdvqsE387VBRX9n4eZrlugv5a1jOOussV+uX2vr0JUV6
Mq0vfFGQoWBJP9gK1BQMGfXryb+CU1GtfRX/y2IUGOgLdV5//XXXd9FFF7kn9/qinYcfftgFvEV0
zQcffNAFfKeeeqqbi/4gaW6f+cxnpr6cx4ICBRH6tl9dR9dT4PhXf/VXUxlE7Ss40vn88To+XBNd
61Of+pQbu7a2Nhmre9A5wnPHPPfcc65WsJfq/PPPd7XWoQ16MUBz1tztvk866SR3b7rH2OOhNdA6
+i9K6GdDAZvOWcSyvbrGPCmw18+nBY+hcO4+fYGWfm789dBj+9prr7kXC+zzujEPPfSQWzsAAACg
LWuf+MQnfiXfdllLv06hsfaFRaFvfetbrla2ZVYKwvTEWV97XOXFF18cPf300y4Qfcc73pG3jtyT
6Q984APus4nbt28fvetd73IZvi9+8YsuOFPbCSec4AJCZZkUGKldT9yVoVOb+oyuoWyl9b3zne8c
vec97xm98sor7pUaBQ1qM1/96lfd+b773e+OzjjjDJfd0hx03UsvvdQFCpq7gjmdx+hcCnw/+MEP
jt773ve6c+p6Cq6+9rWvuSDCH//Zz37WBbk/9mM/5rJcNv68885zQaZePRIdp4DtjTfeGO3atct9
htbGnn766S7I0lw1tyrKwOnx0b3Y+atorXXc4cOHJ4+r7lX3FD52xvp175qnUSD2uc99zmUt9Rjb
fWtd9AKB1tbmZ+xnSsGbHo+rrrrKZet1XT0OOkb0GIX02VX97CvbqPuo8vnPf95dS3VRCX+u1aZ7
VNCsLPdP//RPuzG2tmVzFwWuWhO9IKJfyqyfeXts9TNvPzc6Xu3G1tfeHq1z6uci5c8dAABAW8LP
fCpBoG3FFxeNn+/oOW3Xvv71r7taz6mVAbTiC9vDbb8Wv1/87VCsr+yYeZnlmguZAY2l5fXW0PDt
rXqCruyQ1M32KMgp+qKdc845x9UvvfSSq4vYW059atMfLgUGCh6MggYFOpqrzwKwMItl+zYPo3v3
g7bHHnvMBSB6u2V4HwpSFGyrPzULWld4P7NQICs/9EM/NPW2YT1OWlc9vuFaGa29Px+th4IwBaHh
MVoPrYuyvXXuQedTBrKoFFEAqMem6K2yvnDuYm8hv+KKKwp/5hWwaj56kaFoTXTfOtb/eQEAAOhC
GHzqbbfhZ0I1BsO0kAFoLMgQBXbKDuktt/oc3W//9m+7J/pN6VoKSPR2XP3+S51Tb3ss42dRQ9an
z26GlPXSdfTWSl3nnnvuyXs209tHRW+hjL3tVOwasfkoaBNlA+eh7HGqSwGTAqpYwGRvnS56keHt
b397vrWZZe617j5bUwWHdeiFDmW9i0pMVfa5aO6ar7LvCmyLPk8sCkIt8C1aE/Wnfv4XAACgLUXB
p5JLKgShi8EFoHorYdHbbqva/ONs22/bKhbY+J/XVJuCNr3lVJ9/s8/w6TOYFmjVpc8H6rOF+gye
Mk56661YABgTZiaL+J/5U9CsQFmBrX2xkMQ+b3nllVe6AEJBmT73qsC4LIupNdGX3oTFsmh11Akq
LfAJs3dNac2K7kOl7EUG/QwU0e8xFf/FAN2f5q2fmXkHaAqoq9YmNnexz0LH6G3WEn4uWPT2XwAA
gC7Fgk/TpyA0jH2s1NX0ON+sxzcxyzUXMgNqn93zP3v6x3/8xy4IUbbv6quvdt/oqcyT3pbrB6qp
lGXSFxDJD/zAD7jz/fzP/7w7p/85w1kp4NEXGuktnwqI9I2r+mZWXafobbyioEXj9LlOZbm0HgqS
Y186Y28DjZWU9bFgpyhzG6PP0EpVoJSq7C2uVorenh0LJJU9tEDesp6WDS36fGrb7K3hZdoIgrVu
IQtOAQAAulAVfBoyocO3cAGo3l6rYE3Bhr39UEGXgk9lrRS0xd6WWIcFTwoKi34NSpmyLKHmLhYA
2K/fUOCszwLWyRbqc4wKVBVwaz10Xb0tN/TDP/zDblysFH3ONWRBt4I1//OrMZqLfZDbvg3XF3vb
b9lfMPoLqWj+fqkbsNm33FrG3LK2KV/MtNXsm4ljbI3f/OY3uxoAAGArpAafhiB02FbnlSq2/lnS
s3XpbaZ6e60yOgqqjAUNRZk8BUJlXxYUY8cUBYRFb2n0FX3mTjQXyyDaN5NakFD0NuHws4kxCrj1
Tahi2WGxDJt+T+SsdA37LOlf//VflwbZorcT2+cU/c9t2l829nbmUOwzrXocFLynrkkqzU0/TwqW
dW3Lotd5IaBrNmfNNbZeenzUr3Gxz80CAADMW93g02xFEJoS36jPSh2p546pe72ttBAZUGXc9MU8
epup6JfD+llOC4z0hNvPzulJuAVCRSxgLcokxYI3BUDKWpbRPJSp9Wku+t2gmouybhbgWCZUQasf
1CmwsLcAh4p+d6UFxX7gpOytAhDNt+gzoroX//ejVrn88svd+TXP+++/P3pOfRZX96OxFhgbZSg1
JwWT4X1oPxa861eViNakKAOrY8M1T6E56rO2uie9uCFdvP12VvYCRtHvo/V/1vxfwQIAANA1fUyu
bvBpwiD0j8bnQv+tHDp0aBIuh5F3UV2n/N3f/Z2rq36NRAoFLQrclDHzqc0oS1j0azhEgZTeRqng
xoJHZTHty1b0pFwBlJ8N0hP3z3zmM+6JugKR4447zgUjup+iPv0+S51HAa8CJc1Vb/s0+gZbfbGP
vj1VteZrQa7mYufSr8hQbeyzm/543bddR/QZVKMv3fHvU2ydwntUYGaBrN2H2L2E91BFx9jnbSVc
b92jqP0jH/nIpvs0ChQt2AvX1tauaF56EcLWw/850e8BVUCrY/XrbIz9TPlrV0QBrb6oSfQY6LO+
dRU9JiH/fjS+bO1T5h5bD3sc9PMTfo5YLxDoRZlwrQAAAObh937/U6OTTzrRJSXqBJ8+ZT4VfL72
2uujn/2Zj+St7dNzVP3+S/1eftV1itStizTtm4em11u79dZbfyXfLqVA0mrbrmJvJ33b297m6lno
ibF+8X5YFBDoW2eVNdST6djn2ZTp0ds6FYjoCbgCGgWTH/zgB0dPPfWUO5fmqVdQjIIfLex3v/vd
0auvvjo5xt6CqaLzvfDCC+74E044wX0eVF+qo1/mr+DWD/a++tWvuqBBbbqW5qNXa3TsKaec4jJr
+rymzuPTr9rQW3E1b81Dc9L9/viP//jo85//vBvzvve9z9Wi+WiuOkbn1nit0fvf//6pXx2ie1GW
VfehAE/nt3vRfBSwhvMpo7G6P937G2+8MTp69Kibt86p4Flrpu319XW3RgqM1ObT2uiXC2s+Khp/
xhlnuD/sWqeitRV9DlXHKeDUOus4FZ1ffeELIfYz5a9dEf1MPfHEE25NdZ4mP896nHTPNqei4s9D
44vu0aTMXXO1gN9+znQPWnNlv3/0R3/U9fk0Tuurn+EhZHoBAMCwXTJ+TqLnp3oO15SO1Tl0rnnS
R7L0vPq8885zdVmRov2iWmLbobI+qepvW5PrJWdAbVtPosP2WGkzA4rFoeDpc5/7nAuOlBVUMJTy
RUdbSb8GR0G6vl04DJgBAACw+OpkQGV1dXXTfqwWf1vHxfjjilT1t63J9Rby17Cg35TV09tvlYlT
EKq3AOt3lSrb2Ud6C66CT8t8AwAAAGgmOQOqzKdtWwn3/aLxyoAKGVAMmX2WMvz8LAAAAJaHfaGl
vvBUmb9YkaJ2Fevzawm3/X1frN2XMqYtTa5FBhQooeynfaEUwScAAAAwGwJQoIA+86lvmtW33+pz
qvpyKQAAAACzSQpA9ZbaIkXt9hZcYMj0dd76Jl1lPq+44orCX+0DAACA5ROLd8ra62pyjJnl2Lqa
XCvpM6Bl33wbttlYFT4DCgAAAGAR2GdA7Vtw/W+5tc9C+vt+u42VsJaibb/NFLUVSR3XhrrX4i24
AAAAAIBOlAaglsksY/0pYwEAAABgiMK4R+/89N/9WSQ8po66432zHDtvZEABAAAAAJ0gAAUAAAAA
dCIagPrpYhNL5fqpZ7+I1QAAAACwaPzYp0zqON8ssdQsx9ZR9zpkQAEAAAAAnSAABQAAAAB0YhKA
+qnT1DSqxnWV2gUAAACAvppXDDVLvNXHWI0MKAAAAACgEwSgAAAAAIBObApA66SD2x4HAAAAAH2V
EtekxFPWXydOqjM2NMuxqepcgwwoAAAAAKATBKAAAAAAgE5MAtDUVLD6U1KsqeMAAAAAYAhS45s6
MVOqWWKrWY5t28qhQ4fcbNbX112DPzlt275tpxad7wtf+ILb/tCHPuTOAQAAAABD9OlPf3q0srIy
eu973+vqukX8umhb/O3Q6mrzN7CWnbcNqefnLbgAAAAAgE64AFRZyhSW3aySej4AAAAAGJK2YiLr
rxM71RkbmuXYFKnnJwMKAAAAAOgEASgAAAAAoBOrsVRp2J6SUtWY1NQrAAAAAAxVanyUok4MNUu8
1YdYjQwoAAAAAKATBKAAAAAAgE4kBaBtppcBAAAAYBEoBqqKg1LGSJ14qs7Y0CzHVkk5NxlQAAAA
AEAnSgNQRbBFUazfFhsDAAAAAMsgJR5KHZMaWw01BiMDCgAAAADoBAEoAAAAAKAT0QDUT+nG0rtD
TfsCAAAAQJsUG1l8NEv8VCfGqjPW1/S4FFXnJgMKAAAAAOgEASgAAAAAoBOFAWhV2lT96+vr+d40
9c8zrQsAAAAAXUuJc5r0h21V5/DVGdsHZEABAAAAAJ0gAAUAAAAAdGIqAG2SMvYNLQUMAAAAAHV0
ETPNO66a5/nLzk0GFAAAAADQCQJQAAAAAEAnNgWgs6SK1Rf2V50PAAAAAIbGYp+yeMfvLxpXdbxU
9ZvUcX1ABhQAAAAA0AkCUAAAAABAJyYBaJP0r7UNKeULAAAAAG1pEkf5Zu03TWKyJsekip2bDCgA
AAAAoBMEoAAAAACATrgAtCz1qr6q/pDfVnYsAAAAAAxBGNfUiXnm3T8kZEABAAAAAJ0gAAUAAAAA
dGK1LJ3bJBVsbYuUJgYAAAAA8eOccNtKkVh7qpTjm1xj1nmVKTo3GVAAAAAAQCcIQAEAAAAAnYgG
oGWpWPXNM1ULAAAAAENUFUfFpMRXbY3ZSmRAAQAAAACdIAAFAAAAAHSiMACdZ9oYAAAAABbZVsdT
dc8zzzguPDcZUAAAAABAJwhAAQAAAACdmApAm6aE55m2BQAAAIAhmVdcNfS4iwwoAAAAAKATBKAA
AAAAgE5sCkDbThMPPT0MAAAAAGUU8zSJh5r2SVW/pIzx1R1fh39uMqAAAAAAgE4QgAIAAAAAOrHy
+uuvu3zo+vq6a7D0qF/7falFx+zbt88dd9VVV7l62Rw9+JKrX/3rz7j60P6/yOqvPe7qw9/+uquP
vpqNWxmvm6tPOc3Vx73tkqw++wJXn3jJZa4++Qd+ytXbTjnd1QAAAADm68EHH3T1rl27Rqurq6OV
lZWponYp6rNi/VaHbVLUJlX7oar+UN3xddi5yYACAAAAADpBBrRFh5/9hqtf/vT/6epX/vPvu3qU
Z0KPW83WdC1/YWFllO2H1tezdquP2P7RrD50JKtP++B1rj7rZ2929XHnXuhqAAAAAO0iAzobO3dl
BlTBZBELNEOxdgAAAABYBGUxUpGy+KhpX4q6x896vTJ27soMqNr9NitV7SqLngG1z3i+uOd/dfXL
n/4tVx+Xh/XHH5e/gpAtk1uTfCOrA8fyTOdGf1ZvDM82LDP6xhFXjQ7nGdEz/6ssE3rWP/uXrgYA
AADQDj8DqmxeLAtaVMTGS1Ft25KyLeF+kZQxvrrj69C5+QwoAAAAAKATLgNqGUvxa7/4bX6W028P
+xY1A3roO9m31z7zb/+5q1e/+01XH7+WrYe9ZqA1yLfyOus5Nl6jbMPaN5tkQnN2HvuW3Elvvn80
P93reSb02BnZt+a+7dd+z9UnnPs2VwMAAABoJsyAumxeQRZUwnZR7X9G1K/F+sRvj22borZQyhhf
3fGpdF4yoAAAAACATpABrWGS+fx3WeZz7YWnXX38NldpIfxqQ57xnDRPjcs2wgyn9Vv7el5PXo+w
8ZPaVaND+WdDj7w5y4S+47YsE3rcW97uagBFnnT/v/Py21198SN3ufpq939gkex1/79xZY+rdx/j
Z31r5I/D5U+4+pZHbnL1dvd/LA/+7RkSMqCz03lXLXgJzbsdAAAAAIaiKK7pIjZqI56qe442rhmz
8tprr7mz20WsViZTtO/3+RnOsF3CDKjqq68e9us4lvn81q9nmc/jXsp+3+e2NVeNVrJlmKyHsf3Y
Zzcnw20jNs79f2xyQC487pi9UpHtv5F/JvTwGdlnQN/561uUCX3yTlddvuNeV1934BFX38TLvOiV
Ob0KvfdGV63cttPVB2JZDht3zd2uNpfdccDVjwR/YPbemP15D4aP3eD+/0BFVuvJOy939Y79t7r6
2F117zQti1Z1nUn/zY+62sTuO7ZO4wNcFa5v3fNXj3fV+Ofk+mzjnuzvM2n+d1pqJqytn1EyoP2w
LBnQJbvPldtcvTP5uU7sz3XTdWs6D6TYu3evy+D5GVCX0SvJdoZtfrE2E8uAStF4U9RWJHWcqTs+
hc7JZ0ABAAAAAJ0ozIBa8fclzH6G7f62yqJkQL/2P3zA1WvfzTKf9ns+x6uzqZqSZ4XzpZmsUXjc
eLVsI6+zjcnwSf/mcRvd2dbG+TOWeX3tsKtGh9+cZUK3f/KPXb3t1NNdPW+WUbh9/y5X79t5i6un
MhvAlmoru2Tn2eHqm3dlGckb9mUZ0OlXse3V6jAbZefZnGm7afuM88zfkXDj7ftdvW+029WP1MyA
7r0x+3P9xC2RV9crr5Pd9513Zut00+QEkVfvR/k7KSbLEazj3qz/zh1Z+03ba56/4fgbs4Ssc1ft
LLLJz0UGdMmkPu5Dl//c3nifq6+9a1Hvs6nYn2vWrY9iGVArlvGUsjaxbKfti9/vtxu/PxRr96WM
8dUdn0LnJAMKAAAAAOgEGdASL/z+/+LqV/4gq088Ln8VIL9Xu2fbn3w97eT3eGYNk3F5znJjN9/I
643TFI+z82xcZvN+OJ98b7LxyqGsftOHs4zM+Tf+mqvnJ3xVL8uA7Im92mufFc2Gj67bd7OrJx/F
inzGq1LsM2M3POCqjc+kbX41eueu/Pr77LoXu/r2aH8+r8lnXrP+zZ8k02WzB2QjWVJ13cT7rX3d
XGR9psZXjRvl/Xuyxzn8rN90xqyl9U5+fHOxdbosz1S6/49Gu/NXoXdUfIaxWkWWI5//5U8UvzPA
3kFw/egeV+eHN8iCBa+mZ5cbXX97ts7pGdCqrE0715n6eTlQ/vNVV2UGNxAbb+1ifdfel7Wl/8xU
ramJZEpq/92ZXy+adbfsff5n6JZsXrX/bq75d1JsjSefyw3X085vWfHsj8j4Zy2r5/1vyNTfkbX/
Do487na9Wf8unUw3/1z4gexdGLeF8wv/rqz989RQ7fsMfj6r5pP8b0Nk/er+Gxz78+n+Pxb7+Yj8
27N5Nepo6+8JFCEDOjudcyoDuhEsbVanXW2x8QAAAAAwVHXjoiJ126Vpn0kZ46s7PoXOOZUBVQZT
bF91ahEdb1nQxx57zNVDy4Dat95+/ebss5+nnuCq6cxk7lie8bTXCI4d2/x7Pyftk8xoxtYsPOFG
e1ZZ/6Td5Pt2fsuITh3n/j+u8+t/93VXjS7+v/7G1SfM61txJ6+2bc58xF7l3nh1MPy23M2veu6/
NbuP4MXSaZHrm8lnUy/OrnPX1ZYVuMbVo9ir1ZX9sW+ei/VXnbdKw+vaZ+p2ZJ/RuzX4HJhe5ZOr
d+TZj6pxoyybUvtV+6br3fjxjXzubfJquavGl5v1VWiTXzeS3Zqep6s25PPayJC6ajoLkIt/u2t2
nvuuze5r8vjXzYDm637jfde6+q62r2OP69RnPTf/PXDvdZFvya0SPX9ExXh7/CT6GFYq/xnZUJHZ
SP67M/yzkP1sPbFxk66aLG3j89f7O8kyx+E62t8dt42uc/U99lm48M/GtVnWvfV/Q6r+7ssbav8d
HGQuZ86ARv6u3PjG7DwTOrmPyLwm/za0tI4xde8zfxfE1LtFnszuY2/+yFxd8XdO/X/7U0X+fE7W
uat/eyLzqP3n2FUIWAb00ksvnWQ2w+JnNmNt/rbtS9hXxM5VJHaML2WMr+74FPE78EwFPrmi9thY
AAAAAFgEinlSY6FYfFS3vQ3zPHeqpAyo3+aXsF2OHj062R9qBvTb//u/dPWhR3/f1Sdsc9VGRjO/
V7tnax83+FX0939aw3iVsjpvn/w+0ayajLf+yfGhPLM5NZ/cij1O+QsYB9/I6lP/6cdcfcHHft3V
bYtmdmKveiZmGpKzDJNXFYPPfwQ2MkZZHc9C5K9ixvrz68U+y2eir75WZj8iGl73liey/Y3PFpYf
VzUu+rjmoq/az7jeyY/vxdmrwfF1ir16Pavy+6j8uU58fCfXCbMZ0axBeZYgKp/PjaNsfSaHxeaZ
eB1bhx33Zlmuqs8hTcbnKeDpz9dt1vj8VePz+5apNUmW+ndARWYj+e/OzT8r+y5z1ei6MPNp6p4/
/zx43b+T7toR/qy4avJNw7tH2Xzt75CLb8+On/ydYpmvlv4NsfGpf/fVvt/Y3/35+Vr7u7RiflPn
a3kdo+re5yQzm312cVfsz7ydt7V/+1NF/nxW/ny0/W9PW39PuAoBPwOqWiWWCS0rYrWf0bQ2iWU6
Z82ASuo4qTM2VVIGFAAAAACAWW0KQCeZtgRFY1Pb+uroqy+58uJDv+fKttVjrugeXFkPyvjW3O3Z
htve2D/jf/qsK2/Oy+pZF7iiz4i6z4kqc+nK+Jhx2bjOuF8l3187+0JXzrrzz/PyqCsb4/KS/zfe
ccX67TLHjo7bxuXEbVl54Q//H1eOvPKiK+3Rq7F7R7ff/Kgrd1+z4opeQXHlmruzVybv3uNKNtqz
62JX9Kpc/Vcgp+lVTpXJ+gZFr0ZGX9lG7w398d1+8S5X9j3xpCuhJ5/Y50o1vVx99Wj3DY+6sv/A
k67cedvdrjx68w5XJn8Od9zsyqN3X+PKyo17XalPc25+HX0+TUVZJpVjj9zkStWf/+03PeKKPc67
96y4olP7t1H3/E3n04pH97uifEyWkwllPfsfHbkypfHfnTrZo6N773vSlaiW/26esv1aV67bt8eV
vXuzsm/nDleu3r3LlXvv2+vKE6PrXLl2PBmViXnPc1n0bR233+TKI/p73fszv7JyuSt3jn90VQz/
9kfw56N1+nkKpbY1UXaetq7hm8c5yYACAAAAADpBAOp5+S8fdGXb2jFXVlfGCzQuivxd9K+spSva
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
2qzd7y/a9uvUseJvz/K229i2zLovRW0Sa5eyPl/pOeoGoNq2/aIxRW3ibzcJYutqepwv5RxtXCdF
V9dJsYz3XGVIc02xaPdTZdnuF9gKqU9alsmQ1mRoj19f5tvVPPr0+LQxl5RzNL2Of5xtF7VJyltx
Tbgdjikba2LbUrYf9knV8VLUJnXbi5SNbRSAmqq35DY9R2xsHU2Pq6ur66RYtnvu09pXSZnrot3P
MmJdsKjqPOnAhiGtW1dzbeM6fVrXvsxlSI9fW5rMxT+mbNv2i8YUtYnfnzpWUralbL9qrKS2Sd32
UNW4TQGo+E+girZjbUXtEhtvwu2qMW2a13lDXV2nyrLdr/RpLlWGNNcUi3Y/XWHd0KbUJwvYbNHW
bUj306e5MpdpXc1jXtfxz2vbqv1tU2dbtb9t5rEtdfclZYzE2qWsz1c1buWVV14ZP9/ZeMLTdNuv
q8ZK1Xasv01dfeFOlXndX6ir66RgLvOxSPcii3Y/XWHdFkPqP/Sob5HWdmj3MqT5djXXPq1JX+Yy
r3mkfomQVG2r9rdN1bbfJnWONXX3JWWMxNqlrM9XNa61AFT87aaf84xt+2LtbVvG6yzaPbdhSHNN
sWj3k2IZ7xlYRKlPfhbJkO6ZuU5LuU6f5tKVrb5nv71qO9Zf58uFqvrF35bUPqnal5QxEmuXsj5f
1bi5BaC2rbrueONv+2LtbevqOim4534b0lxTLNr9VFm2+wW2QuoTl2UypDUZ2uPXl/n2ad26mkvf
79lva7Jt+0Vjitpklm1pe1+K2iTWLmV9vqpxUwGo+Pt1tlP6q8ZIbLuOpsfV1dV1UizbPfdp7dsw
pPtZtLXvCuuGoUp90rFMFm1NhnQ/fZprX+ayjGvS9Dr+cXW2Vfvbps623yZ1jjXhvlSNSTnGxNql
rM9XNc4FoNrwnxh1ta26zvg6mhwzL32ZS1fz6NPapxjSfIe2tlUW7X76gnVdHqlPBrDZIq3bov0M
9Ol+mMu0ruYxr+v4503ZbuN3eKaMlSbjpGpfZmnzVfVL0piqAFRifbZd1S8p21W/1qVt8zpvXX2Z
h3Q1lz7dcxXmOnysCzAMKU9cls2Q1oS5NsNcps1rHv55tW3F9G1bZt2XlDESa5eyPl/KuMIAVPz9
Pmz7Yu2+lDFV2jhHW5ZxLn2651kN7V4Wae27xLphUaU+8cBmi7RuQ7uXvsy3T+vWp7n4mcV5it2z
397Vtt8mdY414b5UjUk5xsTapazPlzJuEoCK/+SpD9sS7qdqelxdbVynrbl2dc9V+jIP6dNcqgxp
rikW7X76hLWFSX1CgPYNae0X7eekT/fTl7m0NY82ztPVmjS9jn9c37YltU+q9iW1TWLtUtbnSxkX
DUDF3+/Ddh1Nj5uHvsyFNSnWp7nMapHuJdUy3jOAuNQnSYtiaPc7pPn2aa59mcsirIl/XJ+3ZdZ9
SW2TWLuU9flSxm0KQMV/Mld3W4r6ZjlWwnFtmdd56+rLPIS5NMNcFx/rBswm9cnLMlm0NRnS/fRp
rsxl2rzm4Z+3D9vSZJxpMkZS23xV/SZl3Mqrr746fl618cQqti0p4+axHSrra1NX10nBXKb1aU2q
DGmuKRbtfvqEtUWbUp8wYD6GtP6L9rPSl/vp07ou41xi1/HbY9uSMq6tbUntk3BfmowxsXZT1S8p
Y6Q0AJVYX5vHpGz7Yu1bgblM69OapBjSfIe2tlUW7X4ADEPqk6RFMaT7Hdpj05f59mndhjAXv32r
tiW1T+ruS2qbxNpNVb+kjJGpAFT8/di2pIyruy1lfamaHjcPfZkLa9IMcx0+1gUYhtQnL8tk0dZk
SPfTp7n2ZS6LsCb+cXW3ZZbjY9uS2meajJGiNom1S1mfL3mcAlBt+E/Qwidrsb42j4ltS7jflnmd
t66+zEOYy3wM7V4Wae37hHVFH6U+YUD7hrT2i/Zz0qf7YS7T5jUP/7zhNWJ9s2zLrOOkal9maZNY
u5T1+ZLHFQWg4u/HtiVlXMq2pI7rylZdtwhzaYa5zseQ5goA85D6RGsohnQ/zLUZ5rL5urNsy7yO
l7I+KRtvitqkzlhT1W+Sx9UNQKVJX91tCfdNrH0rMJdpfVqTFEObb5lFupdUy3jPwLJKfXKzTBZt
TYZ2P32Zb5/WbQhz8dtj25IybtbjJbXPNBkjRW0SazdV/SZ5nAWgEj6R8/dj25IyrskxEu6nanrc
PPRlLn1akxRDmi9zRQrWHn2U+oQB7Vu0tR/S/Qxt7fsy3z6tW9O5+MeF54j1dXWM1N2XWdok1m6q
+iVljEkOQMXfT+1L2ZbUvjbN67x19WUeqVi3+RjS/Sza2gNAXXWebA0B9zMfQ1vXRV83/7zhNWJ9
WzVOwn1pMsbUGWuq+k3qONkUgEr4xNLfb6OvyTGhsr42dXWdtvRlvqzb1lmke2kT6wIMQ50nMMgs
2poN7X76Ml/WrVjZdfy+2LZ0NU7q7sssbRJrN1X9JnWcrBw8eHD83GzzkzN/v42+NsbVNcuxbevL
XPq0JimGNN+hrW2VRbufIWHt0aY6TwjQvUV7fIZ0P0Nb+77Mt0/rNstc/GNj29Kkr+k5pGyspLQV
jZG67aaq36SOk8oAVPz9pmNTz1HW17Z5nruOvswjFes2H4t2PymW8Z4B9F+dJ1JDwP1snaGtfV/m
O895+OcOrxPrSx0nTc4hdfcltU3qjPWljJHUceICUG2ETwT9/bI+SR3bZJyE+13ZqusW6dNcqgxp
rjK0+ZZZpHvpG9YWmE2dJyfYsGjrxv3Mx9DWdavm6183nEPbfWXjJPU8pu02ibWbqn6TOs4kBaBS
tt9Fn6+sr2t9mkuVIc1VWNuts2j3s2x4/BZD3X/Q0T+L9Bgu2s/j0O5nSPPt01xjcwnb/f2u+6Tu
vqS2Sd12U9VvUseZSQAq4ZOWsv2mY5seV9csx3atT3Nl3bbOot1PG1gTAPNQ98nS0C3a/Q7pfoa2
9suwtuFx/n5Zn6SObdon4b7M0iZ1201Vv0kdZxoHoFK237RPqvbbMq/zzgNznZ+hzXdWy3a/XWJt
sajqPrlAexZt7bmfrcNcp8/r75f1SRdjpWpfUtukbrup6vfVGSubAlAJn0DNst+0T8J9X1lf1/o0
lypDmqsMbb5lFuleZNHuBwDmoe6Tsj5bpHuRod3PkObbp7mWzcXvC8fV2Z/XWDNLm9RtN1X9JnWc
byoAlfDJZZ39eY2ta5Zj29anuVRhrv22jPdchTUBlkeTJzpYvHUb0v2w9vMzy1zCY/39sj5pOlZm
3ZfUNom1S9O+UJ2xZuW1114bP3/b/ARunvuznqtN8zx325jr1uF+0CUeH7SpyRMDdGcZH59Fu+ch
3Q9zzYTn9vfL+mRex0q4L7O0Sd12U9XvqzPWuABUG+GTnnnuz3qurmzVdedlaPezSOvPzxIALJYm
T7r6bNHup8rQ7peft3b41w3nMM/9qrHSZIypM1bK+qSq36SOC0UDUAnb2tyve6yvrK+PhjTfoa1t
Fe4HbWHtgdk0faKCcou2rtxPv/XpfmaZS3hs3/Zlljap226q+n11xvomAaiET7CKnnBVjSnbr3us
FLW1ZZ7nbhtz3TqLdj8plvGeAaBtTZ+cDdWi3S/3s3XmOdfw3Fu9L03GmDpjpaxPqvpN6rgimwJQ
CZ94Vu1LnWPaOF9Xtuq68zK0+1m09a+ybPebgjUBUNcsT4qW2aKtG/fTb1t1P+F1t3pfUtqKxkjd
dinrk6p+kzquSGUAKmHbrPvS5BhT1tdHQ5rv0Na2yqLdT5Vlu9+h4fFBH83yJALzt2yPz6LdL/ez
tcrmG/a1vS9tHCNFbVJnrJT1SVW/SR0XMxWAStGTpLBt1n1pckyqWY7toyHdz6KtfYplu+dlfIwB
wDfrE7ChWbb7lUW75yHdz7znGp5/1n2ZxzFS1CZ126WsT6r6Teq4mJXXX399/Fxy+slk2NZkTBvH
FJ2jK1t57XkY2v0s2vq3gTWZD9YVmL9Zn7CguWVc+0W7Z+6nHUXXDdvq7ksbx8gsbRJrl7I+qeo3
qePKuABUG0VPwMK2JmPaOsZX1d83Q5tvFe5n2JbtfpcRj/FiaOMfefTbMj7Gy3bPi3a/Q7ufsvkW
9YVtVfsyrzFS1CZ126WsT6r6Teq4MpMAVIqetIRtVfsyrzF1zHJsH3E/w7Zs95uKdQGwFdp4ArVs
lnHNFu2eh3Q/855r0fnDtqp9mdcYKWqTuu2mrL/qWF+dsTG1A1AJ29oaIynHdWUrrz0P3M/iY036
jccHQ9XGEw7MxzI+Ntzz8G3l/YTXLprLvMbILG1St13K+qSq36SOKzca/f+6leUcLCLA/QAAAABJ
RU5ErkJggg==

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-tSKzWy6Ks2MzsuvLkF0gAusl?se=2024-05-28T03%3A10%3A45Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D299%2C%20immutable&rscd=attachment%3B%20filename%3Dimage.png&sig=0StmC6QaeyKnLzjVrMbDc3bdnMV%2BwcqR9AO4t/pBVSo%3D

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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-DhfF4bWA5W5QSp6Pd8EGqlpi?se=2024-05-28T03%3A10%3A45Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D299%2C%20immutable&rscd=attachment%3B%20filename%3Dimage.png&sig=3Q3lec0ZNn3k0ebYk5Yz%2Bi6YyDJKysFyweIGpv7ENqc%3D

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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-ROOdxPuqBQ3kBjCZKO27383M?se=2024-05-28T03%3A10%3A45Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D299%2C%20immutable&rscd=attachment%3B%20filename%3Dimage.png&sig=hRUrAekrs7u9nmCVmVQt5iaq9OA2O/JVc87NKTbAyzc%3D

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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-T8A0HDSwTW3VgmOeE5ozAUrp?se=2024-05-28T03%3A10%3A45Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D299%2C%20immutable&rscd=attachment%3B%20filename%3Dimage.png&sig=mpMs9DQr7tS8CcdOWU4sx3/%2B3mxa1dIYh/35rBHtjWA%3D

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
tGuwrzOP06oVy5XLlixSLl64QLl0sWnEr15l7qj98sT1mMztZJrrB+6/r/KQHvsp9+2+uzIj2254
ewaAq8jHbZbZBnv/cy5Wzl9knh/Pv2se138OOVf55cefKl972jTY29nrjRWa2xVxa81vZ+Vlrplu
1qJfvtRs10GDhypn2zMNLv/HrcozBw1Rltm11rf0DA4YNNQBAEAQ0VAHAAAAAAAAAMAHGuoAACDQ
aKhvneRm7ScfvK284ryTlQW2CT3crqne9+TjlOV2DfOIbSq7NbbjFWuMm8fj+x9+Uj45xqw1PfmT
L5Sz55pmtSv07tzeNLV339M0wrvtaZrSubt1U7Zpv4uySTOzJndOPVOxds30aCXN4LJS06x2TXXX
UF9mm9tzZk5X/vT9N8rvvvpc+aP995JF5utatDRNcbcm+4L5Zs30TFNkDu2Sm6vcvbu5/bvvZRrf
neztb9vO3P6mzU0zPbtefWV1KbHV+5XLTGN+7qw85VR7v776dJLymy8+Uc6eaZrttoAfyu1s1pK/
5R9/U+61T3dl6XqzZn1qA3P7P3z7Q+UZ5/9DeeHlf1H2Pfks5UmHH2Ty+EOVd97+L2XMrn3vzijY
3srt6yBa35wZsHSh2W5/veJ65Yyff1aefZF5HVxmG+o006sGDXUAABBENNQBAAAAAAAAAPCBhjoA
AAg0GurbJrlpO/m9N5TXXHSGcpVtpF9+8fnKc/5s3h8qMA32WKlpmIZt4zhs107/8yDTcH7z/a+V
++1vGtuHHtVX2fP3xyp37b63sl79hsrtbdF8s1b2lx+/r7zPNqvnzJyjPO+vg5UnnDZA2W4X01BP
S7drxvsUs2uQVzT7Qzb97pnbpcfdGQLhsN3+9t+bs3a1WfP8+6/NGuevPvuY8sn/Pa0cdoW5f4Mu
MY976YqVytR6psl96eXDlK9P/Fg59gNzOS88MVr5yL0PKp99+BblgYeZxnr52vXKaHT79Hrc9nbb
P9rInPEww55RccU1NynnLzRnMpzx578q/3bDnUr3Nwgqnu8+tzc2joY6AAAIIhrqAAAAAAAAAAD4
QEMdAAAEGg31qpHcVP/m88nKa//yJ+Xc2bOVJ5/YW3n1FRcpM+vlKEtWm7XFUxuaNbavuWa48rU3
TNN73MdTlDvv0lmZrKKxbXPDBrZrAv+2EbxhQ9js2lYUv62KJrjNeFIVPBrd+FrY1/71bOXjDzyu
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
827dlF1276686ZrBynBpvvLVFx9ThmxzvjDfvL/cbsg0e0fSsjKVoQx7Axx7BkG5XVQ9bNfUj0Q2
3iivaJzbBvqgS65Wfj1lhnLi5ybdmQQ01IOFhjoAAAgiGuoAAAAAAAAAAPhAQx0AAAQaDfXayTWp
S+0a2W7t7xuvvEj59qvPKotsU7kg31XPjVatTOM4t5NZg3uXdmZt8jZ27e3mTc0a3Q3q11PmZJpG
dGqaeT6kRE1vJBYzu7puje+iInM96/LNGuer1pi115cuW6FcuNiseT53vmmWz5tv1jxfuGixctVq
c3kZtoCdkmKa0IUF5v0N6pvr3bltG2V7e7vb23+33sk0wt0a440amLXPc7JNczzTNrpT7faqaKjb
xnVFQ73MNNRLbOW9sNDcrzXrzBrsa+12f+sNs0b9C6++pXS3NzPdbKfsHHO9S5eYtdBt4TyxHU1m
55jrr2c/7+XH71M2b2nuR0XVP/mUAHs7XXM98QH9d8M10jetYo3+HHPGwN+vukH5+lsfKCd+Ok3Z
pn1HZWVr+qN2oqEOAACCiD1NAAAAAAAAAAB8oKEOAAACjYZ67VZmm+EptnH93GOjlQ/cfp2y+349
lVO//0YZLjdN6ydH3aFsbBvpIddodpnUhK74d0WaqJD89W7Nbtdktv+s+Dq7RnhpfqFy2YqVytnz
THP92++mKPMLzccP2G8vZW6HdsoWtkEfybZV9uQ15ZNvf0Um3Y8N78hv4pf75e6H/bdtoBfa5v2d
9zykXLPWNNhP/0NfZecunZQLFyxSzpprGvlTp/+s/PJrs5Z9dpZZXP7Om4YqXZO+4nYnqao1zMtt
Az5qm/w3/us/ymdefE354rtfKbt0M9ufhnqw0FAHAABBxJ4mAAAAAAAAAAA+0FAHAACBRkM9WFyD
eOUys1Z50xY7KY/vubsyI2zW/n7u4buUMdvUdl/3S+/ZvFV5Edp9YOO7uhXvrWiC/1bFWt+u6Zxq
GvahVPt8S25Au6a2bbaHSk0zP2Yb1vENrqeS22/fUendSvLLxf728uO26R61a8qHsmxT3n2Bu712
DfuQ+zx7JkHF/Sswa82H3FrortlfZv/t94ZupYqGesMGyhH/uVf5f4+ZNfgfe+V95Z7791C67R2x
ZwRE3PZ0j2cVNedRNWioAwCAIEr6TQAAAAAAAAAAAGwMB9QBAABQY7yGsDdeM92bgvx1mjWrV2oy
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
Ljhhm8XfpFg//rzaxC1Sx5/2H1qu8bFIbOkid0w7a7u2wlviYs/bYPxZ3JlZBVj8WbueusW93V6+
9rWviVnu4Y3ziW9sluN6axx11FFig7Tbbt+dbW9e9rKXiXmFs7f3vve9Yl5BP6ii35HwCmhvlhva
Xm8Nrzj39vSnP13s2muvFTM++9nPik1MTIjtKPg7I7x5JfJC1chbwnKGmy2UwdzzZoM5uO+qeL69
XHDBBWKDvO1tbxPb3li9Wi53a48Mf6eCN8uFbjn352PfffcVG+S2/l7W/9p4vayGxBpZW6yZNcSs
/7XzN9/zefNKMG/+zlJvXgnszfrpyHXO3oZdn+dtheuLvC1fEovNTd0gNjs1JTa96iqx3RanYivG
/JjbnZPEblzjrHJjAW+NIhHzCkZvPSmDH/uVYm5EJzbY/1ahG/84s/7X7ZKY9b9DeSE21g3E7LzG
KBNXR85Cty5vae7OyZzNdUsx63/n5taL7TkyLrZ3e1hsOE3ESrctb1HoxnLOqsiNF50FkTsGnbld
EYsyV3/OhlzdeVvuxsLeVix2demsM32DWF1/K68U282d03nbvP4aYoP1Z7/jtKs7bwuvP5yf9esP
ZvVn40HDC1y9+TvSvaWFGxM726z+Zl39Odtz2NWfs33c2NnbcOriyNnW6q8b52Jz7rfyVkVdsUYJ
i0p3/utseMiNY50tHW+KDbu69ZYGPbFm4M6ZnYVurO7Nzv/74xc/mPfnOqjHevxSuNpzlru68VaP
o10deGu6KvW2dJk7j/TWdmMoZzYutvPfKnSjbWe9yJXGWebq3puNl/rHL8brZdUWs3ptuWPXW1y4
Y9ebOya9iVLTmb8T0FsvLsX6xy/Ok6PMj6GTYMgd7d5WjLjj15s7dr1lszeLWfxtuPkKsd3cubG3
FWP+GE6DdtwS2yz+Sldvzurjt+mOX2elq31v88WfjaMt/rwy29tW488N30WsqutLXB1567ixtjeL
v5mZdWJ7DI+J7etiz9uIO3a9DcZf6WLPm8Vfz8Wet/niLy5KsSEXe96WLWqKjYy2xdLQlduZxZ89
i2ve+HOx7M3ir+Fiz5vFXx67bzuzZ4Slrkq9WfwtG3LnQ86aLpa8WfzZ9Ss7f5s//txZpTOLP6vX
fvy5MnobiD9/J7S3eePPtfXe2m4fvS33fYfvQ7T9KzorxSz+Jm76m9jy0VBshW8DnQ0lLbHKnbt5
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
MrH2+pVizcm1YmGQiM0lDbGZOBQrQ//E8Cho+CdAOyuiRCzNA7GRMBWL4ljMnkY7ObVWbPXEzWKZ
/ouSRGxsNBaLqhBWRGJ+YsUbarNvXonhzedM8uZzBCFPkK9b/3xaPO3W6rvpvuVtZHa92JI114o1
J28Way2KxNpDTbGkHYkVQUusF6dia7qrxFZPXiNW5h2xKHFldzbUDsUSX7de5ehnzJyFYQaLYJIc
3pnPqSUWuphxFmbTYsmG1WLBzPVii/dPxCwORpuzYsNrbhIbmbhGzJ52j2f8+vjLxBIfexJ/sNCX
yZnFX5XPiaXrXex5m75ZbMmekVgdfyNdscbaVWJ1/AUdMT+x660ff+5vP9XklbUbxV+jcjHkLJl1
5XHWXr9GrDnp4tpZIIrcOJiLXfw5m3ax583PSHrzubO82VOeExd73vrx5+LHWXu0JVbH3/pbxHpF
T8zib6TtYtVZ/c8/ad2ZDylvC40/e9p76Orcmz3VvOnq2ttIZ4PYkjVXi7U23CTWHA/F6vgbcnXl
zEeutyyCremuFrP4y7MZMYu/Zsutx5nthy+5N3sqt8Vf5X4bb7k7Rr1Z/Y0GqZjVX8uVxdvU9Hox
q79u0RGz+htquth35u90EXOHoZjbvDffIvZbRVd/7k1vXtnvbd7687HszOpv2NWdt83qb9TttzOr
v9TVnTefY9pbv/7WiK2ecvXnbLD+Gg0XW84SH6s+ZmvQrgT+2JX6g9nxFbt98BYWM2LJ5C1i1eRN
YuP7BGJ2HI0N98SG1t0oNjpxlVhSuGPVmZ9A9mb9R1L6Y9i3Zzh+vcLFW//4de2/s2RiFcy1ad4W
7xaI2XZHF2Vi6Vp3jDtrTF4rVlWzYn4GX8z9Bt76v4/73Zz1j19XT86SuVKstX4tzB273ux37yRN
sRnXJnjzCmhvjcwdv868gsCbv4HB22iYiFn8Jak7tp1Nz6wXWz3h4s9ZJ58Vi2K/bBK0XAx7i10Z
vfXjD/2JxZ+1K3X8uTbXWx1/7kvevILDm+vdxNKqEhvuTIktXnu1WNuVxVtzxPUvziz+GsMulpz1
j9+W2NreWjGLv6w3KWb9pQtBsdSV0Zsevq4RcpXjTePPrI4/91t5C4tZsWSD+/2dVe638Da2Vylm
cTA+mokNr7tebGz9VWKJjyFnm8efmv/bme8ZvfVcm+xta+y///5iw8Nu+85OO+00sQsvvFBs3bp1
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
XtyzfjLnedp3sr/f+5tsJ4MRzzdlMY4rz+PxjevZjj/8xxY712JsN/8u98byLrXxwg083/738HzZ
KtvtP/z3jMH8ztdy/PSVq/n5l/1T7qEjMU/F5v8h+/3xc9mPjYY2Tk45vgxTtvi9FvOTWzp3C69/
8Ne4Rws6KE3mfprjnOx57J/mbqCe9/429zpx/Uxke7WM7C3HC0/jXiJf/gDH/fGY8++uzd8w4Nfk
mruZrzf+kz/RNA94A2r2tnNq46lJyHy7ca7btKTxLs4PvcuYv+mb+fv976Z+6TI//3u/+HxN/96b
GIP2G9/leV76Dz+hKXON8v09jocmP0b/GQ3pFzXTL0r5uV6T5c3bTOdv5/EHf5XjkrzP/M/9Xfb7
2QtZ3rmbqd99v2V7xQweW79z9nB+8bUPcg+YWkr9On3ql0cs78330w9f99PUL7XvH3zTLc15vtpu
u38/x/HZ4QbHL7GNxwLr91sP0Y+O2l5KHkOQe7Nvoz97z2Y5B/KGO8ymoZhnshyYSGmSNTjAmLuX
uh38H7domlts7+mf5J5c6YtZzsnQ9gSK6I9BUX/5cyPm+cZWQZet/jp/Hlr9TWo8vxu/2HAI+eLn
4z7rYzVlOv0QP7/vN7innNfh59vvYEziystZj1q3U8eH38/6m1u9bL6N/pfZ3guzd/B8B36H50uO
MQP//We5J9zPvovfW1x7C6//wp9i/e3bOHPuHbZX3st4n4dD6lyzvXZiG0f3GtQlbdOfNt3H8h78
FdbfbIX5nX0724P85Rzvzt/Bz91n7ZXXpb/ENh8aZUz3bOPxV/7pKzWdjmz83ON10oDlvfcA/eqV
f5f+N8xY/iCgPs7/Ktuo46af5/dBh6Y4f43d8bo6HjofZDmPvZv+ly/Sj2feSH8JXsDrD0bURd5G
Fgsm9D+3x0dq+sw9TJ0P/TeeL1uhzlNv4TwyfxXbqXHf/C9mPQzGLJ/zu0aF55uY/63w15ifMd+j
Jv1vIm8iwfKU8zfnf7nPz8cD6l2173FmDjF/+3/9ek0za6/ab2Rs8srrWN72PdRx7/sYMz1b5Imb
b2Q5sit4vdn7mJ+Dv8X7OznEjP7yP2BM8H/3jziPvvluluMFP8m9lJZHzN/sm6hz9hrOzwcD6lK1
dqJi88F+k+ed2PcIm/fx+of+I+cp6VGeb+aN/H4yfw1jyy/cz8898BvWvy2z/LH53cj8Zesc/eqb
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
YXmqpt8wM/186ueZfnXTr276jf8b/aXzZc4rL9zJeeZXP8wV/tUJV7B7ttK64fS7j+Owl76DKzTd
PGDuZ/ZoOnwj5wntq1mOvb/4HU0t2179n/P7hJHpnK9Sh2l7Uzm08q5mrE+56br1Nv5973/kPBEO
otb+hxyI915DP8p79Fc3fslt4j2y8XiS8X7IlcTW6q8bv/B+FxP2DfXXdHX3o6i/1EeiKosF5ndu
/OdW/MYJzxvY8Kg6RT0nv8Y3Krpfpe7VnczHSf+Zby7vm+bnkwmvL3GgxXJrbxqmEwa2mkz66/zP
9Jhqsr3I1vlfMa+YsN1wb3jmbl5g9deVZ83/qLs1R97Q5ucj39oN90aKx3LWWsxH8r/4psvqZ1lP
z9jMfH3jz16raSugX3o2X67VmJ+bD3I8+8I3fUzTjuV77u/v1nT8DpunXs/r7P2/vq2pDT+9+j/Y
run4DTwu5bSq8L/Y7p/zv9Tmn9vuZbr3l6/V1OOfvda7dmk6eCvrddaj3u2K+V/u/I+/T+y8oqD+
372JFNjfrV0UxdTMj9w8z0VucPMZv1hhvM7/ivG5JkX/EdkbAqG98VSZZbuQ/nfeh87n+CpSbG+m
7/yvfON7/yaef2LfA27wv9D8z+fnkoHNFwbWXtp8dtr5n437B/6j5xVr/sf85u57pfX+Z5+Pqtb+
mf+NUl5vWPgf9XHtX63NfKa/z0gTK3/O8u6cph9f9dE3arpQY7+Sm/9VKzzfPSubNH3BGz+u6dER
9Zh7O9/on/wD+mfrVp5v389/S9Occnm1d/B7reQdfCM5WWHGpyyCQ8Xav07G602s/d6+l/nf/x+u
0TRjtfWab+b3tKOf4vcMSYfld/7nF+0f85lY/+W+j1nvf6m9GZF7/DwaPE18e1Ok8D/7vO++J3Aj
AnuzYG1+qEnhf559nxFbvWpNmf/9zj6rEaWVVlpppZVWWmmllVZaaaWVVlpppZVWWmmllVba41pY
3VH75erzp73Az7xxzZ45y+7rae6NJok3nky8sZ94k3ziZdHIY/zzmidPTXKv6uW+PA9rgBr+Ld/6
y7f38o2/fFcvyBmRSpwuiaWm3/7LEwcck0kqT23kuBDJRA+P8hS/yfTJWu6HoAVq9sSqok/CZRXq
GP9N0tTzuxWkmRdc1/WiZkVj5YTVyIvObXtpHHj9032UY+wNZXfwbOzleaxPx3AErhPpSleJczWZ
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
p4LTL4QGQtH+mX4efE9Y6kJD2TdlvX4R9AM13BNBiiys18+HdoLTz31vEuJcwon0a0I7YcpfVaox
5pFgeTJSHpz0lUmOOaDU+9JKK6200korrbTSSiuttNJKK6200korrbTSSivt8c2vffKU/G0nM8bu
fMzYM989xBg/1x5kTKymxex5w24eV60zVt41+xnL5urDjG3TrDPGzJt3Mmbbppqv6XePWOyqfYxV
06zyOq+w2NKtBs/3rX2MWXP1EcYEshBc3tv2MIbylMVE+t4hxsT5zn533UzT1+9hrPQ5i2F89WHG
9PnOEV63UZNVEJ73GovJPFXjdb99gOf79j7GBpqq8rjXn8rzbaoyRtI3DzBm2rcsZlvVQh29ZTfL
sbnCcl13hLGZrtnPmGx10++Nu6hf3cp77QHqfNUhXrdh+r1pJ2Nzb7EYQdcdo37X72U5anadV5zC
2ObTDcY+c+W46hCPqzv9LH8zDf7ihsMsx9X7ed26xUh8/W7GTF+o8rjvHKYOVx9256Oerz6V+s3W
eN3vHDRd9jKfbdPvdabfVtPvWwcZS+sqi9lWqcojJfiL5W+bHfc9iyn4nX2MeVutUYc37KR+rSav
e63FGrvyIK9bM53fZP633X7+3iLLed3DTKvm506/2SbvhyvHNw7Sr2p0N+8nzO/nm/zFTRY77yrz
l9o6/Tabftcc4e+/ecjOZ/q9yvxvvm7lOExdrnyIsdGaFuvr9acyf9tqzO+3D8kKHskf9Ysq1O8t
e6jfdtPvxmPU71t7GVMxtqCXbzT92i2W93qLJff1A7xuxem3g/63w/zxhiWW89qHmEYW4/8VJzN/
8y0rxyGW42sHTGfT7627WN5NLepyi8VuvNL8JZZlu7DXmX7bajzuuqP8vbsflYr53yks7ybz++uO
cFXoXz3I9qphsb5edwrPd1Kdunz3MI/72gH6TWj6vWk3y7GzxuNuspig33yY/hdZrLg3WDlmTD9X
j766n9eNrL66+rurwZheNy0x/9c8yPKGFiPt5eZ/m0y/7x3m/f3KftOl0I/l3WoxHW89Zn7wMO9b
KMvuYa/dzZj9O6ziX8dqC/3cfXP+x/NtMf2uP2q6mH412237dafwfLsajPF4rQV7/4rFqPNj08/2
WNht+t2yxPxd9RBjjftOv5287nybscputHr0lX1sJwPT7407uLfDyVbfbl5hQb5jMQb9iOV7mfnf
VjufK8eXzK8iy99bdvG47W3Wo9sXzV+svvnmL68x/XaZfjcsMt9fO+DuG/V7pd23bU0rxzHT5QGW
o2r6vfZknm9Pi/pdb/p9ca/pZ/73ht1sJ0+p87hbl5m/Kx9kjG632fzrdtL/FqZ4324xP/iS1XPf
Yju+4STqd2qL+t2yyv70OxbjMrfYsleczOtut/PdeIzl+6L5lbu/b9nJ8u6wmKx3WP6+/gCP82wT
gVfv5p4Hexo8/01L1O8r1s8EFoP0x+26J7UY4//mJV73SxbDNI7Y/r12D893Spv17cajPO4vXQw9
y9/rbY+U08xPb1/hdf7K9MsstuHrzP+2TvG+3WJ+8MWHqV9uMV1ft4Ox0s+wAcjtXcaUvPo+HpeZ
fi+x+7Zjxp2P+f7sc67S9KmaWwV7vNWpJ/r7enuyx/9Nt78t5f1B3+e/rX7wgyr3D/q4E9n3e57v
9/NvuOZyTb9wP9vJoYUKfcV27nlx4RT78/uGHG9+424eN7Lgwy/YyfHV6fNs/+7uMD+fvZft5Nj6
wVdt53Fnz7J9fsD2zviKxfweyGtQsJfu5HnOtX7mni4z9AWLeTuxGOcv2sV+4cxZpve6697D8Ubq
sZ942U72axfM8rz3dqjTJ+/jeCKxfuEltlfP06d5/IN9/v7L93KPln7AcrzMynG6XfeeLsvxhfuo
y8DOd8U27rly0bSVd8hx9l/dwz1LBhYr9/k7OT44c4H9oCvHZ6yfGdl1X7Gdx50/x35wLX88ruez
v3ux7VV2wbTdtx4HDl+wmMtDO+6FpvPZczzv/V2OGz5j93di+l2xg9d72hyPv7/L/H3yPo5nxwHz
8aKTmP+LTb+HOazzvnwf9evhjoi9xMpx5hz1u5/TFO9z91KXfkQ9X7KV+l0yzes/NOaBX7/bjrOY
58/dYX5l+t3fZzk+fQ/H7UN337bxuhfO83wP2545X7rb6cfy/thJzP/TZqjfA6bf523cPjD/e8EO
HnfuPM/7YI/zpk/fRf8bW7D2l5h+F5l+D/ao319Y7OOR6feCbfz7M81P9w543Jfv5R5VHYt5/SIr
xznuunbcZ+9xfsrz/dhWjhMvnWE+906o39dMv57FAr5sB89z7ibq9+CAv//03SyH8/uX2F5MFy1Y
/jjs9L5s9XfVyvuC7VbeWer3UJ9+/jmLbd03/Z5ne8Kdv8D793D/0foNM/PTk1h/nmH392G7v5+4
h+PJoZX3uVtZzmfP8bj9Q+ryJau/q7nd360s73kLTB+y4z5nunStvM/fTP3c+fYlzv/sfBaL+tm2
R9oFmy1/1oB+yvTr+Tzfi7bw75dson77KUPhfys5y/vc7VZeq+d7B/S/z1ls665H4S/bxr8/bTP1
2+vum+1hNMhY3hdsZzv6zE2sb/sHj9avz+J7l23ldS+zenlwxOO+ZP63bLHZn7eVf79wk13Xjvuc
08XKe/lmjrOL8yU2T76H51sdM7+XWrv7tC1M9w1Z3k+afl2ffv8C28vqUvPTg8yO96W7qN+S6ef2
ynuW6bd/RP/7rPlfJ6N+z7bjLtrCcuwf8jinXy/l+Z63jfo9a7OVY0g//fjdPJ9VZ+/ZW+jvz7V6
eWhs+lm9XLLzXW5+8HTTb9+Y53P+t2Llfc4m6vfceV73cGr6mc7L9rlnbOPfL7L6ecDK6/RbtXbj
ebaX1bOtHIdszxKn32JGh3zWVpbjOdZOHhxz/vPZ++kvyxm/F7l0G4+7ZDPnP4fGvG+futPum8VG
v2wr50mX2f09bPXj4/fY/WD19Z5p+j3f9DtqsfK/aP6yaPo92/zgGXbd/Xbc5+6ifkum36ULnK++
wOr5Ecv3V+/i+Zbs/lxk+l1ifn1oTP0+dRf7j2XT77IF6uHu3wHbM/RLpvPymP37s1EfeebSSiut
tNJKK6200korrbTSSiuttNJKK6200kor7XEtiPpdb74SKbONujLJPaU7HCkrg0Sp12rKdJPEoadk
w2UyIrNNX5maqiryAFI4Nk6UQ0mqxFMNZbpZUZrRQMkHx5Rg0FXa9UBptmtKluZKT+OJT7xjI4lv
m3pes6lEM8QLAqXfHSouBmA7S5UFfERojCZKPpBrD7zJeKxM1aeUmXpbQRaUvI/8gbDXUeYrseL0
S6CdUOjXh36gBu2E6WZdiSNZjSf6rSjpcEmZafjK9HRV6UcoAzgK7YRDCalAO2EK2gmNaKis6ddR
2vVQaUE7IcuhH+h1oR9YHKSKJyspQTzTVrwQhQX97kBxMQDbaaYs4B4IzfFEyYfQD0xG0A9M1drK
dL2lNEJfcfoF8D1hPoZ+wOmHnCguZtkytBOq0E6Ygu8J1chX1vRbVmSBgTA9Db8CQxwjHEUehUMp
9ANRu660WxWlGY+UfLCo+PA9oV33lcL/clwTOP2OQTshh+8J0UxL8cNQcfqt9MUX4H8p/A8U+sH3
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
czqYfokT2k7/ZP1vZLH5z2qz3CfbnksrKf3tliMWq77Qj+V13w/l5n+J8z9Xv23C5L4PcfV3vX6Y
2GmSnFA/TfAPHlH0H+v8r5jfma3px/Nndr3Ivriw6lRcOLDzuu8P3Dz7+PWX+p1u+p3aZP1dSdmf
uPrbiY/jf1Yfnf85XWLTb0P9tZ8Dy7+f87ii3lk5cteOuflbUU7+o/C/4+jnVKybfu772/Q4+rn2
Mi70Y5r7SdGDlFZaaaWVVlpppZVWWmmllVZaaaWVVlpppZVWWmmPY/4/v+PF+btvvk1/mPRWNL18
10mavuS00zRd6XKX2XfffKemgy6fVFx+6nZNX7F7p6bHBvyG/3dv4fkGXT5Re8Eu7tr9stO3aLrS
5Yrw/3krd5kd2Arx553K3W1ffCp3WV7q8nzvu9F2u+4zH885mX+/4kwe37H8vfd67oK70uUThMtO
4266LzuZ5UksP6nHXV8Tj088InvCENsTkaMhd5P9wDX3aLpiK9cvtfz/+O49mh4b8Hzvue0OTUdd
6vecHdwl/4rTTte00+f1fvcmHtc3/Z59CnV51cm7NV0a8MmN06/XoS7P3cnyvuIMnrfbe7R+vWX+
fPkp3P32JafxvKu28tTpt9KjTpfutvOdTf169vv3Xm+75a5Sh0tP5S65P34q9UvtfqQej1/Tj89l
YnuCdyzibrgfvOZeTRd7XHl9yWm87qv2nKzp8oA6vOd2rugbdKjfpdup88vOOEPT/oDle4/5X2eV
ul+6h8e9+lTqtypx4GG/ewvP1zE/e8527vr7yjNZjoGd7zdv4W6+qyv8+dm7zV+cznY/nH5LXe72
fclOO9+5vP7Q7q/zv2Mr1O8Zp3D34FeexvqR2X3PTL+Jv04/W8m+FPNzf3LNfZoeM10uOpX39zWn
nKrp6pD34/dup191V7lC9pJtdn/PPFNTiecs9m7zvxXT7xLzg9eeSn/ujZjvd99K/ZZX3a7OLO+r
z6Z+477pZ/63vMzjnrmL/vLyM9kuDIYszx/caLp0uBvyRTtYjledSz8dD3m+95l+R5Z5Hy/aQz96
zRlOP5Y3s/o7sRVDhX62Bne5Qv0+dC31O7xC/S48mff3ddau9Uam3230q1XT7+lbLH9nn63pZGh+
eguPW7LyPt384PWnn6LpYEz93nMLdV5c5X2+xHYTf+05LEdq5f1ftx3Q9Ngiz3fJDpb3x03nken3
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
iut/N+hn9beCvkMYxwNlvf/F0EQYQBOh0C+DfkBe1BKcfh0cIzj9oL7i9GtCOyHFWEVYr98C2kah
0kb9BSvoM4Rez1cw4sF/pZVWWmmllVZaaaWVVlpppZVWWmmllVZaaaWVVtoJzX/5ly/Iz9vKmDEu
1k/gM+aMPGUVGwWM6eRihKYWs3zvMmPlPLDCWDsVC531DHksBIvqPO4+i9W7b5nnjVxsWYtFlE0Y
u2bXLFd3nV5jDKTJhN/3X91hzKhBzr+7mOSpxWZNmG2vZrFtMivHbsvHztlY0/GEMbuuP8a/jyzG
3MltxsY5aZr5yi3WTyXh5/Iqf3/XkLF8jxzm9asWPPbcrcyXizW1UT/GLIoT/j6tMt/7Vvj3B5ap
X1Tox+vFpt8DXR738KLpZ7HJk4j5TMf8vCvnmTXGuk0sRvm3VxnzqJdTnw362SKYWvJo/XaZfrvs
vJOE9+l7R5mPoem3p0Udds6YfharvmIxtvIK9bl7zJhLhw/Z3y22ktOvXejHVFaZiDn9ItMvd/qt
mn5LLL8LffSMNv9Rdfr1+LmHF3m+MGC5kog/p2OWa8cM83NWg/6XTliub6/S/zqmX22Dflz1VEt4
fGYxlXY2mY/d5tdJav5n+vVNv91N5nPXLPPl9IvtfJ7srA+7d0L9Dh60vzv9tjBfUxZT7oT6Wczf
/R3+fP8Sy++b/11i/lc3/R7s87iHjpp+oelnsblSq78nrdMvM/2+Y/qtWqzAmt1nC+nlTUy/qqtv
vJy3w2Jo755jmmW8zvVHqX/PYmHtbLA8e+ZYTnm6Kxbb+XynX0L9DxxkDK/YYhues4Xnn7aYXoHH
DMhTfrHhcfQ70GU57l/keS1EaKFf0/R7aMjPPXCU9y20863pR//dPs3jz5K3SGC+06/D+rtsMcmO
q5+rb+YHJ5l+e+aYnzx7tP91Cv34+ZMtFmCemj7mf06/+6z+7z9o+lrs/rNNvxmP+QrsBqZWvqH1
H7LKW8yqkXeox3zea7HoLURooV/L9Ht4aDofZb7W65eYftumePzZLfpfMOGFvmv9x+J6/fijrqYT
q1pMRQsF6G2Xx+awk+fp7/46/3Ox2HbUqd8p84+tXxCxPPfb5/cesPbeYryevZnpLE/zCP3oLxv0
s/t+eGD6WSzKlLfBu1iWVcGmGrz+wyN+7r4jj62f878tbepwTpv+F5o/fbfDvTuOWlDNmrVvFmLQ
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
vFL2haVGO+XdXam9kl2tXP/G5b1TrfpJtdbwqORXalN++T5wWF5zrfz8u1Oyq/WWsu3Wyvz2ymfJ
WpnfYcmu1on8ltvvq+f3QvltrVV+s64yv+vlvV+tvfLZotYqv7L9lpoNSn6l8nVcLdtkrXz//Mje
flfzkl2tQcmuVuaX698jV1vl+jcoy9ZV7Wlfaq9kV+vU/GL9y/we3xt3dbVkVyvzm5b3/LUOd2Zd
ncyvvoa6HbT8ZiW7Wqv8Drpa5rdb8iu1Kb/d8p6+Vub3UMmuVm6/9Rvzta7Uzyilru1e6+qRso7W
mt0qx49Si1fKsbXUaFLyK7X3WFn/SmV+6+tf+ZDZ1W7Jrtbk5s2u6pjftdbzq9fSqDUp/19rlV/5
u5bK9oz1/G6V7Gqdmt+0HD9KzUp2tTK/p0p2tZb5TUt+pfLzx+7ooKurV0t+pR7aL/u1UiWBrnL7
vVLWqVrXdkp+pR4px5has4OSX72+W/1CU6lhya7WifzKZ9ham/LbKdnVWuXX2rGG5ZhTa5XfrKvH
d8vxt9R6frOSXa3cbjK/acmu1iq/dvxY5VfWv1KZ30vlvVGtp8qxt9aL5Tlrree3U+ZZK/N7uKxT
teZl31frcFL+jqX2yrpXK/d/j+8vuprOvt7VrGx7ta7OdrqEAAAAAACAUwz/4ZOfWFydtzFuxsN6
FrmovYqLHItuMWy9IcZx1eLrMVbN7qKNdffYUT1zOhg8O2pj0/zSl9qYeddvtdu/P66e+4l3tLFy
bsX9a3/FbjpvP09ijJv92o23OJpMu+mNGFN1L64av4ixZ6/lVYfbwwfXJ/Us7mCQY2fvx+/3sjdH
XlU4ziPsdmet6vLVs8n19nb/ybw973jYxsybxhjUx7P2+o9ifvO4yu613vm1139jZ9JNJ13XyJpf
e74XIr9//2ctv5dvttu/L66e+z0xdvetuP9p+R3HmPbXR+v53fm642LJy/yOI78rMYbUXsS3Mb/4
eRpjbG/Kbxr5Ha7ldzXGhJ/E1XYHozbN/OaR32Rjfu11vDRuOf1S5PfC9Xb798RVsr/3Xe33B5Ff
LtYsXm+OEX7v+bW/+7SeSSv2T80vX0dbzpP5tbGgcgz+ZX7xh59P2vxy+82rUy/zi/nOR6+e36OR
3/Vlfm1sqeeut+X57ifaevlXY4z0gxxru/u3f367kd8gxo6/Fn/39fyOI7/T1798HXfmV3vDVpPl
+ndnfrn9zk5b/07Jb9x1za3rX3vdNyK/T3255fdM5PfxN7fn/YH3tDHWjiK/HKttHtvROF7/lchv
Gvm9sjG/9vOo3W1wfae97mV+i7X8Yrue5hjVp+SX2+9sFL+fR37z9vMs/h7L/Gpv9ir2g6fmF/N/
9LC97oNxW78+FWOGfu2Vdvt3vak97w9+U+bX8prFerCeX65/s1PyW77uaXudmd9Rbr+R3/6G/HYi
v/KL7t/T82vbUQx5v8zvSryOna4XQLFc/5pVfu1+N2PsxGHM/7HI73DS8vvlyO/pl9v8vvOx1mv6
h97bxqir3wKoZrEci8hvtDx+xN9t3G5/OV7/bhz/B3Ftj9Py24v8rsSY+V0Pg+L0/Nr8x8O2f8r8
ZrH+Ha6tf6v82usdjHL9a5b5xViIN2PMyswv17/pMr825uVfxjUzPvLIlW76I+9r1ySYxtiQuR9a
rX93z++fffj3uulpsnfsRfQ+vd39mm+63/M/q76v57LcL512/7POb1tc1HJf9P3S/cr9vPP9R3/0
sW6aY4MPY//3K0+1sUK/8ELb/37gSjtu/tgH27UqBjG2cO7/8v1f/ZZftb9otw+GcfwYt9eZx//2
U7nfsB0fdo/b/W/G+7+D+o3WYm8R85u334/ijeJxLPckjrO133B1HMePURz/8/3fPI73y+NvXLxj
GseP/fjcV3sPd0btfXemmteameS1scZtOdq37gaDRw7b84wjv199uo3h+7nnW37fvN/m/7c/1K6V
MlzLbx75DU/k125/JT7vjuL4G79d5Tdtt9wc35nfbswn3weOYn7H8QeYxJjoo5gex9iwEdfy80F+
TlvP73gtv72++cXY6bP4vPnoYXueSeT3a19pY/0++Vz96sJg8N69yC+uBTRa5tfymucYyJFH5jeM
5X15Q357kfdeXPPnZu0FWVxcfrH+RU6r/Nrz5uej/XLPai/mc1p+OfZ8/fZ5lfntTNrnj1//ahvr
+A+ebfm9Z7fl9+OR33jWHnccz7vI/OLn/UjoRH6zyC9eWOa3H9feuxnvd24t82tBrfJrty+332V+
bYbL7TfmP1ms59fe/x1HDkeR316+7twPjtrj4qfyPrf93yQ+T66vf49EfruR33/5Whsr/veeadci
eNdue9xPfKhdayvHLK/fYq8Ws5Zf/YtXV/rmF+0i+3HNn5uR263IcWctv3HML95uL9e7cUynsf7l
Naom0T6X+c0W8fkt1vd7zW+1/rXlfuSwrWd7k9bO8htfbz//zjMtx3fEGP5/51tafrvxPv049u/z
fN+e+/vYrnN9OZlf+3lvFK87LtZwc9Rez63aI7/YiffhV2K+4+Xnt25yIr9c/4ax3e8s17+W02zR
xrQ/ims75fa7k3/3U/NrryPH7q/fPq9y/duftP3Df3um5ffbX49rOYzb4zK/K2XLrY5O5Nded+5P
xnG/l+NaU4PIbxyvs34rq7oS+d2K/G5uyG8U+c02rn8tv3wdmd8icppGfsezlt9RNFycyC/avbLd
dLX/a6/jKPI7iteZ69+VcVu/f/O59ry/9bW2H3xbfP7/yW9t+dXvgFVHy+NH5BfbbX7uH0V+r6zl
t5uf0+OaKeNZfCu5rFhtDgAAAAAAwKsafvKz37mYR8+t8aCdgRjFGehF9Lg6XPa8jTMf0WCfZyCu
xv2fX7QzfP/ij9pVwA9fbi38P/Dudmb0e9/XesiNb7Srbe9Hc/4izlgcxwmOSZyR6QacLo6ip8FO
nMmbRw+57II2ij4P2RHuIK6qe+0oliPud2unLd8w7r8XV3uexpma40E785Y9BefjdoZynj0cj9oZ
lnE8/zTOJK7ya7fXcayqxaDdXsdRr1b5xRmXRevhcK29rMGLi3aG/he/8Kfd9OZL7XHf/663tun7
n+im4xvtzNVe5DfI/NpkMI6rUo/iDNNh9PQ7a35XI7+8+81N+cVy5Rn67Cm4yq/df+eoncmZxPNM
o0fFPK7iPY4eDqv82u1H0fNxGmfER3kGdtDOZF1rL2Pw8qD1YP3FWP+uRw/N73l7y+2vfbDlmOvf
Xpz5GuYZs/X84nkOo6fGTvSkyR7zuX6O1s5L3cqrEp85v7a+7Cza7fNR5Bc9fC4+v7b+XT1uL/DG
sG2fuf69/FJ73Ce+sfXM/OvRw2ayXP8yv/b6j3bafDevf+fLL7ff/EbEflztOZdrtf6t5ReB7Rxu
yC+ugr7a/7U7LPPLnvOxH+iuD1Bkflciv4NR5velbvrii+33H3/b4930b8QZ0tx+99fyO478Rmvr
31Gsf+PIbxD5LU7J70rcP78BsCm/Ou5gdbTML+43attJvLzb8muva5Xf2v4v/l6DRTujm8ePzfm1
5zsatZz+5R//WTd97oW2fX/0rS3XH/7w27tprn8b88tp9GzL7XeyzK9NFtkTOvJYlP+qVX5tet78
okPIYHeZX3t8Ny5ckfnVEcar6BB2Ir/8psX69pv5HY9bfv8q8nvm+Zbfd76l7Rf/5re/s5tObrQz
95vzi+fJ7Td6Wk2ya9Zafsv1L9bLW3H8yPzGs3b7zZ12/9Pzi/st82uPz/1fjlR3Mr92v3FsF5nf
avuN5YseFJnffuQ3i/z+9Re/3E2/Gj0dPvJ4Oy7/6Le/q5vu3Ir84vmG0XPnOHOL48goeqR88kP/
s5ueJnucntVF96g9q/s9/3u1nuem13da7mddrvs9v9Mev+n5H7S/z0W7qOW+X3+/i87/vPP9x5/9
aDfdj2/cjCftffK//dJT3fRPnmn73/dfa597fuK7vrmb7h202/ejx1ru547jc1t2VMseZYfx+W00
ba8zP2/M8ptc5b+qXuGlyuPHbjx+px0myu3tuJDfWNqftvd5i8jhMI4fcbgt82vv/6Y77X6T5fGj
3WMW32SaLdoOOw6H5f1JHIDn7fiRPRGP2ssph7n2P6vjR8tvZ9LeJ/+7+IbnF6KH4Xuvtuf9yY++
r5vuH0Z++X4z8pvm597ML3s0xvE388vPD/nN5JP5tePQThyXdtvLO3d+46P2Ta3d6JG+yq89Io+r
+Tnk9Pza8XvvuE13I79Pfbl9Q+yzX2s91d9zJfL7WMvv6mn5xfF3Es+zyq8t/yjyym9W9M3vIPKb
nsivm5T82vLGqyjPc1p+bbln2QM084u/6zDfvyzzi79/5L3MbxrTeP/yH/7imW766a+2b0q8a689
709FfteO2us6kV/0mB7stueZxPPU67xVw1nkF69zU37ZfpDr797a+hdfqCivO9aT9fzabAajYebX
dgCj47Ye7MXIA9241HV6an7t56N4Y72e327kdyXy+49/+Ww3/f2vtG/qvGOnzefvfvz93fSh4/a6
6kjp1fjC88vlaI/f35TfLJaz+7c87kR+refuNNqfNuYXz5+fl+r1orrpKfmN4xvJe9P4HDJun9N+
5am23v2/p1uO3zhp+5Wf/vgHuunDs+jRHp/T1/NbRH47sV8+iu13GMtbxzevVseP9rqX+cXn53Hs
yfbbYt4lv1iefNwyv5bocv2Lzw+jaduO9mJEgHZduvL7zC/aQUfZDhP55Td5Dk+sf22+u2v5/drT
bb/320+37fhto/Z8md+j8/Z5Nr8RNI7PadmOeTK/tv4Nor1pnPnl42N9PC2/g0l7/fGxbpVfvP/I
nvd5fF/u/zK/WeQXn9dO5hfTWC9G8Q3842hQOIrnX0R+O5HfTuR3bdw+5/76V9rx4beeaseRJ+ID
2U9/7IPd9E3Rbr2X21/8vWeR3yzy292QX/ZDn8ffO7fzcXk/0G4BAAAAAABe1fDnnvxYa47vtJb6
HIMpf84ezXkmexhn8LMHWz3XUt2MFv7PPdvOrBwctjMI73q09fB618MPd9O943aG4EaMkT4etzMX
T0eP2C/ciDMO0XP3O55oY+PsjNuZmeWZtDizEi8zO1wvX2f2lFye0Y8edPmq88xK3j/HEs7fL3K5
437LnniZWPYUXXvcafnl2EPDE/m1MyKr/Foe73yk9fx/9yNtjKr1/Ebjdmboq/GNgC9cb2dUrkTP
v8xvdxxn6i86v7hluX50/9bbY7kjsE35rR7R9M4v7xdniA4yv+dafjcPWn7veDjye7Tlt78hv69H
fn8U+e3FmbPMb28SZ5rj75Zn9vLl59Lk2O/bk19bzoNxO3P4+WfbmeXrh207fMdDLbf3xHa8f9y2
w5uR3zDye+aVlt/nX2k57a7lt7/1+XWTkl+8jrX8DjO/51p+rxy0/N5+re333vNYO4N6ZUN+z15v
P3/upfb73dz/vSXy23lt8yuPiH/b/Tbnl+Lxkctqvplf/r79nD2tM7+jyO9zz7WeIa8ctOX9xqst
v296U+bXtt8c620YY5o+f6PN97Mvth4Qk8jvI5Hf1d3Ir52YL/m1580FzqV5cPPrJsvn3ZTf559r
PURePmg5ve1qW/5vflPrAXElxsy9FT1/FpHfi5nfSy2/7Mn1kcdb/tf22vo8jB7g2bMkFziX5rT8
Um5H581v+WM88uzrX5vvceTw+edbfi/eajl9w5XWQ/O9b249mK4et/XoVvS8WETuL91sr+Qzsf4N
I7//8UOf7qavt/Wet/fas/Wi5gNvBA9qD/Wff/KvtP+JzwOzSXsf8oUX2zdwnrvR9mNv3mv7xfe/
pX3D81rs//KbP9N4333rsM3n08+3HmI5Ru63vantP998tb2/WUTPwuxBnDvwXIr8Rmvststev/28
6fhRgugmec2W9m/16sePHKM1rY4f3aRo98/75ce11fGjm5RftOWYR0/WL7zQ8nvmZuS3E/k90fJ7
6LgdR1f5xeeX+Ebmp59r+R3F83/40Xb8fjy+iruInnXZM25jfnFDHuc2Hn9zPTo1v/hNHl8vOr9Y
/774UuvZ/7UbrYfjmyft+Pr+J9oY/g9Fj8TjvOZXrH+H0QU+8zuI4/qHH209c594uK138+hpuMqv
vZDMId+/3Gt+abiW34n3JzG/1aPi992/Rbz+VX5x/3jefDnZ438e71/+5OW2/F+93vJ7U1wz5v1P
tG8YP7zMr61/x9Ez+Ci+4v7pZ9v6eyvm+y2PtPze9kgsT3yz8Pz5tWkuX35zMWWP2XnkeP78ukl5
fMwvnn89vz99ueX2lVdajo9lfm9t698jMYb/cfSwPYpvRkxjbO0/fLatvzdjv5r5fcM95rfsQZs3
hOX2k8v3Oue3iJ7of/py2+89/XLL4dG1/B6NMeen8Q2Nw3F7nllcIyrzuxH5ffDh1j749kfbE84i
v51N+a0txwOXX84vnn8Yy7mI/d+XXmn5PRX5PRLHhw+8tW2/j8Y1D07kF9+0f/KZtv2+nPk91PJ7
R2sGG8zi8WfNL7ffeNmr/DKn+OZ1urD8cj4x+5zvcj8YPcUHmd/11n7y1Msth4eW+bX177E4fk7j
G1aZX45UkPm9FH+wDzzUtt93rucX31RYJbK+BwMAAAAAAO5q+HNPfjyb13vIu7YzDtnTeRE9sXIM
vcVetNznGYXDOKMUY5XOY+ypwxjMeD+urvy/v/T1bvrfn/rLbno1ri7/Dz7cxg76hhjT6CjOhOQZ
le3x6vnlGFKz/ZbfMHsaRE//zG8R+R2s5fd/v9x6Zv/mX/xFN72y3/L7+x9uY3+9fdTO3BxFbluf
X57BijOkmd88rgq/iDNPmd/uxvxaD+zf/fPWM/G//nkbQ3cv1uPM753Rwz/zW55J7v7dBuv5tVee
Y1JtzO8o1r+jlltZQ7t/1/P7/b9oY3/9xpfbGM47a/m9exw9m5ZnbGP+3b/b4O75ZQ/h4zgTetb8
8uroTz7Vzoz+5y99qZtO4ur8P/OtLb/37kbPpngdlz2/wTK/6NFx1M4s5xn+WzG2dq5/n/1KOz78
2p+0ayiMMr9vaWNHvi8GczyKx29ffqmtP+v5ZU+32Vp+g1z/Yv+XPUwyv1z//uirrWfEr37xi910
sNvm9zMfauvfB2Iwx6N4fF5bZFvXv+wpkT1slsffWG8Gk/bz4Djev8T6N4jlP1jm13rwf/Fr7fjw
n/448ouxMBd/r72vedCs9zTvS4906O9et7O+7nV7/Cef/lj83yn7v2kcfw/b/i+/4XgQg/XuTFoP
9KdfbMeXX/7s57vpNB7+U+97bzf92KNtf3gUPbxm8Xzbc/xIcRxtMZTXH8fd+EbwNI6bJZg2jbG2
J/E5eJVfNxlMJq0H4ddeann+8mc+102jw/rgx9/3Td30E4+1+R3NW8/E7c0vjr/xTbez5pdj3N9a
y+/Z1qF48KnPfLabHkQwP/bN7+mm3/vmtl4fRw/t6bjN/42TX5vmGPe5/Y5ihIAXbrQV7lOfbvnd
jM9pP/pN7+6m3/eW1p5wPG2f42ZvsPzGy/za43NM7MzvpZvt8b8U+d2I/cSPvKdde+cHnmj3m0Z+
l2f9a8s9i28ETzO3zDHH7j6I9TCuvZRjcucIAa/catvnL/3hZ7rpK5HfD727XfvpB9/ajjPTaXuf
vfX5ZQ/r+PyxXP924vi7Kb/l8SPmE/ndOGjtLZ/6g5bfSzEW+V971zu66Q9/Y/ucMo1vyF/e/HL9
ixxj7P1xHD+W61/mN2r7tVtHbfqpP2jb7wvzdv/vf2e7dtvfenv7nDw9bp+Tp+M2/9vzi0M2AAAA
AADwau6xQb227M8Hw2Gresak1u501tXw4FZX81vXuxrNDloNZ13NRqOuujFySo3m8672dwZdXbk2
6uqhK5Ouxt05sFLT8v+l6onTOHm6pe6e385s1tWoZFcr8xuW7Loq2dWqPUm63iS1h12pZX6T2ltz
ld+1q+OuxsOSXal61f1alya/qPX8hoclq1KLkl2t9fWvXg2+uyL8Mr9FV7VjZ62rJbta165OuhoN
yzpaajKbdPWGy29asquV+ZVtt9am7Tfze6ise7VGZd2rtVz/5sOutlf949cRE1t+dSzFWrslu1qj
g5JVqU35re//xiW7WnuTYVfX6rrXrX+x/Y7K9lvqjZbfcv83LceTUqv1b9hV5jcs2dXaLZt0rYfq
unfb+jcuWde67Pnl9nvi+FHWvVplretqPb/RrMyjVOb38LVxq5JdrVG5b63c/9We8cve8VulvuZa
m/Kr+8Dyc9n31Vrmd1zWv1KZ36xkUav7ZkCpZX7l2FvrkbLu1XqoHDtqPahqz9Z7KaC/u21DF1n3
rHaxLlV7TNfK/d/48LCr5f7vqOz/So2H065mZddXazEcdzWalf1nqZ1Rq0fLvq/WlXIMqTUel/cv
pfL4W6+9tbr+1jaK40f5EFBrmd+8HH9LjY+Ousr8BvWaJaXW8xvUb8jVzxaR3+641Xp+k3F571Jq
PG+1/fnl59+1/BYlv1Kr/G50tZ7ftCx6rfX8JuXHWo+U9yy1Mr+dcmOtcVn3ag3re8b63mdr9ctv
UbKrtcrvuKvMb7n9xuffSZlXrXz/sh+1szPsajIv62KpXA+3V26/NcPb9n8b8luU7GpNyrpXq256
tVb7v/L4Usv8rpb8Su2Xda9Wrn+ZXx2ZIEcn2E4tv9Xxo66DZd+/3P+V40epZX6HJb9Sk7Lu1ZqV
Y0StVX5t+x2X7Gptyq9es6nWpckvtuNVfvUYUtajkl2tjfmVjGptXP+W22/Lb3dn1NV41uryrn+Z
X8mp1Cq/VpNBub3UifzW939r61/mN6rvXbr3L63uZptTBQAAAACA18wZx1Bv5sMYkybOkk/ibEfO
KC+6urwqdYyFlGfV54M2Vs1skmMqxdis8fvnYuybyaKNCfR4G8pmMIn5zEZtuq0uLr92+yTG1Fvm
F2MwjQd35rdzSfNbP1seN3dnQavT8htHfsfx++cjv9Gm/OL5y4y30iq/llvmmDblt7w68yLyG8d8
Fi2/afz+ubiqd+b35uN2++6gbe+XNb9cnK73TDHfkN8g8juO/CYb8hvm+hcz3I0x0S5Lfrk95v4v
F6frvVWny/zqmfyaXzcp61/LZRpjQE4WMSbm2vZb17jqzZHffqx/0/h7yO/u+b0Q+S3k101Pzy/G
tJ23n3P9y/z+zbf8VjcFeFB88jMf7aa113h1+v4vdoDztl+bxTVgRnH8yF8/H2OzHo/i+HHc9q9X
Fm2/Ox+248hWfsmpmNeecUXtFVfda37TtfwGefyI939Ha/ldveT5pTgsn57fOPIbRn6z9vsXJm39
O4yxcS9rfpnHzlp+uVzT8+Y3bvm9KQbzv3bp8usmJb+2fOlkfjFdxOPmbfuc5jWehu3933DWfp/5
HWR+sf5dm1/O9S+330wxt99N+S2PH7H+DWP9G+b6F8ePW5N2vzcdt/k/dMnyK0vQ/bsTFxs5Nb/Y
jgezzC/Xv8yv/f7FyO9m5PdY5Pdw5LeI/PJ5ts295ld+0/07XMtvEPnVXv7V5vza71frX853JV8D
AAAAAADwKs7UQ33Zzh9nALLH5XoP1+U94wzBIn+OyfKqrOPW0j+ZtzMEuzG/+TB6GC7adBYPPIwe
YeO43/qzPuhi8Vf5xRKMs0vDUtyzb37Rw2E3Ziy/uOcF5TePB+ZV0S9rfrk8y7zW8wvDGD+qd35x
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

------MultipartBoundary--qzTDbMRSos7P3lv6CkPKYfOvs4HrEvjhNLvCKUYX4I------
